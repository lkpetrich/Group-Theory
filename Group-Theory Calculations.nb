(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    211689,       4922]
NotebookOptionsPosition[    199835,       4764]
NotebookOutlinePosition[    200249,       4781]
CellTagsIndexPosition[    200206,       4778]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction", "Section",
 CellChangeTimes->{{3.5927914017531*^9, 
  3.5927914057517147`*^9}},ExpressionUUID->"c6037d36-58fd-4e41-9516-\
232223381e4b"],

Cell[TextData[{
 StyleBox["Group-Theory Calculations",
  FontSize->24,
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["Matrix operations",
  FontWeight->"Bold"],
 "\nMultiplication: Dot\nIdentity: IdentityMatrix\nInverse: Inverse\n\n",
 StyleBox["Permutation operations",
  FontWeight->"Bold"],
 "\nA permutation a is a list of index values\nthat permutes a list of \
symbols xlst with xlst[[a]]\nPermVerify[a] -- verifies whether a is 1 to \
length(a) in any order\nPermMult[a,b] -- permutation \
\[OpenCurlyDoubleQuote]multiplication\[CloseCurlyDoubleQuote]\nPermIdent[n] \
-- identity permutation: {1,...,n} for length n\nPermInv[a] -- inverse \
permutation\nPermParity[a] -- parity of permutation: how many interchanges \
are necessary to generate it from the identity permutation\n\n",
 StyleBox["Fill out a groupoid",
  FontWeight->"Bold"],
 "\nFillOutGroupoid[op, els] -- with binary operation op, initial elements \
els\nReturns the elements found by imposing closure: for every pair of \
members of this set, op must also return a member of this set\n\n",
 StyleBox["Find identities, zeros, and inverses",
  FontWeight->"Bold"],
 "\nMeaning of args:\nGroupoid operation op, groupoid elements els\nGroupoid \
operation table tab\nAs index number: identity element id\n\nFind identities:\
\nFindGroupoidIdents[op,els]\nFindOpTableIdents[tab]\nFind zeros:\n\
FindGroupoidZeros[op,els]\nFindOpTableZeros[tab]\nThese functions return \
{{left ones},{right ones}} or {only one} or {} if none, as appropriate\n\n\
Find inverses:\nFIndGroupoidInvs[op,els,id]\nFIndOpTableInvs[tab,id]\nThese \
functions return a list, for each element, of {{left inverses},{right \
inverses}}\n\n",
 StyleBox["Check group properties",
  FontWeight->"Bold"],
 "\nMeaning of args:\nGroupoid operation op, groupoid elements els\nGroupoid \
operation table tab\nAs index numbers: identity element id, inverses for \
elements invs\n\nIsGroupoidClosed[op, els]\nIsOpTableLegitimate[tab]\n\
IsGroupoidCommutative[op, els]\nIsOpTableCommutative[tab]\n\
IsGroupoidAssociative[op, els]\nIsOpTableAssociative[tab]\n\
IsOpTableLatinSquare[tab] --  is division well-defined? (good for inverses)\n\
IsGroupoidIdentity[op,els,id]\nIsOpTableIdentity[tab,id]\n\
IsGroupoidInverse[op,els,id,invs]\nIsOpTableInverse[tab,id,invs]\n\n",
 StyleBox["Create group objects",
  FontWeight->"Bold"],
 "\n\nMakeGroupFromEls[op,els,(options)]\nop - group operation\nels - \
complete set of elements for the group\nOptions:\n\
\[OpenCurlyDoubleQuote]IdVal\[CloseCurlyDoubleQuote] - identity value as one \
of the elements\n\[OpenCurlyDoubleQuote]IdIx\[CloseCurlyDoubleQuote] - index \
of the identity element in the elements\n\[OpenCurlyDoubleQuote]InvFunc\
\[CloseCurlyDoubleQuote] - function that makes the inverse of an element\n\
\[OpenCurlyDoubleQuote]InvVals\[CloseCurlyDoubleQuote] - values of inverses \
as elements\n\[OpenCurlyDoubleQuote]InvIxs\[CloseCurlyDoubleQuote] -  indices \
of the inverses in the elements\n\nMakeGroupFromFillOutEls[op,els]\nels - set \
of elements to be filled out to make the group\n\n\
MakeGroupFromTable[tab,(options)]\nOptions:\n\[OpenCurlyDoubleQuote]IdVal\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]IdIx\[CloseCurlyDoubleQuote] \
- index of the identity element in the elements\nInvVals, InvIxs - indices of \
the inverses in the elements\n(no distinction between value and index here)\n\
\nMakeSubgroup[grp,ixs]\ngrp - original group\nixs - indices of subgroup \
elements\n\nGroup objects are associations with:\n(from operation and \
elements)\n\[OpenCurlyDoubleQuote]Op\[CloseCurlyDoubleQuote]  -> operation\n\
\[OpenCurlyDoubleQuote]Elixs\[CloseCurlyDoubleQuote] -> association of \
elements to their index values\n(from table)\n\[OpenCurlyDoubleQuote]Table\
\[CloseCurlyDoubleQuote] -> table\n(in both)\n\[OpenCurlyDoubleQuote]Id\
\[CloseCurlyDoubleQuote] -> index of the identity element in the elements\n\
\[OpenCurlyDoubleQuote]Invs\[CloseCurlyDoubleQuote] -> indices of the \
inverses in the elements\n\n",
 StyleBox["Functions on groups",
  FontWeight->"Bold"],
 "\n\nHere, grp is a group object created by the functions in the previous \
section.\nThese functions will return Null if grp is not a valid group \
object.\n\nAlso note that all the elements are specified as index numbers in \
the group object\[CloseCurlyQuote]s list of elements.\n\n",
 StyleBox["Miscellaneous",
  FontWeight->"Bold"],
 "\n\nGroupNum[grp]\nReturns the order or number of elements of the group\n\n\
GroupIsAbelian[grp]\nReturns whether or not the group is abelian.\n\n\
GroupOpTab[grp]\nReturns the group\[CloseCurlyQuote]s operation table, \
calculating it from the group\[CloseCurlyQuote]s elements if necessary.\n\n\
GroupElPowers[grp]\nReturns a list for each element of that element\
\[CloseCurlyQuote]s powers up to the identity. Those powers are given as \
indices.\n\nGroupAbelianToCycles[grp]\nReturns a list of cyclic-subgroup \
generators and sizes.\n\n",
 StyleBox["Conjugates, Classes, and Characters",
  FontWeight->"Bold"],
 "\n\nGroupElConjg[grp,ei,eic]\nArgs: element, conjugator element\nReturns: \
conjugate of that element by the conjugator: (eic)*(ei)*inv(eic)\n\n\
GroupElCjgAll[grp,ei]\nArgs: element\nReturns: list of conjugates of ei by \
every element in the group,  returned individually\n\nGropElCjgAllDst[grp,ei]\
\nArgs: element\nReturns: distinct conjugates of ei by every element in the \
group\n\nGroupListConjg[grp,eilst,eic]\nArgs: list of elements, conjugator \
element\nReturns: conjugate of each element in that list by the conjugator\n\n\
GroupListCjgAll[grp,eilst]\nArgs: list of elements\nReturns: list of \
conjugates of that list by every element in the group\n\n\
GroupListCjgAllDst[grp,eilst]\nArgs: list of elements\nReturns: list of \
distinct conjugate lists\n\nGroupConjClss[grp]\nReturns the conjugacy classes \
of that group, list of elements that are conjugate to each other\n\n\
GroupClassMult[grp]\nReturns association of\n\[OpenCurlyDoubleQuote]Classes\
\[CloseCurlyDoubleQuote]-> conjugacy classes\n\
\[OpenCurlyDoubleQuote]ClassMult\[CloseCurlyDoubleQuote] -> the table itself\n\
where the table\[CloseCurlyQuote]s three indices have meaning\n(first class), \
(second class), (result class)\nand the table\[CloseCurlyQuote]s values are \
how many times each result class appears\nin the product of the first and \
second classes.\n\nGroupAssocCharEqs[grp,ylbl]\nArgs: variable label for the \
associated characters\nReturns association of\n\[OpenCurlyDoubleQuote]Classes\
\[CloseCurlyDoubleQuote]-> conjugacy classes\n\
\[OpenCurlyDoubleQuote]ClassMult\[CloseCurlyDoubleQuote] -> the table itself\n\
\[OpenCurlyDoubleQuote]ACVars\[CloseCurlyDoubleQuote] -> the \
associated-character variables\n\[OpenCurlyDoubleQuote]ACEqns\
\[CloseCurlyDoubleQuote] -> the associated-character equations\nThis function \
does not return equations, but quantities to be set to zero.\n\n\
Group-representation characters:\nX(a,x) = trace(matrix for representation a \
of element x)\nEvery member of a conjugacy class shares character values,\nso \
we can denote characters as X(a,C) for class C.\nSome representations cannot \
be decomposed into combinations of other representations;\nthey are \
irreducible representations or \[OpenCurlyDoubleQuote]irreps\
\[CloseCurlyDoubleQuote].\nThere are as many irreps as classes, so for \
irreps, X is a square matrix.\n\nThe associated characters Y are given by\n\
Y(a,C) = X(a,C)*n(C)/X(a,e)\nwhere n(C) is the number of elements in class C, \
and X(a,e) is the dimension of the matrices for irrep a.\n\n\
GroupChars[grp,solver]\nArgs: the solver function for finding the character \
values (default: built-in Solve[])\nReturns association of\n\
\[OpenCurlyDoubleQuote]Classes\[CloseCurlyDoubleQuote]-> conjugacy classes\n\
\[OpenCurlyDoubleQuote]ClassMult\[CloseCurlyDoubleQuote] -> the table itself\n\
\[OpenCurlyDoubleQuote]AssocChars\[CloseCurlyDoubleQuote] -> the associated \
characters\n\[OpenCurlyDoubleQuote]Chars\[CloseCurlyDoubleQuote] -> the plain \
characters\n\n",
 StyleBox["Centralizers and Normalizers",
  FontWeight->"Bold"],
 "\n\nGroupElCtrl[grp,ei]\nArgs: element\nReturns the centralizer of that \
element, all elements that commute with the original element\n\n\
GroupListCtrl[grp,eilst]\nArgs: list of elements as indices\nReturns the \
centralizer of that element as indices, all elements that commute with every \
member of the original list of elements\n\nGroupCenter[grp]\nReturns the \
center of the group, the centralizer of the entire set of group elements\n\n\
GroupListNorm[grp,eilst]\nArgs: list of elements\nReturns every element that \
makes the input list again when it conjugates every member of that list\n\n",
 StyleBox["Subgroups, Cosets, and Quotient Groups",
  FontWeight->"Bold"],
 "\n\nGroupListIsSubgroup[grp,eilst]\nArgs: list of elements\nReturns: \
whether or not that list is a subgroup list\n\nGroupListFillOut[grp,eilst]\n\
Args: list of elements\nReturns: list of filled-out group elements\n\n\
GroupSubgroups[grp]\nReturns a list of all sets of conjugate subgroups\n\n\
GroupListIsNormal[grp,eilst]\nArgs: list of elements\nReturns whether or not \
this list is normal, conjugate to itself over every group element\n\n\
GroupListCosets[grp,eilst]\nArgs: list of elements\nReturns association of\n\
\[OpenCurlyDoubleQuote]Left\[CloseCurlyDoubleQuote] -> left cosets\n\
\[OpenCurlyDoubleQuote]Right\[CloseCurlyDoubleQuote] -> right cosets\nLeft \
cosets: distinct (list of elements) * (each element in the group)\nRight \
cosets: distinct (each element in the group) * (list of elements)\n\n\
GroupQuotient[grp,eilst]\nArgs: list of subgroup elements\nIf (left cosets) \
== (right cosets), then it returns association of\n\
\[OpenCurlyDoubleQuote]Cosets\[CloseCurlyDoubleQuote] -> cosets\n\
\[OpenCurlyDoubleQuote]QuotTable\[CloseCurlyDoubleQuote] -> quotient-group \
table\nThe quotient-group table is for (coset) * (coset)\n\n",
 StyleBox["Commutators and Commutator Series",
  FontWeight->"Bold"],
 "\n\nGroupCommutator[grp,eilst1,eilst2]\nArgs: two lists of elements\n\
Returns the group from filling out the commutators of members of the first \
and the second lists\n\nGroupCommutator[grp,eilst]\nArg: list of elements \
that becomes both lists\n\nGroupCommutator[grp]\nThe two lists are all the \
group\[CloseCurlyQuote]s elements\n\nGroupDerivedSeries[grp]\nReturns a list \
of subgroups, each one the commutator subgroup of the previous one, starting \
with the original group, all indexed in reference to the original group.\nG1 \
= [G,G]\nG2 = [G1,G1]\nG3 = [G2,G3]\n...\n\nGroupLowerCentralSeries[grp]\n\
List of subgroups, each one the commutator subgroup generated by the original \
group and the previous one, starting with the original group, all indexed in \
reference to the original group.\nG1 = [G,G]\nG2 = [G,G1]\nG3 = [G,G2]\n...\n\
\nGroupUpperCentralSeries[grp,UseTable]\nArgs: UseTable - whether to make a \
table of element commutators or else to calculate each commutator each time \
around\nReturns a list of subgroups, all indexed in reference to the original \
group.\n\nG1 = {e}\n[G,G2] = G1\n[G,G3] = G2\n...\n\nGroupCompSerStep]grp]\n\
Returns association of\n\
\[OpenCurlyDoubleQuote]SbgpIxs\[CloseCurlyDoubleQuote] -> commutator subgroup \
as indices\n\[OpenCurlyDoubleQuote]Cosets\[CloseCurlyDoubleQuote] -> cosets \
of that subgroup\n\[OpenCurlyDoubleQuote]QuotCycles\[CloseCurlyDoubleQuote] \
-> quotient-group cycles: list of {generator,length}\n\
\[OpenCurlyDoubleQuote]Subgroup\[CloseCurlyDoubleQuote] -> commutator \
subgroup as group object\n\nGroupCompositionSeries[grp]\nRepeats \
GroupCompSerStep[] until either the subgroup or the quotient group is the \
identity group.\n\nGroupCompSerSummary[grp]\nReturns a list of the cycle \
lengths in each quotient group in the composition series."
}], "Text",
 CellChangeTimes->{{3.945148533546213*^9, 3.945148582076366*^9}, {
   3.945148683359573*^9, 3.945148731856559*^9}, {3.945149511095376*^9, 
   3.945149541247437*^9}, {3.94514976214679*^9, 3.945149786510808*^9}, {
   3.9451503474637117`*^9, 3.945150525756424*^9}, {3.945150586383573*^9, 
   3.945150588502841*^9}, {3.945243899543524*^9, 3.945244230833241*^9}, 
   3.950296905076939*^9, {3.9504548275706673`*^9, 3.9504548427610703`*^9}, {
   3.950454880785285*^9, 3.9504550103153973`*^9}, {3.950455047740283*^9, 
   3.950455052609459*^9}, {3.9504551724844313`*^9, 3.950455220221077*^9}, {
   3.95045525380217*^9, 3.950455272807534*^9}, {3.950455308903151*^9, 
   3.950455593435019*^9}, {3.9504556457959633`*^9, 3.950455649106702*^9}, {
   3.950579743360862*^9, 3.950579771071567*^9}, {3.950642943857852*^9, 
   3.950642945509438*^9}, 3.950643055380509*^9, {3.950700686503625*^9, 
   3.950700706834138*^9}, {3.9507007631322412`*^9, 3.950700868552594*^9}, {
   3.950700931270398*^9, 3.9507014850996523`*^9}, {3.9507991918616657`*^9, 
   3.950799195436434*^9}, {3.9509644827932158`*^9, 3.950964483199646*^9}, {
   3.951691831074156*^9, 3.951691861465418*^9}, 3.951699472687934*^9, 
   3.951834866358714*^9, {3.951905305969644*^9, 3.951905321015593*^9}, {
   3.951905366072939*^9, 3.951905421417136*^9}, {3.951939988036639*^9, 
   3.951940004865272*^9}, {3.951978417135586*^9, 3.9519784320918303`*^9}, {
   3.952087046700123*^9, 3.952087128666678*^9}, {3.95208719778214*^9, 
   3.9520872468059683`*^9}, {3.952087456194768*^9, 3.952087524211488*^9}, {
   3.9520875832770643`*^9, 3.952087686102043*^9}, {3.952092656706874*^9, 
   3.9520927713802757`*^9}, {3.9520941441627893`*^9, 3.952094311336875*^9}, {
   3.952094484582238*^9, 3.952094665891758*^9}, {3.952108555776679*^9, 
   3.952108570647284*^9}, {3.9521086019904127`*^9, 3.9521087063213263`*^9}, {
   3.952109028268239*^9, 3.952109029061879*^9}, {3.95210907661285*^9, 
   3.9521090779734497`*^9}, {3.9521101377975492`*^9, 3.952110267263939*^9}, {
   3.952110333545319*^9, 3.952110466805203*^9}, {3.952110505662016*^9, 
   3.952110552597621*^9}, {3.952110593982513*^9, 3.952110622159897*^9}, {
   3.9521106953124523`*^9, 3.952110804043469*^9}, {3.952111510235564*^9, 
   3.95211162154943*^9}, {3.952111673719091*^9, 3.952111697736017*^9}, {
   3.95211185989259*^9, 3.952111896110099*^9}, {3.9521119392382936`*^9, 
   3.9521119397176723`*^9}, {3.952112008714735*^9, 3.952112042771269*^9}, {
   3.9521120999846363`*^9, 3.9521121806058493`*^9}, {3.952112242152514*^9, 
   3.952112376099967*^9}, {3.9521129177473183`*^9, 3.952112971515348*^9}, {
   3.952113070519396*^9, 3.9521133174821873`*^9}, {3.952113351977704*^9, 
   3.952113355596929*^9}, {3.952113393110147*^9, 3.952113407055397*^9}, {
   3.95211349307094*^9, 3.952113510656457*^9}, {3.952113550827533*^9, 
   3.952113559163417*^9}, {3.952113729120528*^9, 3.952113778771673*^9}, {
   3.952113809938385*^9, 3.952113845182435*^9}, {3.95211390098211*^9, 
   3.9521139477049217`*^9}, 3.952113988096933*^9, {3.95211413130098*^9, 
   3.9521141591417007`*^9}, {3.95211420329532*^9, 3.952114326505033*^9}, {
   3.952114509047163*^9, 3.952114529397759*^9}, {3.952151785401655*^9, 
   3.952151829176332*^9}, 3.952155016341968*^9, {3.9521692300823812`*^9, 
   3.952169312665245*^9}, {3.9521695857018757`*^9, 3.95216963497381*^9}, {
   3.952169703472184*^9, 3.952169794524336*^9}, {3.9521703269300756`*^9, 
   3.952170566467874*^9}, {3.952170748989668*^9, 3.952170753960616*^9}, {
   3.953378348735814*^9, 3.9533783534273357`*^9}, {3.953378963578311*^9, 
   3.9533791362083397`*^9}, {3.95338290028894*^9, 3.95338291339247*^9}, {
   3.953383732511941*^9, 3.953383856546303*^9}, {3.9533838947559977`*^9, 
   3.953383945532742*^9}, {3.953383979230461*^9, 3.953384036933589*^9}, {
   3.9533841253836117`*^9, 3.953384178449506*^9}, {3.953742238313491*^9, 
   3.9537422388279457`*^9}},ExpressionUUID->"019586b4-c842-4cc6-954d-\
e2007c591201"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc Functions", "Section",
 CellChangeTimes->{{3.953138851286646*^9, 3.9531388530865726`*^9}, {
  3.953138902584361*^9, 3.953138904552772*^9}, {3.953139288187191*^9, 
  3.953139289027091*^9}},ExpressionUUID->"389c937a-eafe-417a-ac80-\
e32163c1f7f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsNonNegInt", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"IntegerQ", "[", "n", "]"}], " ", "&&", " ", 
   RowBox[{"n", " ", ">=", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.9531388552383623`*^9, 3.953138878436141*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"55621e94-33a8-4e75-9100-3fd35648c6bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsPosInt", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"IntegerQ", "[", "n", "]"}], " ", "&&", " ", 
   RowBox[{"n", " ", ">", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.9531388552383623`*^9, 3.953138864335106*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"8bf9a791-2fef-4043-96b8-555e81d07828"]
}, Closed]],

Cell[CellGroupData[{

Cell["Permutation-Group Operations", "Section",
 CellChangeTimes->{{3.592791418538095*^9, 3.592791423168076*^9}, {
  3.950685983077136*^9, 
  3.950685985864482*^9}},ExpressionUUID->"dd447847-c20f-472b-ba12-\
2de1198fadd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermVerify", "[", "a_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Sort", "[", "a", "]"}], " ", "===", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "a", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.953138929941237*^9, 3.953138930605647*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"f23981ff-6d5f-4fe4-bc24-0d8e7b3355cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermOp", "[", 
   RowBox[{"a_List", ",", "b_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"b", "[", 
   RowBox[{"[", "a", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.95051076687344*^9, 3.9505107683154793`*^9}, {
  3.953138934264895*^9, 3.95313893762468*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"e3f27b46-78d5-4b06-b817-987cbaf630ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermIdent", "[", 
   RowBox[{"n_", "?", "IsPosInt"}], "]"}], " ", ":=", " ", 
  RowBox[{"Range", "[", "n", "]"}]}]], "Input",
 CellChangeTimes->{{3.9531389462971363`*^9, 3.953138955643545*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"e55cb7ae-266c-423c-a6c3-ff9f021c6927"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermInv", "[", "a_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"al", ",", "ai", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"al", " ", "=", " ", 
      RowBox[{"Length", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ai", " ", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "al"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ai", "[", 
         RowBox[{"[", 
          RowBox[{"a", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], " ", "=", " ", "i"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "al"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "ai"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.953138981953429*^9, 3.9531389827221317`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"fbd24da9-e767-46f0-afa6-e1281199275f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermParity", "[", "a_List", "]"}], " ", ":=", " ", 
  RowBox[{"Signature", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.9531390262674303`*^9, 3.953139027002993*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"fa963381-9569-4b8c-86fa-aa2b237a932d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Group-Object Setup", "Section",
 CellChangeTimes->{{3.5927914380585737`*^9, 3.592791443328559*^9}, {
  3.9506859738206367`*^9, 3.9506859803414516`*^9}, {3.950700732915326*^9, 
  3.950700734820606*^9}},ExpressionUUID->"ee3502a0-b29d-4be7-88c0-\
e30533e079c6"],

Cell[CellGroupData[{

Cell["Misc functions", "Subsection",
 CellChangeTimes->{{3.950799005609386*^9, 
  3.950799008115427*^9}},ExpressionUUID->"7ce6fef8-3928-4033-b0b9-\
042caca79d54"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Maps", " ", "members", " ", "of", " ", "the", " ", "list", " ", "onto", 
   " ", "index", " ", "values"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950798924154087*^9, 3.95079894091427*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"93f58feb-460c-4248-aff5-be0645c0d4c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListToIndex", "[", "xlst_List", "]"}], " ", ":=", " ", 
  RowBox[{"Thread", "[", 
   RowBox[{"xlst", "->", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "xlst", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9507987819241753`*^9, 3.950798798427516*^9}, {
   3.950799146508713*^9, 3.950799147315235*^9}, 3.95097091513367*^9, {
   3.953139047529976*^9, 3.953139048203698*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"fcf6e7b9-4213-46da-b4ed-276e8ea2350f"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"As", " ", "an", " ", "association"}], " ", "-", " ", 
   RowBox[{"works", " ", "like", " ", "a", " ", "function"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9507989685086737`*^9, 3.9507989717794943`*^9}, {
  3.950799213069187*^9, 3.950799216675815*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"3eff4be4-7325-4bfe-8bcf-bb6d0d13a9ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListToIxAssn", "[", "xlst_List", "]"}], " ", ":=", " ", 
  RowBox[{"<|", 
   RowBox[{"ListToIndex", "[", "xlst", "]"}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.9507989446923*^9, 3.950798964299638*^9}, {
  3.950799255684416*^9, 3.950799256012001*^9}, {3.950970916571136*^9, 
  3.950970917419221*^9}, {3.953139060524472*^9, 3.953139061227964*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"cc3d710f-e1ea-4408-8264-0fdf80178a51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListOfListsToIndex", "[", "xlst_List", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Thread", " ", "/@", " ", 
    RowBox[{"ListToIndex", "[", "xlst", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950970854883154*^9, 3.950970878211093*^9}, {
  3.950970918696724*^9, 3.950970925698471*^9}, {3.95313906576451*^9, 
  3.953139066636183*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"3baf0edb-c69e-495d-a181-541422d793a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fill out a groupoid", "Subsection",ExpressionUUID->"722948a6-7d90-4c55-8817-6c3dff0bd3bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FillOutGroupoidStep", "[", 
   RowBox[{"op_", ",", "elinit_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"els", " ", "=", " ", "elinit"}], ",", "el"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{"els", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"elx", "|->", 
              RowBox[{"op", "[", 
               RowBox[{"elx", ",", "el"}], "]"}]}], ")"}], " ", "/@", " ", 
            "els"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{"els", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"elx", "|->", 
              RowBox[{"op", "[", 
               RowBox[{"el", ",", "elx"}], "]"}]}], ")"}], " ", "/@", " ", 
            "els"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"el", ",", "elinit"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "els"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.945148432882015*^9, 3.9451484333213253`*^9}, {
   3.9531390783396893`*^9, 3.953139091509363*^9}, 3.953284351983379*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"868dc8f1-5e7e-4640-bb3b-de31620d0e70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FillOutGroupoid", "[", 
   RowBox[{"op_", ",", "elinit_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"FixedPoint", "[", 
   RowBox[{
    RowBox[{"els", "|->", 
     RowBox[{"FillOutGroupoidStep", "[", 
      RowBox[{"op", ",", "els"}], "]"}]}], ",", "elinit"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9451484287544727`*^9, 3.945148437522922*^9}, {
   3.953139118124996*^9, 3.953139122741953*^9}, 3.953284355190364*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"c9b02ef6-9312-4a96-9ee9-e2dd07b77b12"]
}, Closed]],

Cell[CellGroupData[{

Cell["Find identities, zeros, and inverses", "Subsection",
 CellChangeTimes->{{3.950352048444561*^9, 3.950352053816022*^9}, {
  3.950352366235284*^9, 
  3.9503523758743143`*^9}},ExpressionUUID->"9b59f3c6-88be-46af-965c-\
799409304e42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceLeftRight", "[", 
   RowBox[{"lefts_List", ",", "rights_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "lefts", "]"}], ">", "0"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "rights", "]"}], ">", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"First", "[", "lefts", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"lefts", ",", "rights"}], "}"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "rights", "]"}], ">", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"lefts", ",", "rights"}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950357215048616*^9, 3.9503572733463593`*^9}, {
  3.953139172936042*^9, 3.953139176550921*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"93664b0e-47f7-40be-b49d-8d1b579c535d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGroupoidIdents", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"lefts", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rights", "=", 
       RowBox[{"{", "}"}]}], ",", "islf", ",", "isrt", ",", "el", ",", 
      "elx"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"islf", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"isrt", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"el", " ", "=", " ", 
         RowBox[{"els", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"op", "[", 
              RowBox[{"el", ",", "elx"}], "]"}], "=!=", "elx"}], ",", " ", 
            RowBox[{
             RowBox[{"islf", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"elx", ",", "els"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"op", "[", 
              RowBox[{"elx", ",", "el"}], "]"}], "=!=", "elx"}], ",", " ", 
            RowBox[{
             RowBox[{"isrt", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"elx", ",", "els"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"islf", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"lefts", ",", "k"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{"isrt", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"rights", ",", "k"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReduceLeftRight", "[", 
      RowBox[{"lefts", ",", "rights"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950352088079979*^9, 3.9503521253761806`*^9}, {
   3.950352239039455*^9, 3.9503522400758057`*^9}, {3.950352471345469*^9, 
   3.950352474686021*^9}, {3.950356676611273*^9, 3.950356714835916*^9}, {
   3.950356759643017*^9, 3.9503567835481377`*^9}, {3.950356864952773*^9, 
   3.950357012479843*^9}, {3.950357057142568*^9, 3.950357103549275*^9}, {
   3.9503571392259827`*^9, 3.9503572053919783`*^9}, {3.950357285686963*^9, 
   3.9503572916830597`*^9}, {3.9503582974821157`*^9, 3.950358301441189*^9}, {
   3.9505554695090303`*^9, 3.950555472267329*^9}, {3.953139179440423*^9, 
   3.953139183441647*^9}, 3.953284364863472*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"22512e7c-44d3-41fa-8afd-d38154781d84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOpTableIdents", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"lefts", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rights", "=", 
       RowBox[{"{", "}"}]}], ",", "islf", ",", "isrt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"islf", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"isrt", " ", "=", " ", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "m"}], "]"}], "]"}], "!=", " ", "m"}], ",", 
            " ", 
            RowBox[{
             RowBox[{"islf", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"m", ",", "k"}], "]"}], "]"}], "!=", "m"}], ",", " ", 
            RowBox[{
             RowBox[{"isrt", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"islf", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"lefts", ",", "k"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{"isrt", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"rights", ",", "k"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReduceLeftRight", "[", 
      RowBox[{"lefts", ",", "rights"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950352088079979*^9, 3.950352153778329*^9}, {
   3.9503522435330772`*^9, 3.950352244469667*^9}, {3.9503524806811934`*^9, 
   3.950352481596478*^9}, {3.950356682314733*^9, 3.950356698238449*^9}, {
   3.950356730545127*^9, 3.9503567492740192`*^9}, {3.950356793664836*^9, 
   3.95035680374852*^9}, {3.950357304365025*^9, 3.950357406136038*^9}, {
   3.9503581236981583`*^9, 3.9503581280747128`*^9}, {3.950358273923826*^9, 
   3.950358278473881*^9}, 3.950358357167523*^9, {3.953139186785357*^9, 
   3.953139187464078*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"3223d014-b7ea-4a51-b770-c5bbce434c36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGroupoidZeros", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"lefts", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rights", "=", 
       RowBox[{"{", "}"}]}], ",", "islf", ",", "isrt", ",", "el", ",", 
      "elx"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"islf", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"isrt", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"el", " ", "=", " ", 
         RowBox[{"els", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"op", "[", 
              RowBox[{"el", ",", "elx"}], "]"}], "=!=", "el"}], ",", " ", 
            RowBox[{
             RowBox[{"islf", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"elx", ",", "els"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"op", "[", 
              RowBox[{"elx", ",", "el"}], "]"}], "=!=", "el"}], ",", " ", 
            RowBox[{
             RowBox[{"isrt", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"elx", ",", "els"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"islf", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"lefts", ",", "k"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{"isrt", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"rights", ",", "k"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReduceLeftRight", "[", 
      RowBox[{"lefts", ",", "rights"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950352088079979*^9, 3.9503521253761806`*^9}, {
   3.950352239039455*^9, 3.9503522400758057`*^9}, {3.950352471345469*^9, 
   3.950352474686021*^9}, {3.950356676611273*^9, 3.950356714835916*^9}, {
   3.950356759643017*^9, 3.9503567835481377`*^9}, {3.950356864952773*^9, 
   3.950357012479843*^9}, {3.950357057142568*^9, 3.950357103549275*^9}, {
   3.9503571392259827`*^9, 3.9503572053919783`*^9}, {3.950357285686963*^9, 
   3.9503572916830597`*^9}, {3.950357430022361*^9, 3.950357449394637*^9}, {
   3.950358282416441*^9, 3.950358285702401*^9}, {3.950555477785438*^9, 
   3.950555479553857*^9}, {3.953139190704938*^9, 3.953139194688414*^9}, 
   3.953284373623213*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"a947078c-aa68-4c9d-a64f-fb6b76b4332f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOpTableZeros", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"lefts", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"rights", "=", 
       RowBox[{"{", "}"}]}], ",", "islf", ",", "isrt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"islf", " ", "=", " ", "True"}], ";", " ", 
        RowBox[{"isrt", " ", "=", " ", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "m"}], "]"}], "]"}], "!=", " ", "k"}], ",", 
            " ", 
            RowBox[{
             RowBox[{"islf", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"m", ",", "k"}], "]"}], "]"}], "!=", "k"}], ",", " ", 
            RowBox[{
             RowBox[{"isrt", " ", "=", " ", "False"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"islf", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"lefts", ",", "k"}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{"isrt", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"rights", ",", "k"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReduceLeftRight", "[", 
      RowBox[{"lefts", ",", "rights"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950352088079979*^9, 3.950352153778329*^9}, {
  3.9503522435330772`*^9, 3.950352244469667*^9}, {3.9503524806811934`*^9, 
  3.950352481596478*^9}, {3.950356682314733*^9, 3.950356698238449*^9}, {
  3.950356730545127*^9, 3.9503567492740192`*^9}, {3.950356793664836*^9, 
  3.95035680374852*^9}, {3.950357304365025*^9, 3.950357406136038*^9}, {
  3.950357438776421*^9, 3.950357459326468*^9}, {3.95035821128614*^9, 
  3.950358214541527*^9}, {3.95035828879256*^9, 3.95035829237464*^9}, {
  3.950358348519042*^9, 3.9503583500353947`*^9}, {3.9531392050255537`*^9, 
  3.953139205744851*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"db759fac-3deb-4a93-9014-333030cf9b90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGroupoidInvs", "[", 
   RowBox[{"op_", ",", "els_List", ",", "id_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "idel", ",", "lefts", ",", "rights", ",", "elx"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "els", "]"}]}], ";", 
     RowBox[{"idel", " ", "=", " ", 
      RowBox[{"els", "[", 
       RowBox[{"[", "id", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lefts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"rights", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"elx", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"op", "[", 
               RowBox[{"elx", ",", "el"}], "]"}], "===", "idel"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"lefts", ",", "m"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"op", "[", 
               RowBox[{"el", ",", "elx"}], "]"}], "===", "idel"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"rights", ",", "m"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"lefts", ",", "rights"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"el", ",", "els"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.950359108593007*^9, 3.9503591472794027`*^9}, {
   3.950359183838389*^9, 3.950359189731203*^9}, {3.950359377739863*^9, 
   3.950359393760593*^9}, {3.950359431313735*^9, 3.950359542430851*^9}, {
   3.950359586153323*^9, 3.9503596769456263`*^9}, {3.953139208833075*^9, 
   3.953139218352954*^9}, 3.953284381264758*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"22c8ba9b-6420-41ec-bc1c-be3620c5a7df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOpTableInvs", "[", 
   RowBox[{"tab_List", ",", "id_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "lefts", ",", "rights"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lefts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"rights", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tab", "[", 
               RowBox[{"[", 
                RowBox[{"m", ",", "k"}], "]"}], "]"}], "==", "id"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"lefts", ",", "m"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tab", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "m"}], "]"}], "]"}], "==", "id"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"rights", ",", "m"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"m", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"lefts", ",", "rights"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950359139699637*^9, 3.950359159858152*^9}, {
   3.95035938248065*^9, 3.950359386951655*^9}, 3.950359441950638*^9, {
   3.9503596939384317`*^9, 3.9503597034819393`*^9}, {3.950359736366416*^9, 
   3.950359750275614*^9}, {3.950388375463594*^9, 3.950388396432719*^9}, {
   3.953139262880261*^9, 3.9531392666663446`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"cf4ae128-b56d-44cc-bcb4-baf7d8c70541"]
}, Closed]],

Cell[CellGroupData[{

Cell["Check group properties", "Subsection",ExpressionUUID->"95cad3f3-612f-4474-969b-f9bb7a3a5609"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableLegitimate", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tbdims", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tbdims", " ", "=", " ", 
      RowBox[{"Dimensions", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tbdims", "]"}], " ", "!=", " ", "2"}], ",", 
       " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"tbdims", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tbdims", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "!=", "  ", "n"}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"Head", ",", "tab", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", "Integer", "}"}]}], "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Min", "[", "tab", "]"}], " ", "<", " ", "1"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", "tab", "]"}], " ", ">", " ", "n"}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.945149301446208*^9, 3.945149373755361*^9}, {
   3.945149410628153*^9, 3.945149487718358*^9}, {3.945149585329503*^9, 
   3.945149599356217*^9}, {3.945149656923271*^9, 3.9451497335335903`*^9}, {
   3.950642932898026*^9, 3.9506429337459717`*^9}, 3.950643056625565*^9, {
   3.953139283032783*^9, 3.953139283802908*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"f50dce0e-8e55-4cde-ac8c-639cd1f6d837"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGroupoidCommutative", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"And", " ", "@@", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"op", "[", 
         RowBox[{"el1", ",", "el2"}], "]"}], "===", 
        RowBox[{"op", "[", 
         RowBox[{"el2", ",", "el1"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"el1", ",", "els"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"el2", ",", "els"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9451488555809507`*^9, 3.945148856452198*^9}, {
   3.950567806724946*^9, 3.950567809629958*^9}, {3.95313931591608*^9, 
   3.9531393202515507`*^9}, 3.9532843901831293`*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0e097bea-c89d-4557-b37a-4d0c1490d607"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableCommutative", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"tab", " ", "===", " ", 
   RowBox[{"Transpose", "[", "tab", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9451488601407623`*^9, 3.945148860580315*^9}, {
  3.945149741797868*^9, 3.945149742054199*^9}, {3.953139323276555*^9, 
  3.953139324004562*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"e0873397-3f9b-4434-a27a-cd54815124c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGroupoidAssociative", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"And", " ", "@@", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"op", "[", 
         RowBox[{
          RowBox[{"op", "[", 
           RowBox[{"el1", ",", "el2"}], "]"}], ",", "el3"}], "]"}], "===", 
        RowBox[{"op", "[", 
         RowBox[{"el1", ",", 
          RowBox[{"op", "[", 
           RowBox[{"el2", ",", "el3"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"el1", ",", "els"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"el2", ",", "els"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"el3", ",", "els"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.94514886436442*^9, 3.945148864771487*^9}, {
   3.95313932750028*^9, 3.953139332660172*^9}, 3.953284392639264*^9},
 CellLabel->
  "In[203]:=",ExpressionUUID->"268f9415-ed8e-47e7-a13e-22d5c5b4e736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableAssociative", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"And", " ", "@@", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"tab", "[", 
               RowBox[{"[", 
                RowBox[{"i1", ",", "i2"}], "]"}], "]"}], ",", "i3"}], "]"}], 
            "]"}], "==", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", 
              RowBox[{"tab", "[", 
               RowBox[{"[", 
                RowBox[{"i2", ",", "i3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i1", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i2", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i3", ",", "n"}], "}"}]}], "]"}], ",", "2"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9451488686613493`*^9, 3.945148869060978*^9}, {
  3.945149748534547*^9, 3.9451497487980328`*^9}, {3.953139336986305*^9, 
  3.953139337796268*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"be5e322a-b1b6-4bf6-b0f6-015f8259c220"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGroupoidClosed", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"isclsd", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"els", ",", 
            RowBox[{"op", "[", 
             RowBox[{"el1", ",", "el2"}], "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"isclsd", " ", "=", " ", "False"}], ";", " ", 
          RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"el1", ",", "els"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"el2", ",", "els"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "isclsd"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.945149830792571*^9, 3.945149831312706*^9}, {
   3.9531393418765574`*^9, 3.953139346316579*^9}, 3.9532843959206963`*^9},
 CellLabel->
  "In[205]:=",ExpressionUUID->"cf9721d0-a107-4d9f-99dd-8b0c9f79fe0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableLatinSquare", "[", "tab_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "tab", "]"}], "=!=", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tr", " ", "|->", " ", 
              RowBox[{
               RowBox[{"Sort", "[", "tr", "]"}], " ", "===", " ", 
               RowBox[{"Range", "[", "n", "]"}]}]}], ")"}], "/@", " ", 
            "tab"}], ")"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tr", " ", "|->", " ", 
              RowBox[{
               RowBox[{"Sort", "[", "tr", "]"}], " ", "===", " ", 
               RowBox[{"Range", "[", "n", "]"}]}]}], ")"}], "/@", " ", 
            RowBox[{"Transpose", "[", "tab", "]"}]}], ")"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.945150257845961*^9, 3.9451502676614857`*^9}, {
  3.9505681741207457`*^9, 3.9505681856568527`*^9}, {3.953139351557251*^9, 
  3.953139352301005*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"cef85466-154a-47f0-893a-498ff172d8f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGroupoidIdentity", "[", 
   RowBox[{"op_", ",", "els_List", ",", "id_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "idel", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idel", " ", "=", " ", 
      RowBox[{"els", "[", 
       RowBox[{"[", "id", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"el", " ", "|->", " ", 
              RowBox[{
               RowBox[{"op", "[", 
                RowBox[{"el", ",", "idel"}], "]"}], " ", "===", " ", "el"}]}],
              ")"}], " ", "/@", " ", "els"}], ")"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"el", " ", "|->", " ", 
              RowBox[{
               RowBox[{"op", "[", 
                RowBox[{"idel", ",", "el"}], "]"}], " ", "===", " ", "el"}]}],
              ")"}], " ", "/@", " ", "els"}], ")"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9451502752695837`*^9, 3.945150275741692*^9}, {
   3.950657525968299*^9, 3.950657526944428*^9}, {3.950657625197651*^9, 
   3.950657636419636*^9}, {3.9531393621458273`*^9, 3.953139369692054*^9}, 
   3.953284403007697*^9},
 CellLabel->
  "In[207]:=",ExpressionUUID->"8aee95ed-9f03-4e0d-a235-7ace9d0afb33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableIdentity", "[", 
   RowBox[{"tab_List", ",", "id_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tab", "[", 
           RowBox[{"[", "id", "]"}], "]"}], "===", 
          RowBox[{"Range", "[", "n", "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "tab", "]"}], "[", 
           RowBox[{"[", "id", "]"}], "]"}], "===", 
          RowBox[{"Range", "[", "n", "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.945150281318371*^9, 3.9451502815903587`*^9}, {
  3.95045510477796*^9, 3.9504551193465776`*^9}, {3.953139372452825*^9, 
  3.953139375581552*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"99de8222-a4ed-4f76-b646-775f970e494c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGroupoidInverse", "[", 
   RowBox[{"op_", ",", "els_List", ",", "id_Integer", ",", "invs_List"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"idel", ",", "invels"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idel", " ", "=", " ", 
      RowBox[{"els", "[", 
       RowBox[{"[", "id", "]"}], "]"}]}], ";", " ", 
     RowBox[{"invels", " ", "=", " ", 
      RowBox[{"els", "[", 
       RowBox[{"[", "invs", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pr", " ", "|->", " ", 
              RowBox[{
               RowBox[{"op", "[", 
                RowBox[{
                 RowBox[{"pr", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"pr", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "===", "idel"}]}], 
             ")"}], " ", "/@", " ", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"els", ",", "invels"}], "}"}], "]"}]}], ")"}]}], 
         ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"pr", " ", "|->", " ", 
              RowBox[{
               RowBox[{"op", "[", 
                RowBox[{
                 RowBox[{"pr", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"pr", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "===", "idel"}]}], 
             ")"}], " ", "/@", " ", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"els", ",", "invels"}], "}"}], "]"}]}], ")"}]}], 
         ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9451502881103477`*^9, 3.9451502887749166`*^9}, {
   3.950657640880281*^9, 3.9506576767133293`*^9}, {3.953139379630313*^9, 
   3.953139390679166*^9}, 3.953284407304014*^9},
 CellLabel->
  "In[209]:=",ExpressionUUID->"9b27ab98-5b6c-4008-8bfa-ea339311ced5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsOpTableInverse", "[", 
   RowBox[{"tab_List", ",", "id_Integer", ",", "invs_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", 
                RowBox[{"invs", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], "==", "id"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"And", " ", "@@", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"invs", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", "k"}], "]"}], "]"}], "==",
              "id"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9451502938388166`*^9, 3.945150294329248*^9}, {
  3.953139399095969*^9, 3.9531394055491447`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"7242761e-8813-467c-985e-eaf0a969e765"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create group objects", "Subsection",
 CellChangeTimes->{{3.9506817846533327`*^9, 
  3.9506817873156023`*^9}},ExpressionUUID->"dcc1255e-07de-489e-ae47-\
97e8d4ac8493"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeGroup", "::", "noid"}], " ", "=", " ", 
   "\"\<Does not have an identity\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.950510027597666*^9, 3.9505100450591793`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"9670e376-3ec2-480c-93f0-4c1ca18bf3fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeGroup", "::", "noinv"}], " ", "=", " ", 
   "\"\<Does not have an inverse for each element\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.950510047558217*^9, 3.950510070937049*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"83da9568-489b-4d1e-b36b-def424e780ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeGroupFromEls", "[", 
   RowBox[{"op_", ",", "els_List", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<IdVal\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<IdIx\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<InvFunc\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<InvVals\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<InvIxs\>\"", "->", "Null"}]}], "}"}], "]"}]}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"elixs", ",", "idval", ",", "idix", ",", 
      RowBox[{"id", "=", "Null"}], ",", "ids", ",", "invfunc", ",", "invvals",
       ",", "invixs", ",", 
      RowBox[{"invs", "=", "Null"}], ",", "ivvss", ",", "iv", ",", 
      "AreInvs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"elixs", " ", "=", " ", 
      RowBox[{"ListToIxAssn", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"idval", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<IdVal\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idix", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<IdIx\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"idval", " ", "=!=", " ", "Null"}], ",", " ", 
        RowBox[{"elixs", "[", "idval", "]"}], ",", " ", 
        RowBox[{"idix", " ", "=!=", " ", "Null"}], ",", " ", "idix", ",", " ",
         "True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ids", " ", "=", " ", 
          RowBox[{"FindGroupoidIdents", "[", 
           RowBox[{"op", ",", " ", "els"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "ids", "]"}], "==", "1"}], ",", 
           RowBox[{"First", "[", "ids", "]"}], ",", "Null"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"id", " ", "===", " ", "Null"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MakeGroup", "::", "noid"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"invfunc", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<InvFunc\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invvals", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<InvVals\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invixs", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<InvIxs\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invs", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"invfunc", "=!=", "Null"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"elixs", "[", 
           RowBox[{"invfunc", "[", "#", "]"}], "]"}], "&"}], " ", "/@", " ", 
         "els"}], ",", 
        RowBox[{"invvals", "=!=", "Null"}], ",", 
        RowBox[{"elixs", " ", "/@", " ", "invvals"}], ",", " ", 
        RowBox[{"invixs", "=!=", "Null"}], ",", " ", "invixs", ",", " ", 
        "True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AreInvs", " ", "=", " ", "True"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ivvss", " ", "=", " ", 
          RowBox[{"FindGroupoidInvs", "[", 
           RowBox[{"op", ",", "els", ",", "id"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ivvss", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"iv", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", "1"}], "&&", 
               " ", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"iv", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", "1"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"iv", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
                RowBox[{"iv", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], ",", 
              RowBox[{"iv", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"AreInvs", "=", "False"}], ";", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"iv", ",", "ivvss"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"AreInvs", ",", "ivvss", ",", "Null"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"invs", " ", "===", " ", "Null"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MakeGroup", "::", "noinv"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Op\>\"", "->", "op"}], ",", " ", 
       RowBox[{"\"\<Elixs\>\"", "->", "elixs"}], ",", 
       RowBox[{"\"\<Id\>\"", "->", "id"}], ",", 
       RowBox[{"\"\<Invs\>\"", "->", "invs"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.9503866454354677`*^9, {3.9503870869806004`*^9, 3.950387117069172*^9}, {
   3.950387190993513*^9, 3.9503872677020073`*^9}, {3.950387384129492*^9, 
   3.950387534966401*^9}, {3.950387569295479*^9, 3.950387765565566*^9}, {
   3.9503878323594637`*^9, 3.950387924811635*^9}, {3.950387961931118*^9, 
   3.950388005375099*^9}, {3.950388038601371*^9, 3.950388041258546*^9}, {
   3.9503881123725977`*^9, 3.950388206558687*^9}, {3.950388271505118*^9, 
   3.950388328530929*^9}, {3.9503884295291777`*^9, 3.950388454237563*^9}, {
   3.950388495028357*^9, 3.950388772320434*^9}, {3.950510087028405*^9, 
   3.950510111438339*^9}, {3.950682098953137*^9, 3.95068212885832*^9}, {
   3.950798845147171*^9, 3.9507988736774054`*^9}, {3.950799230998123*^9, 
   3.950799261943123*^9}, 3.950970903656052*^9, {3.9516918084638767`*^9, 
   3.951691813733769*^9}, {3.951691986775888*^9, 3.951692004922104*^9}, {
   3.9531394348166313`*^9, 3.9531394387060003`*^9}, 3.95328428601655*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"058d48dc-7fb5-4d76-8478-f3ed0d67886d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeGroupFromFillOutEls", "[", 
   RowBox[{"op_", ",", "els_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "foels", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"foels", " ", "=", " ", 
      RowBox[{"FillOutGroupoid", "[", 
       RowBox[{"op", ",", "els"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MakeGroupFromEls", "[", 
      RowBox[{"op", ",", "foels"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950386397571844*^9, 3.95038640075208*^9}, 
   3.950386555185565*^9, {3.950386598825458*^9, 3.9503866365471983`*^9}, {
   3.950386866344183*^9, 3.950386867990258*^9}, {3.9506826919044037`*^9, 
   3.950682692201425*^9}, {3.953139462842063*^9, 3.953139466761848*^9}, 
   3.953284294325296*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"50ee6648-1958-4471-9d63-a9c36be9e37c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeGroupFromTable", "[", 
   RowBox[{"tab_List", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<IdVal\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<IdIx\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<InvVals\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<InvIxs\>\"", "->", "Null"}]}], "}"}], "]"}]}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"idval", ",", "idix", ",", 
      RowBox[{"id", "=", "Null"}], ",", "ids", ",", "invvals", ",", "invixs", 
      ",", 
      RowBox[{"invs", "=", "Null"}], ",", "ivvss", ",", "iv", ",", 
      "AreInvs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idval", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<IdVal\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idix", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<IdIx\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"idval", " ", "=!=", " ", "Null"}], ",", " ", "idval", ",", 
        " ", 
        RowBox[{"idix", " ", "=!=", " ", "Null"}], ",", " ", "idix", ",", " ",
         "True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ids", " ", "=", " ", 
          RowBox[{"FindOpTableIdents", "[", "tab", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "ids", "]"}], "==", "1"}], ",", 
           RowBox[{"First", "[", "ids", "]"}], ",", "Null"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"id", " ", "===", " ", "Null"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MakeGroup", "::", "noid"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"invvals", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<InvVals\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invixs", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<InvIxs\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invs", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"invvals", "=!=", "Null"}], ",", "invvals", ",", " ", 
        RowBox[{"invixs", "=!=", "Null"}], ",", " ", "invixs", ",", " ", 
        "True", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AreInvs", " ", "=", " ", "True"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ivvss", " ", "=", " ", 
          RowBox[{"FindOpTableInvs", "[", 
           RowBox[{"tab", ",", "id"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ivvss", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"iv", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", "1"}], "&&", 
               " ", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"iv", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", "1"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"iv", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
                RowBox[{"iv", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], ",", 
              RowBox[{"iv", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"AreInvs", "=", "False"}], ";", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"iv", ",", "ivvss"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"AreInvs", ",", "ivvss", ",", "Null"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"invs", " ", "===", " ", "Null"}], ",", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MakeGroup", "::", "noinv"}], "]"}], ";", " ", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Table\>\"", "->", "tab"}], ",", " ", 
       RowBox[{"\"\<Id\>\"", "->", "id"}], ",", 
       RowBox[{"\"\<Invs\>\"", "->", "invs"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950386372423568*^9, 3.950386376302824*^9}, 
   3.950386666958256*^9, {3.9503867476167107`*^9, 3.950386758673263*^9}, {
   3.950386798188833*^9, 3.950386849116919*^9}, {3.9503869954570923`*^9, 
   3.9503870191372004`*^9}, {3.950387053644685*^9, 3.950387070437771*^9}, 
   3.950387338377796*^9, {3.950405460313991*^9, 3.9504056251576643`*^9}, {
   3.950510122137805*^9, 3.950510137010577*^9}, {3.950682134502123*^9, 
   3.95068214828121*^9}, {3.950683065891799*^9, 3.950683067785009*^9}, {
   3.95313946962471*^9, 3.953139471754909*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"412b9c44-c88d-4f76-8921-cd4c31c6f781"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Subgroup", " ", "from", " ", "group", " ", "element", " ", "indices"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9506850900902*^9, 3.95068510358425*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8846db66-4c74-4f7d-9912-bcfba28f5859"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeSubgroup", "[", 
   RowBox[{"grp_Association", ",", "ixs_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ixremap", ",", "op", ",", "elixs", ",", "els", ",", "id", ",", "invs", 
      ",", "tab"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ixremap", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"ixs", "->", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "ixs", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", " ", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"els", "[", 
          RowBox[{"[", "ixs", "]"}], "]"}]}], ";", " ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"ListToIxAssn", "[", "els", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", " ", 
         RowBox[{"id", " ", "/.", " ", "ixremap"}]}], ";", " ", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{
          RowBox[{"invs", "[", 
           RowBox[{"[", "ixs", "]"}], "]"}], " ", "/.", " ", "ixremap"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Op\>\"", "->", "op"}], ",", 
          RowBox[{"\"\<Elixs\>\"", "->", "elixs"}], ",", 
          RowBox[{"\"\<Id\>\"", "->", "id"}], ",", 
          RowBox[{"\"\<Invs\>\"", "->", "invs"}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", " ", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "ixs", "]"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"tab", "[", 
             RowBox[{"[", "ixs", "]"}], "]"}]}], ")"}], " ", "/.", " ", 
          "ixremap"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", " ", 
         RowBox[{"id", " ", "/.", " ", "ixremap"}]}], ";", " ", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{
          RowBox[{"invs", "[", 
           RowBox[{"[", "ixs", "]"}], "]"}], " ", "/.", " ", "ixremap"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Table\>\"", "->", "tab"}], ",", 
          RowBox[{"\"\<Id\>\"", "->", "id"}], ",", 
          RowBox[{"\"\<Invs\>\"", "->", "invs"}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950685261882498*^9, 3.950685301205391*^9}, {
   3.95068542344018*^9, 3.950685424463482*^9}, {3.950685457539055*^9, 
   3.950685487451756*^9}, {3.950685569915345*^9, 3.950685577375154*^9}, {
   3.950685608247661*^9, 3.950685830309081*^9}, {3.950799287895751*^9, 
   3.950799295541052*^9}, {3.9507993269100637`*^9, 3.9507993415809317`*^9}, {
   3.951691877100333*^9, 3.951691908642599*^9}, {3.951691944774939*^9, 
   3.951691971299564*^9}, 3.9516920141475563`*^9, {3.951699038340107*^9, 
   3.951699045754422*^9}, {3.9516991536788692`*^9, 3.951699156189664*^9}, {
   3.953139488956118*^9, 3.953139504915938*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"c0575c5f-89d3-4a33-85b0-31d1405f80f8"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions on Groups", "Section",
 CellChangeTimes->{{3.950681811234954*^9, 3.9506818145318747`*^9}, {
  3.950685503920082*^9, 3.950685505323018*^9}, {3.950700720407151*^9, 
  3.950700727324649*^9}},ExpressionUUID->"74a2a6a4-e1c3-4053-9124-\
e3e4c79b2d87"],

Cell[CellGroupData[{

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.950701556397173*^9, 
  3.950701568381315*^9}},ExpressionUUID->"11d8802d-9c50-4599-9f34-\
f8afdd101c98"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Order", " ", "or", " ", "size", " ", "of", " ", "the", " ", 
   RowBox[{"group", ":", " ", 
    RowBox[{"how", " ", "many", " ", 
     RowBox[{"members", " ", "/", " ", "elements"}]}]}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.950918804188929*^9, 3.950918813637189*^9}, {
  3.950918935679491*^9, 3.950918947342473*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"0cc92748-0f08-402d-b4c5-b9a1f0437d51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupNum", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"elixs", ",", "els", ",", "tab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Length", "[", "els", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Length", "[", "tab", "]"}]}], ",", "\[IndentingNewLine]", 
      "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9509188148855267`*^9, 3.950918858239097*^9}, {
  3.9509189291440573`*^9, 3.95091894103998*^9}, {3.950964208339569*^9, 
  3.950964208707754*^9}, {3.951692031286789*^9, 3.951692055936928*^9}, {
  3.951699170989566*^9, 3.951699171375256*^9}, {3.953139569126237*^9, 
  3.953139574069755*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"c2dc977d-2738-4010-b71c-488740bfeefa"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Is", " ", "group", " ", 
   RowBox[{"abelian", "?"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9506850835973043`*^9, 3.950685087879928*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"5144e918-e998-4374-b0ce-55e4a322ecfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupIsAbelian", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"op", ",", "elixs", ",", "els", ",", "tab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"IsGroupoidCommutative", "[", 
        RowBox[{"op", ",", "els"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"IsOpTableCommutative", "[", "tab", "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950700560755842*^9, 3.950700611064348*^9}, {
  3.9507006421872*^9, 3.950700660256225*^9}, {3.9507994168138933`*^9, 
  3.950799430756324*^9}, {3.951692072262165*^9, 3.951692101468205*^9}, {
  3.951699173782596*^9, 3.9516991741035223`*^9}, {3.953139577749835*^9, 
  3.953139583893929*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"2f834b02-54d3-44da-9a89-1b047c35a9b4"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Operation", " ", "Table", " ", "from", " ", "Group"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.950684706089223*^9, 3.9506847121674767`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"6c7f8a86-589b-4c90-b248-56e815f35239"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupOpTab", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"op", ",", "elixs", ",", "els"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"elixs", "[", 
          RowBox[{"op", "[", 
           RowBox[{"el1", ",", "el2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"el1", ",", "els"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"el2", ",", "els"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"grp", "[", "\"\<Table\>\"", "]"}], ",", "\[IndentingNewLine]", 
      "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950684721673924*^9, 3.950684842284384*^9}, {
   3.950799473797331*^9, 3.950799496211309*^9}, {3.950799540478644*^9, 
   3.950799542523141*^9}, 3.950970904938097*^9, {3.951692088351207*^9, 
   3.951692109240855*^9}, {3.951692181867812*^9, 3.951692182148096*^9}, {
   3.951699177620225*^9, 3.951699177903146*^9}, {3.953139591352399*^9, 
   3.953139593928261*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"91b55a4f-3c96-483e-816c-88a55f78ba99"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Powers", " ", "of", " ", "All", " ", "Elements"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9506835381872168`*^9, 3.9506835493524227`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"5ece7eda-1f14-4408-87f7-388acf4e6c28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupElPowers", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "id", ",", "idel", ",", "tab", ",", 
      "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"id", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", " ", 
       RowBox[{"idel", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "id", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"elixs", " ", "/@", " ", 
          RowBox[{"NestWhileList", "[", 
           RowBox[{
            RowBox[{"elx", " ", "|->", " ", 
             RowBox[{"op", "[", 
              RowBox[{"el", ",", "elx"}], "]"}]}], ",", "el", ",", 
            RowBox[{"elx", " ", "|->", " ", 
             RowBox[{"elx", "=!=", "idel"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"el", ",", "els"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", " ", 
       RowBox[{"id", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NestWhileList", "[", 
          RowBox[{
           RowBox[{"m", " ", "|->", " ", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "m"}], "]"}], "]"}]}], ",", "k", ",", 
           RowBox[{"m", "|->", 
            RowBox[{"m", "!=", "id"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9506819116239367`*^9, 3.95068191817175*^9}, {
   3.950682047288335*^9, 3.950682052630432*^9}, {3.9506823299304733`*^9, 
   3.9506824868553658`*^9}, {3.9506825171916437`*^9, 3.950682587873805*^9}, {
   3.9506827780049973`*^9, 3.950682793283506*^9}, {3.950682834782538*^9, 
   3.950682909189546*^9}, {3.9506843210195017`*^9, 3.95068433505224*^9}, {
   3.9507995899992037`*^9, 3.950799601315648*^9}, {3.950969199654544*^9, 
   3.950969202398102*^9}, 3.9509709062518663`*^9, 3.95169212067412*^9, {
   3.95169216868291*^9, 3.951692172727564*^9}, {3.95169919833529*^9, 
   3.951699198655554*^9}, {3.951939906493292*^9, 3.951939907041151*^9}, {
   3.953139599767948*^9, 3.953139603216176*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"a6fb200f-a303-4acc-9b38-2c72e17c93a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupAbelianToCycles", "[", "grp_Association", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ixop", ",", "op", ",", "elixs", ",", "els", ",", "n", ",", "id", ",", 
      "tab", ",", "pwrs", ",", "grppart", ",", "rmdr", ",", "rdprs", ",", 
      RowBox[{"cycles", "=", 
       RowBox[{"{", "}"}]}], ",", "pwr"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", 
         RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
         RowBox[{"elixs", "[", 
          RowBox[{"op", "[", 
           RowBox[{
            RowBox[{"els", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"els", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"id", " ", "=", 
         RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"GroupIsAbelian", "[", "grp", "]"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pwrs", " ", "=", " ", 
      RowBox[{"GroupElPowers", "[", "grp", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grppart", " ", "=", " ", 
      RowBox[{"{", "id", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rmdr", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Range", "[", "n", "]"}], ",", "grppart"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rmdr", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rdprs", " ", "=", " ", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "rmdr", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pwr", " ", "=", " ", 
         RowBox[{"First", "[", 
          RowBox[{"MaximalBy", "[", 
           RowBox[{"rdprs", ",", "Length"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"cycles", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "[", "pwr", "]"}], ",", 
            RowBox[{"Length", "[", "pwr", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"grppart", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{"ixop", ",", "grppart", ",", "pwr"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rmdr", " ", "=", " ", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", "n", "]"}], ",", "grppart"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "cycles"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950993632513101*^9, 3.950993673504663*^9}, {
   3.950993742357579*^9, 3.950993742751697*^9}, {3.950993773045879*^9, 
   3.950993844494985*^9}, 3.950993920012251*^9, {3.950993968312689*^9, 
   3.9509939712246113`*^9}, {3.950994128678154*^9, 3.950994448384301*^9}, {
   3.950994500366324*^9, 3.9509945883615522`*^9}, {3.951692127709037*^9, 
   3.9516921338283443`*^9}, {3.9516921925720577`*^9, 
   3.9516922145485687`*^9}, {3.951699202304482*^9, 3.9516992026027117`*^9}, {
   3.9531396079523687`*^9, 3.953139610921485*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"8eaa400c-5b11-4be9-a6fb-978e787d899a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conjugates, Classes, and Characters", "Subsection",
 CellChangeTimes->{{3.950701577789094*^9, 3.950701582741413*^9}, {
  3.950996869212531*^9, 
  3.9509968742049427`*^9}},ExpressionUUID->"7927fcb7-f6ee-469e-af1a-\
e570b84e4074"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Conjugate", " ", "of", " ", "an", " ", 
   RowBox[{"element", ":", " ", 
    RowBox[{
    "index", " ", "of", " ", "element", " ", "and", " ", "its", " ", 
     "conjugator"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950686724120058*^9, 3.950686728971943*^9}, {
  3.950701621253944*^9, 3.950701638297188*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"a1e205cb-b47e-4192-9d0b-ed48395f7788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupElConjg", "[", 
   RowBox[{"grp_Association", ",", "ei_Integer", ",", "eic_Integer"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "invs", ",", "el", ",", "elc", ",", 
      "elci", ",", "tab", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"el", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "ei", "]"}], "]"}]}], ";", " ", 
       RowBox[{"elc", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "eic", "]"}], "]"}]}], ";", " ", 
       RowBox[{"elci", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", 
          RowBox[{"invs", "[", 
           RowBox[{"[", "eic", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"elixs", "[", 
        RowBox[{"op", "[", 
         RowBox[{"elc", ",", 
          RowBox[{"op", "[", 
           RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tab", "[", 
        RowBox[{"[", 
         RowBox[{"eic", ",", 
          RowBox[{"tab", "[", 
           RowBox[{"[", 
            RowBox[{"ei", ",", 
             RowBox[{"invs", "[", 
              RowBox[{"[", "eic", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
        "]"}]}], ",", "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950701589827276*^9, 3.9507016510152187`*^9}, {
   3.9507018385326777`*^9, 3.9507020745257072`*^9}, {3.950702597185472*^9, 
   3.950702597623633*^9}, 3.95070290282981*^9, {3.9507996618794937`*^9, 
   3.950799672847026*^9}, 3.9509709071174192`*^9, 3.9516922159914713`*^9, 
   3.9516922858702717`*^9, {3.9516992118788157`*^9, 3.951699212192734*^9}, {
   3.9531396315942297`*^9, 3.953139666737295*^9}, {3.953287728420162*^9, 
   3.953287728802478*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"36799694-09b3-4c42-9777-d65803d097e3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"All", " ", "conjugates", " ", "of", " ", "an", " ", "element"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950686730962372*^9, 3.9506867368121433`*^9}, {
  3.950702657994523*^9, 3.950702668969398*^9}, {3.950702748807485*^9, 
  3.9507027509317217`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"b9e737ce-3098-436c-b78d-88dd6fa6d856"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupElCjgAll", "[", 
   RowBox[{"grp_Association", ",", "ei_Integer"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "n", ",", "invs", ",", "tab", ",", 
      "el"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"el", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "ei", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"elixs", "[", 
          RowBox[{"op", "[", 
           RowBox[{
            RowBox[{"els", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"op", "[", 
             RowBox[{"el", ",", 
              RowBox[{"els", "[", 
               RowBox[{"[", 
                RowBox[{"invs", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"ei", ",", 
               RowBox[{"invs", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950701589827276*^9, 3.95070167097506*^9}, {
   3.950702192278241*^9, 3.950702285529092*^9}, {3.950702635757412*^9, 
   3.950702646441267*^9}, {3.950799703368472*^9, 3.950799710671023*^9}, {
   3.950799769048217*^9, 3.950799773741227*^9}, 3.9509709079403553`*^9, 
   3.951692217043931*^9, 3.951692287979313*^9, {3.951699215406687*^9, 
   3.9516992158234167`*^9}, {3.953139675193822*^9, 3.953139683288781*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"0522dd5d-17a1-40bf-89c5-8e239d793618"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"All", " ", "distinct", " ", "conjugates"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9507027889334*^9, 3.9507027932762003`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"a52c5667-85bf-48ce-b157-ac84e733cf86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GropElCjgAllDst", "[", 
   RowBox[{"grp_Association", ",", "ei_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"GroupElCjgAll", "[", 
    RowBox[{"grp", ",", "ei"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950702756291608*^9, 3.9507027820599833`*^9}, {
  3.953139708025408*^9, 3.953139712560906*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"ad6305a2-3b35-45c3-be6d-b1ebf3a21104"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Conjugates", " ", "of", " ", "a", " ", "list", " ", "of", " ", 
    "elements"}], ",", " ", 
   RowBox[{"as", " ", "indices"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950701674938452*^9, 3.9507017136657743`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"1f8f296f-b8b2-4ccb-8215-99aa4b66010d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListConjg", "[", 
   RowBox[{"grp_Association", ",", "eilst_List", ",", "eic_Integer"}], "]"}], 
  " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "invs", ",", "el", ",", "elc", ",", 
      "elci", ",", "tab", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"elc", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "eic", "]"}], "]"}]}], ";", " ", 
       RowBox[{"elci", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", 
          RowBox[{"invs", "[", 
           RowBox[{"[", "eic", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"el", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
          RowBox[{"elixs", "[", 
           RowBox[{"op", "[", 
            RowBox[{"elc", ",", 
             RowBox[{"op", "[", 
              RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"eic", ",", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"ei", ",", 
               RowBox[{"invs", "[", 
                RowBox[{"[", "eic", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950701589827276*^9, 3.9507016510152187`*^9}, {
   3.950701698225964*^9, 3.9507017061042767`*^9}, {3.9507025175839043`*^9, 
   3.9507025638309937`*^9}, {3.9507026788105497`*^9, 3.950702693042716*^9}, 
   3.950702866364018*^9, 3.950799714616214*^9, 3.950799786831648*^9, 
   3.9509709086762533`*^9, 3.951692218140588*^9, 3.951692289271043*^9, {
   3.951699220614539*^9, 3.951699220969184*^9}, {3.9531397174206467`*^9, 
   3.953139733290328*^9}, {3.953139766835388*^9, 3.953139767795497*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"337b0e5c-1a2e-407c-8b2b-7735a0a2a841"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "All", " ", "conjugates", " ", "of", " ", "a", " ", "list", " ", "of", " ", 
   "elements"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950686747738999*^9, 3.950686752638242*^9}, {
  3.950701731184272*^9, 3.95070173393743*^9}, {3.950702724095811*^9, 
  3.9507027407717533`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"df332b41-a94a-4a33-9b41-dc48c0f7cea0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListCjgAll", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "invs", ",", "el", ",", "elc", ",", 
      "elci", ",", "tab", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"elc", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "eic", "]"}], "]"}]}], ";", " ", 
          RowBox[{"elci", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", 
             RowBox[{"invs", "[", 
              RowBox[{"[", "eic", "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"el", " ", "=", " ", 
              RowBox[{"els", "[", 
               RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
             RowBox[{"elixs", "[", 
              RowBox[{"op", "[", 
               RowBox[{"elc", ",", 
                RowBox[{"op", "[", 
                 RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"eic", ",", 
              RowBox[{"tab", "[", 
               RowBox[{"[", 
                RowBox[{"ei", ",", 
                 RowBox[{"invs", "[", 
                  RowBox[{"[", "eic", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950701589827276*^9, 3.9507016510152187`*^9}, {
   3.950701698225964*^9, 3.9507017061042767`*^9}, {3.950701744413048*^9, 
   3.9507017500761347`*^9}, {3.950702814570586*^9, 3.9507028537976217`*^9}, {
   3.950702931037726*^9, 3.950702931913292*^9}, {3.950703020325295*^9, 
   3.950703032892157*^9}, 3.950799725551498*^9, {3.950799795319662*^9, 
   3.950799798341522*^9}, 3.9509709094293003`*^9, 3.9516922189248667`*^9, 
   3.951692290728879*^9, {3.951699229927232*^9, 3.951699230559887*^9}, {
   3.953139721108116*^9, 3.953139721514296*^9}, {3.9531397718685703`*^9, 
   3.953139774827694*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"69d3d3cf-62d0-4368-8dfb-ddf9a277c2b1"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"All", " ", "distinct", " ", "conjugates"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950703051356797*^9, 3.9507030554448223`*^9}, {
  3.95070313060819*^9, 3.950703134710063*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"9ea78e05-f937-419e-8ecb-c232f3ab03d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListCjgAllDst", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "invs", ",", "el", ",", "elc", ",", 
      "elci", ",", "tab", ",", "n", ",", "eilcjg", ",", 
      RowBox[{"ecgs", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"elc", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", "eic", "]"}], "]"}]}], ";", " ", 
           RowBox[{"elci", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", 
              RowBox[{"invs", "[", 
               RowBox[{"[", "eic", "]"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"eilcjg", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"el", " ", "=", " ", 
                 RowBox[{"els", "[", 
                  RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
                RowBox[{"elixs", "[", 
                 RowBox[{"op", "[", 
                  RowBox[{"elc", ",", 
                   RowBox[{"op", "[", 
                    RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"ecgs", ",", "eilcjg"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"ecgs", ",", "eilcjg"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "tab", "]"}]}], ";", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eilcjg", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"eic", ",", 
                  RowBox[{"tab", "[", 
                   RowBox[{"[", 
                    RowBox[{"ei", ",", 
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "eic", "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
                 "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"ecgs", ",", "eilcjg"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"ecgs", ",", "eilcjg"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sort", "[", "ecgs", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9507030580535593`*^9, 3.950703091821415*^9}, {
   3.9509632167026567`*^9, 3.950963357152319*^9}, {3.9509633902951803`*^9, 
   3.950963393662875*^9}, 3.9509709103413258`*^9, 3.9516922203163137`*^9, 
   3.951692291590268*^9, {3.951699234711967*^9, 3.951699235015492*^9}, {
   3.9531397785984173`*^9, 3.953139799477233*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"439024ad-f0da-47c3-b208-07d4c7158754"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Conjugacy", " ", "Classes"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9506846980390997`*^9, 3.950684702791787*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"075bda10-23eb-4da8-9b6c-d01100ed7cf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupConjClss", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", " ", "n", ",", "invs", ",", "tab", 
      ",", 
      RowBox[{"ccs", "=", 
       RowBox[{"{", "}"}]}], ",", "remels", ",", "el", ",", "cc", ",", "elc", 
      ",", "elci"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"remels", " ", "=", " ", 
         RowBox[{"Range", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "remels", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"el", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", "remels", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cc", " ", "=", " ", 
            RowBox[{"Union", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"elc", " ", "=", " ", 
                 RowBox[{"els", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
                RowBox[{"elci", " ", "=", " ", 
                 RowBox[{"els", "[", 
                  RowBox[{"[", 
                   RowBox[{"invs", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"elixs", "[", 
                 RowBox[{"op", "[", 
                  RowBox[{"elc", ",", 
                   RowBox[{"op", "[", 
                    RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], "]"}]}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ccs", ",", "cc"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"remels", " ", "=", " ", 
            RowBox[{"Complement", "[", 
             RowBox[{"remels", ",", "cc"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "tab", "]"}]}], ";", 
        RowBox[{"invs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"remels", " ", "=", " ", 
         RowBox[{"Range", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "remels", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"el", " ", "=", " ", 
            RowBox[{"First", "[", "remels", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cc", " ", "=", " ", 
            RowBox[{"Union", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", 
                  RowBox[{"tab", "[", 
                   RowBox[{"[", 
                    RowBox[{"el", ",", 
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ccs", ",", "cc"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"remels", " ", "=", " ", 
            RowBox[{"Complement", "[", 
             RowBox[{"remels", ",", "cc"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", "True", 
       ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "ccs"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9506819116239367`*^9, 3.95068191817175*^9}, {
   3.950682047288335*^9, 3.950682052630432*^9}, {3.9506823299304733`*^9, 
   3.9506824868553658`*^9}, {3.9506825171916437`*^9, 3.950682587873805*^9}, {
   3.9506827780049973`*^9, 3.950682793283506*^9}, {3.950682834782538*^9, 
   3.950682909189546*^9}, {3.950683610197*^9, 3.950683620490575*^9}, {
   3.950683741554834*^9, 3.950684001524458*^9}, {3.9506840842290163`*^9, 
   3.950684126918181*^9}, {3.950684352880043*^9, 3.950684456111968*^9}, {
   3.9506845086298923`*^9, 3.950684520444213*^9}, {3.950701804189208*^9, 
   3.9507018151452208`*^9}, {3.950702955971178*^9, 3.95070299979489*^9}, {
   3.950799728366637*^9, 3.950799733629498*^9}, 3.950799804408023*^9, 
   3.950970911132354*^9, 3.9516922216923037`*^9, 3.9516922924791117`*^9, {
   3.9516992385675707`*^9, 3.951699238914329*^9}, {3.953139785878525*^9, 
   3.9531398033899508`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"0aeb982c-99aa-4917-b28a-61f37bce369a"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Class", " ", "Multiplication", " ", "Table"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.95072249290336*^9, 3.9507224981351633`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"ab11cde4-2bcf-4a52-aae8-30b250b60731"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupClassMult", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ixop", ",", "op", ",", "elixs", ",", "els", ",", "tab", ",", "clss", 
      ",", "cllens", ",", "ncls", ",", "mems", ",", "cmtbl"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Index", " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
         RowBox[{"elixs", "[", 
          RowBox[{"op", "[", 
           RowBox[{
            RowBox[{"els", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"els", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Classes", " ", "and", " ", "their", " ", "Members"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"clss", " ", "=", " ", 
      RowBox[{"GroupConjClss", "[", "grp", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ncls", " ", "=", " ", 
      RowBox[{"Length", "[", "clss", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cllens", " ", "=", " ", 
      RowBox[{"Length", " ", "/@", " ", "clss"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mems", " ", "=", " ", 
      RowBox[{"ListOfListsToIndex", "[", "clss", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"The", " ", "table"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cmtbl", " ", "=", " ", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tl", " ", "|->", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"k1", ",", "k2", ",", 
                 RowBox[{"tl", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tl", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", 
                 RowBox[{"cllens", "[", 
                  RowBox[{"[", 
                   RowBox[{"tl", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ")"}]}]}],
              ")"}], " ", "/@", " ", 
            RowBox[{"Tally", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Outer", "[", 
                 RowBox[{"ixop", ",", 
                  RowBox[{"clss", "[", 
                   RowBox[{"[", "k1", "]"}], "]"}], ",", 
                  RowBox[{"clss", "[", 
                   RowBox[{"[", "k2", "]"}], "]"}]}], "]"}], ",", "1"}], 
               "]"}], " ", "/.", " ", "mems"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k1", ",", "ncls"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k2", ",", "ncls"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"ncls", "*", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Classes\>\"", "->", "clss"}], ",", 
       RowBox[{"\"\<ClassMult\>\"", "->", "cmtbl"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950703179203432*^9, 3.950703186488145*^9}, {
   3.9507223235196342`*^9, 3.9507224860008593`*^9}, {3.950722520993125*^9, 
   3.9507225381811533`*^9}, {3.950722867620428*^9, 3.950722899968547*^9}, {
   3.950722990523419*^9, 3.950723361287871*^9}, {3.950750279561672*^9, 
   3.950750292981558*^9}, {3.950750337030452*^9, 3.9507503423270063`*^9}, 
   3.950799745504339*^9, 3.9507998194160633`*^9, 3.95097091189223*^9, {
   3.95098861632218*^9, 3.950988617957426*^9}, 3.9516922225493517`*^9, 
   3.951692293746148*^9, {3.951699243711958*^9, 3.951699244120635*^9}, {
   3.953139810911381*^9, 3.953139814197318*^9}, {3.953378723332052*^9, 
   3.953378765966407*^9}, {3.953378839061207*^9, 3.953378841012622*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"fc386475-6488-4837-80ac-86d2e1b265a3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Equations", " ", "for", " ", "associated", " ", "characters", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"strictly", " ", "speaking"}], ",", " ", 
     RowBox[{
     "quantities", " ", "to", " ", "be", " ", "equated", " ", "to", " ", 
      "zero"}]}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.953288081837509*^9, 3.9532880996912622`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"4e6c136b-b329-4d18-beab-c4daaf544694"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupAssocCharEqs", "[", 
   RowBox[{"grp_Association", ",", "ylbl_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gcm", ",", "clss", ",", "cmtbl", ",", "yvec", ",", "eqns"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gcm", " ", "=", " ", 
      RowBox[{"GroupClassMult", "[", "grp", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"clss", " ", "=", " ", 
      RowBox[{"gcm", "[", "\"\<Classes\>\"", "]"}]}], ";", " ", 
     RowBox[{"cmtbl", " ", "=", " ", 
      RowBox[{"gcm", "[", "\"\<ClassMult\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yvec", " ", "=", " ", 
      RowBox[{"Array", "[", 
       RowBox[{"ylbl", ",", 
        RowBox[{"Length", "[", "clss", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqns", " ", "=", " ", 
      RowBox[{
       RowBox[{"cmtbl", ".", "yvec"}], " ", "-", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", "yvec", ",", "yvec"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Classes\>\"", "->", "clss"}], ",", 
       RowBox[{"\"\<ClassMult\>\"", "->", "cmtbl"}], ",", 
       RowBox[{"\"\<ACVars\>\"", "->", "yvec"}], ",", " ", 
       RowBox[{"\"\<ACEqns\>\"", "->", "eqns"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.95099569018505*^9, 3.950995789928471*^9}, {
  3.950995869131341*^9, 3.950995870082*^9}, {3.9509959876478367`*^9, 
  3.950996040705941*^9}, {3.9509960710443487`*^9, 3.950996082938879*^9}, {
  3.951699251165831*^9, 3.951699252542938*^9}, {3.952110652712129*^9, 
  3.952110653697568*^9}, {3.953139819869822*^9, 3.953139823949135*^9}, {
  3.9533787915661993`*^9, 3.9533787986953573`*^9}, {3.95337883276262*^9, 
  3.95337894042019*^9}, {3.953379173810297*^9, 3.9533791942836037`*^9}, {
  3.953379295398891*^9, 3.953379300520369*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"c6448691-4b83-494d-80ba-316d656bfad9"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Group", " ", "characters"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9531398482864656`*^9, 3.953139854925095*^9}, {
  3.95328810526968*^9, 3.95328810858893*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"561974d6-9c7a-4d19-b6d5-56be294ca315"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupChars", "[", 
   RowBox[{"grp_Association", ",", 
    RowBox[{"solver_", ":", "Solve"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "y", ",", "gacs", ",", "clss", ",", "ncls", ",", "n", ",", "cmtbl", ",", 
      "yvec", ",", "eqns", ",", "ysol", ",", "xsol"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gacs", " ", "=", " ", 
      RowBox[{"GroupAssocCharEqs", "[", 
       RowBox[{"grp", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"clss", " ", "=", " ", 
      RowBox[{"gacs", "[", "\"\<Classes\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cmtbl", " ", "=", " ", 
      RowBox[{"gacs", "[", "\"\<ClassMult\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yvec", " ", "=", " ", 
      RowBox[{"gacs", "[", "\"\<ACVars\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqns", " ", "=", " ", 
      RowBox[{"gacs", "[", "\"\<ACEqns\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ncls", " ", "=", " ", 
      RowBox[{"Length", " ", "/@", " ", "clss"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Total", "[", "ncls", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ysol", " ", "=", " ", 
      RowBox[{"yvec", " ", "//.", " ", 
       RowBox[{"solver", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "eqns", "]"}], "==", "0"}], "]"}], ",", 
         "yvec"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ysol", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"ysol", ",", 
        RowBox[{"yx", " ", "|->", " ", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", "yx", "]"}], "]"}], ">", "0"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ysol", " ", "=", " ", 
      RowBox[{"Conjugate", "[", 
       RowBox[{"Conjugate", "[", "ysol", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xsol", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yx", " ", "|->", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yx", "/", "ncls"}], ")"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Conjugate", "[", "yx", "]"}], ".", 
               RowBox[{"(", 
                RowBox[{"yx", "/", "ncls"}], ")"}]}], ")"}], "/", "n"}], 
            "]"}], "]"}]}]}], ")"}], " ", "/@", " ", "ysol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Classes\>\"", "->", "clss"}], ",", 
       RowBox[{"\"\<ClassMult\>\"", "->", "cmtbl"}], ",", 
       RowBox[{"\"\<AssocChars\>\"", "->", "ysol"}], ",", 
       RowBox[{"\"\<Chars\>\"", "->", "xsol"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950995796674905*^9, 3.950995880868764*^9}, {
   3.9509959167597847`*^9, 3.950995950679624*^9}, {3.9509960300657377`*^9, 
   3.950996050273449*^9}, {3.950996099061482*^9, 3.9509961004047422`*^9}, {
   3.950996155645986*^9, 3.9509961918301888`*^9}, {3.9509963082199583`*^9, 
   3.950996347026929*^9}, {3.9509964147996607`*^9, 3.950996483166955*^9}, {
   3.950996573333552*^9, 3.95099657434133*^9}, {3.950996610878537*^9, 
   3.950996673368004*^9}, {3.950996717258041*^9, 3.950996736370125*^9}, {
   3.9509967866280737`*^9, 3.950996813324821*^9}, {3.951699254798477*^9, 
   3.951699255176374*^9}, {3.952110580425469*^9, 3.9521105813423758`*^9}, {
   3.952110658312982*^9, 3.9521106592404737`*^9}, {3.953139835639118*^9, 
   3.953139843709979*^9}, {3.953288791869958*^9, 3.953288792556662*^9}, {
   3.9533788042571993`*^9, 3.9533788135091267`*^9}, 3.9533789467101717`*^9, {
   3.953379222700849*^9, 3.9533793676255703`*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"5e11eac5-8f4f-45fc-84a1-9b044939ef9f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Centralizers and Normalizers", "Subsection",
 CellChangeTimes->{{3.950704111834158*^9, 
  3.950704116148122*^9}},ExpressionUUID->"c299436f-0ef0-473c-bc99-\
188bd916b89d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Centralizer", " ", "of", " ", "an", " ", "element"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9507503941699266`*^9, 3.9507504047838993`*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"68cb3486-fedb-483e-b892-597b93c837df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupElCtrl", "[", 
   RowBox[{"grp_Association", ",", "ei_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "n", ",", "el", ",", "elx", ",", 
      "tab"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"el", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "ei", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"elx", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"op", "[", 
              RowBox[{"elx", ",", "el"}], "]"}], "===", 
             RowBox[{"op", "[", 
              RowBox[{"el", ",", "elx"}], "]"}]}], ",", "k", ",", "Nothing"}],
            "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "ei"}], "]"}], "]"}], "==", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"ei", ",", "k"}], "]"}], "]"}]}], ",", "k", ",", 
           "Nothing"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9508015876598577`*^9, 3.950801623789543*^9}, {
  3.950801656709711*^9, 3.950801818918295*^9}, {3.951699259421973*^9, 
  3.951699259729837*^9}, {3.953139991259509*^9, 3.95314002525908*^9}, {
  3.953140097527066*^9, 3.953140098045364*^9}, {3.953317742039729*^9, 
  3.953317760521118*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"fb7d5405-2d9b-43a2-bc8e-67c05630f132"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Centralizer", " ", "of", " ", "a", " ", "list", " ", "of", " ", 
   "elements"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950750407039748*^9, 3.950750427008245*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"ef26e318-7755-4877-8ea3-94a8ba376712"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListCtrl", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "n", ",", "elis", ",", "eli", ",", 
      "elx", ",", "tab", ",", "ei"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"elis", " ", "=", " ", 
        RowBox[{"els", "[", 
         RowBox[{"[", "eilst", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"elx", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", " ", "@@", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"op", "[", 
                 RowBox[{"elx", ",", "eli"}], "]"}], "===", 
                RowBox[{"op", "[", 
                 RowBox[{"eli", ",", "elx"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"eli", ",", "elis"}], "}"}]}], "]"}]}], ",", "k", ",",
             "Nothing"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"And", " ", "@@", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "ei"}], "]"}], "]"}], "==", 
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"ei", ",", "k"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}]}], ",", "k", ",", 
           "Nothing"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9508015876598577`*^9, 3.950801623789543*^9}, {
  3.950801656709711*^9, 3.950801818918295*^9}, {3.950802231334937*^9, 
  3.9508024688389378`*^9}, {3.951699262718961*^9, 3.951699263016808*^9}, {
  3.953140037453518*^9, 3.953140040773447*^9}, {3.953140100774755*^9, 
  3.953140101101776*^9}, {3.953318079349784*^9, 3.953318090937443*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"2fd1d3c0-c2f3-42e2-9d83-232c6c89dc31"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Center", " ", "of", " ", "group"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950750441665099*^9, 3.950750445728146*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"3f6ff41d-ad95-4898-a001-7519392ba83e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCenter", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "els", ",", "n", ",", "elixs", ",", "eli", ",", "elx", ",", 
      "tab", ",", "ei"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", " ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"elx", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", " ", "@@", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"op", "[", 
                 RowBox[{"elx", ",", "eli"}], "]"}], "===", 
                RowBox[{"op", "[", 
                 RowBox[{"eli", ",", "elx"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"eli", ",", "els"}], "}"}]}], "]"}]}], ",", "k", ",", 
            "Nothing"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"And", " ", "@@", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "ei"}], "]"}], "]"}], "==", 
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"ei", ",", "k"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"ei", ",", "n"}], "}"}]}], "]"}]}], ",", "k", ",", 
           "Nothing"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9508015876598577`*^9, 3.950801623789543*^9}, {
   3.950801656709711*^9, 3.950801818918295*^9}, {3.950802231334937*^9, 
   3.9508024688389378`*^9}, {3.950802722951376*^9, 3.9508027566160917`*^9}, {
   3.951699265319933*^9, 3.951699265624403*^9}, 3.953140046773292*^9, {
   3.953140105455394*^9, 3.953140105781868*^9}, {3.9533180980079393`*^9, 
   3.953318102766272*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"35f0bb7e-736b-4ed2-96a2-150c0b6753fd"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Normalizer", " ", "of", " ", "a", " ", "list", " ", "of", " ", 
   "elements"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950750420848077*^9, 3.9507504526887913`*^9}, {
  3.950802783295504*^9, 3.9508027839742317`*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"2b849ea7-e287-4860-a4de-2cd09be4bbd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListNorm", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "invs", ",", "elslst", ",", "el", 
      ",", "elc", ",", "elci", ",", "tab", ",", "n"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"elslst", " ", "=", " ", 
        RowBox[{"Sort", "[", 
         RowBox[{"els", "[", 
          RowBox[{"[", "eilst", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"elc", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", "eic", "]"}], "]"}]}], ";", " ", 
          RowBox[{"elci", " ", "=", " ", 
           RowBox[{"els", "[", 
            RowBox[{"[", 
             RowBox[{"invs", "[", 
              RowBox[{"[", "eic", "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"op", "[", 
                 RowBox[{"elc", ",", 
                  RowBox[{"op", "[", 
                   RowBox[{"el", ",", "elci"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"el", ",", "elslst"}], "}"}]}], "]"}], "]"}], "===", 
             "elslst"}], ",", "eic", ",", "Nothing"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tab", "]"}]}], ";", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"elslst", " ", "=", " ", 
        RowBox[{"Sort", "[", "eilst", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"eic", ",", 
                  RowBox[{"tab", "[", 
                   RowBox[{"[", 
                    RowBox[{"ei", ",", 
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "eic", "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
                 "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "elslst"}], "}"}]}], "]"}], "]"}], "===", 
            "elslst"}], ",", "eic", ",", "Nothing"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950701589827276*^9, 3.9507016510152187`*^9}, {
   3.950701698225964*^9, 3.9507017061042767`*^9}, {3.950701744413048*^9, 
   3.9507017500761347`*^9}, {3.950702814570586*^9, 3.9507028537976217`*^9}, {
   3.950702931037726*^9, 3.950702931913292*^9}, {3.950703020325295*^9, 
   3.950703032892157*^9}, 3.950799725551498*^9, {3.950799795319662*^9, 
   3.950799798341522*^9}, {3.950803264656004*^9, 3.950803315375918*^9}, {
   3.95080336908027*^9, 3.9508034709678383`*^9}, {3.9516992683924303`*^9, 
   3.951699268729467*^9}, {3.953140049390518*^9, 3.953140052388188*^9}, {
   3.953140109103456*^9, 3.953140109958376*^9}, {3.953318106870227*^9, 
   3.953318115104464*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"8a4695be-c2cb-4f68-8737-c0549c618433"]
}, Closed]],

Cell[CellGroupData[{

Cell["Subgroups, Cosets, and Quotient Groups", "Subsection",
 CellChangeTimes->{{3.950803790253622*^9, 3.950803794439007*^9}, {
  3.950898307711608*^9, 
  3.950898311911545*^9}},ExpressionUUID->"5db93504-8a35-4a66-a5a0-\
d096c1c0cf13"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Is", " ", "a", " ", "list", " ", "a", " ", 
   RowBox[{"subgroup", "?"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9507504542739058`*^9, 3.950750462729068*^9}, {
  3.9508627593270407`*^9, 3.950862763638606*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"6b283088-e934-4092-ab2d-f3dce1c0a927"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListIsSubgroup", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "tab", ",", "isclsd", ",", "id", 
      ",", "invs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"isclsd", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"op", " ", "=", " ", 
          RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "   ", 
         RowBox[{"elixs", " ", "=", " ", 
          RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
         RowBox[{"els", " ", "=", " ", 
          RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"IsGroupoidClosed", "[", 
          RowBox[{"op", ",", 
           RowBox[{"els", "[", 
            RowBox[{"[", "eilst", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tab", " ", "=", " ", 
          RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"IsGroupoidClosed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i1", ",", "i2"}], "}"}], "|->", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{"i1", ",", "i2"}], "]"}], "]"}]}], ",", "eilst"}], 
          "]"}]}], ",", "\[IndentingNewLine]", "True", ",", 
        RowBox[{"Return", "[", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "isclsd"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"eilst", ",", "id"}], "]"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invs", " ", "=", " ", 
      RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"invs", "[", 
            RowBox[{"[", "eilst", "]"}], "]"}], ",", "eilst"}], "]"}], "]"}], 
        ">", "0"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950867152575489*^9, 3.9508671685563383`*^9}, {
  3.950901031331918*^9, 3.9509010812337093`*^9}, {3.950901443182632*^9, 
  3.950901596924122*^9}, {3.951699272895358*^9, 3.951699273218111*^9}, {
  3.953140115839241*^9, 3.953140139302567*^9}, {3.95334612783006*^9, 
  3.9533461512385187`*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"360b8c0b-80a6-454c-a3c5-c94d63fbdab3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Fill", " ", "out", " ", "list"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950867183240665*^9, 3.950867188070463*^9}, 
   3.950898297743713*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"5962fcd1-6dba-4877-8920-2efb22734a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListFillOut", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"op", ",", "elixs", ",", "els", ",", "tab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"elixs", " ", "/@", " ", 
         RowBox[{"FillOutGroupoid", "[", 
          RowBox[{"op", ",", 
           RowBox[{"els", "[", 
            RowBox[{"[", "eilst", "]"}], "]"}]}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FillOutGroupoid", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i1", ",", "i2"}], "}"}], "|->", 
           RowBox[{"tab", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", "i2"}], "]"}], "]"}]}], ",", "eilst"}], 
         "]"}]}], ",", "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], " ", "//", " ", "Sort"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950867152575489*^9, 3.950867194593508*^9}, {
   3.950901711249626*^9, 3.950901838535171*^9}, 3.9509644379869967`*^9, 
   3.950970912548321*^9, 3.9516922244168158`*^9, 3.9516922960868073`*^9, {
   3.951699276646824*^9, 3.951699276976511*^9}, {3.953140120270805*^9, 
   3.9531401468225117`*^9}, {3.9533463395409613`*^9, 3.9533463411141253`*^9}},
 
 CellLabel->
  "In[374]:=",ExpressionUUID->"b89c79b8-7a4b-4673-adb9-9aca77a45fe3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"All", " ", "subgroups", " ", "of", " ", "a", " ", "group"}], ",", 
   " ", 
   RowBox[{"as", " ", "element", " ", "indices"}], ",", " ", 
   RowBox[{"grouped", " ", "into", " ", "conjugate", " ", "sets"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.950898318105504*^9, 3.950898325289303*^9}, {
  3.950919084291407*^9, 3.950919097378338*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"a8e121c6-5620-49b1-a652-c7502321db37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupSubgroups", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "id", ",", "sgcgs", ",", "ix", ",", "sg", ",", "sgxc"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"GroupNum", "[", "grp", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"grp", "[", "\"\<Id\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"The", " ", "identity"}], "-", 
       RowBox[{"group", " ", "conjugate", " ", "set"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"sgcgs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", "id", "}"}], "}"}], "}"}]}], ";", " ", 
     RowBox[{"ix", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"ix", " ", "<=", " ", 
        RowBox[{"Length", "[", "sgcgs", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Use", " ", "the", " ", "first", " ", "member", " ", "of", " ", 
          "the", " ", "pointed"}], "-", 
         RowBox[{"to", " ", "conjugate", " ", "set"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sg", " ", "=", " ", 
         RowBox[{"sgcgs", "[", 
          RowBox[{"[", 
           RowBox[{"ix", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Add", " ", "every", " ", "element", " ", "to", " ", "the", " ", 
          "first", " ", "member", " ", "and", " ", "then", " ", "fill", " ", 
          "out"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"sg", ",", "k"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sgxc", " ", "=", " ", 
              RowBox[{"GroupListCjgAllDst", "[", 
               RowBox[{"grp", ",", 
                RowBox[{"GroupListFillOut", "[", 
                 RowBox[{"grp", ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{"sg", ",", "k"}], "]"}]}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"sgcgs", ",", "sgxc"}], "]"}]}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"sgcgs", ",", "sgxc"}], "]"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Go", " ", "to", " ", "the", " ", "next", " ", "conjugate", " ", 
          "set"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ix", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Sort", "[", "sgcgs", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.950898332945533*^9, 3.9508983427848043`*^9}, 
   3.950918488661524*^9, {3.950919025057844*^9, 3.95091906117799*^9}, {
   3.9509634648835917`*^9, 3.9509634815091476`*^9}, {3.950963553155466*^9, 
   3.9509635878958693`*^9}, {3.950963651848145*^9, 3.950963696040678*^9}, {
   3.9509637479379177`*^9, 3.950963748515357*^9}, {3.950963787988285*^9, 
   3.950963889404545*^9}, {3.950963945727297*^9, 3.950964154563431*^9}, {
   3.9509642299256153`*^9, 3.950964235084688*^9}, {3.95096429331845*^9, 
   3.950964303021994*^9}, {3.950964525842781*^9, 3.950964528484786*^9}, {
   3.950965555777876*^9, 3.950965619587594*^9}, {3.950965734945372*^9, 
   3.950965806281801*^9}, {3.950966093298903*^9, 3.9509660938580017`*^9}, {
   3.951699280577695*^9, 3.951699280929627*^9}, 3.953140154016239*^9, {
   3.9531401901690283`*^9, 3.95314019054447*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"0725d740-c0f6-4626-9ea0-12a333088b8a"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Is", " ", "a", " ", "list", " ", "a", " ", "normal", " ", 
   RowBox[{"one", "?", " ", 
    RowBox[{"(", 
     RowBox[{
     "conjgate", " ", "to", " ", "itself", " ", "over", " ", "all", " ", 
      "group", " ", "elements"}], ")"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9508627648627043`*^9, 3.950862773726762*^9}, {
  3.950902232104163*^9, 3.9509022418871193`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"d386b0e9-f0c9-419e-9d10-f485f0715f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListIsNormal", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"GroupListNorm", "[", 
     RowBox[{"grp", ",", "eilst"}], "]"}], " ", "===", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"GroupNum", "[", "grp", "]"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.950867223344645*^9, 3.950867224456015*^9}, 
   3.950902204654954*^9, {3.950918262021867*^9, 3.9509183283218317`*^9}, {
   3.950918367314549*^9, 3.9509184797707367`*^9}, {3.95091898378482*^9, 
   3.950919005152833*^9}, {3.953140159944927*^9, 3.95314016368711*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"23074db3-4a9b-4734-9416-0a0227a47b26"],

Cell[BoxData[
 RowBox[{"(*", " ", "Cosets", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950862775431988*^9, 3.9508627797751427`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"489e612e-50df-47d1-af4e-721850962afc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupListCosets", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", "el", ",", "elc", ",", "tab", ",", 
      "n", ",", "cstl", ",", "cstr", ",", 
      RowBox[{"cstsl", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"cstsr", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"elc", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", "eic", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"cstl", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"el", " ", "=", " ", 
                 RowBox[{"els", "[", 
                  RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
                RowBox[{"elixs", "[", 
                 RowBox[{"op", "[", 
                  RowBox[{"el", ",", "elc"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cstr", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"el", " ", "=", " ", 
                 RowBox[{"els", "[", 
                  RowBox[{"[", "ei", "]"}], "]"}]}], ";", 
                RowBox[{"elixs", "[", 
                 RowBox[{"op", "[", 
                  RowBox[{"elc", ",", "el"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"cstsl", ",", "cstl"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cstsl", ",", "cstl"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"cstsr", ",", "cstr"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cstsr", ",", "cstr"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", " ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "tab", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cstl", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"ei", ",", "eic"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cstr", " ", "=", " ", 
            RowBox[{"Sort", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"eic", ",", "ei"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ei", ",", "eilst"}], "}"}]}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"cstsl", ",", "cstl"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cstsl", ",", "cstl"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"cstsr", ",", "cstr"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cstsr", ",", "cstr"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"eic", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Left\>\"", "->", 
        RowBox[{"Sort", "[", "cstsl", "]"}]}], ",", 
       RowBox[{"\"\<Right\>\"", "->", 
        RowBox[{"Sort", "[", "cstsr", "]"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9508672375873327`*^9, 3.950867240271019*^9}, {
   3.950968212778452*^9, 3.950968214714918*^9}, 3.950968321165855*^9, {
   3.950968416851626*^9, 3.950968418122857*^9}, 3.9509684612392673`*^9, {
   3.950968516511581*^9, 3.950968543429022*^9}, {3.950968628552796*^9, 
   3.9509688704845333`*^9}, 3.950970913204999*^9, 3.9516922255821657`*^9, 
   3.951692297136137*^9, {3.9516992880325336`*^9, 3.951699288347782*^9}, {
   3.953140177570526*^9, 3.953140187080799*^9}, {3.953382802005273*^9, 
   3.9533828101205683`*^9}, {3.953383051738709*^9, 3.9533830558258047`*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"367427ba-244c-4cdc-8e6e-0783090f0e29"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Quotient", " ", "group"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.950862784031808*^9, 3.950862787863236*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"2ac69d73-2d4f-45e6-8912-ed043398ceee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupQuotient", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ixop", ",", "op", ",", "elixs", ",", "els", ",", "tab", ",", "csts", 
      ",", "cstsx", ",", "mems", ",", "qttab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Index", " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
        RowBox[{"elixs", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
        RowBox[{"els", " ", "=", " ", 
         RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
         RowBox[{"elixs", "[", 
          RowBox[{"op", "[", 
           RowBox[{
            RowBox[{"els", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"els", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tab", " ", "=", " ", 
         RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
         RowBox[{"tab", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Cosets", ":", " ", 
       RowBox[{"left", " ", "and", " ", "right", " ", "ones", " ", "the", " ", 
        RowBox[{"same", "?"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cstsx", " ", "=", " ", 
      RowBox[{"GroupListCosets", "[", 
       RowBox[{"grp", ",", "eilst"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"csts", " ", "=", " ", 
      RowBox[{"cstsx", "[", "\"\<Left\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"csts", " ", "=!=", 
        RowBox[{"cstsx", "[", "\"\<Right\>\"", "]"}]}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"mems", " ", "=", " ", 
      RowBox[{"ListOfListsToIndex", "[", "csts", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qttab", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ixop", "[", 
          RowBox[{
           RowBox[{"First", "[", "cs1", "]"}], ",", 
           RowBox[{"First", "[", "cs2", "]"}]}], "]"}], " ", "/.", " ", 
         "mems"}], ",", 
        RowBox[{"{", 
         RowBox[{"cs1", ",", "csts"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"cs2", ",", "csts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cosets\>\"", "->", "csts"}], ",", 
       RowBox[{"\"\<QuotTable\>\"", "->", "qttab"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950898271816409*^9, 3.950898288503398*^9}, 
   3.9509689765651608`*^9, {3.950969080551997*^9, 3.950969128784708*^9}, {
   3.950969346690536*^9, 3.9509693482985687`*^9}, {3.950970803003735*^9, 
   3.95097080350781*^9}, {3.950988561050685*^9, 3.950988561892344*^9}, {
   3.9509886782949953`*^9, 3.950988679151164*^9}, {3.950988793301218*^9, 
   3.950988830844921*^9}, {3.950989267103125*^9, 3.9509892748681917`*^9}, {
   3.95098930495679*^9, 3.950989377694512*^9}, 3.951692226827319*^9, 
   3.951692298880137*^9, {3.951699294921915*^9, 3.951699295273638*^9}, {
   3.953140203281728*^9, 3.9531402094568577`*^9}, {3.95338294633768*^9, 
   3.9533829510165653`*^9}, {3.953382984224853*^9, 3.953383034121565*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"7d2de423-1133-4715-a8e5-5be6e9c9c4e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Commutators and Commutator Series", "Subsection",
 CellChangeTimes->{{3.950704136938896*^9, 
  3.9507041484053307`*^9}},ExpressionUUID->"a2fee3a0-ff81-4caf-b406-\
a5d2c9672c35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCommutator", "[", 
   RowBox[{"grp_Association", ",", "eilst1_List", ",", "eilst2_List"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "op", ",", "elixs", ",", "els", ",", " ", "invs", ",", "el1", ",", 
      "eliv1", ",", "el2", ",", "eliv2", ",", "tab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"op", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
       RowBox[{"elixs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
       RowBox[{"els", " ", "=", " ", 
        RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Union", " ", "@@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"el1", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", "ei1", "]"}], "]"}]}], ";", " ", 
           RowBox[{"eliv1", " ", "=", " ", 
            RowBox[{"els", "[", 
             RowBox[{"[", 
              RowBox[{"invs", "[", 
               RowBox[{"[", "ei1", "]"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Union", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"el2", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", "ei2", "]"}], "]"}]}], ";", " ", 
               RowBox[{"eliv2", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", 
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "ei2", "]"}], "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"elixs", "[", 
                RowBox[{"op", "[", 
                 RowBox[{
                  RowBox[{"op", "[", 
                   RowBox[{"el1", ",", "el2"}], "]"}], ",", 
                  RowBox[{"op", "[", 
                   RowBox[{"eliv1", ",", "eliv2"}], "]"}]}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"ei2", ",", "eilst2"}], "}"}]}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ei1", ",", "eilst1"}], "}"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"invs", " ", "=", " ", 
        RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Union", " ", "@@", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tab", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"tab", "[", 
                 RowBox[{"[", 
                  RowBox[{"ei1", ",", "ei2"}], "]"}], "]"}], ",", 
                RowBox[{"tab", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"invs", "[", 
                    RowBox[{"[", "ei1", "]"}], "]"}], ",", 
                   RowBox[{"invs", "[", 
                    RowBox[{"[", "ei2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"ei2", ",", "eilst2"}], "}"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ei1", ",", "eilst1"}], "}"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "True", ",", 
      RowBox[{"Return", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.95098763245848*^9, 3.950988099190311*^9}, {
   3.9509882251784277`*^9, 3.950988235610917*^9}, 3.951692228364353*^9, 
   3.951692300789747*^9, {3.951699301926351*^9, 3.951699302371069*^9}, {
   3.953140228161672*^9, 3.953140251826289*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"2c800bd7-07c3-47a5-8968-82724b7623da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCommutator", "[", 
   RowBox[{"grp_Association", ",", "eilst_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"GroupCommutator", "[", 
   RowBox[{"grp", ",", "eilst", ",", "eilst"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950988117013975*^9, 3.9509881327996387`*^9}, {
  3.953140264195854*^9, 3.953140269153676*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"b4d6ab80-47fd-4d41-b60e-7aab4ebf5475"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCommutator", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"GroupCommutator", "[", 
   RowBox[{"grp", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"GroupNum", "[", "grp", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950988117013975*^9, 3.9509881327996387`*^9}, {
   3.9509946691793957`*^9, 3.950994694478561*^9}, 3.953140271996057*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"cf116f08-bb29-44b1-8603-2fcb9c68cda9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupDerivedSeries", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "gixs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gixs", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"GroupNum", "[", "grp", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Most", "[", 
      RowBox[{"FixedPointList", "[", 
       RowBox[{
        RowBox[{"eilst", " ", "|->", " ", 
         RowBox[{"GroupCommutator", "[", 
          RowBox[{"grp", ",", "eilst"}], "]"}]}], ",", "gixs"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.951693210820787*^9, 3.951693260217093*^9}, {
   3.951693305068344*^9, 3.9516933085709476`*^9}, {3.951693610622603*^9, 
   3.9516936789684353`*^9}, {3.951699307009138*^9, 3.951699307394876*^9}, 
   3.953140274052271*^9, {3.953140326004228*^9, 3.953140326403936*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"a13618fe-a32d-48da-b517-f770f1d5bb10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupLowerCentralSeries", "[", "grp_Association", "]"}], " ", ":=",
   "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "gixs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gixs", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"GroupNum", "[", "grp", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Most", "[", 
      RowBox[{"FixedPointList", "[", 
       RowBox[{
        RowBox[{"eilst", " ", "|->", " ", 
         RowBox[{"GroupCommutator", "[", 
          RowBox[{"grp", ",", "gixs", ",", "eilst"}], "]"}]}], ",", "gixs"}], 
       "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.951693592622356*^9, 3.951693601597871*^9}, {
   3.9516937051543293`*^9, 3.951693708496847*^9}, {3.951699314513359*^9, 
   3.951699315363275*^9}, 3.9531402787398453`*^9, {3.9531403182619543`*^9, 
   3.953140318533029*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"87f46d44-2c46-4fb6-a696-9b64a396e17d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupUpperCentralSeries", "[", 
   RowBox[{"grp_Association", ",", 
    RowBox[{"UseTable_", "?", "BooleanQ"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "gixs", ",", "inixs", ",", "cmtbl", ",", "op", ",", "elixs", 
      ",", "els", ",", "invs", ",", "el1", ",", "el2", ",", "eliv1", ",", 
      "eliv2", ",", "tab", ",", "cmtval", ",", "oprow"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"GroupNum", "[", "grp", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gixs", " ", "=", " ", 
      RowBox[{"Range", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inixs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"grp", "[", "\"\<Id\>\"", "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"UseTable", ",", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"cmtbl", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"op", " ", "=", " ", 
             RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
            RowBox[{"elixs", " ", "=", " ", 
             RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
            RowBox[{"els", " ", "=", " ", 
             RowBox[{"Keys", "[", "elixs", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"invs", " ", "=", " ", 
             RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"el1", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", "ei1", "]"}], "]"}]}], ";", " ", 
               RowBox[{"eliv1", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", 
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "ei1", "]"}], "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Union", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"el2", " ", "=", " ", 
                    RowBox[{"els", "[", 
                    RowBox[{"[", "ei2", "]"}], "]"}]}], ";", " ", 
                   RowBox[{"eliv2", " ", "=", " ", 
                    RowBox[{"els", "[", 
                    RowBox[{"[", 
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "ei2", "]"}], "]"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"elixs", "[", 
                    RowBox[{"op", "[", 
                    RowBox[{
                    RowBox[{"op", "[", 
                    RowBox[{"el1", ",", "el2"}], "]"}], ",", 
                    RowBox[{"op", "[", 
                    RowBox[{"eliv1", ",", "eliv2"}], "]"}]}], "]"}], "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"ei2", ",", "n"}], "}"}]}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"ei1", ",", "n"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tab", " ", "=", " ", 
             RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"invs", " ", "=", " ", 
             RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"tab", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"tab", "[", 
                    RowBox[{"[", 
                    RowBox[{"ei1", ",", "ei2"}], "]"}], "]"}], ",", 
                    RowBox[{"tab", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "ei1", "]"}], "]"}], ",", 
                    RowBox[{"invs", "[", 
                    RowBox[{"[", "ei2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
                   "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"ei2", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"ei1", ",", "n"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "True", ",", 
           RowBox[{"Return", "[", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Most", "[", 
         RowBox[{"FixedPointList", "[", 
          RowBox[{
           RowBox[{"eilst", " ", "|->", "  ", 
            RowBox[{"GroupListFillOut", "[", 
             RowBox[{"grp", ",", 
              RowBox[{"Select", "[", 
               RowBox[{"gixs", ",", 
                RowBox[{"ix", " ", "|->", 
                 RowBox[{"SubsetQ", "[", 
                  RowBox[{"eilst", ",", 
                   RowBox[{"cmtbl", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
             "]"}]}], ",", " ", "inixs"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"grp", ",", "\"\<Op\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"op", " ", "=", " ", 
            RowBox[{"grp", "[", "\"\<Op\>\"", "]"}]}], ";", "  ", 
           RowBox[{"elixs", " ", "=", " ", 
            RowBox[{"grp", "[", "\"\<Elixs\>\"", "]"}]}], ";", " ", 
           RowBox[{"els", " ", "=", " ", 
            RowBox[{"Keys", "[", "elixs", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"invs", " ", "=", " ", 
            RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cmtval", "[", 
             RowBox[{"i1_", ",", "i2_"}], "]"}], " ", ":=", " ", 
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"el1", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", "i1", "]"}], "]"}]}], ";", " ", 
               RowBox[{"eliv1", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", 
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "i1", "]"}], "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"el2", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", "i2", "]"}], "]"}]}], ";", " ", 
               RowBox[{"eliv2", " ", "=", " ", 
                RowBox[{"els", "[", 
                 RowBox[{"[", 
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "i2", "]"}], "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"elixs", "[", 
                RowBox[{"op", "[", 
                 RowBox[{
                  RowBox[{"op", "[", 
                   RowBox[{"el1", ",", "el2"}], "]"}], ",", 
                  RowBox[{"op", "[", 
                   RowBox[{"eliv1", ",", "eliv2"}], "]"}]}], "]"}], "]"}]}]}],
              "\[IndentingNewLine]", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"grp", ",", "\"\<Table\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tab", " ", "=", " ", 
            RowBox[{"grp", "[", "\"\<Table\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"invs", " ", "=", " ", 
            RowBox[{"grp", "[", "\"\<Invs\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cmtval", "[", 
             RowBox[{"i1_", ",", "i2_"}], "]"}], " ", ":=", " ", 
            RowBox[{"tab", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "i2"}], "]"}], "]"}], ",", 
               RowBox[{"tab", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "i1", "]"}], "]"}], ",", 
                  RowBox[{"invs", "[", 
                   RowBox[{"[", "i2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
             "]"}]}]}], ",", "\[IndentingNewLine]", "True", ",", 
          RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"oprow", "[", "i_", "]"}], " ", ":=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"cmtval", "[", 
             RowBox[{"i", ",", "j"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Most", "[", 
         RowBox[{"FixedPointList", "[", 
          RowBox[{
           RowBox[{"eilst", " ", "|->", "  ", 
            RowBox[{"GroupListFillOut", "[", 
             RowBox[{"grp", ",", 
              RowBox[{"Select", "[", 
               RowBox[{"gixs", ",", 
                RowBox[{"ix", " ", "|->", 
                 RowBox[{"SubsetQ", "[", 
                  RowBox[{"eilst", ",", 
                   RowBox[{"oprow", "[", "ix", "]"}]}], "]"}]}]}], "]"}]}], 
             "]"}]}], ",", " ", "inixs"}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.951693784595661*^9, 3.951693795795679*^9}, {
   3.951693832146405*^9, 3.951693968725482*^9}, {3.9516940281423597`*^9, 
   3.9516941068398657`*^9}, {3.9516941640331306`*^9, 3.951694183681189*^9}, {
   3.951694283217355*^9, 3.951694298306937*^9}, {3.9516943359401093`*^9, 
   3.9516943456199827`*^9}, {3.9516944573107758`*^9, 
   3.9516944846316032`*^9}, {3.951694528207768*^9, 3.9516945768092337`*^9}, {
   3.95169470630809*^9, 3.9516950528544292`*^9}, {3.951695237800301*^9, 
   3.951695238007028*^9}, 3.951695288609798*^9, {3.9516953336248407`*^9, 
   3.951695337715201*^9}, {3.951695461273325*^9, 3.9516954948051987`*^9}, {
   3.951695572288834*^9, 3.9516959579504557`*^9}, {3.9516959992747793`*^9, 
   3.951696017880817*^9}, {3.951699320042527*^9, 3.951699320365243*^9}, {
   3.952169437069169*^9, 3.95216950889894*^9}, 3.9531402842315617`*^9, {
   3.9531403148736353`*^9, 3.9531403151601458`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"fb10eea5-a33c-4e86-bd44-9047c9d5d06d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Construct", " ", "composition", " ", "series"}], " ", "-", " ", 
    "cosets"}], ",", " ", 
   RowBox[{"quotient", " ", "groups"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9516961621879807`*^9, 3.951696177108788*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"3ca6ca0c-50c0-4b91-b0c3-9eb11583b09b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCompSerStep", "[", "grp_Association", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sgixs", ",", "quot", ",", "csts", ",", "qttab", ",", "cycs", ",", 
      "sbgrp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sgixs", " ", "=", " ", 
      RowBox[{"GroupCommutator", "[", "grp", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"quot", " ", "=", " ", 
      RowBox[{"GroupQuotient", "[", 
       RowBox[{"grp", ",", "sgixs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"csts", " ", "=", " ", 
      RowBox[{"quot", "[", "\"\<Cosets\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qttab", " ", "=", " ", 
      RowBox[{"quot", "[", "\"\<QuotTable\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cycs", " ", "=", " ", 
      RowBox[{"GroupAbelianToCycles", "[", 
       RowBox[{"MakeGroupFromTable", "[", "qttab", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sbgrp", " ", "=", " ", 
      RowBox[{"MakeSubgroup", "[", 
       RowBox[{"grp", ",", "sgixs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<SbgpIxs\>\"", "->", "sgixs"}], ",", 
       RowBox[{"\"\<Cosets\>\"", "->", "csts"}], ",", 
       RowBox[{"\"\<QuotCycles\>\"", "->", "cycs"}], ",", 
       RowBox[{"\"\<Subgroup\>\"", "->", "sbgrp"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.95169750805613*^9, 3.951697549039596*^9}, {
  3.9516975800250187`*^9, 3.951697597311384*^9}, {3.951697672116522*^9, 
  3.951697729138791*^9}, {3.9516978085798473`*^9, 3.951697822164901*^9}, {
  3.951697923132263*^9, 3.9516979296771803`*^9}, {3.951698048355028*^9, 
  3.9516980882273903`*^9}, {3.9516993256799517`*^9, 3.951699326042395*^9}, {
  3.953140292388423*^9, 3.9531403086640167`*^9}, {3.953383480046493*^9, 
  3.953383514863599*^9}, {3.9533835662524233`*^9, 3.9533836350936117`*^9}, {
  3.953383701503728*^9, 3.9533837028448277`*^9}, {3.95338408457714*^9, 
  3.9533840859518843`*^9}, {3.953384190907507*^9, 3.953384194162092*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"edd0361d-ab2a-4d52-ac3e-b40e4d4b19e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCompositionSeries", "[", "grp_Association", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cserlist", "=", 
       RowBox[{"{", "}"}]}], ",", "origgrp", ",", "step", ",", "sgixs", ",", 
      "csts", ",", "cycs", ",", "sbgrp"}], "}"}], " ", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"origgrp", " ", "=", " ", "grp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"step", " ", "=", " ", 
         RowBox[{"GroupCompSerStep", "[", "origgrp", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sgixs", " ", "=", " ", 
         RowBox[{"step", "[", "\"\<SbgpIxs\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"csts", " ", "=", " ", 
         RowBox[{"step", "[", "\"\<Cosets\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cycs", " ", "=", " ", 
         RowBox[{"step", "[", "\"\<QuotCycles\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sbgrp", " ", "=", " ", 
         RowBox[{"step", "[", "\"\<Subgroup\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"cserlist", ",", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Grp\>\"", "->", "origgrp"}], ",", 
            RowBox[{"\"\<SbgpIxs\>\"", "->", "sgixs"}], ",", 
            RowBox[{"\"\<Cosets\>\"", "->", "csts"}], ",", 
            RowBox[{"\"\<QuotCycles\>\"", "->", "cycs"}]}], "|>"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"origgrp", " ", "=", " ", "sbgrp"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "sgixs", "]"}], "==", "1"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "csts", "]"}], "==", "1"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "cserlist"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.951697228673355*^9, 3.951697393845038*^9}, {
   3.951697467206339*^9, 3.951697469038693*^9}, {3.951697505207245*^9, 
   3.951697506063192*^9}, 3.951697978289514*^9, {3.9516980193364487`*^9, 
   3.951698038440279*^9}, {3.951698098171124*^9, 3.951698353652308*^9}, {
   3.951698496007794*^9, 3.951698498694613*^9}, {3.951698540396771*^9, 
   3.951698540511438*^9}, {3.951698632730528*^9, 3.951698635922768*^9}, {
   3.951698669930849*^9, 3.95169873472274*^9}, {3.9516987693847313`*^9, 
   3.9516987787816257`*^9}, {3.9516993284110928`*^9, 3.951699328770557*^9}, {
   3.953140296378275*^9, 3.9531403039068327`*^9}, {3.953383658486041*^9, 
   3.953383668841136*^9}, {3.953384222972188*^9, 3.953384266516469*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"2a171175-6a26-4342-b02f-2439b0ea12d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroupCompSerSummary", "[", "grp_Association", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"smstep", " ", "|->", " ", 
     RowBox[{"Last", " ", "/@", " ", 
      RowBox[{"smstep", "[", "\"\<QuotCycles\>\"", "]"}]}]}], ")"}], " ", "/@",
    " ", 
   RowBox[{"GroupCompositionSeries", "[", "grp", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.95169884737545*^9, 3.9516989097513*^9}, 
   3.953140299706893*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"3bf1fc49-7f50-439c-83dd-5d98776fb9fa"]
}, Closed]]
}, Closed]]
},
WindowSize->{736, 810},
WindowMargins->{{Automatic, 24}, {Automatic, 46}},
ShowSelection->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6a78d828-9d34-47c5-80d2-5a77791f5b20"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 157, 3, 66, "Section",ExpressionUUID->"c6037d36-58fd-4e41-9516-232223381e4b"],
Cell[727, 27, 15799, 236, 6295, "Text",ExpressionUUID->"019586b4-c842-4cc6-954d-e2007c591201"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16563, 268, 256, 4, 66, "Section",ExpressionUUID->"389c937a-eafe-417a-ac80-e32163c1f7f2"],
Cell[16822, 274, 351, 7, 29, "Input",ExpressionUUID->"55621e94-33a8-4e75-9100-3fd35648c6bb"],
Cell[17176, 283, 347, 7, 29, "Input",ExpressionUUID->"8bf9a791-2fef-4043-96b8-555e81d07828"]
}, Closed]],
Cell[CellGroupData[{
Cell[17560, 295, 222, 4, 52, "Section",ExpressionUUID->"dd447847-c20f-472b-ba12-2de1198fadd3"],
Cell[17785, 301, 382, 8, 29, "Input",ExpressionUUID->"f23981ff-6d5f-4fe4-bc24-0d8e7b3355cd"],
Cell[18170, 311, 373, 8, 29, "Input",ExpressionUUID->"e3f27b46-78d5-4b06-b817-987cbaf630ab"],
Cell[18546, 321, 307, 6, 29, "Input",ExpressionUUID->"e55cb7ae-266c-423c-a6c3-ff9f021c6927"],
Cell[18856, 329, 990, 25, 111, "Input",ExpressionUUID->"fbd24da9-e767-46f0-afa6-e1281199275f"],
Cell[19849, 356, 285, 5, 29, "Input",ExpressionUUID->"fa963381-9569-4b8c-86fa-aa2b237a932d"]
}, Closed]],
Cell[CellGroupData[{
Cell[20171, 366, 264, 4, 52, "Section",ExpressionUUID->"ee3502a0-b29d-4be7-88c0-e30533e079c6"],
Cell[CellGroupData[{
Cell[20460, 374, 162, 3, 53, "Subsection",ExpressionUUID->"7ce6fef8-3928-4033-b0b9-042caca79d54"],
Cell[20625, 379, 322, 6, 29, "Input",ExpressionUUID->"93f58feb-460c-4248-aff5-be0645c0d4c7"],
Cell[20950, 387, 508, 10, 29, "Input",ExpressionUUID->"fcf6e7b9-4213-46da-b4ed-276e8ea2350f"],
Cell[21461, 399, 399, 8, 29, "Input",ExpressionUUID->"3eff4be4-7325-4bfe-8bcf-bb6d0d13a9ef"],
Cell[21863, 409, 461, 8, 29, "Input",ExpressionUUID->"cc3d710f-e1ea-4408-8264-0fdf80178a51"],
Cell[22327, 419, 472, 9, 29, "Input",ExpressionUUID->"3baf0edb-c69e-495d-a181-541422d793a9"]
}, Closed]],
Cell[CellGroupData[{
Cell[22836, 433, 96, 0, 37, "Subsection",ExpressionUUID->"722948a6-7d90-4c55-8817-6c3dff0bd3bc"],
Cell[22935, 435, 1471, 39, 131, "Input",ExpressionUUID->"868dc8f1-5e7e-4640-bb3b-de31620d0e70"],
Cell[24409, 476, 537, 13, 29, "Input",ExpressionUUID->"c9b02ef6-9312-4a96-9ee9-e2dd07b77b12"]
}, Closed]],
Cell[CellGroupData[{
Cell[24983, 494, 235, 4, 37, "Subsection",ExpressionUUID->"9b59f3c6-88be-46af-965c-799409304e42"],
Cell[25221, 500, 961, 25, 70, "Input",ExpressionUUID->"93664b0e-47f7-40be-b49d-8d1b579c535d"],
Cell[26185, 527, 3149, 74, 192, "Input",ExpressionUUID->"22512e7c-44d3-41fa-8afd-d38154781d84"],
Cell[29337, 603, 2939, 71, 192, "Input",ExpressionUUID->"3223d014-b7ea-4a51-b770-c5bbce434c36"],
Cell[32279, 676, 3192, 75, 192, "Input",ExpressionUUID->"a947078c-aa68-4c9d-a64f-fb6b76b4332f"],
Cell[35474, 753, 3001, 72, 192, "Input",ExpressionUUID->"db759fac-3deb-4a93-9014-333030cf9b90"],
Cell[38478, 827, 2438, 59, 233, "Input",ExpressionUUID->"22c8ba9b-6420-41ec-bc1c-be3620c5a7df"],
Cell[40919, 888, 2217, 54, 233, "Input",ExpressionUUID->"cf4ae128-b56d-44cc-bcb4-baf7d8c70541"]
}, Closed]],
Cell[CellGroupData[{
Cell[43173, 947, 99, 0, 37, "Subsection",ExpressionUUID->"95cad3f3-612f-4474-969b-f9bb7a3a5609"],
Cell[43275, 949, 2380, 59, 213, "Input",ExpressionUUID->"f50dce0e-8e55-4cde-ac8c-639cd1f6d837"],
Cell[45658, 1010, 880, 23, 49, "Input",ExpressionUUID->"0e097bea-c89d-4557-b37a-4d0c1490d607"],
Cell[46541, 1035, 439, 9, 29, "Input",ExpressionUUID->"e0873397-3f9b-4434-a27a-cd54815124c8"],
Cell[46983, 1046, 1036, 28, 70, "Input",ExpressionUUID->"268f9415-ed8e-47e7-a13e-22d5c5b4e736"],
Cell[48022, 1076, 1509, 40, 111, "Input",ExpressionUUID->"be5e322a-b1b6-4bf6-b0f6-015f8259c220"],
Cell[49534, 1118, 1138, 30, 90, "Input",ExpressionUUID->"cf9721d0-a107-4d9f-99dd-8b0c9f79fe0e"],
Cell[50675, 1150, 2019, 52, 151, "Input",ExpressionUUID->"cef85466-154a-47f0-893a-498ff172d8f7"],
Cell[52697, 1204, 1842, 47, 131, "Input",ExpressionUUID->"8aee95ed-9f03-4e0d-a235-7ace9d0afb33"],
Cell[54542, 1253, 1377, 36, 131, "Input",ExpressionUUID->"99de8222-a4ed-4f76-b646-775f970e494c"],
Cell[55922, 1291, 2535, 67, 172, "Input",ExpressionUUID->"9b27ab98-5b6c-4008-8bfa-ea339311ced5"],
Cell[58460, 1360, 1859, 51, 131, "Input",ExpressionUUID->"7242761e-8813-467c-985e-eaf0a969e765"]
}, Closed]],
Cell[CellGroupData[{
Cell[60356, 1416, 172, 3, 37, "Subsection",ExpressionUUID->"dcc1255e-07de-489e-ae47-97e8d4ac8493"],
Cell[60531, 1421, 300, 7, 29, "Input",ExpressionUUID->"9670e376-3ec2-480c-93f0-4c1ca18bf3fb"],
Cell[60834, 1430, 315, 7, 29, "Input",ExpressionUUID->"83da9568-489b-4d1e-b36b-def424e780ed"],
Cell[61152, 1439, 6615, 148, 580, "Input",ExpressionUUID->"058d48dc-7fb5-4d76-8478-f3ed0d67886d"],
Cell[67770, 1589, 918, 20, 90, "Input",ExpressionUUID->"50ee6648-1958-4471-9d63-a9c36be9e37c"],
Cell[68691, 1611, 5434, 126, 478, "Input",ExpressionUUID->"412b9c44-c88d-4f76-8921-cd4c31c6f781"],
Cell[74128, 1739, 292, 7, 29, "Input",ExpressionUUID->"8846db66-4c74-4f7d-9912-bcfba28f5859"],
Cell[74423, 1748, 4446, 100, 335, "Input",ExpressionUUID->"c0575c5f-89d3-4a33-85b0-31d1405f80f8"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[78918, 1854, 261, 4, 52, "Section",ExpressionUUID->"74a2a6a4-e1c3-4053-9124-e3e4c79b2d87"],
Cell[CellGroupData[{
Cell[79204, 1862, 152, 3, 53, "Subsection",ExpressionUUID->"11d8802d-9c50-4599-9f34-f8afdd101c98"],
Cell[79359, 1867, 458, 10, 29, "Input",ExpressionUUID->"0cc92748-0f08-402d-b4c5-b9a1f0437d51"],
Cell[79820, 1879, 1557, 36, 192, "Input",ExpressionUUID->"c2dc977d-2738-4010-b71c-488740bfeefa"],
Cell[81380, 1917, 275, 6, 29, "Input",ExpressionUUID->"5144e918-e998-4374-b0ce-55e4a322ecfa"],
Cell[81658, 1925, 1731, 39, 192, "Input",ExpressionUUID->"2f834b02-54d3-44da-9a89-1b047c35a9b4"],
Cell[83392, 1966, 277, 6, 29, "Input",ExpressionUUID->"6c7f8a86-589b-4c90-b248-56e815f35239"],
Cell[83672, 1974, 1875, 44, 172, "Input",ExpressionUUID->"91b55a4f-3c96-483e-816c-88a55f78ba99"],
Cell[85550, 2020, 275, 6, 29, "Input",ExpressionUUID->"5ece7eda-1f14-4408-87f7-388acf4e6c28"],
Cell[85828, 2028, 3493, 77, 294, "Input",ExpressionUUID->"a6fb200f-a303-4acc-9b38-2c72e17c93a5"],
Cell[89324, 2107, 4994, 117, 499, "Input",ExpressionUUID->"8eaa400c-5b11-4be9-a6fb-978e787d899a"]
}, Closed]],
Cell[CellGroupData[{
Cell[94355, 2229, 234, 4, 37, "Subsection",ExpressionUUID->"7927fcb7-f6ee-469e-af1a-e570b84e4074"],
Cell[94592, 2235, 447, 10, 29, "Input",ExpressionUUID->"a1e205cb-b47e-4192-9d0b-ed48395f7788"],
Cell[95042, 2247, 3125, 74, 254, "Input",ExpressionUUID->"36799694-09b3-4c42-9777-d65803d097e3"],
Cell[98170, 2323, 387, 8, 29, "Input",ExpressionUUID->"b9e737ce-3098-436c-b78d-88dd6fa6d856"],
Cell[98560, 2333, 3334, 81, 233, "Input",ExpressionUUID->"0522dd5d-17a1-40bf-89c5-8e239d793618"],
Cell[101897, 2416, 261, 5, 29, "Input",ExpressionUUID->"a52c5667-85bf-48ce-b157-ac84e733cf86"],
Cell[102161, 2423, 450, 10, 29, "Input",ExpressionUUID->"ad6305a2-3b35-45c3-be6d-b1ebf3a21104"],
Cell[102614, 2435, 365, 9, 29, "Input",ExpressionUUID->"1f8f296f-b8b2-4ccb-8215-99aa4b66010d"],
Cell[102982, 2446, 3502, 84, 254, "Input",ExpressionUUID->"337b0e5c-1a2e-407c-8b2b-7735a0a2a841"],
Cell[106487, 2532, 412, 9, 29, "Input",ExpressionUUID->"df332b41-a94a-4a33-9b41-dc48c0f7cea0"],
Cell[106902, 2543, 4079, 97, 274, "Input",ExpressionUUID->"69d3d3cf-62d0-4368-8dfb-ddf9a277c2b1"],
Cell[110984, 2642, 311, 6, 29, "Input",ExpressionUUID->"9ea78e05-f937-419e-8ecb-c232f3ab03d9"],
Cell[111298, 2650, 4945, 117, 356, "Input",ExpressionUUID->"439024ad-f0da-47c3-b208-07d4c7158754"],
Cell[116246, 2769, 249, 5, 29, "Input",ExpressionUUID->"075bda10-23eb-4da8-9b6c-d01100ed7cf5"],
Cell[116498, 2776, 6012, 132, 539, "Input",ExpressionUUID->"0aeb982c-99aa-4917-b28a-61f37bce369a"],
Cell[122513, 2910, 268, 6, 29, "Input",ExpressionUUID->"ab11cde4-2bcf-4a52-aae8-30b250b60731"],
Cell[122784, 2918, 5365, 124, 478, "Input",ExpressionUUID->"fc386475-6488-4837-80ac-86d2e1b265a3"],
Cell[128152, 3044, 485, 12, 29, "Input",ExpressionUUID->"4e6c136b-b329-4d18-beab-c4daaf544694"],
Cell[128640, 3058, 2047, 45, 151, "Input",ExpressionUUID->"c6448691-4b83-494d-80ba-316d656bfad9"],
Cell[130690, 3105, 295, 6, 29, "Input",ExpressionUUID->"561974d6-9c7a-4d19-b6d5-56be294ca315"],
Cell[130988, 3113, 4025, 91, 315, "Input",ExpressionUUID->"5e11eac5-8f4f-45fc-84a1-9b044939ef9f"]
}, Closed]],
Cell[CellGroupData[{
Cell[135050, 3209, 176, 3, 37, "Subsection",ExpressionUUID->"c299436f-0ef0-473c-bc99-188bd916b89d"],
Cell[135229, 3214, 278, 6, 29, "Input",ExpressionUUID->"68cb3486-fedb-483e-b892-597b93c837df"],
Cell[135510, 3222, 3023, 75, 213, "Input",ExpressionUUID->"fb7d5405-2d9b-43a2-bc8e-67c05630f132"],
Cell[138536, 3299, 302, 7, 29, "Input",ExpressionUUID->"ef26e318-7755-4877-8ea3-94a8ba376712"],
Cell[138841, 3308, 3543, 85, 254, "Input",ExpressionUUID->"2fd1d3c0-c2f3-42e2-9d83-232c6c89dc31"],
Cell[142387, 3395, 253, 5, 29, "Input",ExpressionUUID->"3f6ff41d-ad95-4898-a001-7519392ba83e"],
Cell[142643, 3402, 3379, 82, 213, "Input",ExpressionUUID->"35f0bb7e-736b-4ed2-96a2-150c0b6753fd"],
Cell[146025, 3486, 354, 8, 29, "Input",ExpressionUUID->"2b849ea7-e287-4860-a4de-2cd09be4bbd2"],
Cell[146382, 3496, 4711, 111, 335, "Input",ExpressionUUID->"8a4695be-c2cb-4f68-8737-c0549c618433"]
}, Closed]],
Cell[CellGroupData[{
Cell[151130, 3612, 235, 4, 37, "Subsection",ExpressionUUID->"5db93504-8a35-4a66-a5a0-d096c1c0cf13"],
Cell[151368, 3618, 346, 7, 29, "Input",ExpressionUUID->"6b283088-e934-4092-ab2d-f3dce1c0a927"],
Cell[151717, 3627, 3292, 80, 335, "Input",ExpressionUUID->"360b8c0b-80a6-454c-a3c5-c94d63fbdab3"],
Cell[155012, 3709, 277, 6, 29, "Input",ExpressionUUID->"5962fcd1-6dba-4877-8920-2efb22734a20"],
Cell[155292, 3717, 2239, 52, 192, "Input",ExpressionUUID->"b89c79b8-7a4b-4673-adb9-9aca77a45fe3"],
Cell[157534, 3771, 489, 11, 29, "Input",ExpressionUUID->"a8e121c6-5620-49b1-a652-c7502321db37"],
Cell[158026, 3784, 4237, 94, 397, "Input",ExpressionUUID->"0725d740-c0f6-4626-9ea0-12a333088b8a"],
Cell[162266, 3880, 509, 11, 29, "Input",ExpressionUUID->"d386b0e9-f0c9-419e-9d10-f485f0715f46"],
Cell[162778, 3893, 727, 15, 49, "Input",ExpressionUUID->"23074db3-4a9b-4734-9416-0a0227a47b26"],
Cell[163508, 3910, 217, 4, 29, "Input",ExpressionUUID->"489e612e-50df-47d1-af4e-721850962afc"],
Cell[163728, 3916, 6286, 148, 417, "Input",ExpressionUUID->"367427ba-244c-4cdc-8e6e-0783090f0e29"],
Cell[170017, 4066, 244, 5, 29, "Input",ExpressionUUID->"2ac69d73-2d4f-45e6-8912-ed043398ceee"],
Cell[170264, 4073, 4334, 99, 376, "Input",ExpressionUUID->"7d2de423-1133-4715-a8e5-5be6e9c9c4e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[174635, 4177, 183, 3, 37, "Subsection",ExpressionUUID->"a2fee3a0-ff81-4caf-b406-a5d2c9672c35"],
Cell[174821, 4182, 4556, 110, 397, "Input",ExpressionUUID->"2c800bd7-07c3-47a5-8968-82724b7623da"],
Cell[179380, 4294, 435, 9, 49, "Input",ExpressionUUID->"b4d6ab80-47fd-4d41-b60e-7aab4ebf5475"],
Cell[179818, 4305, 483, 10, 29, "Input",ExpressionUUID->"cf116f08-bb29-44b1-8603-2fcb9c68cda9"],
Cell[180304, 4317, 1040, 23, 90, "Input",ExpressionUUID->"a13618fe-a32d-48da-b517-f770f1d5bb10"],
Cell[181347, 4342, 1019, 24, 90, "Input",ExpressionUUID->"87f46d44-2c46-4fb6-a696-9b64a396e17d"],
Cell[182369, 4368, 11174, 249, 948, "Input",ExpressionUUID->"fb10eea5-a33c-4e86-bd44-9047c9d5d06d"],
Cell[193546, 4619, 378, 9, 29, "Input",ExpressionUUID->"3ca6ca0c-50c0-4b91-b0c3-9eb11583b09b"],
Cell[193927, 4630, 2237, 46, 213, "Input",ExpressionUUID->"edd0361d-ab2a-4d52-ac3e-b40e4d4b19e4"],
Cell[196167, 4678, 3092, 66, 356, "Input",ExpressionUUID->"2a171175-6a26-4342-b02f-2439b0ea12d0"],
Cell[199262, 4746, 545, 14, 49, "Input",ExpressionUUID->"3bf1fc49-7f50-439c-83dd-5d98776fb9fa"]
}, Closed]]
}, Closed]]
}
]
*)

