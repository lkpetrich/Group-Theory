(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   2852438,      51679]
NotebookOptionsPosition[   2823935,      51266]
NotebookOutlinePosition[   2824348,      51283]
CellTagsIndexPosition[   2824305,      51280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Point and Space Groups", "Chapter",
 CellChangeTimes->{{3.9482065169491863`*^9, 
  3.948206519854813*^9}},ExpressionUUID->"aa79dcd9-682e-4381-aea5-\
f7752404ddad"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5694180443272057`*^9, 
  3.569418046162011*^9}},ExpressionUUID->"c22cc96f-e5c4-44cb-ae25-\
02bd82464cc5"],

Cell[TextData[{
 StyleBox["Demos of point and space groups",
  FontWeight->"Bold"],
 "\n\nA point group is a group of rotations and reflections around some \
point. A space group is a point group with offsets (shifts, translations) \
added. These offsets can be continuous or discrete, and in the latter case, \
they are  combinations of integer multiples of some unit offsets.\n\n",
 StyleBox["What kinds",
  FontWeight->"Bold"],
 "\n(# space dimensions) + (# lattice dimensions):\n-- (how many of them):\n\
1+0 - 1D point groups\n-- 2\n1+1 - Line groups\n-- 2\n2+0 - 2D point groups: \
rosette groups\n-- 2 infinite families\n2+1 - 2D line groups: Frieze groups\n\
-- 7\n2+2 - Wallpaper groups\n-- 17\n3+0 - 3D point groups: axial and \
quasi-spherical groups\n-- Axial: 7 infinite families, quasi-spherical: 7\n\
3+1 - 3D line groups: cylinder groups\n-- 13 infinite families\n\n",
 StyleBox["Main functions",
  FontWeight->"Bold"],
 ":  ShowGroup[] and DisplayAll[]\nThe first argument in both functions is {# \
space dimensions, # lattice dimensions}.\n\nShowGroup[]\ntype: group type \
with optional space + extension for display variant\nnumber(s) of repeats, \
linear and/or circular\ndisplay type\n\nThe display type: \
\[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote]\nIf \
\[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote], then that is the last \
argument\nIf \[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote], then \
further arguments:\n(for 3D): ntess (tessellation (subdivision) factor)\n\
colors (may be more than one arg)\n\nDisplayAll[]\nnumber(s) of repeats, \
linear and/or circular\n(for 3D): ntess (tessellation number)\ncolors (may be \
more than one arg), like for ShowGroup[]"
}], "Text",
 CellChangeTimes->{{3.5694180690044518`*^9, 3.569418132701679*^9}, {
   3.569418500873074*^9, 3.569418510910727*^9}, {3.5697831851195183`*^9, 
   3.5697832473638268`*^9}, {3.569833793013569*^9, 3.569833803904284*^9}, {
   3.569834015541317*^9, 3.569834017210348*^9}, {3.5698340475333967`*^9, 
   3.56983406581116*^9}, {3.569834218289007*^9, 3.569834301845298*^9}, {
   3.569834332280983*^9, 3.569834382434334*^9}, {3.5698344311926537`*^9, 
   3.56983447560699*^9}, {3.569834539905148*^9, 3.569834665096558*^9}, {
   3.569836526303658*^9, 3.5698366479323273`*^9}, {3.569836684476259*^9, 
   3.569836685116151*^9}, {3.5698367331185503`*^9, 3.5698368150613747`*^9}, {
   3.569836917346863*^9, 3.56983706488*^9}, {3.56983735081605*^9, 
   3.5698374456595497`*^9}, {3.569868048739955*^9, 3.569868049202158*^9}, {
   3.5698961408438187`*^9, 3.569896141527803*^9}, {3.570019298666769*^9, 
   3.570019350837037*^9}, 3.570026913126333*^9, 3.570031901291811*^9, {
   3.570032353180645*^9, 3.5700323579208717`*^9}, {3.5700360698109493`*^9, 
   3.570036096550667*^9}, {3.570036139138179*^9, 3.570036175231434*^9}, {
   3.5700362053990793`*^9, 3.570036302056816*^9}, {3.5700363764207973`*^9, 
   3.570036379705574*^9}, {3.57003644728953*^9, 3.570036478330551*^9}, {
   3.5700369730557823`*^9, 3.57003701398402*^9}, {3.5700725736345663`*^9, 
   3.5700727631989393`*^9}, {3.570072793850258*^9, 3.5700727957591057`*^9}, {
   3.5700728506263323`*^9, 3.570072851247414*^9}, {3.5978711141249647`*^9, 
   3.5978711186749363`*^9}, {3.9470118209469957`*^9, 
   3.9470119238212957`*^9}, {3.947012251368637*^9, 3.947012275153963*^9}, {
   3.9470131361555147`*^9, 3.947013159819036*^9}, {3.947013208581099*^9, 
   3.947013248991975*^9}, 3.947013369018036*^9, {3.947038802322047*^9, 
   3.94703884203316*^9}, {3.94703891033184*^9, 3.947038928835919*^9}, {
   3.9470397651536417`*^9, 3.947039990730506*^9}, {3.947040043751461*^9, 
   3.947040153487933*^9}, {3.947040185133716*^9, 3.9470404340793324`*^9}, {
   3.947040487777286*^9, 3.94704054706656*^9}, {3.94704058222689*^9, 
   3.9470405854616203`*^9}, {3.9470406737472353`*^9, 3.94704090058815*^9}, {
   3.947041045789248*^9, 3.947041055179529*^9}, {3.9473553299973717`*^9, 
   3.947355331201128*^9}, {3.947491721488842*^9, 3.947491742581491*^9}, {
   3.947491774590666*^9, 3.947491993699355*^9}, {3.9474920334768877`*^9, 
   3.9474921146867437`*^9}, 3.948203533294215*^9, {3.948204132893008*^9, 
   3.948204138060503*^9}, {3.948204178517866*^9, 3.948204235022375*^9}, {
   3.948204265592308*^9, 3.948204271535871*^9}, {3.948204587605914*^9, 
   3.948204647503476*^9}, {3.948204679919169*^9, 3.948204763193532*^9}, {
   3.948204806794456*^9, 3.9482048309950953`*^9}, {3.948205467039157*^9, 
   3.948205483711122*^9}, {3.948205836890102*^9, 3.948205867754352*^9}, {
   3.948205964124836*^9, 3.948205990565653*^9}, {3.948206030375008*^9, 
   3.948206165810685*^9}, {3.9482062003326807`*^9, 3.9482062494376698`*^9}, {
   3.948206440179841*^9, 3.948206484005868*^9}, {3.949091594973743*^9, 
   3.949091682402039*^9}},ExpressionUUID->"cd457a11-2513-4ff0-b757-\
0dac4865b542"],

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
   "\"\<Rotation Reflection - Matrices Groups Polytopes.nb\>\""}], 
  "]"}]], "Input",
 CellLabel->
  "In[408]:=",ExpressionUUID->"582970e1-a070-4ad2-9d63-0ee00e1be91d"],

Cell[CellGroupData[{

Cell["Lists of Groups", "Subsection",
 CellChangeTimes->{{3.9482035152607718`*^9, 
  3.948203517588665*^9}},ExpressionUUID->"c797c96f-75d6-4276-aa45-\
27228eee7267"],

Cell[TextData[{
 StyleBox["Line groups (1D) - rosette groups (2D point ones)",
  FontWeight->"Bold"],
 "\nParameters: n = number of repeats around the origin\n(Line group) - (1D \
point group) - (Rosette group)\np - C - C(n)\npm -  D - D(n)\nLine groups: \
Hermann-Mauguin\nPoint groups: Schoenflies-like\n\nShowGroup[{1,1}, type, \
repeats, \[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote]]\nrepeats: \
number of linear repeats\nShowGroup[{1,1}, type, repeats, \
\[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote], colors]\ncolors: for \
the ends of the line\nDisplayAll[{1,1}, repeats, thick, colors]\nthick: line \
thickness\n\nShowGroup[{2,0}, type, n, \[OpenCurlyDoubleQuote]Flags\
\[CloseCurlyDoubleQuote]]\nn: number of repeats in a circle\nShowGroup[{2,0}, \
type, n, \[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote], ntess, \
colors]\ncolors are are for {center, edge 1, edge 2} where the last two are \
repeated on the edge\nDisplayAll[{2,0}, n, ntess, colors]\n\n",
 StyleBox["Frieze groups (2D line ones) - axial groups (3d point ones)",
  FontWeight->"Bold"],
 "\nParameters: n = number of repeats around the axis\n(Frieze group) - (2D \
point group) - (Symbol): (Axial group) - (variants in the demos)\np1 - C1 - \
C: C(n)\np11m - D1 h - Ch:  C(n,h)\np11g - D1 h - Cs: S(2n)  - h, v\np1m1 - \
D1 v  - Cv:: C(n,v)\np2 - C2 - D: D(n)  - h, v\np2mm - D2 - Dh: D(n,h)\np2mg \
- D2 - Dd: D(n,d) - h, v\nFrieze groups: Hermann-Mauguin\nPoint groups: \
Schoenflies and Schoenflies-like\n\nShowGroup[{2,1}, type, repeats, \
\[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote]]\nrepeats: number of \
linear repeats\nShowGroup[{2,1}, type, repeats, \[OpenCurlyDoubleQuote]Colors\
\[CloseCurlyDoubleQuote], colors]\ncolors: for each rectangle\n\
DisplayAll[{2,1}, repeats, colors]\n\nShowGroup[{3,0}, type, n, \
\[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote]]\nn: number of repeats \
in a circle\nShowGroup[{3,0}, type, n, \[OpenCurlyDoubleQuote]Colors\
\[CloseCurlyDoubleQuote], ntess, colorsfull, colorssemi]\ncolorsfull: colors \
for a complete lune: {N pole, equator 1, equator 2, S pole}\ncolorssemi: \
colors for a semilune: {pole, equator 1, equator 2}\nDisplayAll[{3,0}, n, \
ntess, colorsfull, colorssemi]\n\n",
 StyleBox["Wallpaper groups (2D plane ones) - cylinder groups (3D line ones)",
  
  FontWeight->"Bold"],
 "\n(Wallpaper group) - (My cylinder-group symbol) - (variants in the demos)\n\
p1 - C\np2 - D - variants: h, v\npm:\np11m - Ch\np1m1 - Cv\npg:\np11g - Cs\n\
p1g1 - Cvx\ncm:\nc11m - Chz\nc1m1 - Cvz\npmm\np2mm - Dh\npmg:\np2mg - Dd\n\
p2gm - Dhx\npgg:\np2gg - Ddx - variants: h, v\ncmm:\nc2mm - Dhz - variants: \
h, v\np4 - variants: a, d\np4m\np4g\np3 - variants: variants: p, e\np3m1\n\
p31m\np6 - variants: p, e\np6m\nWallpaper groups: Hermann-Mauguin\nPoint \
groups: Schoenflies and Schoenflies-like\nMy cylinder-group symbols have \
these extensions of my Schoenflies-like symbols:\n- x: axial offset 1/2 for v \
reflections\n- z: zigzag along axis: 0, 1/2, much like Cs axial reflections\n\
\nShowGroup[{2,2}, type, rpts1, rpts2, \[OpenCurlyDoubleQuote]Flags\
\[CloseCurlyDoubleQuote]]\nrpts1: number of horizontal linear repeats\nrpts2: \
number of vertical linear repeats\nShowGroup[{2,2}, type, rpts1, rpts2, \
\[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote], colorsrect, colorstri]\
\ncolorsrect: colors of rectangles\ncolorstri: colors of triangles\n\
DisplayAll[{2,2}, rpts1, rpts2, colorsrect, colorstri]\n\nShowGroup[{3,1}, \
type, n, axrpts, \[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote]]\nn: \
number of repeats in a circle\naxrpts: number of repeats along the axis\n\
ShowGroup[{3,1}, type, n, axrpts, \[OpenCurlyDoubleQuote]Colors\
\[CloseCurlyDoubleQuote], ntess, colors]\ncolors: colors of bent rectangles\n\
DisplayAll[{3,1}, n, axrpts, ntess, colors]\n\n",
 StyleBox["Quasi-spherical point groups",
  FontWeight->"Bold"],
 "\nThe demos are for groups V, Vh, T, Th, Td, O, Oh, I, and Ih.\nV - the \
Viergruppe (4-group) or dihedral group D2\nVh - V with inversions: D2h\nT - \
the tetrahedral group, for the regular tetrahedron\nTh - T with inversions\n\
Td - T with mirror-image symmetries of the tetrahedron\nO - the octahedral \
group, for the cube and the regular octahedron\nOh - O with inversions\nI - \
the icosahedral group, for the regular dodecahedron and icosahedron\nIh - I \
with inversions\n\nThe display function shows triangles formed from adjacent \
vertices, edges, and faces. These are colored according to their parities, if \
the group keeps parities distinct.\n\nFor Vh, Td, Oh, and Ih, the triangles \
have no parities.\nFor V, T, Th, O, and I, the triangles do have parities, \
and these parities are assigned different colors.\n\nFor V, T, O, and I, the \
triangles have parity det({v,e,f}), because that is unchanged by the group.\n\
\nThe remaining one, Th, is a special case. It uses octahedral triangles, \
because Th\[CloseCurlyQuote]s reflections do (vertex) <-> (face), and these \
are both octahedral-face locations. So the triangles have parity \
det({v,e,f})*parity(f), because that is unchanged by this group. Octahedral \
faces have opposite parities from their neighbors, one parity being \
tetrahedron vertices, and the other parity being tetrahedron faces.\n\n\
ShowGroup[{3,0}, type, \[OpenCurlyDoubleQuote]Flags\[CloseCurlyDoubleQuote]]\n\
ShowGroup[{3,0}, type, \[OpenCurlyDoubleQuote]Colors\[CloseCurlyDoubleQuote], \
ntess, colorsets]\ncolorsets: three sets of {vertex color, edge color, face \
color} for the corresponding triangle-faced polyhedron\nThe three sets are \
for both parities, for positive parity, and for negative parity, where the \
parity is for each side\nDisplayAll[{3,0}, ntess, colors]"
}], "Text",
 CellChangeTimes->{
  3.948203536283519*^9, {3.948204001723653*^9, 3.948204028483938*^9}, {
   3.9482040939651823`*^9, 3.948204096092402*^9}, {3.9482041262372513`*^9, 
   3.948204128315769*^9}, {3.948234584262484*^9, 3.948234590169145*^9}, {
   3.9482346389367723`*^9, 3.9482347116909437`*^9}, {3.9482348996841793`*^9, 
   3.948234916629468*^9}, {3.9482806319747057`*^9, 3.948280771168622*^9}, {
   3.9482814395789747`*^9, 3.948281513602372*^9}, 3.94828697778962*^9, {
   3.948287032505558*^9, 3.948287032803487*^9}, {3.949088165673253*^9, 
   3.949088213463668*^9}, {3.949088253773439*^9, 3.949088401258061*^9}, {
   3.9490884865699863`*^9, 3.949088609328371*^9}, {3.9490887059510403`*^9, 
   3.949088790464463*^9}, {3.949090008054913*^9, 3.949090119372037*^9}, {
   3.949090197746002*^9, 3.9490903665212727`*^9}, {3.949090533423068*^9, 
   3.9490907233235083`*^9}, {3.9490908098308153`*^9, 3.949090810030779*^9}, {
   3.949091098941957*^9, 3.94909117501692*^9}, {3.949091290802682*^9, 
   3.949091382815282*^9}, {3.9490914621527147`*^9, 3.9490914679154367`*^9}, {
   3.949091502675354*^9, 3.9490915181314573`*^9}, {3.949091551589485*^9, 
   3.949091560700219*^9}, {3.949091689068768*^9, 3.949091971286789*^9}, {
   3.949092090731184*^9, 3.949092169604169*^9}, {3.949092426423347*^9, 
   3.949092565306584*^9}, {3.94909259717063*^9, 3.949092643251769*^9}, {
   3.949092823071081*^9, 3.94909284296725*^9}, {3.949092885648243*^9, 
   3.949092917680294*^9}, 3.949093775525283*^9, {3.949093848248329*^9, 
   3.949093851921934*^9}, {3.949108916686619*^9, 
   3.949109045148617*^9}},ExpressionUUID->"1439e98f-50a4-4348-a03e-\
2cfa82ad1263"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Shared Functions", "Section",
 CellChangeTimes->{{3.947041097347966*^9, 3.947041098783806*^9}, {
  3.947042277481894*^9, 
  3.947042278901556*^9}},ExpressionUUID->"7eb9ed6d-fb68-4698-b505-\
4e2ec6bb4d23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RepeatHoriz", "[", 
   RowBox[{"g_", ",", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Translate", "[", 
     RowBox[{"g", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947041253689101*^9, 3.9470413559719677`*^9}, {
  3.947041605123992*^9, 3.947041605746189*^9}, {3.947053937707683*^9, 
  3.9470539492171497`*^9}, {3.947054688848599*^9, 3.947054697207745*^9}, {
  3.947407737099478*^9, 3.947407740276208*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"8952aafe-b52e-488f-b57c-2eb866d2be9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RepeatRect", "[", 
   RowBox[{"g_", ",", "n1_", ",", "n2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Translate", "[", 
     RowBox[{"g", ",", 
      RowBox[{"{", 
       RowBox[{"k1", ",", "k2"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "0", ",", 
      RowBox[{"n1", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "0", ",", 
      RowBox[{"n2", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947408673861332*^9, 3.947408711774528*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"37e5cef7-f9ba-4e09-b125-e3cb38c0f4f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RepeatVert", "[", 
   RowBox[{"g_", ",", "n_", ",", 
    RowBox[{"step_", ":", "1"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Translate", "[", 
     RowBox[{"g", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"step", "*", "k"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947041253689101*^9, 3.9470413559719677`*^9}, {
  3.947041605123992*^9, 3.947041605746189*^9}, {3.947053937707683*^9, 
  3.9470539492171497`*^9}, {3.947054688848599*^9, 3.947054697207745*^9}, {
  3.947407737099478*^9, 3.947407740276208*^9}, {3.94865594865536*^9, 
  3.948655959656144*^9}, {3.949002345655632*^9, 3.949002354510208*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"1e7b6e7c-0643-46e3-93e1-5bfa18e67163"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HexPoints", "[", 
   RowBox[{"n1_", ",", "n2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"1", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}], ".", 
     
     RowBox[{"{", 
      RowBox[{"k1", ",", "k2"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "0", ",", 
      RowBox[{"n1", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "0", ",", 
      RowBox[{"n2", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947433698220355*^9, 3.9474337656338053`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"b2b6bade-280b-4fdd-82ba-2777d1026211"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RepeatTri", "[", 
   RowBox[{"g_", ",", "n1_", ",", "n2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Translate", "[", 
     RowBox[{"g", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}], 
       ".", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "k2"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "0", ",", 
      RowBox[{"n1", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "0", ",", 
      RowBox[{"n2", "-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947408673861332*^9, 3.947408711774528*^9}, {
  3.947433689083454*^9, 3.94743369477236*^9}, {3.947433816294572*^9, 
  3.9474338281685963`*^9}, {3.947497068350659*^9, 3.947497068766458*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"bb2ad0ed-2143-4289-8780-66ddf006be43"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "all", " ", "rectangular", " ", 
   RowBox[{"groups", ":", " ", 
    RowBox[{
    "all", " ", "frieze", " ", "groups", " ", "and", " ", "all", " ", "but", 
     " ", "the", " ", "triangular", " ", "and", " ", "hexagonal", " ", 
     "wallpaper", " ", "groups"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.947364009581036*^9, 3.947364032927677*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"bc2a2eaa-167e-4145-9895-402edaffe9a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RectTfm", "[", 
   RowBox[{"m11_", ",", "m22_", ",", "d1_", ",", "d2_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m11", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "m22"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d1", ",", "d2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.947363972548469*^9, 3.947364004566988*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"d45cb963-35b1-4f49-9f43-cf9814da33b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeScaleMatrix", "[", "scale_", "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "scale", "]"}], "==", "0"}], ",", 
    RowBox[{"scale", "*", "id2"}], ",", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Dimensions", "[", "scale", "]"}], "]"}], "==", "1"}], ",", 
    RowBox[{"DiagonalMatrix", "[", "scale", "]"}], ",", "True", ",", 
    "scale"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9475136425032253`*^9, 3.947513681302045*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"3f513acf-aa92-4cb7-89ba-992eb08c016d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlnGrpTfm", "[", 
   RowBox[{"grpargs_", ",", "scale_", ",", "offsets_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mats", ",", "nrpt", ",", "xpofsts"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mats", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "grpargs", "]"}], " ", ">", " ", "3"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"Group2D", " ", "@@", " ", 
             RowBox[{"Take", "[", 
              RowBox[{"grpargs", ",", "3"}], "]"}]}], ",", 
            RowBox[{"grpargs", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], ",", 
        " ", 
        RowBox[{"Group2D", " ", "@@", " ", "grpargs"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nrpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", "mats", "]"}], "/", 
       RowBox[{"Length", "[", "offsets", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpofsts", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"#", ",", "nrpt"}], "]"}], "&"}], " ", "/@", " ", 
         "offsets"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"mats", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ".", 
          RowBox[{"MakeScaleMatrix", "[", "scale", "]"}]}], ",", 
         RowBox[{
          RowBox[{"mats", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ".", 
          RowBox[{"xpofsts", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "mats", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947413966027102*^9, 3.947414126473744*^9}, {
  3.947416560324827*^9, 3.947416571668593*^9}, {3.947424117668944*^9, 
  3.947424126995923*^9}, {3.9475135280999613`*^9, 3.9475135345876417`*^9}, {
  3.9482764439566793`*^9, 3.94827651298779*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"21a1a36c-3aeb-4b22-8be1-66b2e3f10b99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlnGrpTfm", "[", 
   RowBox[{"grpargs_", ",", "scale_"}], "]"}], " ", ":=", " ", 
  RowBox[{"PlnGrpTfm", "[", 
   RowBox[{"grpargs", ",", "scale", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947520381076354*^9, 3.947520412216456*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"1230e7a1-a812-424c-a7dd-9c562cfd4600"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlnGrpTfm", "[", "grpargs_", "]"}], " ", ":=", " ", 
  RowBox[{"PlnGrpTfm", "[", 
   RowBox[{"grpargs", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947520414617971*^9, 3.9475204285363913`*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"8479a775-296d-422e-a3a9-c47909d17702"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectTfm", "[", "tfm_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", 
      RowBox[{"tfm", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", "===", " ", 
     "String"}], ",", 
    RowBox[{"PlnGrpTfm", " ", "@@", " ", "tfm"}], ",", " ", 
    RowBox[{"RectTfm", " ", "@@@", " ", "tfm"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947520568953433*^9, 3.947520608482396*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"6ea0005a-0a36-4c96-b45b-f42dcb0f8b92"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"In", " ", "bounding", " ", "boxes"}], " ", "-", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", "to", " ", 
    RowBox[{"1", "/", "2"}], " ", "in", " ", "both", " ", "dimensions"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9474076580778627`*^9, 3.947407671127936*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"00fdadf1-4ddf-4819-95fb-871957a169f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlagShape", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PoleBottom", " ", "=", " ", 
       RowBox[{"-", "0.3"}]}], ",", " ", 
      RowBox[{"PoleTop", " ", "=", " ", "0.3"}], ",", " ", 
      RowBox[{"FlagTipPoleExtent", " ", "=", " ", "0.1"}], ",", 
      "FlagTipOnPole", ",", "FlagStartOnPole", ",", 
      RowBox[{"PoleWidth", " ", "=", " ", "0.05"}], ",", "PoleBack", ",", " ",
       "PoleFront", ",", " ", 
      RowBox[{"FlagOutwardExtent", " ", "=", " ", "0.3"}], ",", "FlagFront"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FlagTipOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", "FlagTipPoleExtent"}]}], ";", " ", 
     RowBox[{"FlagStartOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", 
       RowBox[{"2", "*", "FlagTipPoleExtent"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PoleBack", " ", "=", 
      RowBox[{
       RowBox[{"-", "PoleWidth"}], "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PoleFront", " ", "=", " ", 
      RowBox[{"PoleWidth", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FlagFront", " ", "=", " ", 
      RowBox[{"PoleFront", " ", "+", " ", "FlagOutwardExtent"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"PoleBack", ",", "PoleBottom"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"PoleBack", ",", "PoleTop"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"PoleFront", ",", "PoleTop"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"FlagFront", ",", "FlagTipOnPole"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"PoleFront", ",", "FlagStartOnPole"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"PoleFront", ",", "PoleBottom"}], "}"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947365197561008*^9, 3.9473652079847717`*^9}, {
  3.947365243003274*^9, 3.9473656618891068`*^9}, {3.947366861030637*^9, 
  3.947366870084662*^9}, {3.94736735853977*^9, 3.9473673630983686`*^9}, {
  3.948200242234932*^9, 3.948200452264586*^9}, {3.9482005573626833`*^9, 
  3.94820056818312*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"7c260cb9-e43f-4c59-b4cc-b7b69668b02b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RectShape", "[", "colors_List", "]"}], " ", ":=", 
  RowBox[{"Polygon", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"VertexColors", "->", "colors"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947407595516808*^9, 3.9474076262608356`*^9}, {
  3.9474076817439423`*^9, 3.947407696257719*^9}, {3.9475088643214417`*^9, 
  3.947508871872239*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"474c3bb9-975e-49c9-903f-0d7ab3861d32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriShape", "[", "colors_List", "]"}], " ", ":=", " ", 
  RowBox[{"Polygon", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"VertexColors", "->", "colors"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948072396643302*^9, 3.9480724171769667`*^9}, {
   3.948072474529765*^9, 3.948072480034696*^9}, 3.948072748897029*^9},
 CellLabel->
  "In[424]:=",ExpressionUUID->"8820b2bc-f169-46f5-9a2c-cad31db31259"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlagShape3D", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PoleBottom", " ", "=", " ", 
       RowBox[{"-", "0.3"}]}], ",", " ", 
      RowBox[{"PoleTop", " ", "=", " ", "0.3"}], ",", " ", 
      RowBox[{"FlagTipPoleExtent", " ", "=", " ", "0.1"}], ",", 
      "FlagTipOnPole", ",", "FlagStartOnPole", ",", 
      RowBox[{"PoleWidth", " ", "=", " ", "0.05"}], ",", "PoleBack", ",", " ",
       "PoleFront", ",", " ", 
      RowBox[{"FlagOutwardExtent", " ", "=", " ", "0.3"}], ",", "FlagFront", 
      ",", "pole", ",", "flag"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FlagTipOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", "FlagTipPoleExtent"}]}], ";", " ", 
     RowBox[{"FlagStartOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", 
       RowBox[{"2", "*", "FlagTipPoleExtent"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PoleBack", " ", "=", 
      RowBox[{
       RowBox[{"-", "PoleWidth"}], "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PoleFront", " ", "=", " ", 
      RowBox[{"PoleWidth", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FlagFront", " ", "=", " ", 
      RowBox[{"PoleFront", " ", "+", " ", "FlagOutwardExtent"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pole", " ", "=", " ", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "PoleBottom"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "PoleTop"}], "}"}]}], "}"}], ",", 
        RowBox[{"PoleWidth", "/", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flag", " ", "=", " ", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "PoleTop"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"FlagFront", ",", "0", ",", "FlagTipOnPole"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "FlagStartOnPole"}], "}"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"pole", ",", "flag"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9482005876280746`*^9, 3.9482005908351994`*^9}, {
  3.948200645452828*^9, 3.948200737805286*^9}, {3.948200779417595*^9, 
  3.94820083951763*^9}, {3.9482009274848413`*^9, 3.948201057538595*^9}, {
  3.948201462966956*^9, 3.948201483842082*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"ae56a541-90f8-4586-935e-76a6559e4fa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlagShape3D", "[", "1", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PoleBottom", " ", "=", " ", 
       RowBox[{"-", "0.3"}]}], ",", " ", 
      RowBox[{"PoleTop", " ", "=", " ", "0.3"}], ",", " ", 
      RowBox[{"FlagTipPoleExtent", " ", "=", " ", "0.1"}], ",", 
      "FlagTipOnPole", ",", "FlagStartOnPole", ",", 
      RowBox[{"PoleWidth", " ", "=", " ", "0.05"}], ",", "PoleBack", ",", " ",
       "PoleFront", ",", " ", 
      RowBox[{"FlagOutwardExtent", " ", "=", " ", "0.3"}], ",", "FlagFront", 
      ",", "pole", ",", "flag"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FlagTipOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", "FlagTipPoleExtent"}]}], ";", " ", 
     RowBox[{"FlagStartOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", 
       RowBox[{"2", "*", "FlagTipPoleExtent"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PoleBack", " ", "=", 
      RowBox[{
       RowBox[{"-", "PoleWidth"}], "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PoleFront", " ", "=", " ", 
      RowBox[{"PoleWidth", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FlagFront", " ", "=", " ", 
      RowBox[{"PoleFront", " ", "+", " ", "FlagOutwardExtent"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pole", " ", "=", " ", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "PoleBottom"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "PoleTop"}], "}"}]}], "}"}], ",", 
        RowBox[{"PoleWidth", "/", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flag", " ", "=", " ", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "PoleTop"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"FlagFront", ",", "0", ",", "FlagTipOnPole"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "FlagStartOnPole"}], "}"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"pole", ",", "flag"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9482005876280746`*^9, 3.9482005908351994`*^9}, {
   3.948200645452828*^9, 3.948200737805286*^9}, {3.948200779417595*^9, 
   3.94820083951763*^9}, {3.9482009274848413`*^9, 3.948201057538595*^9}, {
   3.948201462966956*^9, 3.948201483842082*^9}, 3.948996625540741*^9},
 CellLabel->
  "In[426]:=",ExpressionUUID->"51c1484a-ea64-478a-be5c-c56e69685de9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlagShape3D", "[", "2", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PoleBottom", " ", "=", " ", 
       RowBox[{"-", "0.3"}]}], ",", " ", 
      RowBox[{"PoleTop", " ", "=", " ", "0.3"}], ",", " ", 
      RowBox[{"FlagTipPoleExtent", " ", "=", " ", "0.1"}], ",", 
      "FlagTipOnPole", ",", "FlagStartOnPole", ",", 
      RowBox[{"PoleWidth", " ", "=", " ", "0.05"}], ",", "PoleBack", ",", " ",
       "PoleFront", ",", " ", 
      RowBox[{"FlagOutwardExtent", " ", "=", " ", "0.3"}], ",", "FlagFront", 
      ",", "pole", ",", "flag"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FlagTipOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", "FlagTipPoleExtent"}]}], ";", " ", 
     RowBox[{"FlagStartOnPole", " ", "=", " ", 
      RowBox[{"PoleTop", " ", "-", " ", 
       RowBox[{"2", "*", "FlagTipPoleExtent"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PoleBack", " ", "=", 
      RowBox[{
       RowBox[{"-", "PoleWidth"}], "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PoleFront", " ", "=", " ", 
      RowBox[{"PoleWidth", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FlagFront", " ", "=", " ", 
      RowBox[{"PoleFront", " ", "+", " ", "FlagOutwardExtent"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pole", " ", "=", " ", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "PoleWidth"}], "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "PoleWidth"}], "/", "2"}], ",", "PoleBottom"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PoleWidth", "/", "2"}], ",", 
          RowBox[{"PoleWidth", "/", "2"}], ",", "PoleTop"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"flag", " ", "=", " ", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "PoleTop"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"FlagFront", ",", "0", ",", "FlagTipOnPole"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"PoleFront", ",", "0", ",", "FlagStartOnPole"}], "}"}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"pole", ",", "flag"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9482005876280746`*^9, 3.9482005908351994`*^9}, {
  3.948200645452828*^9, 3.948200737805286*^9}, {3.948200779417595*^9, 
  3.94820083951763*^9}, {3.9482009274848413`*^9, 3.948201057538595*^9}, {
  3.948201462966956*^9, 3.948201483842082*^9}, {3.948996663268985*^9, 
  3.94899672076611*^9}, {3.948996752303145*^9, 3.948996754525874*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"ccb74919-2412-41dc-a761-8153416c6ce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FlagShape3D", "[", "]"}], " ", ":=", " ", 
   RowBox[{"FlagShape3D", "[", "2", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.948996579168915*^9, 3.9489965917959003`*^9}, {
  3.948996723844796*^9, 3.948996724036976*^9}, {3.9489972958357964`*^9, 
  3.948997296051544*^9}, {3.9490023843067093`*^9, 3.9490023844606037`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"901200ea-2d63-4fe1-af66-d1a520e91300"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetGroupType", "[", "type_", "]"}], " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"type", ",", "\"\< \>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948336944565638*^9, 3.94833695012389*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"dde8bb83-0cd9-4512-a857-e73a5997669b"]
}, Closed]],

Cell[CellGroupData[{

Cell["1+1: Line groups", "Section",
 CellChangeTimes->{{3.947041115217864*^9, 
  3.947041123999991*^9}},ExpressionUUID->"995fb416-d3af-4dba-873b-\
057a5d84c045"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "1", "D", " ", "to", " ", "2", "D", " ", "for", " ", "2", "D", " ", 
   "graphics"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.948985663208321*^9, 3.948985678839262*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"0bffc234-ac39-484b-a2b6-791ccdb9d29e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandGroup1DElement", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9489856834725924`*^9, 3.948985719879187*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"d91f3b6e-0ff4-4f0e-bb20-48820b30da86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandGroup1D", "[", "type_", "]"}], " ", ":=", " ", 
  RowBox[{"ExpandGroup1DElement", " ", "/@", " ", 
   RowBox[{"Group1D", "[", "type", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.948985727505988*^9, 3.948985754015479*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"6f4f18cd-5bde-47f4-af23-1b5a1876f135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "grptype", ",", "numseg", ",", "arrowhead", ",", "UnitShape",
       ",", "grp", ",", "UnitCell"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<C\>\"", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
        "\"\<pm\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<D\>\"", ",", "2"}], "}"}], ",", "_", ",", "Null"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"grptype", ",", "numseg"}], "}"}], " ", "=", " ", "Tfm"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"arrowhead", " ", "=", " ", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "6"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "6"}], ",", 
           RowBox[{"1", "/", "12"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "12"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "6"}], ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "12"}]}], "}"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{"arrowhead", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "numseg"}], ")"}]}], ",", "0"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grp", " ", "=", " ", 
      RowBox[{"ExpandGroup1D", "[", "grptype", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", "grp"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"RepeatHoriz", "[", 
      RowBox[{"UnitCell", ",", "repeats"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054981860868*^9, 3.9470551692505293`*^9}, {3.947253726475424*^9, 
   3.947253751466836*^9}, {3.94725419774789*^9, 3.9472543864247427`*^9}, {
   3.947254416856464*^9, 3.947254484636497*^9}, {3.947254536462837*^9, 
   3.9472546181519117`*^9}, {3.947254663103241*^9, 3.947254690275053*^9}, 
   3.947254742557129*^9, {3.947255465328064*^9, 3.9472555033295727`*^9}, {
   3.947255533921343*^9, 3.9472555355313587`*^9}, {3.947255759241064*^9, 
   3.947255760798457*^9}, {3.947255905243425*^9, 3.947255912898155*^9}, {
   3.9472559573721123`*^9, 3.947255961003447*^9}, {3.947256214598024*^9, 
   3.9472562327997*^9}, {3.947256291786257*^9, 3.947256302457666*^9}, {
   3.9472563867513847`*^9, 3.947256466165935*^9}, {3.947256669021089*^9, 
   3.947256754452087*^9}, {3.947508900543783*^9, 3.947508906379196*^9}, {
   3.947528811875986*^9, 3.9475288343090267`*^9}, {3.947559276935113*^9, 
   3.947559294838461*^9}, {3.947559610048285*^9, 3.947559657046039*^9}, 
   3.947666233405038*^9, {3.948371898322454*^9, 3.948371941125083*^9}, {
   3.948372011693774*^9, 3.94837202571658*^9}, 3.9483722844154263`*^9, {
   3.94837633612949*^9, 3.948376389496604*^9}, {3.948376460089095*^9, 
   3.948376675054471*^9}, {3.948376708918426*^9, 3.948376710653544*^9}, {
   3.948376809186228*^9, 3.948376809305647*^9}, {3.948985554211968*^9, 
   3.948985560285138*^9}, {3.9489857828666363`*^9, 3.948985808066402*^9}, {
   3.9489858405712137`*^9, 3.948985931957073*^9}, {3.9489859974714317`*^9, 
   3.9489860213910837`*^9}, {3.948986060865383*^9, 3.948986066743575*^9}, {
   3.948986103929298*^9, 3.948986106032316*^9}, {3.948986160195249*^9, 
   3.94898621239504*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"a533921e-b448-4e96-a3a3-8e00a8165087"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    "colors_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "grptype", ",", "grp", ",", "numseg", ",", "UnitShape", ",", 
      "UnitCell"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<C\>\"", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
        "\"\<pm\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<D\>\"", ",", "2"}], "}"}], ",", "_", ",", "Null"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"grptype", ",", "numseg"}], "}"}], " ", "=", " ", "Tfm"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "numseg"}], ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"VertexColors", "->", "colors"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grp", " ", "=", " ", 
      RowBox[{"ExpandGroup1D", "[", "grptype", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", "grp"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"RepeatHoriz", "[", 
      RowBox[{"UnitCell", ",", "repeats"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054981860868*^9, 3.9470551692505293`*^9}, {3.947253726475424*^9, 
   3.947253751466836*^9}, {3.94725419774789*^9, 3.9472543864247427`*^9}, {
   3.947254416856464*^9, 3.947254484636497*^9}, {3.947254536462837*^9, 
   3.9472546181519117`*^9}, {3.947254663103241*^9, 3.947254690275053*^9}, 
   3.947254742557129*^9, {3.947255465328064*^9, 3.9472555033295727`*^9}, {
   3.947255533921343*^9, 3.9472555355313587`*^9}, {3.947255759241064*^9, 
   3.947255760798457*^9}, {3.947255905243425*^9, 3.947255912898155*^9}, {
   3.9472559573721123`*^9, 3.947255961003447*^9}, {3.947256214598024*^9, 
   3.9472562327997*^9}, {3.947256291786257*^9, 3.947256302457666*^9}, {
   3.9472563867513847`*^9, 3.947256466165935*^9}, {3.947256669021089*^9, 
   3.947256754452087*^9}, {3.947508900543783*^9, 3.947508906379196*^9}, {
   3.947528811875986*^9, 3.9475288343090267`*^9}, {3.947559276935113*^9, 
   3.947559294838461*^9}, {3.947559610048285*^9, 3.947559657046039*^9}, 
   3.947666233405038*^9, {3.948371898322454*^9, 3.948371941125083*^9}, {
   3.948372011693774*^9, 3.94837202571658*^9}, 3.9483722844154263`*^9, {
   3.94837633612949*^9, 3.948376389496604*^9}, {3.948376460089095*^9, 
   3.948376675054471*^9}, {3.948376708918426*^9, 3.948376710653544*^9}, {
   3.948376809186228*^9, 3.948376809305647*^9}, {3.948986244254635*^9, 
   3.9489862547712317`*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"5630b1d7-62e9-4939-af95-e389cb38b332"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "thick_", ",", 
    "colors_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "type", ",", "repeats", ",", 
         "\"\<Flags\>\""}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "thick", "]"}], ",", 
         RowBox[{"ShowGroup", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", "type", ",", "repeats", ",", 
           "\"\<Colors\>\"", ",", "colors"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<p\>\"", ",", "\"\<pm\>\""}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9475287131093483`*^9, 3.947528771098835*^9}, {
   3.947528820452011*^9, 3.94752882237154*^9}, {3.947528904501252*^9, 
   3.947528906421029*^9}, {3.9475595234918823`*^9, 3.947559575262453*^9}, 
   3.947666233406674*^9, {3.9483390772841873`*^9, 3.9483390823257217`*^9}, {
   3.948339121154057*^9, 3.9483391426139603`*^9}, {3.948985598886504*^9, 
   3.948985615077814*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"608ab740-16b8-4da5-bdaa-f7001c4207ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["2+0: Rosette groups", "Section",
 CellChangeTimes->{{3.9470420671014957`*^9, 
  3.947042071491025*^9}},ExpressionUUID->"2686f036-a6bd-49c7-9bf7-\
e6693ab4509f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "numseg", ",", "flag", ",", "scale", ",", "angofst", ",", 
      "flagscof", ",", "flagflip", ",", "UnitShape", ",", "UnitCell"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\"\<C\>\"", ",", "1", ",", "\"\<D\>\"", ",", "2", ",", 
        "_", ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "==", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"numseg", " ", "=", " ", "Tfm"}], ";", "\[IndentingNewLine]", 
     RowBox[{"flag", " ", "=", " ", 
      RowBox[{"FlagShape", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"scale", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"1", ",", 
        RowBox[{"12", "/", 
         RowBox[{"(", 
          RowBox[{"numseg", "*", "n"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"angofst", " ", "=", " ", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Pi", "/", "n"}], "]"}], "/", 
       RowBox[{"Switch", "[", 
        RowBox[{"numseg", ",", "1", ",", "1", ",", "2", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"2", ",", 
             RowBox[{"n", "/", "2"}]}], "]"}], ",", "3"}], "]"}]}], "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"flagscof", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"flag", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"scale", "*", "id2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flagflip", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"flagscof", ",", " ", 
        RowBox[{"Matrix2DTrig", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"flagflip", ",", 
        RowBox[{"Matrix2DTrig", "[", 
         RowBox[{"1", ",", "angofst"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GeometricTransformation", "[", 
        RowBox[{"UnitCell", ",", 
         RowBox[{"Group2D", "[", 
          RowBox[{"type", ",", "n"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}], "scale"}]}]}], "]"}]}], "}"}]}],
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054586078322*^9, 3.947054632298642*^9}, {3.9470546631479*^9, 
   3.947054678961396*^9}, {3.947054826607278*^9, 3.947054842556467*^9}, {
   3.9470548942711487`*^9, 3.947054905042347*^9}, {3.947055219320641*^9, 
   3.947055287526526*^9}, {3.947055829037938*^9, 3.947056053783321*^9}, {
   3.947056084597134*^9, 3.947056108364779*^9}, {3.94705620851604*^9, 
   3.947056425975778*^9}, 3.9470564613480253`*^9, {3.9472540219460917`*^9, 
   3.947254026176022*^9}, {3.9472541420884657`*^9, 3.947254144194005*^9}, {
   3.9472548103052883`*^9, 3.947255003996256*^9}, {3.947255047035267*^9, 
   3.947255124229031*^9}, {3.947255781834041*^9, 3.947255788958579*^9}, {
   3.9473657845501127`*^9, 3.947365796302101*^9}, {3.9473658713404837`*^9, 
   3.947365914151717*^9}, {3.9473659815508213`*^9, 3.94736605032589*^9}, {
   3.9473661042582912`*^9, 3.947366163260022*^9}, {3.947366196579191*^9, 
   3.9473662329479637`*^9}, {3.9473662769658833`*^9, 3.947366291966756*^9}, {
   3.947366373406468*^9, 3.9473663922622013`*^9}, {3.947366428383236*^9, 
   3.9473664979675493`*^9}, {3.9473665392335787`*^9, 
   3.9473665631796083`*^9}, {3.947366597971477*^9, 3.947366741633567*^9}, {
   3.94736677203699*^9, 3.947366826353586*^9}, {3.9473669052406187`*^9, 
   3.947366930159555*^9}, {3.947366976495417*^9, 3.947367033087916*^9}, {
   3.947367083347666*^9, 3.947367093556239*^9}, 3.947367144375721*^9, 
   3.947367218434896*^9, {3.947367279971723*^9, 3.9473672946577*^9}, {
   3.9473673823557663`*^9, 3.947367393179516*^9}, {3.9473674891122293`*^9, 
   3.947367516215597*^9}, {3.947367558277504*^9, 3.947367661555293*^9}, {
   3.9473757629339952`*^9, 3.947375801321823*^9}, {3.947375837222465*^9, 
   3.94737586330018*^9}, {3.9473758943986483`*^9, 3.9473759547650213`*^9}, {
   3.947376012947843*^9, 3.947376021305929*^9}, {3.947376079545775*^9, 
   3.9473761762918262`*^9}, 3.9473762515137367`*^9, 3.947424538629819*^9, {
   3.947424571616474*^9, 3.947424577297867*^9}, {3.947424614531557*^9, 
   3.947424621180935*^9}, {3.947559715771103*^9, 3.9475597740827217`*^9}, {
   3.947559835861623*^9, 3.94755983794995*^9}, {3.947559923557457*^9, 
   3.947560047367082*^9}, {3.9475601688899097`*^9, 3.947560169311214*^9}, 
   3.947666498189281*^9, {3.948372039943231*^9, 3.948372060575817*^9}, {
   3.9483721632190332`*^9, 3.9483721711614027`*^9}, {3.948986383900112*^9, 
   3.948986396477153*^9}, {3.9489864486566057`*^9, 3.948986476880041*^9}, {
   3.9489865215530577`*^9, 3.948986537857534*^9}, {3.9489865835074663`*^9, 
   3.948986812208809*^9}, {3.948986848789653*^9, 3.9489870931463957`*^9}, {
   3.948987123860099*^9, 3.948987152756113*^9}, {3.948987204910082*^9, 
   3.948987205757428*^9}, {3.9489872949093*^9, 3.9489874384489613`*^9}, {
   3.9489875602436123`*^9, 3.948987594187846*^9}, {3.9489877152076273`*^9, 
   3.948987823784531*^9}, {3.948987897956665*^9, 3.948987909377975*^9}, {
   3.948987970845158*^9, 3.948987991275207*^9}, {3.9489880867618227`*^9, 
   3.948988104490046*^9}, {3.94898817626157*^9, 3.948988183124834*^9}, {
   3.948988299367055*^9, 3.94898837576086*^9}, {3.948988446179427*^9, 
   3.948988446338298*^9}, {3.9489884958446827`*^9, 3.948988500763742*^9}, {
   3.9490920000005217`*^9, 3.949092004725368*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"f63ea44d-7fd5-4c65-973f-9c6b6a0337dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PieSlice", "[", 
   RowBox[{
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"ndiv_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ptfracs", ",", "edpts", ",", "pts", ",", "edclrs", ",", "clrs", ",", 
      "trivts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Fractions", " ", "along", " ", "the", " ", "perimeter", " ", "from", 
      " ", "the", " ", "first", " ", "point", " ", "to", " ", "the", " ", 
      "second", " ", 
      RowBox[{"one", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ptfracs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "ndiv"}], "]"}], "/", 
       RowBox[{"N", "[", "ndiv", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Perimeter", " ", "points"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"edpts", " ", "=", " ", 
      RowBox[{"CosSin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "Pi"}], ")"}], "/", "n"}], "*", "ptfracs"}], "]"}]}], 
     ";", "\[IndentingNewLine]", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "the", " ", "center", " ", "point"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"pts", " ", "=", " ", 
      RowBox[{"Prepend", "[", 
       RowBox[{"edpts", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Perimeter", " ", "colors"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"edclrs", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", " ", "|->", " ", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Rest", "[", "colors", "]"}], ",", "f"}], "]"}]}], ")"}], 
       " ", "/@", " ", "ptfracs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "the", " ", "center", " ", "color"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"clrs", " ", "=", " ", 
      RowBox[{"Prepend", "[", 
       RowBox[{"edclrs", ",", 
        RowBox[{"First", "[", "colors", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Subslice", " ", "triangles", " ", "by", " ", "vertex", " ", "index"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"trivts", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"k", "+", "2"}], ",", 
          RowBox[{"k", "+", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", 
          RowBox[{"ndiv", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Assemble", " ", "these", " ", "pieces"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"GraphicsComplex", "[", 
      RowBox[{"pts", ",", 
       RowBox[{"Polygon", "[", "trivts", "]"}], ",", 
       RowBox[{"VertexColors", "->", "clrs"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947499723643807*^9, 3.947499784157552*^9}, {
   3.94749983346106*^9, 3.947500214567428*^9}, {3.9475002610316963`*^9, 
   3.947500497526634*^9}, {3.947500684313364*^9, 3.947500691168928*^9}, {
   3.947500721763743*^9, 3.947500900834004*^9}, {3.947501268658667*^9, 
   3.947501279267254*^9}, {3.947501354582485*^9, 3.947501386852282*^9}, 
   3.947502060289425*^9, {3.947502677272861*^9, 3.947502684496521*^9}, {
   3.947508435912636*^9, 3.947508472467702*^9}, {3.9475085902817717`*^9, 
   3.947508605531764*^9}, {3.947508654270843*^9, 3.94750868414295*^9}, {
   3.947666437715335*^9, 3.947666446112534*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"ece97b47-0ee4-4bb2-88f9-b7f1baefff52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Tfm", ",", "nslice", ",", "ndiv", ",", "UnitShape"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\"\<C\>\"", ",", "1", ",", "\"\<D\>\"", ",", "2", ",", 
        "_", ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nslice", " ", "=", " ", 
      RowBox[{"n", "*", "Tfm"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ndiv", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}], "*", 
        RowBox[{"ntess", "/", "n"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"PieSlice", "[", 
       RowBox[{"nslice", ",", "ndiv", ",", "colors"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GeometricTransformation", "[", 
      RowBox[{"UnitShape", ",", 
       RowBox[{"Group2D", "[", 
        RowBox[{"type", ",", "n"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054586078322*^9, 3.947054632298642*^9}, {3.9470546631479*^9, 
   3.947054678961396*^9}, {3.947054826607278*^9, 3.947054842556467*^9}, {
   3.9470548942711487`*^9, 3.947054905042347*^9}, {3.947055219320641*^9, 
   3.947055287526526*^9}, {3.947055829037938*^9, 3.947056053783321*^9}, {
   3.947056084597134*^9, 3.947056108364779*^9}, {3.94705620851604*^9, 
   3.947056425975778*^9}, 3.9470564613480253`*^9, {3.9472540219460917`*^9, 
   3.947254026176022*^9}, {3.9472541420884657`*^9, 3.947254144194005*^9}, {
   3.9472548103052883`*^9, 3.947255003996256*^9}, {3.947255047035267*^9, 
   3.947255124229031*^9}, {3.947255781834041*^9, 3.947255788958579*^9}, {
   3.947365800815893*^9, 3.947365802287736*^9}, {3.947500569782229*^9, 
   3.947500604045899*^9}, {3.947508502593841*^9, 3.94750853726622*^9}, {
   3.9475086952605467`*^9, 3.947508699772537*^9}, {3.947560307770102*^9, 
   3.947560325251831*^9}, 3.9476664199195633`*^9, 3.947666471554872*^9, {
   3.948688274843059*^9, 3.9486883564657497`*^9}, {3.948688396845797*^9, 
   3.948688442754602*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"e7234988-785d-432d-a91c-3e2ac3aa0329"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", "type", ",", "n", ",", 
         "\"\<Flags\>\""}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "0"}], "}"}], ",", "type", ",", "n", ",", 
         "\"\<Colors\>\"", ",", "ntess", ",", "colors"}], "]"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<C\>\"", ",", "\"\<D\>\""}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9475288551886806`*^9, 3.9475288631165247`*^9}, {
  3.947528929430017*^9, 3.94752899483854*^9}, {3.947529041935849*^9, 
  3.947529059975675*^9}, {3.94766639446907*^9, 3.94766640000737*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"aa950238-3c20-47a5-800c-5b21ab7d2b4e"]
}, Closed]],

Cell[CellGroupData[{

Cell["2+1: Frieze groups", "Section",
 CellChangeTimes->{{3.947056541379417*^9, 
  3.947056546958674*^9}},ExpressionUUID->"5a5e7db0-e992-4e1f-bfbd-\
625cea613e0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "scl", ",", "ofst", ",", "UnitShape", ",", "grptype", ",", 
      "UnitCell"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p11m\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<p11g\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p1m1\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2 h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<p2 v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2mm\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<p2mg\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "8"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "_", ",", 
        "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"scl", ",", "ofst"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{
          RowBox[{"FlagShape", "[", "]"}], ",", "scl"}], "]"}], ",", "ofst"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", 
        RowBox[{"Group2D1L", "[", "grptype", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RepeatHoriz", "[", 
      RowBox[{"UnitCell", ",", "repeats"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/S80Ze6MrLeOh158nA+i9zVHLwHRPvsld4Foka/z
joDo89+ugmmjCUonweJ+V0+D6M9MJ8+D6Dqr7FcgOu1a+3sQfff8c6aZQNrl
fJIUiF5Rc10eRNd0BquDaKbGSjMQneJzwQpEh3A7u4Dof9WzPEH0KiuvABCt
Yvr+6y0g/Umk6xuI3hXwUeQ2kI7Y6q0MoldOPq0Hos+cFzAE0QytCbYgWic/
0AlEx8zP8wfRAYIhKSD6wv3NGSA6zks6C0Sf21JcBqLLrswC04WpM9pAtJTt
5glge5TqNoJonvMtm8Dya/mfvAPSM3J/vgHRAEGUrwI=
  "],
 CellLabel->
  "In[440]:=",ExpressionUUID->"8a202b20-69ba-4371-b01d-9c4ed062a085"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    "colors_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "scl", ",", "ofst", ",", "UnitShape", ",", "grptype", ",", 
      "UnitCell"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p11m\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p11g\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p1m1\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2 h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2 v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2mm\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2mg\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "_", ",", 
        "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"scl", ",", "ofst"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{
          RowBox[{"RectShape", "[", "colors", "]"}], ",", "scl"}], "]"}], ",",
         "ofst"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", 
        RowBox[{"Group2D1L", "[", "grptype", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RepeatHoriz", "[", 
      RowBox[{"UnitCell", ",", "repeats"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/S80Ze6MrLeOh158nA+i9zVHLwHRPvsld4Foka/z
joDo89+ugmmjCUonweJ+V0+D6M9MJ8+D6Dqr7FcgOu1a+3sQfff8c6aZQNrl
fJIUiF5Rc10eRNd0BquDaKbGSjMQneJzwQpEh3A7u4Dof9WzPEH0KiuvABCt
Yvr+6y0g/Umk6xuI3hXwUeQ2kI7Y6q0MoldOPq0Hos+cFzAE0QytCbYgWic/
0AlEx8zP8wfRAYIhKSD6wv3NGSA6zks6C0Sf21JcBqLLrswC04WpM9pAtJTt
5gkgum2X4mYQ7XdMez+InjOd7zCIrjEJvg6itat+Pn8HCo8/zi9BNIuM+ncQ
vaxq+y8QDQBBLcEB
  "],
 CellLabel->
  "In[441]:=",ExpressionUUID->"ea76cb04-954d-4e36-bbe3-23bafd818df2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"repeats_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", "type", ",", "repeats", ",", 
         "\"\<Flags\>\""}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", "type", ",", "repeats", ",", 
         "\"\<Colors\>\"", ",", "colors"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p1\>\"", ",", "\"\<p11m\>\"", ",", "\"\<p11g\>\"", ",", 
        "\"\<p1m1\>\"", ",", "\"\<p2 h\>\"", ",", "\"\<p2 v\>\"", ",", 
        "\"\<p2mm\>\"", ",", "\"\<p2mg\>\""}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9475287131093483`*^9, 3.947528771098835*^9}, {
   3.947528820452011*^9, 3.94752882237154*^9}, {3.947528904501252*^9, 
   3.947528906421029*^9}, {3.947529208659494*^9, 3.947529278178965*^9}, 
   3.947666233422283*^9},
 CellLabel->
  "In[442]:=",ExpressionUUID->"1fa42332-dd83-4ddc-aa67-01a042c6f520"]
}, Closed]],

Cell[CellGroupData[{

Cell["2+2: Wallpaper groups", "Section",
 CellChangeTimes->{{3.947056541379417*^9, 
  3.947056571674424*^9}},ExpressionUUID->"9ffdcfe6-b72d-4c6d-9612-\
b2baa25ef468"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddFixesToTfms", "[", 
   RowBox[{"tfms_", ",", "fixes_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"fixes", " ", "=!=", " ", "Null"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "tfms", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tfms", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tfms", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
            RowBox[{"fixes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "tfms"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948407456927948*^9, 3.9484075330968313`*^9}, {
   3.948407604972229*^9, 3.948407607955298*^9}, 3.9490909973398438`*^9},
 CellLabel->
  "In[443]:=",ExpressionUUID->"03cb64ae-b456-4742-861c-fa496d899a4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", "type_", ",", 
    RowBox[{"rpts1_", "?", "IsPosInt"}], ",", 
    RowBox[{"rpts2_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "GridType", ",", "scl", ",", "ofst", ",", "flag", ",", 
      "UnitShape", " ", ",", "grptype", ",", "UCFixes", ",", "UnitCell", ",", 
      "rptfunc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p2 h\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2 v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "3"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p11m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p1m1\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], "/", "8"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p11g\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p1g1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<c11m\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<c1m1\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2mm\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "3"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2mg\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "6"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2gm\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2gg h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "4"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "8"}]}], "}"}]}], "}"}], ",", "\"\<p2gg v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "6"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<c2mm h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "4"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"3", "/", "8"}]}], "}"}]}], "}"}], ",", "\"\<c2mm v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p4 a\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p4 d\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p4m\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", 
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "6"}], ",", 
            RowBox[{"1", "/", "3"}]}], "}"}]}], "}"}], ",", "\"\<p4g\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", 
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", 
            RowBox[{"1", "/", "8"}]}], "}"}]}], "}"}], ",", "\"\<p3 p\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p3 e\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{
           RowBox[{"1", "/", "2"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}]}], "}"}]}], "}"}], ",", 
        "\"\<p31m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{
             RowBox[{"1", "/", "4"}], "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}]}], "}"}], ",", 
        "\"\<p3m1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p6 p\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p6 e\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p6m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "4"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", 
            RowBox[{
             RowBox[{"1", "/", "6"}], "/", 
             RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}]}], "}"}], ",", "_", 
        ",", 
        RowBox[{"{", 
         RowBox[{"Null", ",", "Null"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"UCFixes", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<c11m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<c1m1\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<c2mm h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<c2mm v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p4g\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "_", ",", "Null"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"GridType", ",", "scl", ",", "ofst"}], "}"}], " ", "=", " ", 
      "Tfm"}], ";", "\[IndentingNewLine]", 
     RowBox[{"scl", " ", "=", " ", 
      RowBox[{"MakeScaleMatrix", "[", "scl", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flag", " ", "=", " ", 
      RowBox[{"FlagShape", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"flag", ",", 
        RowBox[{"{", 
         RowBox[{"scl", ",", "ofst"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", "=", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", 
        RowBox[{"AddFixesToTfms", "[", 
         RowBox[{
          RowBox[{"Group2D2L", "[", "grptype", "]"}], ",", "UCFixes"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rptfunc", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"GridType", ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Obl\>\"", "|", "\"\<Rect\>\"", "|", "\"\<Sqr\>\""}], ",",
         "RepeatRect", ",", "\"\<Tri\>\"", ",", "RepeatTri"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rptfunc", "[", 
      RowBox[{"UnitCell", ",", "rpts1", ",", "rpts2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947408878406136*^9, 3.947408934004018*^9}, {
   3.947409097287264*^9, 3.947409101378923*^9}, {3.9474091735335913`*^9, 
   3.9474092339308243`*^9}, {3.947409264630127*^9, 3.947409351549706*^9}, {
   3.9474094486121387`*^9, 3.947409451650448*^9}, {3.947409517767003*^9, 
   3.947409606757299*^9}, {3.9474096486902933`*^9, 3.947409751805965*^9}, {
   3.947410061203609*^9, 3.947410254598769*^9}, {3.947410297482904*^9, 
   3.9474103381387672`*^9}, {3.947410384193138*^9, 3.947410386801283*^9}, {
   3.947410443151018*^9, 3.9474104458542967`*^9}, {3.947410483041255*^9, 
   3.947410486271891*^9}, {3.947410516842169*^9, 3.947410518957963*^9}, {
   3.947410563421475*^9, 3.947410582242647*^9}, {3.947413284825377*^9, 
   3.947413307819696*^9}, {3.947413340977316*^9, 3.94741336646844*^9}, {
   3.947413427819346*^9, 3.947413468420494*^9}, {3.9474135058556232`*^9, 
   3.947413641871632*^9}, {3.9474163120273952`*^9, 3.9474163492076893`*^9}, {
   3.947416403522358*^9, 3.947416534550687*^9}, {3.947416597569721*^9, 
   3.947416654513091*^9}, {3.947416699283881*^9, 3.9474167774605303`*^9}, {
   3.947416816624674*^9, 3.9474168202249928`*^9}, {3.947416852677698*^9, 
   3.947416905740539*^9}, {3.9474169623356323`*^9, 3.9474170699387827`*^9}, {
   3.9474171115806713`*^9, 3.947417265119348*^9}, {3.947417297842808*^9, 
   3.947417300571053*^9}, {3.947417339604748*^9, 3.947417370858966*^9}, {
   3.947417405837852*^9, 3.947417482261971*^9}, {3.947417538821731*^9, 
   3.947417730032319*^9}, {3.9474177617229424`*^9, 3.947417766114532*^9}, {
   3.9474178002767267`*^9, 3.947417805814231*^9}, {3.947417854263899*^9, 
   3.947417931366691*^9}, {3.947418126722978*^9, 3.9474182354430304`*^9}, {
   3.947418283724962*^9, 3.947418293068308*^9}, {3.947418332181531*^9, 
   3.947418332407954*^9}, {3.947418368576499*^9, 3.947418374038694*^9}, {
   3.947418409607633*^9, 3.947418424869272*^9}, {3.947418457474886*^9, 
   3.947418489367688*^9}, {3.947418821476336*^9, 3.947418911826148*^9}, {
   3.947419947850155*^9, 3.947419954863283*^9}, {3.947424033777258*^9, 
   3.947424034132986*^9}, {3.947424079678043*^9, 3.9474240958366413`*^9}, {
   3.94742433578292*^9, 3.9474243802876463`*^9}, {3.947424439930903*^9, 
   3.94742445858587*^9}, 3.947424791635038*^9, {3.947424836401429*^9, 
   3.947424908850093*^9}, {3.947424968911584*^9, 3.947425027378407*^9}, {
   3.947496967823251*^9, 3.947497143186099*^9}, {3.947497176390293*^9, 
   3.947497217668881*^9}, {3.947497342472962*^9, 3.947497374241028*^9}, {
   3.947497506334098*^9, 3.947497535861816*^9}, {3.947497754109489*^9, 
   3.947497800602705*^9}, {3.947497839523877*^9, 3.94749784654007*^9}, {
   3.947497910638533*^9, 3.947497979936178*^9}, {3.947498012169861*^9, 
   3.9474980283054543`*^9}, {3.94749806477734*^9, 3.947498084843072*^9}, {
   3.9474981265413*^9, 3.9474981361006613`*^9}, {3.94749817610429*^9, 
   3.9474982147592154`*^9}, {3.947498911580163*^9, 3.947498956956944*^9}, {
   3.947499150986844*^9, 3.947499224460635*^9}, {3.947499268614812*^9, 
   3.9474993054951344`*^9}, {3.9474993390096607`*^9, 3.947499341680019*^9}, {
   3.947523489657572*^9, 3.947523494771509*^9}, {3.9475236506354437`*^9, 
   3.947523664840746*^9}, {3.947523782413316*^9, 3.947523848085434*^9}, {
   3.9475239573776293`*^9, 3.947523963424678*^9}, {3.947524009579352*^9, 
   3.9475240102975597`*^9}, {3.94752405007522*^9, 3.947524073818574*^9}, {
   3.94752448008784*^9, 3.9475244929178667`*^9}, {3.947524541912324*^9, 
   3.94752459636003*^9}, {3.947524633938944*^9, 3.947524698027432*^9}, {
   3.947524754316921*^9, 3.9475247570125628`*^9}, {3.9475248027978477`*^9, 
   3.9475248219899597`*^9}, {3.947524908978817*^9, 3.9475249340250597`*^9}, {
   3.947525024467671*^9, 3.947525110890153*^9}, {3.947525171332906*^9, 
   3.947525243246263*^9}, {3.9475252736157722`*^9, 3.947525275255089*^9}, 
   3.947525327977666*^9, {3.947525364437031*^9, 3.9475254627725277`*^9}, {
   3.947525874530273*^9, 3.947525914905959*^9}, 3.94752594710979*^9, {
   3.9475259979076014`*^9, 3.947526045208519*^9}, {3.947526090786694*^9, 
   3.947526122258935*^9}, {3.947526223304648*^9, 3.947526314305101*^9}, {
   3.947526365961912*^9, 3.9475263780185966`*^9}, {3.94752644405302*^9, 
   3.947526473093071*^9}, {3.947526889208456*^9, 3.9475268921204023`*^9}, {
   3.947526942196672*^9, 3.9475269799832973`*^9}, {3.947527079890979*^9, 
   3.947527115907563*^9}, {3.947527245712275*^9, 3.947527257543515*^9}, {
   3.9475277815715113`*^9, 3.9475278068719177`*^9}, {3.947527869929714*^9, 
   3.947527923285099*^9}, {3.947527975189171*^9, 3.947528004965377*^9}, {
   3.9475281442818747`*^9, 3.947528232732222*^9}, {3.947528264993116*^9, 
   3.947528271535493*^9}, {3.947528305831476*^9, 3.947528418746661*^9}, {
   3.947528465419936*^9, 3.947528575654401*^9}, {3.947529660142342*^9, 
   3.9475297342048397`*^9}, {3.947530086082575*^9, 3.947530109458612*^9}, 
   3.947530185485107*^9, 3.94753036844731*^9, {3.9475305358658247`*^9, 
   3.9475305704736643`*^9}, {3.947530611122778*^9, 3.947530619658499*^9}, {
   3.947530669458276*^9, 3.9475306730036488`*^9}, {3.9475562921359243`*^9, 
   3.947556319960906*^9}, {3.9475563860980377`*^9, 3.9475563890249243`*^9}, 
   3.9475576951757603`*^9, 3.9475578072012177`*^9, 3.947557917395926*^9, {
   3.947557963915741*^9, 3.947557983149253*^9}, {3.947558016175576*^9, 
   3.947558019134493*^9}, {3.947558068929826*^9, 3.947558073597735*^9}, {
   3.947558107860528*^9, 3.947558216356278*^9}, {3.947558265022922*^9, 
   3.947558299959507*^9}, 3.9475585246472597`*^9, {3.94755855587181*^9, 
   3.94755857351095*^9}, {3.947613420302738*^9, 3.9476134209575033`*^9}, {
   3.947613454488183*^9, 3.947613454710828*^9}, {3.9476135646326847`*^9, 
   3.947613614719851*^9}, {3.9476136710552177`*^9, 3.947613685175539*^9}, {
   3.9476137463950577`*^9, 3.9476137829837503`*^9}, {3.947613866488132*^9, 
   3.947613874262985*^9}, {3.947614016119897*^9, 3.947614047510516*^9}, {
   3.947614082855165*^9, 3.947614093839624*^9}, {3.947614159943046*^9, 
   3.947614191742196*^9}, {3.9476144320823708`*^9, 3.9476144359998693`*^9}, {
   3.947614490792348*^9, 3.947614568918112*^9}, 3.947666268586734*^9, 
   3.9476663044284897`*^9, {3.947881243560173*^9, 3.9478812597503433`*^9}, {
   3.9480728321339293`*^9, 3.9480728603579273`*^9}, {3.948119621721843*^9, 
   3.948119669720201*^9}, {3.948275460515174*^9, 3.9482754676932507`*^9}, {
   3.948276031066566*^9, 3.948276073462932*^9}, {3.948276104347117*^9, 
   3.948276107352014*^9}, {3.9482765582882547`*^9, 3.948276578998354*^9}, {
   3.9482766627795267`*^9, 3.948276674272813*^9}, {3.948276706424323*^9, 
   3.948276759958604*^9}, {3.948276811062993*^9, 3.948276887817889*^9}, 
   3.948276942156904*^9, {3.948277009347024*^9, 3.948277009559054*^9}, {
   3.948277048679802*^9, 3.948277060886035*^9}, {3.9482771143104143`*^9, 
   3.9482771469669*^9}, {3.948277183289206*^9, 3.9482771951814947`*^9}, {
   3.948277227887526*^9, 3.948277260560342*^9}, {3.9482783905678253`*^9, 
   3.948278407344619*^9}, {3.948278551478674*^9, 3.948278563436157*^9}, {
   3.948278593541782*^9, 3.948278602501143*^9}, {3.948278655399929*^9, 
   3.94827866722437*^9}, {3.94827874785962*^9, 3.9482787522489243`*^9}, {
   3.948279617379468*^9, 3.948279719156865*^9}, {3.948279766238665*^9, 
   3.948279773654539*^9}, {3.948279804959972*^9, 3.948279868559722*^9}, {
   3.9482799540109653`*^9, 3.948279992634259*^9}, {3.948378358641596*^9, 
   3.948378404850165*^9}, {3.948378449427043*^9, 3.948378456732403*^9}, {
   3.948378526878704*^9, 3.9483788238981037`*^9}, {3.9483798044775047`*^9, 
   3.948379815951358*^9}, {3.9483799147584963`*^9, 3.9483799197817583`*^9}, {
   3.9483799710867977`*^9, 3.948380007351006*^9}, {3.948380048576138*^9, 
   3.9483800932171183`*^9}, {3.94838012894632*^9, 3.948380166915761*^9}, {
   3.948380209150022*^9, 3.948380211956953*^9}, {3.94838025167909*^9, 
   3.948380275679109*^9}, {3.9483803778098993`*^9, 3.94838038312053*^9}, 
   3.9483804629672747`*^9, {3.9483805362100267`*^9, 3.948380545607583*^9}, {
   3.948380578642174*^9, 3.948380578824312*^9}, {3.948380708606789*^9, 
   3.948380821079893*^9}, {3.948380854697919*^9, 3.948380884274343*^9}, {
   3.948380914836252*^9, 3.948380937187737*^9}, {3.9483809739665813`*^9, 
   3.948380974148521*^9}, {3.94838101766479*^9, 3.948381022617927*^9}, {
   3.9483811161780024`*^9, 3.948381116377041*^9}, {3.9483812572783937`*^9, 
   3.948381286431131*^9}, {3.948381346984228*^9, 3.948381487948155*^9}, {
   3.94838159742846*^9, 3.9483816243540916`*^9}, {3.948381675260274*^9, 
   3.948381675466937*^9}, {3.948382525069598*^9, 3.948382546168516*^9}, {
   3.94838269150102*^9, 3.948382723812366*^9}, {3.9483827817348833`*^9, 
   3.948382782486772*^9}, {3.948382909698236*^9, 3.948382939058004*^9}, {
   3.948382971011826*^9, 3.948382987059231*^9}, {3.948383050485798*^9, 
   3.948383055677264*^9}, {3.948383098831761*^9, 3.948383108566319*^9}, {
   3.948383212786146*^9, 3.9483832135690327`*^9}, {3.9483832701000347`*^9, 
   3.948383272570718*^9}, {3.9483834012057247`*^9, 3.948383402085835*^9}, {
   3.9483834368877783`*^9, 3.948383480735849*^9}, {3.94838358094039*^9, 
   3.948383600819275*^9}, {3.948383753727903*^9, 3.948383785170143*^9}, {
   3.9483838887436533`*^9, 3.948383890559177*^9}, {3.9483839228098583`*^9, 
   3.948383932808055*^9}, {3.948383981059415*^9, 3.948384045547735*^9}, {
   3.94838411914393*^9, 3.948384139613463*^9}, {3.948384199240183*^9, 
   3.948384209270873*^9}, {3.948386009294175*^9, 3.948386012481791*^9}, 
   3.948387592827585*^9, {3.948387626218018*^9, 3.948387628950572*^9}, {
   3.948387659396398*^9, 3.948387682087934*^9}, {3.948413294225741*^9, 
   3.948413329895389*^9}, 3.948413363091983*^9, 3.94841344384643*^9, {
   3.9484135014382668`*^9, 3.948413525668909*^9}, {3.948413587931703*^9, 
   3.948413629714456*^9}, {3.948413693854662*^9, 3.948413712116323*^9}, {
   3.9484137530003357`*^9, 3.948413768483025*^9}, {3.94841382284009*^9, 
   3.9484138250708323`*^9}, {3.948413861625435*^9, 3.9484138858404903`*^9}, 
   3.949090998799925*^9},
 CellLabel->
  "In[444]:=",ExpressionUUID->"71fd7340-684e-4dbb-881b-b1f51fb9f261"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", "type_", ",", 
    RowBox[{"rpts1_", "?", "IsPosInt"}], ",", 
    RowBox[{"rpts2_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    "rectcolors_List", ",", "tricolors_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "GridType", ",", "ShapeType", ",", "scl", ",", "ofst", ",", 
      "shape", ",", "UnitShape", " ", ",", "UnitCell", ",", "grptype", ",", 
      "UCFixes", ",", "rptfunc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<p1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", "\"\<Rect\>\"", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p2 h\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2 v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Obl\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p11m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p1m1\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p11g\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p1g1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<c11m\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<c1m1\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2mm\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2mg\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p2gm\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p2gg h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "4"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", "8"}]}], "}"}]}], "}"}], ",", "\"\<p2gg v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "8"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<c2mm h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "8"}]}], "}"}]}], "}"}], ",", "\"\<c2mm v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Rect\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p4 a\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{
           RowBox[{"1", "/", "2"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p4 d\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], ",", "\"\<p4m\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<p4g\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sqr\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p3 p\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}]}], "}"}]}], "}"}], 
        ",", "\"\<p3 e\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Rect\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], "/", "6"}]}], "}"}]}], "}"}],
         ",", "\"\<p31m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}]}], "}"}]}], "}"}], 
        ",", "\"\<p3m1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p6 p\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p6 e\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}]}], "}"}]}], "}"}], 
        ",", "\"\<p6m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Tri\>\"", ",", "\"\<Tri\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "6"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "_", ",", 
        RowBox[{"{", 
         RowBox[{"Null", ",", "Null"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"UCFixes", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<c11m\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<c1m1\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<c2mm h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<c2mm v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p4g\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\"\<p31m\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}], 
        ",", "\"\<p6 e\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}], 
        ",", "_", ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"GridType", ",", "ShapeType", ",", "scl", ",", "ofst"}], "}"}],
       " ", "=", " ", "Tfm"}], ";", "\[IndentingNewLine]", 
     RowBox[{"scl", " ", "=", " ", 
      RowBox[{"MakeScaleMatrix", "[", "scl", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"ShapeType", ",", "\"\<Rect\>\"", ",", 
        RowBox[{"RectShape", "[", "rectcolors", "]"}], ",", "\"\<Tri\>\"", 
        ",", 
        RowBox[{"TriShape", "[", "tricolors", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"shape", ",", 
        RowBox[{"{", 
         RowBox[{"scl", ",", "ofst"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitCell", "=", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"UnitShape", ",", 
        RowBox[{"AddFixesToTfms", "[", 
         RowBox[{
          RowBox[{"Group2D2L", "[", "grptype", "]"}], ",", "UCFixes"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rptfunc", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"GridType", ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Obl\>\"", "|", "\"\<Rect\>\"", "|", "\"\<Sqr\>\""}], ",",
         "RepeatRect", ",", "\"\<Tri\>\"", ",", "RepeatTri"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rptfunc", "[", 
      RowBox[{"UnitCell", ",", "rpts1", ",", "rpts2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947408878406136*^9, 3.947408941960231*^9}, {
   3.947411865365046*^9, 3.947411878369245*^9}, {3.947411972484981*^9, 
   3.947412027611362*^9}, {3.947412083790491*^9, 3.947412140865674*^9}, {
   3.947412180581088*^9, 3.947412238489147*^9}, {3.947413324789139*^9, 
   3.9474133291693583`*^9}, {3.94741336891514*^9, 3.9474134185342607`*^9}, {
   3.947413569913954*^9, 3.947413587366761*^9}, {3.947413655648039*^9, 
   3.947413691272365*^9}, {3.947509054723722*^9, 3.947509062842937*^9}, {
   3.947509545038747*^9, 3.9475095755508747`*^9}, {3.947509852016017*^9, 
   3.9475098696797733`*^9}, {3.947509906344149*^9, 3.947509908895832*^9}, {
   3.947528094617662*^9, 3.947528095239509*^9}, 3.947666268592043*^9, 
   3.947666304431828*^9, {3.9480725354865*^9, 3.948072644607729*^9}, {
   3.9480728709676*^9, 3.948072875396879*^9}, {3.948072991770796*^9, 
   3.948073077058497*^9}, {3.948073118186729*^9, 3.9480731654378777`*^9}, {
   3.94807319559628*^9, 3.9480732081010647`*^9}, {3.948073258831368*^9, 
   3.948073357775813*^9}, {3.948073394539461*^9, 3.9480733963228903`*^9}, {
   3.948073427814686*^9, 3.948073468726555*^9}, {3.948073509135807*^9, 
   3.94807354361723*^9}, {3.948073576536932*^9, 3.948073642602256*^9}, {
   3.9480736823802147`*^9, 3.948073723764594*^9}, {3.948073777033711*^9, 
   3.9480738088962393`*^9}, {3.948073889223888*^9, 3.948073905410162*^9}, {
   3.948073956973201*^9, 3.9480739638495007`*^9}, {3.9480740042789507`*^9, 
   3.948074029390617*^9}, {3.9480740750565977`*^9, 3.948074099032834*^9}, {
   3.948074249540988*^9, 3.948074308945964*^9}, {3.948074363245919*^9, 
   3.94807442241226*^9}, {3.948074659459873*^9, 3.9480746914252853`*^9}, 
   3.948074750634591*^9, {3.94807480971834*^9, 3.948074891572864*^9}, 
   3.948074959535924*^9, {3.948074991398715*^9, 3.948075083096068*^9}, {
   3.948075138217107*^9, 3.948075176595504*^9}, {3.9480752156104383`*^9, 
   3.948075232623335*^9}, {3.948075304786605*^9, 3.948075334955309*^9}, {
   3.948075375395919*^9, 3.94807542052417*^9}, {3.9480755049823933`*^9, 
   3.9480756163195133`*^9}, {3.948098219493823*^9, 3.948098348447053*^9}, {
   3.9480983794570827`*^9, 3.948098406107854*^9}, {3.94809844716294*^9, 
   3.948098449288808*^9}, {3.948098498972692*^9, 3.948098530108171*^9}, {
   3.9480985777747498`*^9, 3.94809858276619*^9}, {3.948098619538498*^9, 
   3.948098627448189*^9}, {3.948098698901828*^9, 3.948098716975279*^9}, {
   3.9480987765657387`*^9, 3.948098798794333*^9}, {3.948098861653651*^9, 
   3.948098862324688*^9}, {3.9480990215940733`*^9, 3.948099028001607*^9}, 
   3.9480991306858587`*^9, {3.948099175102429*^9, 3.948099175509717*^9}, 
   3.948099247672923*^9, {3.948099414077724*^9, 3.948099447485771*^9}, {
   3.94809949350355*^9, 3.948099497583201*^9}, 3.948099552297768*^9, {
   3.948099701374484*^9, 3.9480997142487593`*^9}, {3.948099754448783*^9, 
   3.948099812377729*^9}, {3.948099872212879*^9, 3.948099902493429*^9}, {
   3.948099964719595*^9, 3.9481000000788727`*^9}, {3.948100079907703*^9, 
   3.9481000855699043`*^9}, {3.9481003098101797`*^9, 3.948100336433557*^9}, {
   3.948100370809257*^9, 3.9481004167970448`*^9}, 3.9481006554288282`*^9, {
   3.9481007859897203`*^9, 3.9481007993095303`*^9}, 3.948100832657778*^9, {
   3.948100870815219*^9, 3.948100888715938*^9}, {3.9481009374665318`*^9, 
   3.9481009660427723`*^9}, {3.948101095279131*^9, 3.948101099334248*^9}, {
   3.948101136896103*^9, 3.948101155544677*^9}, {3.948101206177597*^9, 
   3.9481012334741993`*^9}, {3.9481012729485292`*^9, 
   3.9481013032288103`*^9}, {3.948101370466158*^9, 3.948101394055708*^9}, 
   3.948101644602507*^9, {3.948101718243958*^9, 3.9481017325777483`*^9}, {
   3.9481017650264874`*^9, 3.948101770625689*^9}, {3.9481018214924717`*^9, 
   3.94810182717988*^9}, {3.948101889229578*^9, 3.9481018954221697`*^9}, {
   3.9481019290316896`*^9, 3.948102036299468*^9}, {3.948105118390526*^9, 
   3.94810518043302*^9}, {3.9481052568265953`*^9, 3.9481052729697857`*^9}, {
   3.948105351852913*^9, 3.948105370620283*^9}, {3.948105408453066*^9, 
   3.948105426812434*^9}, {3.9481054761704273`*^9, 3.948105498356455*^9}, {
   3.948105544424721*^9, 3.948105547448403*^9}, {3.948105590257176*^9, 
   3.948105596129839*^9}, {3.948105637316389*^9, 3.948105643411121*^9}, {
   3.94810567809028*^9, 3.948105712488912*^9}, {3.948105848872641*^9, 
   3.9481058837815228`*^9}, {3.9481060554404593`*^9, 3.948106076256063*^9}, {
   3.948106116817882*^9, 3.948106261016602*^9}, {3.948106637849306*^9, 
   3.9481066388804007`*^9}, 3.948106682564068*^9, {3.9481067188281193`*^9, 
   3.948106737372525*^9}, {3.9481072955417852`*^9, 3.94810731183088*^9}, {
   3.948107344338705*^9, 3.948107361127473*^9}, {3.9481073991542463`*^9, 
   3.948107403111436*^9}, {3.948107434504713*^9, 3.9481075042250957`*^9}, {
   3.948107535866642*^9, 3.948107540833809*^9}, {3.9481075821070967`*^9, 
   3.948107583610367*^9}, {3.948107642452573*^9, 3.948107789894701*^9}, {
   3.948107853307057*^9, 3.948107947801321*^9}, {3.94810841542052*^9, 
   3.948108436521871*^9}, {3.948108479131784*^9, 3.948108479866785*^9}, {
   3.9481085927991247`*^9, 3.948108609046598*^9}, {3.948108887984174*^9, 
   3.9481089476234407`*^9}, {3.9481089856415033`*^9, 3.948109038706468*^9}, {
   3.948109185310195*^9, 3.948109199078759*^9}, {3.948109324701474*^9, 
   3.948109334205159*^9}, 3.948109381712556*^9, 3.9481094122840967`*^9, {
   3.948109678435451*^9, 3.948109723560656*^9}, {3.948109816493169*^9, 
   3.9481098249067183`*^9}, {3.948109862955257*^9, 3.948109865861144*^9}, {
   3.948109903540523*^9, 3.948109903931691*^9}, 3.9481099347258453`*^9, {
   3.948119650271319*^9, 3.948119696849139*^9}, {3.9482754841661177`*^9, 
   3.948275491007419*^9}, {3.9482784218501387`*^9, 3.948278429801919*^9}, {
   3.948278827173552*^9, 3.948278909179009*^9}, {3.948278978323862*^9, 
   3.948279037519641*^9}, {3.9482790709077873`*^9, 3.9482793104150248`*^9}, {
   3.948279355360758*^9, 3.948279376055529*^9}, {3.948280020752872*^9, 
   3.948280025468587*^9}, {3.9482800631986933`*^9, 3.948280064957308*^9}, {
   3.9482801199597063`*^9, 3.948280120165729*^9}, {3.948280154305388*^9, 
   3.9482801713750963`*^9}, {3.948280253245126*^9, 3.94828027552096*^9}, {
   3.948280350635755*^9, 3.948280397700261*^9}, {3.948280480568179*^9, 
   3.948280483773149*^9}, {3.948385830119959*^9, 3.948385847665575*^9}, 
   3.9483859046446533`*^9, {3.948385955517367*^9, 3.948385999884078*^9}, {
   3.9483860762461357`*^9, 3.948386172329875*^9}, {3.948386259802079*^9, 
   3.948386269042816*^9}, {3.9483864458851557`*^9, 3.9483864904309998`*^9}, {
   3.9483865273088303`*^9, 3.948386550314713*^9}, {3.948386603280715*^9, 
   3.948386702215317*^9}, {3.948386808594265*^9, 3.948386821569838*^9}, {
   3.948387777068886*^9, 3.948387780475717*^9}, {3.948387825638653*^9, 
   3.948387837600919*^9}, {3.948387902455502*^9, 3.948387930070376*^9}, {
   3.948388164126793*^9, 3.94838816616511*^9}, 3.9483882044061127`*^9, {
   3.948388400803749*^9, 3.9483884241959877`*^9}, {3.9483884943009453`*^9, 
   3.9483885005245256`*^9}, {3.948388557966948*^9, 3.948388558181692*^9}, {
   3.9483886069519444`*^9, 3.94838860724695*^9}, {3.9483887105364532`*^9, 
   3.9483887107190037`*^9}, {3.9483887769615602`*^9, 
   3.9483887773284693`*^9}, {3.9483889957417717`*^9, 3.948389053525564*^9}, {
   3.948389098193207*^9, 3.948389136480873*^9}, {3.948396485932074*^9, 
   3.94839649297193*^9}, {3.9483965435792913`*^9, 3.9483965528970537`*^9}, {
   3.9483966726546*^9, 3.948396688188645*^9}, {3.948396737529962*^9, 
   3.94839674065266*^9}, {3.948398369808333*^9, 3.948398371451483*^9}, {
   3.9483989304946213`*^9, 3.94839893427343*^9}, {3.948398982435583*^9, 
   3.9483990083829327`*^9}, 3.948399044545516*^9, {3.9483991324649267`*^9, 
   3.9483991354794416`*^9}, {3.948399333755908*^9, 3.94839933824406*^9}, {
   3.948399482939084*^9, 3.9483994836254997`*^9}, {3.948402857249071*^9, 
   3.948402865951062*^9}, {3.948402945419653*^9, 3.948402956279142*^9}, {
   3.948403008796627*^9, 3.9484030128584127`*^9}, 3.9484030975871468`*^9, {
   3.94840314091077*^9, 3.9484031565755796`*^9}, {3.948403728824678*^9, 
   3.948403737661767*^9}, {3.9484038021461687`*^9, 3.9484038046154613`*^9}, {
   3.948403836153384*^9, 3.948403840389822*^9}, {3.9484038979189577`*^9, 
   3.948403929374185*^9}, 3.948403971682899*^9, {3.948404007881791*^9, 
   3.9484040084478073`*^9}, {3.948404050770268*^9, 3.948404090081613*^9}, {
   3.94840426258465*^9, 3.948404280661503*^9}, {3.948407024917137*^9, 
   3.948407160592433*^9}, {3.9484072157702017`*^9, 3.948407250410759*^9}, {
   3.948407281783132*^9, 3.948407282148404*^9}, {3.948407313366212*^9, 
   3.9484073167087603`*^9}, {3.948407346846395*^9, 3.948407351725831*^9}, {
   3.9484074235878057`*^9, 3.948407450169808*^9}, {3.948407555645341*^9, 
   3.9484075677893963`*^9}, {3.9484076440560837`*^9, 3.948407706138159*^9}, {
   3.9484077569372463`*^9, 3.948407785755975*^9}, {3.948407857303553*^9, 
   3.9484079076558313`*^9}, {3.948407971571381*^9, 3.948408008778852*^9}, {
   3.9484080413012257`*^9, 3.9484080428443108`*^9}, {3.948408094623694*^9, 
   3.9484081080288277`*^9}, {3.948408143896597*^9, 3.948408147487102*^9}, {
   3.948408184105382*^9, 3.948408210057967*^9}, {3.948408262981873*^9, 
   3.948408266306912*^9}, {3.948408319669909*^9, 3.948408329812264*^9}, {
   3.948408374958928*^9, 3.948408378957703*^9}, {3.948408450921821*^9, 
   3.948408491068337*^9}, {3.948408528674467*^9, 3.9484085624329147`*^9}, {
   3.948408620399613*^9, 3.948408623130148*^9}, {3.9484086597316217`*^9, 
   3.948408663035077*^9}, {3.948408748710546*^9, 3.948408819703012*^9}, {
   3.948408853530102*^9, 3.94840902657931*^9}, {3.948409084910387*^9, 
   3.948409097165516*^9}, {3.948409138855763*^9, 3.9484091541746693`*^9}, {
   3.948409184409245*^9, 3.948409238409626*^9}, {3.9484092743073273`*^9, 
   3.948409276729518*^9}, {3.948409332825921*^9, 3.948409335898779*^9}, {
   3.948409385749137*^9, 3.948409385924178*^9}, {3.948409426607543*^9, 
   3.948409452190061*^9}, {3.948409486320139*^9, 3.94840950779813*^9}, {
   3.9484095690804987`*^9, 3.948409569249511*^9}, {3.948409599987219*^9, 
   3.948409620410502*^9}, {3.948409669797307*^9, 3.948409670331229*^9}, {
   3.948409705854422*^9, 3.948409983372409*^9}, {3.948410017118846*^9, 
   3.948410042342898*^9}, {3.9484100938165417`*^9, 3.948410327110215*^9}, {
   3.9484103594721537`*^9, 3.9484104968615913`*^9}, {3.948410531430594*^9, 
   3.948410554269854*^9}, {3.948410596596456*^9, 3.9484106104552193`*^9}, {
   3.948410686058029*^9, 3.94841068664027*^9}, {3.948410724793807*^9, 
   3.948410751705842*^9}, {3.948410812592875*^9, 3.948410886243832*^9}, {
   3.948410921579071*^9, 3.9484109246684427`*^9}, {3.948411017345429*^9, 
   3.9484110201913958`*^9}, {3.948411071057342*^9, 3.94841112212929*^9}, {
   3.94841202417791*^9, 3.94841208618557*^9}, {3.9484121408909616`*^9, 
   3.94841214204984*^9}, {3.94841218558638*^9, 3.9484121869712067`*^9}, {
   3.948412224253336*^9, 3.9484122524042883`*^9}, {3.9484123241307087`*^9, 
   3.9484124482181263`*^9}, {3.948412534738516*^9, 3.948412559251787*^9}, {
   3.9484127005836563`*^9, 3.9484129734251137`*^9}, {3.948413045890489*^9, 
   3.948413067171*^9}, {3.948413145159017*^9, 3.948413247912304*^9}, {
   3.9484397606672287`*^9, 3.948439761488062*^9}, {3.948439801776084*^9, 
   3.9484398359316893`*^9}, {3.948439906979972*^9, 3.948440048994577*^9}, {
   3.948440109918964*^9, 3.948440125164482*^9}, {3.948440161975377*^9, 
   3.9484402178598843`*^9}, {3.948440260013206*^9, 3.9484402718328037`*^9}, {
   3.9484403038014517`*^9, 3.9484403261195498`*^9}, {3.948440360813394*^9, 
   3.948440391637536*^9}, {3.948440422181263*^9, 3.948440422714897*^9}, {
   3.948440483646906*^9, 3.948440674260013*^9}, {3.9484407160910797`*^9, 
   3.948440720381831*^9}, {3.9484408372288733`*^9, 3.948440856217565*^9}, {
   3.948440915429634*^9, 3.948440918283331*^9}, {3.9484409654402227`*^9, 
   3.948440970253005*^9}, {3.9484410486987743`*^9, 3.94844115771488*^9}, {
   3.948441190082231*^9, 3.948441242124803*^9}, {3.948441314105905*^9, 
   3.948441339232174*^9}, {3.948441543463736*^9, 3.948441558908208*^9}, {
   3.948441608734096*^9, 3.948441621078154*^9}, {3.9484416700106277`*^9, 
   3.9484416867110777`*^9}, {3.948441786193861*^9, 3.948441789305739*^9}, {
   3.948441839116678*^9, 3.948441874020609*^9}, {3.94865522821037*^9, 
   3.948655275684375*^9}, {3.948655320053108*^9, 3.9486553234500313`*^9}, {
   3.948655370964032*^9, 3.948655375378186*^9}, {3.948655432907879*^9, 
   3.94865544282732*^9}, {3.948655523166503*^9, 3.9486556182949333`*^9}, 
   3.948655679660481*^9, 3.949090999970868*^9},
 CellLabel->
  "In[445]:=",ExpressionUUID->"258c42cb-1ce1-4350-92cb-2ede26655ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"rpts1_", "?", "IsPosInt"}], ",", 
    RowBox[{"rpts2_", "?", "IsPosInt"}], ",", "rectcolors_List", ",", 
    "tricolors_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", "type", ",", "rpts1", ",", 
         "rpts2", ",", "\"\<Flags\>\""}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"ShowGroup", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", "type", ",", "rpts1", ",", 
         "rpts2", ",", "\"\<Colors\>\"", ",", "rectcolors", ",", 
         "tricolors"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p1\>\"", ",", "\"\<p2 h\>\"", ",", "\"\<p2 v\>\"", ",", 
        "\"\<p11m\>\"", ",", "\"\<p1m1\>\"", ",", "\"\<p11g\>\"", ",", 
        "\"\<p1g1\>\"", ",", "\"\<c11m\>\"", ",", "\"\<c1m1\>\"", ",", 
        "\"\<p2mm\>\"", ",", "\"\<p2mg\>\"", ",", "\"\<p2gm\>\"", ",", 
        "\"\<p2gg h\>\"", ",", "\"\<p2gg v\>\"", ",", "\"\<c2mm h\>\"", ",", 
        "\"\<c2mm v\>\"", ",", "\"\<p4 a\>\"", ",", "\"\<p4 d\>\"", ",", 
        "\"\<p4m\>\"", ",", "\"\<p4g\>\"", ",", "\"\<p3 p\>\"", ",", 
        "\"\<p3 e\>\"", ",", "\"\<p31m\>\"", ",", "\"\<p3m1\>\"", ",", 
        "\"\<p6 p\>\"", ",", "\"\<p6 e\>\"", ",", "\"\<p6m\>\""}], "}"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947529410029736*^9, 3.94752951404746*^9}, {
   3.947529630937964*^9, 3.947529633449594*^9}, {3.947529798723139*^9, 
   3.947529802426753*^9}, {3.947529906380664*^9, 3.947529907859646*^9}, 
   3.947529958703858*^9, {3.947556330231522*^9, 3.947556335157442*^9}, {
   3.9475583205102043`*^9, 3.947558326404949*^9}, {3.9476132826327753`*^9, 
   3.947613301215665*^9}, {3.9476135171900578`*^9, 3.947613534333727*^9}, 
   3.9476137943108253`*^9, {3.947613891630967*^9, 3.9476139170690517`*^9}, {
   3.947666268594656*^9, 3.947666279623583*^9}, 3.9478812690719976`*^9, {
   3.948108051354265*^9, 3.948108083515547*^9}, {3.948275505758337*^9, 
   3.948275516051556*^9}, {3.948278442454009*^9, 3.9482784486455517`*^9}, {
   3.948279420931951*^9, 3.948279436547368*^9}, {3.948279552439208*^9, 
   3.9482795689563093`*^9}, {3.948280507065508*^9, 3.948280511208158*^9}, {
   3.9483825550305*^9, 3.948382564743908*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"9873dd99-be9c-4a15-afe0-be8e61a86c5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["3+0: Axial groups", "Section",
 CellChangeTimes->{{3.94705655528458*^9, 
  3.947056558676527*^9}},ExpressionUUID->"817743ed-5c10-4b9d-8e8a-\
d1e54e0164b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "scl", ",", "ofst", ",", "flgscl", ",", "ta", ",", 
      "UnitShape", ",", "UnitCell", ",", "grptype"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<C\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<Ch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Cs\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<Cv\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<D h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<D v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<Dh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Dd\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "_", ",", 
        "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"scl", ",", "ofst"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flgscl", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"1", ",", 
        RowBox[{"6", "/", "n"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"scl", " ", "=", " ", 
      RowBox[{"flgscl", "*", "scl"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ta", " ", "=", " ", 
      RowBox[{"Pi", "/", 
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ofst", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"flgscl", ",", "1", ",", "flgscl"}], "}"}], "*", "ofst"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"FlagShape3D", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{"UnitShape", ",", "scl"}], "]"}], ",", "ofst"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GeometricTransformation", "[", 
      RowBox[{"UnitCell", ",", 
       RowBox[{"Group3D", "[", 
        RowBox[{"grptype", ",", "n"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtI03EUB/A/e3ClYVHLKM2wou1BLTSnjtTUEc106UoSNNE1zdaDTBrl
hZZzat7CVJZdLEWjkEpoJiUyTX3YZjKt6XSrKXYTdVulm2Sl/b+/h8MHDucc
zuEEiPNFOQyKosLpgOupkpZmqT12cP7nI6gtS++Aif27eyHL9XAYGt0TxJD6
/XqSF06MwGWG3giv8y4vwNzJSif8ZPzOuEvLN4r3wKcl5n2wpOoMGzJKC7lQ
kjjGg2e94vlwvfieAHbyEpLhwTCny0L7i1XthipraKuV9v0XQRvUebRoF2l7
V6eGoD+HOwMLxJqvsClKYYetknpi2nRA4BL22jF6GGZQ0fHQfe0xHw5zbp6C
dT3KJNg6bBbB2gcV56A++HY6PC9qJn4bmxFDpcF0AdoEJ6Tw47GX+dDcfvEK
Ud0ohyxzXSGZGyotgiZfZRlM2BlRDrldwmrIVC/UwL5RVRP8u1hLXN0W1QmF
YdkvSP+0agBWyA1vYUPMXh1MowTj8Eif0woNfNk83NyjcMJDk3Fr8Ie9awOK
RKUMO22kr9sDCiP8mFA5dHo7NFj9feDgYEE03NLoEwM7ttrioGcgPx7mLrFO
wuRsNVH6xC8F3nrNJQ6kjGRC7YHfWfCD1pILTbNeebCyWy6zk/9zbsDPR+2V
UGPMq4Iel9bUsElecAcmtQW1w/uC8eewSDOhgTqH9BXM6E99Q/YvlulJHW/D
CG1BqnFyz1X2JKTYYxbIZinmYOZyOXFOO7UAN3k3OOBs4OIKmf9O5oKW4JB/
cCXcRDloj4fkMOHMH40njMyq8Ybdz2J3wf9QyPU4
  "],
 CellLabel->
  "In[447]:=",ExpressionUUID->"08b874bf-a2d6-4567-a573-8ca1cae7240f"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Much", " ", "of", " ", "the", " ", "code", " ", "is", " ", "copied", " ", 
   "off", " ", "of", " ", "the", " ", 
   RowBox[{"PieSlice", "[", "]"}], " ", "code", " ", "for", " ", "rosette", 
   " ", "groups"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.947501429527458*^9, 3.947501445421534*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"98a766c7-7e1a-4951-ae53-daaacf6e63eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SemiLune", "[", 
   RowBox[{
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"ndiv_", "?", "IsPosInt"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lngfracs", ",", "latfracs", ",", "lngpts", ",", "latpts", ",", "llpts", 
      ",", "pts", ",", "llclrs", ",", "clrs", ",", "ix", ",", "llixs", ",", 
      "plix", ",", "quadvts", ",", "trivts", ",", "polyvts"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Longitude", " ", "and", " ", "latitude", " ", "fractions"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lngfracs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "ndiv"}], "]"}], "/", 
       RowBox[{"N", "[", "ndiv", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"latfracs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"ntess", "-", "1"}]}], "]"}], "/", 
       RowBox[{"N", "[", "ntess", "]"}]}]}], " ", ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{"Longitude", " ", "and", " ", "latitude", " ", "points"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"lngpts", " ", "=", " ", 
      RowBox[{"CosSin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Pi", "/", "n"}]}], ")"}], "*", "lngfracs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"latpts", " ", "=", " ", 
      RowBox[{"CosSin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "2"}], ")"}], "*", "latfracs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"llpts", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"latp", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"lngp", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"latp", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"lngp", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"latp", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"latp", ",", "latpts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"lngp", ",", "lngpts"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "the", " ", "pole", " ", "point"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"pts", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"llpts", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Longitude", " ", "and", " ", "latitude", " ", "colors"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"llclrs", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"colors", ",", "3"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"latf", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "latf"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "lngf"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "latf"}], ")"}], "*", "lngf"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"latf", ",", "latfracs"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"lngf", ",", "lngfracs"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "the", " ", "pole", " ", "color"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"clrs", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"llclrs", ",", 
        RowBox[{"First", "[", "colors", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", "point", " ", "indexes"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"ix", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"llixs", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ix", "++"}], ",", 
        RowBox[{"{", 
         RowBox[{"lat", ",", "0", ",", 
          RowBox[{"ntess", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"lng", ",", "0", ",", "ndiv"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plix", " ", "=", " ", "ix"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", "quads"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"quadvts", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"llixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"lat", "+", "1"}], ",", 
               RowBox[{"lng", "+", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"llixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"lat", "+", "1"}], ",", 
               RowBox[{"lng", "+", "2"}]}], "]"}], "]"}], ",", 
            RowBox[{"llixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"lat", "+", "2"}], ",", 
               RowBox[{"lng", "+", "2"}]}], "]"}], "]"}], ",", 
            RowBox[{"llixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"lat", "+", "2"}], ",", 
               RowBox[{"lng", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"lat", ",", "0", ",", 
            RowBox[{"ntess", "-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"lng", ",", "0", ",", 
            RowBox[{"ndiv", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", "triangles"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"trivts", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"llixs", "[", 
           RowBox[{"[", 
            RowBox[{"ntess", ",", 
             RowBox[{"lng", "+", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"llixs", "[", 
           RowBox[{"[", 
            RowBox[{"ntess", ",", 
             RowBox[{"lng", "+", "2"}]}], "]"}], "]"}], ",", "plix"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"lng", ",", "0", ",", 
          RowBox[{"ndiv", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Assemble", " ", "these", " ", "pieces"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"polyvts", " ", "=", " ", 
      RowBox[{"quadvts", " ", "~", " ", "Join", " ", "~", " ", "trivts"}]}], 
     " ", ";", "\[IndentingNewLine]", 
     RowBox[{"GraphicsComplex", "[", 
      RowBox[{"pts", ",", 
       RowBox[{"Polygon", "[", "polyvts", "]"}], ",", 
       RowBox[{"VertexColors", "->", "clrs"}], ",", 
       RowBox[{"VertexNormals", "->", "pts"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947499563959815*^9, 3.947499569639154*^9}, {
   3.9474996945627193`*^9, 3.947499703762103*^9}, {3.947501065539918*^9, 
   3.947501071852091*^9}, {3.94750116427008*^9, 3.947501181494979*^9}, {
   3.9475012257042513`*^9, 3.947501227112297*^9}, {3.947501296538351*^9, 
   3.947501331108272*^9}, 3.94750141616953*^9, {3.947501457501759*^9, 
   3.947501458077574*^9}, {3.9475020339885073`*^9, 3.947502036721201*^9}, {
   3.947502088785369*^9, 3.947502625528442*^9}, {3.947502697801239*^9, 
   3.947502730834092*^9}, {3.947502769177503*^9, 3.947502915418702*^9}, {
   3.947502994075487*^9, 3.94750300133946*^9}, {3.947503036051326*^9, 
   3.947503613154448*^9}, {3.947503662371483*^9, 3.94750369263029*^9}, {
   3.947503740636639*^9, 3.947503756894024*^9}, 3.947504019085754*^9, {
   3.9475042142814503`*^9, 3.947504240044997*^9}, {3.947504412780438*^9, 
   3.947504414019744*^9}, {3.947504501358226*^9, 3.947504506085725*^9}, {
   3.94750457606385*^9, 3.947504576239242*^9}, {3.9475046094425488`*^9, 
   3.9475046096078043`*^9}, {3.9475322879802647`*^9, 3.947532296723928*^9}, {
   3.947532326917964*^9, 3.9475324059776087`*^9}, {3.947560789872808*^9, 
   3.9475608109340887`*^9}, {3.9475608558705063`*^9, 3.947560878981447*^9}, 
   3.947561731889142*^9, {3.9475623000718946`*^9, 3.9475623343438463`*^9}, {
   3.947666336377281*^9, 3.9476663582401*^9}, {3.9481100220588913`*^9, 
   3.948110026098866*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"eeb508d8-c7f7-4bea-b4ab-34d24c0c9ffe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullLune", "[", 
   RowBox[{
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"ndiv_", "?", "IsPosInt"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sl", ",", "slx"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sl", " ", "=", " ", 
      RowBox[{"SemiLune", "[", 
       RowBox[{"n", ",", "ndiv", ",", "ntess", ",", 
        RowBox[{"colors", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"slx", " ", "=", " ", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{
        RowBox[{"SemiLune", "[", 
         RowBox[{"n", ",", "ndiv", ",", "ntess", ",", 
          RowBox[{"colors", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], "]"}], 
        ",", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sl", ",", "slx"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.947504252311172*^9, 3.947504367376501*^9}, {
  3.947504641928451*^9, 3.947504644223393*^9}, {3.947532418821623*^9, 
  3.947532467711525*^9}, {3.9475327898496523`*^9, 3.947532792240892*^9}, {
  3.947560818101308*^9, 3.947560820636767*^9}, {3.9475608934458647`*^9, 
  3.947560894757831*^9}, {3.9476663363793173`*^9, 3.947666357306734*^9}},
 CellLabel->
  "In[450]:=",ExpressionUUID->"98db37da-0ad4-42b8-b164-b9236062a5f8"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Takes", " ", "the", " ", "type", " ", "of", " ", "the", " ", "group", " ", 
   "and", " ", "returns", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "multipler", " ", "for", " ", "number", " ", "of", " ", "segmnets", " ", 
      "n"}], ",", " ", 
     RowBox[{"extent", ":", " ", 
      RowBox[{"pole", "-", "to", "-", 
       RowBox[{"equator", " ", "0"}]}]}], ",", " ", 
     RowBox[{"pole", "-", "to", "-", 
      RowBox[{"pole", " ", "1"}]}]}], "}"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.947561803570505*^9, 3.947561883256482*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"e46590c7-399d-4dd0-bd62-43fe14dd0690"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "clrsfull_List", ",", 
    "clrssemi_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "lnnum", ",", "lntype", ",", "USNum", ",", "USFunc", ",", 
      "ndiv", ",", "UnitShape", ",", "grptype", ",", "colors"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<C\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<Ch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", "\"\<Cs\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<Cv\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<D h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", "\"\<D v\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<Dh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", "\"\<Dd\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", "_", ",", "Null"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", " ", "===", " ", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lnnum", ",", "lntype"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"USNum", " ", "=", " ", 
      RowBox[{"n", "*", "lnnum"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"USFunc", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "lntype", ",", "0", ",", "SemiLune", ",", "1", ",", "FullLune"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "lntype", ",", "0", ",", "clrssemi", ",", "1", ",", "clrsfull"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ndiv", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}], "*", 
        RowBox[{"ntess", "/", "USNum"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"USFunc", "[", 
       RowBox[{"USNum", ",", "ndiv", ",", "ntess", ",", "colors"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GeometricTransformation", "[", 
      RowBox[{"UnitShape", ",", 
       RowBox[{"Group3D", "[", 
        RowBox[{"grptype", ",", "n"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054586078322*^9, 3.947054632298642*^9}, {3.9470546631479*^9, 
   3.947054678961396*^9}, {3.947054826607278*^9, 3.947054842556467*^9}, {
   3.9470548942711487`*^9, 3.947054905042347*^9}, {3.947055219320641*^9, 
   3.947055287526526*^9}, {3.947055829037938*^9, 3.947056053783321*^9}, {
   3.947056084597134*^9, 3.947056108364779*^9}, {3.94705620851604*^9, 
   3.947056425975778*^9}, 3.9470564613480253`*^9, {3.9472540219460917`*^9, 
   3.947254026176022*^9}, {3.9472541420884657`*^9, 3.947254144194005*^9}, {
   3.9472548103052883`*^9, 3.947255003996256*^9}, {3.947255047035267*^9, 
   3.947255124229031*^9}, {3.947255781834041*^9, 3.947255788958579*^9}, {
   3.947365800815893*^9, 3.947365802287736*^9}, {3.947500569782229*^9, 
   3.947500604045899*^9}, {3.947503803476543*^9, 3.947503803724104*^9}, {
   3.9475041357732687`*^9, 3.947504136012405*^9}, {3.947504722410108*^9, 
   3.947504820827474*^9}, {3.947504885996855*^9, 3.947504966250511*^9}, {
   3.9475050013199787`*^9, 3.9475050937647676`*^9}, {3.947505139316798*^9, 
   3.9475051663569717`*^9}, {3.947505239307664*^9, 3.947505296961622*^9}, {
   3.947532489656453*^9, 3.947532624708407*^9}, {3.947532661271358*^9, 
   3.9475327542800922`*^9}, {3.947558906591482*^9, 3.947558907515729*^9}, {
   3.947558968493726*^9, 3.947558995734174*^9}, {3.947560426004451*^9, 
   3.947560518873493*^9}, {3.9475607507674932`*^9, 3.94756075906995*^9}, {
   3.9475609422357483`*^9, 3.947560954132585*^9}, {3.9475619840111313`*^9, 
   3.9475619875387278`*^9}, {3.947562059732007*^9, 3.947562084243845*^9}, {
   3.9475622075901947`*^9, 3.947562212749645*^9}, {3.947563127017354*^9, 
   3.947563128334396*^9}, {3.947666336381377*^9, 3.9476663573092413`*^9}, {
   3.948199229379735*^9, 3.948199230458417*^9}, {3.9482052822285643`*^9, 
   3.948205331259945*^9}, {3.94833692653018*^9, 3.948336931095134*^9}, {
   3.948338404832999*^9, 3.94833842554891*^9}, {3.948371506630507*^9, 
   3.948371506931169*^9}, {3.948373237369293*^9, 3.948373304221612*^9}, {
   3.948373429950425*^9, 3.948373442591419*^9}, 3.948688192000971*^9, {
   3.949067162050988*^9, 3.9490672067941*^9}, {3.949071882575005*^9, 
   3.949071882936143*^9}},
 CellLabel->
  "In[452]:=",ExpressionUUID->"990a991c-90fd-4a3f-8eef-576905d76e45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "clrsfull_List", ",", 
    "clrssemi_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"ShowGroup", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}], ",", "type", ",", "n", ",", 
          "\"\<Flags\>\""}], "]"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "]"}], ",", 
          RowBox[{"ShowGroup", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", "0"}], "}"}], ",", "type", ",", "n", ",", 
            "\"\<Colors\>\"", ",", "ntess", ",", "clrsfull", ",", 
            "clrssemi"}], "]"}]}], "}"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<C\>\"", ",", "\"\<Ch\>\"", ",", "\"\<Cs\>\"", ",", "\"\<Cv\>\"", 
        ",", "\"\<D h\>\"", ",", "\"\<D v\>\"", ",", "\"\<Dh\>\"", ",", 
        "\"\<Dd\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947530912494882*^9, 3.947531027120409*^9}, {
  3.947531126947091*^9, 3.9475311451227093`*^9}, {3.94753264054107*^9, 
  3.9475326525334253`*^9}, {3.94756076335528*^9, 3.947560767373103*^9}, {
  3.94756093278868*^9, 3.947560935259692*^9}, {3.947562247125575*^9, 
  3.947562248269538*^9}, {3.947666336383088*^9, 3.947666357310402*^9}, {
  3.9481992356251593`*^9, 3.9481992366928873`*^9}, {3.948202669729566*^9, 
  3.948202676697484*^9}, {3.9482052293902597`*^9, 3.948205270026963*^9}, {
  3.948205336381427*^9, 3.9482053447494287`*^9}, {3.948371594369458*^9, 
  3.9483715953209057`*^9}, {3.948371688795897*^9, 3.948371720582367*^9}, {
  3.948374106306719*^9, 3.9483741123401613`*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"0fa9a483-f228-4ad2-a571-5ff550715759"]
}, Closed]],

Cell[CellGroupData[{

Cell["3+0: Quasi-Spherical groups", "Section",
 CellChangeTimes->{{3.9472536952227163`*^9, 
  3.9472537019851713`*^9}},ExpressionUUID->"403dd397-fb12-4757-a39e-\
272f790d6692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", "type_", ",", "\"\<Flags\>\""}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"FlagTfm", ",", "Flag"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FlagTfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<V\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
        "\"\<Vh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
        "\"\<T\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Th\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Td\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<O\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Oh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<I\>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<Ih\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "6"}]}], "}"}]}], "}"}], ",", "_", ",", 
        "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FlagTfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flag", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{
          RowBox[{"FlagShape3D", "[", "]"}], ",", 
          RowBox[{"FlagTfm", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"FlagTfm", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GeometricTransformation", "[", 
      RowBox[{"Flag", ",", 
       RowBox[{"Group3D", "[", "type", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948201195135497*^9, 3.948201215559663*^9}, {
  3.948201250859832*^9, 3.9482014248046017`*^9}, {3.948201508967417*^9, 
  3.948201510686378*^9}, {3.948201545080102*^9, 3.948201566665781*^9}, {
  3.94820159828161*^9, 3.94820181135089*^9}, {3.9482018522449217`*^9, 
  3.948202007244124*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"7fd9fcfb-f5c1-42d3-9e04-db0469508351"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DirsVEF", "[", "\"\<V\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"id3", ",", 
     RowBox[{"-", "id3"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9481391997972717`*^9, 3.948139216593946*^9}},
 CellLabel->
  "In[455]:=",ExpressionUUID->"ebca96a7-70c7-4e71-9e8d-873a474804ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DirsVEF", "[", "\"\<T\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"AllSignsEven", "[", "3", "]"}], ",", 
    RowBox[{"ExpandWithSignsMulti", "[", "id3", "]"}], ",", 
    RowBox[{"AllSignsOdd", "[", "3", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9481392199786654`*^9, 3.948139224633967*^9}, {
   3.9481392882915773`*^9, 3.948139321068492*^9}, 3.948139390369337*^9},
 CellLabel->
  "In[456]:=",ExpressionUUID->"31a816d6-8ce8-4fd2-a397-cbd07ba107e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DirsVEF", "[", "\"\<O\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ExpandWithSignsMulti", "[", "id3", "]"}], ",", 
    RowBox[{"ExpandWithSignsMulti", "[", 
     RowBox[{"Permutations", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"AllSigns", "[", "3", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.948139226172222*^9, 3.948139237962393*^9}, {
  3.94813940435907*^9, 3.9481394414344053`*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"9d412c60-efe1-409f-ae34-3b2bb0fba251"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DirsVEF", "[", "\"\<I\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "qts", "}"}], ",", 
    RowBox[{
     RowBox[{"qts", " ", "=", " ", 
      RowBox[{"GroupQt", "[", "\"\<I\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Rest", " ", "/@", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"qts", ",", 
          RowBox[{"q", " ", "|->", " ", 
           RowBox[{
            RowBox[{"First", "[", "q", "]"}], " ", "==", " ", "csa"}]}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"csa", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sqrt", "[", "5", "]"}], "+", "1"}], ")"}], "/", "4"}], 
           ",", "0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948139238915164*^9, 3.9481392515009403`*^9}, {
  3.948139462273649*^9, 3.9481394707214117`*^9}, {3.94813952452392*^9, 
  3.9481396676315527`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"22a8a1a3-03e0-4f2e-a628-5aef6a95c6b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosestIndexes", "[", 
   RowBox[{"veclist_List", ",", "refvec_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vecprods", ",", "maxvp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vecprods", " ", "=", " ", 
      RowBox[{"Expand", "[", 
       RowBox[{"veclist", ".", "refvec"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxvp", " ", "=", " ", 
      RowBox[{"Max", "[", "vecprods", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "vecprods", "]"}], "]"}], ",", 
       RowBox[{"ix", " ", "|->", " ", 
        RowBox[{
         RowBox[{"vecprods", "[", 
          RowBox[{"[", "ix", "]"}], "]"}], " ", "==", " ", "maxvp"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948181961308094*^9, 3.948182122363427*^9}, {
  3.9481822724800577`*^9, 3.94818227633657*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"edb01310-35ef-4a7f-994b-cd58c1d2daf4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosestIndxList", "[", 
   RowBox[{"veclist_List", ",", "refvcList_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ClosestIndexes", "[", 
     RowBox[{"veclist", ",", "rfvc"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"rfvc", ",", "refvcList"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948182213126046*^9, 3.9481822852171583`*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"7f38376d-2406-4556-beca-62ba1fb7d82f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrisVEF", "[", "dvef_List", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"venr", ",", "vfnr", ",", "efnr", ",", "vteds", ",", "vei"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"venr", " ", "=", " ", 
      RowBox[{"ClosestIndxList", "[", 
       RowBox[{
        RowBox[{"dvef", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"dvef", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vfnr", " ", "=", "  ", 
      RowBox[{"ClosestIndxList", "[", 
       RowBox[{
        RowBox[{"dvef", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"dvef", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"efnr", " ", "=", "  ", 
      RowBox[{"ClosestIndxList", "[", 
       RowBox[{
        RowBox[{"dvef", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"dvef", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vteds", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "venr", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"venr", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"vei", " ", "=", " ", 
           RowBox[{"Intersection", "[", 
            RowBox[{
             RowBox[{"vfnr", "[", 
              RowBox[{"[", 
               RowBox[{"ve", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"efnr", "[", 
              RowBox[{"[", 
               RowBox[{"ve", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ve", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ve", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "k"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "vei"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ve", ",", "vteds"}], "}"}]}], "]"}], ",", "1"}], "]"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948182165198205*^9, 3.948182190419375*^9}, {
  3.948182290289485*^9, 3.9481823751251373`*^9}, {3.9481825288457727`*^9, 
  3.948182672294107*^9}, {3.9481827927862663`*^9, 3.948182928848971*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"fdb17db0-8692-45b5-9c6b-fa317a5c3f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriVtsVEF", "[", "type_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vtslst", ",", "trilst", ",", "nmvts"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vtslst", " ", "=", " ", 
      RowBox[{"DirsVEF", "[", "type", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trilst", " ", "=", "  ", 
      RowBox[{"TrisVEF", "[", "vtslst", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nmvts", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{"N", "[", "#", "]"}], "]"}], "&"}], ",", "vtslst", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"nmvts", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", 
          RowBox[{"t", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "trilst"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "3"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9481863399768953`*^9, 3.948186511846332*^9}, {
  3.948186586598132*^9, 3.948186643088552*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"434cfec2-8868-4cf2-8035-2898de1b054a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowTris", "[", "type_", "]"}], " ", ":=", " ", 
  RowBox[{"Polygon", "[", 
   RowBox[{"TriVtsVEF", "[", "type", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948183014200728*^9, 3.948183063969655*^9}, {
  3.948183109643746*^9, 3.948183296737092*^9}, {3.948186529473053*^9, 
  3.948186537736964*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"7c263ded-8913-4491-8409-cd0c23649e86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriTess", "[", 
   RowBox[{"vts_List", ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "flip", ",", "ix", ",", "tvixs", ",", "wts", ",", "trivts", ",", 
      "triclrs", ",", "ofst1", ",", "ofst2", ",", "tris1", ",", "tris2", ",", 
      "tris"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Need", " ", "to", " ", "keep", " ", "constant", " ", "orientation", " ",
       "of", " ", "the", " ", "triangles"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"flip", " ", "=", " ", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{"Det", "[", "vts", "]"}], "]"}], " ", "<", " ", "0"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"ix", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tvixs", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ix", "++"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "ntess"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           RowBox[{"ntess", "-", "i"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wts", " ", "=", "  ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ntess", "-", "i", "-", "j"}], ",", "j", ",", "i"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "ntess"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", 
              RowBox[{"ntess", "-", "i"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], "/", 
        RowBox[{"N", "[", "ntess", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"trivts", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{"w", ".", "vts"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"w", ",", "wts"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"triclrs", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{"colors", ",", "w"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"w", ",", "wts"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ofst1", ",", "ofst2"}], "}"}], " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{"flip", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tris1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "ofst1", "+", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "ofst2", "+", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"ntess", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           RowBox[{"ntess", "-", "i", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tris2", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "ofst2", "+", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "ofst1", "+", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"tvixs", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"ntess", "-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           RowBox[{"ntess", "-", "i", "-", "2"}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ";", "\[IndentingNewLine]", 
     RowBox[{"tris", " ", "=", "  ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"tris1", ",", "1"}], "]"}], " ", "~", "Join", "~", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"tris2", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"GraphicsComplex", "[", 
      RowBox[{"trivts", ",", 
       RowBox[{"Polygon", "[", "tris", "]"}], ",", 
       RowBox[{"VertexColors", "->", "triclrs"}], ",", 
       RowBox[{"VertexNormals", "->", "trivts"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.948183784149935*^9, 3.948183789118699*^9}, {
   3.948183819799941*^9, 3.948183821719597*^9}, {3.9481839050877867`*^9, 
   3.948183936455914*^9}, {3.948184000591756*^9, 3.948184050983863*^9}, {
   3.9481840845287237`*^9, 3.948184088048847*^9}, 3.948184119270289*^9, {
   3.948184244366*^9, 3.948184252708321*^9}, {3.9481843600094423`*^9, 
   3.948184475500592*^9}, {3.948184583984366*^9, 3.9481846026002493`*^9}, {
   3.948184635923894*^9, 3.948184639153481*^9}, {3.9481847058995543`*^9, 
   3.948184710410996*^9}, {3.948184781167159*^9, 3.948184818253623*^9}, {
   3.9481849218636723`*^9, 3.948185246411133*^9}, {3.94818528466151*^9, 
   3.94818531986349*^9}, {3.948185374688114*^9, 3.948185545986204*^9}, {
   3.948185596307775*^9, 3.948185637732136*^9}, {3.948187871358899*^9, 
   3.948188062880971*^9}, {3.9481881422737303`*^9, 3.948188156625787*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"3e3ac490-4417-4e5f-8cfe-a31f27e1a03c"],

Cell["\<\
The colors are three lists of {vertex color, edge color, face color} for a \
triangle-faced polyhedron. The lists are for both parities, positive parity, \
and negative parity.

Here, the octahedral-face parity is the product of each \
face\[CloseCurlyQuote]s direction-vector components. Other formulations of \
octahedral-face locations may require different formulations.\
\>", "Text",
 CellChangeTimes->{{3.948190863973225*^9, 3.9481908762055798`*^9}, {
  3.948192392040593*^9, 3.948192513245447*^9}, {3.9491084953009653`*^9, 
  3.949108583717333*^9}},ExpressionUUID->"94877578-1020-42ca-b1a7-\
2634f9649649"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", "type_", ",", "\"\<Colors\>\"", ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colorsets_List"}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "TriType", ",", "Refl", ",", "bothclrs", ",", "posclrs", ",", "negclrs", 
      ",", "clrs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TriType", ",", "Refl"}], "}"}], " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<V\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<V\>\"", ",", "0"}], "}"}], ",", "\"\<Vh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<V\>\"", ",", "1"}], "}"}], ",", "\"\<T\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<T\>\"", ",", "0"}], "}"}], ",", "\"\<Th\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<O\>\"", ",", "2"}], "}"}], ",", "\"\<Td\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<T\>\"", ",", "1"}], "}"}], ",", "\"\<O\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<O\>\"", ",", "0"}], "}"}], ",", "\"\<Oh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<O\>\"", ",", "1"}], "}"}], ",", "\"\<I\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<I\>\"", ",", "0"}], "}"}], ",", "\"\<Ih\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<I\>\"", ",", "1"}], "}"}], ",", "_", ",", 
        RowBox[{"{", 
         RowBox[{"Null", ",", "Null"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TriType", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bothclrs", ",", "posclrs", ",", "negclrs"}], "}"}], " ", "=", 
      " ", "colorsets"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"clrs", " ", "=", " ", 
         RowBox[{"Switch", "[", 
          RowBox[{"Refl", ",", "0", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Det", "[", "t", "]"}], ">", "0"}], ",", "posclrs", ",",
              "negclrs"}], "]"}], ",", "1", ",", "bothclrs", ",", "2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Det", "[", "t", "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Times", " ", "@@", " ", 
                  RowBox[{"t", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ")"}], ">", 
              "0"}], ",", "posclrs", ",", "negclrs"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"TriTess", "[", 
         RowBox[{"t", ",", "ntess", ",", "clrs"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"TriVtsVEF", "[", "TriType", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9481857802301083`*^9, 3.948185784085689*^9}, {
   3.948185835847603*^9, 3.9481858538384447`*^9}, {3.948186004033836*^9, 
   3.9481860398019238`*^9}, {3.948186069929916*^9, 3.948186095587297*^9}, {
   3.94818612640551*^9, 3.9481862200456667`*^9}, {3.948186779809304*^9, 
   3.948186780413485*^9}, {3.948186987995974*^9, 3.948187030068774*^9}, {
   3.948187091517043*^9, 3.948187093304645*^9}, {3.948187128113659*^9, 
   3.9481871301377773`*^9}, {3.948188418339589*^9, 3.948188677183093*^9}, 
   3.948188840457725*^9, {3.948199278299733*^9, 3.9481992792985973`*^9}, {
   3.949108230700677*^9, 3.9491082373772078`*^9}, {3.9491082760515757`*^9, 
   3.949108450949501*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"3957c010-713a-4540-9766-73d96a0d5d6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colorsets_List"}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"ShowGroup", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}], ",", "type", ",", 
          "\"\<Flags\>\""}], "]"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "]"}], ",", 
          RowBox[{"ShowGroup", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", "0"}], "}"}], ",", "type", ",", 
            "\"\<Colors\>\"", ",", "ntess", ",", "colorsets"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<V\>\"", ",", "\"\<Vh\>\"", ",", "\"\<T\>\"", ",", "\"\<Th\>\"", 
        ",", "\"\<Td\>\"", ",", "\"\<O\>\"", ",", "\"\<Oh\>\"", ",", 
        "\"\<I\>\"", ",", "\"\<Ih\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.947530912494882*^9, 3.947531027120409*^9}, {
   3.947531126947091*^9, 3.9475311451227093`*^9}, {3.94753264054107*^9, 
   3.9475326525334253`*^9}, {3.94756076335528*^9, 3.947560767373103*^9}, {
   3.94756093278868*^9, 3.947560935259692*^9}, {3.947562247125575*^9, 
   3.947562248269538*^9}, {3.947666336383088*^9, 3.947666357310402*^9}, {
   3.948193197417165*^9, 3.948193223829133*^9}, {3.948202064903571*^9, 
   3.948202076706164*^9}, 3.9490927172057953`*^9, {3.949108592582947*^9, 
   3.949108596423067*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"cc7fd42d-736a-48f3-96a4-b39bb06ad68f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBBaseColors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], ";", " ", 
  RowBox[{"RGBColorSets", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", " ", 
        RowBox[{"Lighter", "[", "#", "]"}], ",", " ", 
        RowBox[{"Darker", "[", "#", "]"}]}], "}"}], "&"}], " ", "/@", " ", 
     "RGBBaseColors"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.94910860051066*^9, 3.9491086583089743`*^9}, {
  3.949108688630622*^9, 3.949108699932343*^9}, {3.9491087622500896`*^9, 
  3.949108778792491*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"164dbfba-6d36-4a25-be95-8a33440cb549"]
}, Closed]],

Cell[CellGroupData[{

Cell["3+1: Cylinder groups", "Section",
 CellChangeTimes->{{3.94705655528458*^9, 3.947056580723856*^9}, {
  3.948203483839231*^9, 3.9482034857731*^9}, {3.948205050882349*^9, 
  3.948205062627372*^9}},ExpressionUUID->"2ad60d5e-8cfa-46fc-9b4a-\
7b153c57941d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Group3D1LVertScl", "[", 
   RowBox[{"type_", ",", "n_", ",", "scl_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"ele", " ", "|->", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "scl"}], "}"}], "*", "ele"}]}], ")"}], " ", "/@", 
   " ", 
   RowBox[{"Group3D1L", "[", 
    RowBox[{"type", ",", "n"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.949002849014656*^9, 3.949002935241633*^9}},
 CellLabel->
  "In[468]:=",ExpressionUUID->"69c7a79f-7fac-4609-8db1-1a2dec932d17"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"axrpts_", "?", "IsPosInt"}], ",", "\"\<Flags\>\""}], "]"}], " ", 
  ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "flgscl", ",", "ofst", ",", "scl", ",", "UnitShape", ",", 
      "UnitCell", ",", "grptype"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<C\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<D h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<D v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<Ch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Cv\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<Cs\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
        "\"\<Cvx\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<Chz\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Cvz\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
        ",", "\"\<Dh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Dhx\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Dd\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Ddx h\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Ddx v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Dhz h\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "4"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "\"\<Dhz v\>\"", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "8"}], ",", "1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", "_", ",", 
        "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"flgscl", ",", "ofst"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"scl", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"1", ",", 
        RowBox[{"6", "/", "n"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"flgscl", " ", "*=", " ", "scl"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ofst", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"flgscl", ",", "1", ",", "flgscl"}], "}"}], "*", "ofst"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"FlagShape3D", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"Translate", "[", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{"UnitShape", ",", "scl"}], "]"}], ",", "ofst"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RepeatVert", "[", 
      RowBox[{
       RowBox[{"GeometricTransformation", "[", 
        RowBox[{"UnitCell", ",", 
         RowBox[{"Group3D1LVertScl", "[", 
          RowBox[{"grptype", ",", "n", ",", "scl"}], "]"}]}], "]"}], ",", 
       "axrpts", ",", "scl"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9484420406534567`*^9, 3.948442064485919*^9}, {
   3.948655827379703*^9, 3.948655842965517*^9}, {3.948655878034531*^9, 
   3.94865589654873*^9}, {3.94865597723423*^9, 3.9486560303364887`*^9}, {
   3.9486560735665693`*^9, 3.948656074026433*^9}, {3.948656113491005*^9, 
   3.948656123585992*^9}, {3.9486577863890953`*^9, 3.94865778754803*^9}, {
   3.9486609764719763`*^9, 3.948660976634652*^9}, {3.9486879585466213`*^9, 
   3.948687970705777*^9}, 3.948688049370221*^9, {3.948688765076817*^9, 
   3.948688794111615*^9}, {3.948688831469408*^9, 3.948688947971106*^9}, {
   3.9486890827085648`*^9, 3.948689129908793*^9}, {3.948689291003908*^9, 
   3.9486893132803*^9}, 3.948690074413147*^9, {3.949002519313377*^9, 
   3.949002591103107*^9}, {3.949003034161944*^9, 3.949003039189001*^9}, {
   3.949003505659986*^9, 3.949003513341044*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"64bf96ab-1fd9-494b-a64d-690d0a788ed8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CylSeg", "[", 
   RowBox[{
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"nhdiv_", "?", "IsPosInt"}], ",", "ht_", ",", 
    RowBox[{"nvdiv_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "hrzfracs", ",", "vrtfracs", ",", "hrzpts", ",", "vrtpts", ",", "pts", 
      ",", "clrs12", ",", "ptclrs", ",", "ix", ",", "ptixs", ",", "polyvts", 
      ",", "vnrms"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Horizontal", " ", "and", " ", "vertical", " ", "fractions"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hrzfracs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "nhdiv"}], "]"}], "/", 
       RowBox[{"N", "[", "nhdiv", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vrtfracs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "nvdiv"}], "]"}], "/", 
       RowBox[{"N", "[", "nvdiv", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Horizontal", " ", "and", " ", "vertical", " ", "points"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"hrzpts", " ", "=", " ", 
      RowBox[{"CosSin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Pi", "/", "n"}]}], ")"}], "*", "hrzfracs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vrtpts", " ", "=", " ", 
      RowBox[{"ht", "*", "vrtfracs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Combined", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"pts", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"hp", ",", 
            RowBox[{"{", "vp", "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"vp", ",", "vrtpts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"hp", ",", "hrzpts"}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Combined", " ", "colors"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"clrs12", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", "f"}], 
           "]"}], ",", 
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], ",", "f"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "hrzfracs"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ptclrs", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Blend", "[", 
           RowBox[{"c12", ",", "f"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "vrtfracs"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c12", ",", "clrs12"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", "point", " ", "indexes"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"ix", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ptixs", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ix", "++"}], ",", 
        RowBox[{"{", 
         RowBox[{"iv", ",", "0", ",", "nvdiv"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ih", ",", "0", ",", "nhdiv"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "the", " ", 
       RowBox[{"polygons", ":", " ", 
        RowBox[{"all", " ", "quads"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"polyvts", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ptixs", "[", 
             RowBox[{"[", 
              RowBox[{"iv", ",", "ih"}], "]"}], "]"}], ",", 
            RowBox[{"ptixs", "[", 
             RowBox[{"[", 
              RowBox[{"iv", ",", 
               RowBox[{"ih", "+", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"ptixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"iv", "+", "1"}], ",", 
               RowBox[{"ih", "+", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"ptixs", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"iv", "+", "1"}], ",", "ih"}], "]"}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"iv", ",", "nvdiv"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ih", ",", "nhdiv"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"vnrms", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pt", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pt", ",", "pts"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GraphicsComplex", "[", 
      RowBox[{"pts", ",", 
       RowBox[{"Polygon", "[", "polyvts", "]"}], ",", 
       RowBox[{"VertexColors", "->", "ptclrs"}], ",", 
       RowBox[{"VertexNormals", "->", "vnrms"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.94903687789425*^9, 3.94903692764662*^9}, {
   3.949037800764592*^9, 3.949037992816234*^9}, {3.9490392870481863`*^9, 
   3.949039338265291*^9}, 3.949039369033225*^9, {3.9490394131779613`*^9, 
   3.949039642801399*^9}, {3.9490397048934526`*^9, 3.949039752622848*^9}, {
   3.949039807865226*^9, 3.949040147735474*^9}},
 CellLabel->
  "In[470]:=",ExpressionUUID->"6d8bd5aa-cd40-409d-a2cf-08485e5fbce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowGroup", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], ",", "type_", ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"axrpts_", "?", "IsPosInt"}], ",", "\"\<Colors\>\"", ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Tfm", ",", "hrzpts", ",", "vrtpts", ",", "ht", ",", "hti", ",", "USNum",
       ",", "nhdiv", ",", "nvdiv", ",", "UnitShape", ",", "grptype"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tfm", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"type", ",", "\"\<C\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<D h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "\"\<D v\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<Ch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "\"\<Cv\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<Cs\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", "\"\<Cvx\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "\"\<Chz\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", "\"\<Cvz\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], ",", "\"\<Dh\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", "\"\<Dhx\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", "\"\<Dd\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", "\"\<Ddx h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", "\"\<Ddx v\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], ",", "\"\<Dhz h\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", "\"\<Dhz v\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], ",", "_", ",", "Null"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Tfm", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hrzpts", ",", "vrtpts"}], "}"}], " ", "=", " ", "Tfm"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ht", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"1", ",", 
        RowBox[{"6", "/", "n"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hti", " ", "=", " ", 
      RowBox[{"ht", "/", "vrtpts"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"USNum", " ", "=", " ", 
      RowBox[{"n", "*", "hrzpts"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nhdiv", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}], "*", 
        RowBox[{"ntess", "/", "USNum"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nvdiv", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"hti", "*", "ntess"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UnitShape", " ", "=", " ", 
      RowBox[{"CylSeg", "[", 
       RowBox[{
       "USNum", ",", "nhdiv", ",", "hti", ",", "nvdiv", ",", "colors"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"grptype", " ", "=", " ", 
      RowBox[{"GetGroupType", "[", "type", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RepeatVert", "[", 
      RowBox[{
       RowBox[{"GeometricTransformation", "[", 
        RowBox[{"UnitShape", ",", 
         RowBox[{"Group3D1LVertScl", "[", 
          RowBox[{"grptype", ",", "n", ",", "ht"}], "]"}]}], "]"}], ",", 
       "axrpts", ",", "ht"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.947053924545752*^9, 3.9470539267295933`*^9}, {
   3.947053959793537*^9, 3.947054017995371*^9}, {3.947054099117756*^9, 
   3.947054230575938*^9}, {3.947054373388638*^9, 3.947054400010436*^9}, {
   3.947054586078322*^9, 3.947054632298642*^9}, {3.9470546631479*^9, 
   3.947054678961396*^9}, {3.947054826607278*^9, 3.947054842556467*^9}, {
   3.9470548942711487`*^9, 3.947054905042347*^9}, {3.947055219320641*^9, 
   3.947055287526526*^9}, {3.947055829037938*^9, 3.947056053783321*^9}, {
   3.947056084597134*^9, 3.947056108364779*^9}, {3.94705620851604*^9, 
   3.947056425975778*^9}, 3.9470564613480253`*^9, {3.9472540219460917`*^9, 
   3.947254026176022*^9}, {3.9472541420884657`*^9, 3.947254144194005*^9}, {
   3.9472548103052883`*^9, 3.947255003996256*^9}, {3.947255047035267*^9, 
   3.947255124229031*^9}, {3.947255781834041*^9, 3.947255788958579*^9}, {
   3.947365800815893*^9, 3.947365802287736*^9}, {3.947500569782229*^9, 
   3.947500604045899*^9}, {3.947503803476543*^9, 3.947503803724104*^9}, {
   3.9475041357732687`*^9, 3.947504136012405*^9}, {3.947504722410108*^9, 
   3.947504820827474*^9}, {3.947504885996855*^9, 3.947504966250511*^9}, {
   3.9475050013199787`*^9, 3.9475050937647676`*^9}, {3.947505139316798*^9, 
   3.9475051663569717`*^9}, {3.947505239307664*^9, 3.947505296961622*^9}, {
   3.947532489656453*^9, 3.947532624708407*^9}, {3.947532661271358*^9, 
   3.9475327542800922`*^9}, {3.947558906591482*^9, 3.947558907515729*^9}, {
   3.947558968493726*^9, 3.947558995734174*^9}, {3.947560426004451*^9, 
   3.947560518873493*^9}, {3.9475607507674932`*^9, 3.94756075906995*^9}, {
   3.9475609422357483`*^9, 3.947560954132585*^9}, {3.9475619840111313`*^9, 
   3.9475619875387278`*^9}, {3.947562059732007*^9, 3.947562084243845*^9}, {
   3.9475622075901947`*^9, 3.947562212749645*^9}, {3.947563127017354*^9, 
   3.947563128334396*^9}, {3.947666336381377*^9, 3.9476663573092413`*^9}, {
   3.948199229379735*^9, 3.948199230458417*^9}, {3.9482052822285643`*^9, 
   3.948205331259945*^9}, {3.94833692653018*^9, 3.948336931095134*^9}, {
   3.948338404832999*^9, 3.94833842554891*^9}, {3.948371506630507*^9, 
   3.948371506931169*^9}, {3.948373237369293*^9, 3.948373304221612*^9}, {
   3.948373429950425*^9, 3.948373442591419*^9}, 3.948688192000971*^9, {
   3.94906566782655*^9, 3.949065705463975*^9}, {3.949065773309828*^9, 
   3.949065794011971*^9}, {3.9490704960834723`*^9, 3.9490707007935133`*^9}, {
   3.949070741652673*^9, 3.94907083448561*^9}, {3.9490716392628193`*^9, 
   3.949071678247218*^9}, {3.9490717302300367`*^9, 3.949071770468944*^9}, {
   3.949071814236795*^9, 3.949071821707851*^9}, {3.949071854526698*^9, 
   3.9490718562685957`*^9}, {3.9490718993646107`*^9, 3.949071943496253*^9}, {
   3.949072027678533*^9, 3.949072233909863*^9}, {3.949072296722734*^9, 
   3.949072366059577*^9}, {3.949073105550922*^9, 3.949073111187796*^9}, {
   3.949073161884685*^9, 3.949073162067768*^9}, {3.949073192885384*^9, 
   3.949073198116188*^9}, 3.94907326121489*^9, {3.949073385285887*^9, 
   3.949073389725451*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"aaf6cdb0-e296-49cb-ae4b-76e481e476c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], ",", 
    RowBox[{"n_", "?", "IsPosInt"}], ",", 
    RowBox[{"axrpts_", "?", "IsPosInt"}], ",", 
    RowBox[{"ntess_", "?", "IsPosInt"}], ",", "colors_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"ShowGroup", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", "type", ",", "n", ",", 
          "axrpts", ",", "\"\<Flags\>\""}], "]"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "]"}], ",", 
          RowBox[{"ShowGroup", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", "1"}], "}"}], ",", "type", ",", "n", ",", 
            "axrpts", ",", "\"\<Colors\>\"", ",", "ntess", ",", "colors"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"SphericalRegion", "->", "True"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<C\>\"", ",", "\"\<D h\>\"", ",", "\"\<D v\>\"", ",", "\"\<Ch\>\"",
         ",", "\"\<Cv\>\"", ",", "\"\<Cs\>\"", ",", "\"\<Cvx\>\"", ",", 
        "\"\<Chz\>\"", ",", "\"\<Cvz\>\"", ",", "\"\<Dh\>\"", ",", 
        "\"\<Dd\>\"", ",", "\"\<Dhx\>\"", ",", "\"\<Ddx h\>\"", ",", 
        "\"\<Ddx v\>\"", ",", "\"\<Dhz h\>\"", ",", "\"\<Dhz v\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948660953109737*^9, 3.948661089796363*^9}, {
   3.9486889572731857`*^9, 3.948688971683248*^9}, {3.948689147050684*^9, 
   3.948689181786867*^9}, {3.948689338408786*^9, 3.9486893487192917`*^9}, {
   3.949087574998148*^9, 3.949087711776882*^9}, {3.9490877830751467`*^9, 
   3.949087786816502*^9}, 3.949087856053482*^9},
 CellLabel->
  "In[472]:=",ExpressionUUID->"2765b634-d9be-4e80-88b8-9e5e4db4578e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Image Tiler", "Chapter",
 CellChangeTimes->{{3.9470130570590973`*^9, 
  3.94701305896257*^9}},ExpressionUUID->"501121c5-81c1-4c63-abd2-\
cda9396b2b95"],

Cell["Tiles an image with rosette, frieze, and wallpaper groups.", "Text",
 CellChangeTimes->{{3.949441547789871*^9, 3.9494415518236933`*^9}, {
  3.94944162972821*^9, 3.949441678946072*^9}, {3.9494418403598547`*^9, 
  3.94944184316711*^9}},ExpressionUUID->"bb04bc3f-68b6-4d32-ace1-\
a8b6ca2be538"],

Cell[CellGroupData[{

Cell["OSX Core Image filters", "Subsection",
 CellChangeTimes->{{3.949441517084653*^9, 
  3.9494415210220137`*^9}},ExpressionUUID->"4de3d877-0630-4542-bd80-\
3d61f144366c"],

Cell["\<\
OSX Core Image filters: which groups they implement
CIAffineTile -- 1 -- p1
CIEightfoldReflectedTile -- 11 -- p4m
CIFourfoldReflectedTile -- 6 -- pmm
CIFourfoldRotatedTile -- 10 -- p4
CIFourfoldTranslatedTile -- 1 -- p1
CIGlideReflectedTile -- 4 -- pg
CIKaleidoscope -- rosette groups D(n) dihedral
CIOpTile -- modified 1 -- p1
CIParallelogramTile -- 6 -- pmm
CIPerspectiveTile -- modified 1 -- p1
CISixfoldReflectedTile -- 15 -- p31m
CISixfoldRotatedTile -- 16 -- p6
CITriangleTile -- 14 -- p3m1
CITwelvefoldReflectedTile -- 17 -- p6m\
\>", "Text",
 CellChangeTimes->{{3.949441225523781*^9, 
  3.949441234419383*^9}},ExpressionUUID->"f30df850-b919-4895-98db-\
2c4c08c4233b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Repeated Image", "Section",
 CellChangeTimes->{{3.9494430140942574`*^9, 
  3.949443019045475*^9}},ExpressionUUID->"52ec6778-4a48-4a4a-9406-\
9d1539700fe4"],

Cell["\<\
Does all the symmetry groups that can be done by repeating an image, flipping \
it, and rotating it 180d.

That\[CloseCurlyQuote]s all 7 frieze groups and 8 of the 17 wallpaper groups. \
In these designations, (h v) denotes an extra letter to distinguish \
horizontal-plane and vertical-plane reflections for 180d rotations.

Frieze: p1, p11m, p11g, p1m1, p2, p2mm, p2mg
Wallpaper: p1, p2 (h,v), p11m, p1m1, p11g, p1g1, c11m, c1m1, p2mm, p2mg, \
p2gm, c2mm (h,v)\
\>", "Text",
 CellChangeTimes->{{3.949447841666624*^9, 3.949447860341751*^9}, {
  3.9494478957186337`*^9, 3.9494480045609913`*^9}, {3.949448086344277*^9, 
  3.949448097019383*^9}, {3.949449151965317*^9, 
  3.949449188394905*^9}},ExpressionUUID->"518591ed-fd5b-462d-a459-\
3675dcfdea3a"],

Cell[CellGroupData[{

Cell["Shared", "Subsection",
 CellChangeTimes->{{3.949442009001842*^9, 
  3.949442018738596*^9}},ExpressionUUID->"99913f35-23cb-47e3-b772-\
ea6d68d79a0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImgHrz", "[", "img_", "]"}], " ", ":=", " ", 
   RowBox[{"ImageReflect", "[", "img", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.949438722196126*^9, 3.949438742874167*^9}, {
  3.949438845348723*^9, 3.94943884742004*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"bdc39281-038a-432e-b695-fda3705746a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImgVrt", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"ImageReflect", "[", 
   RowBox[{"img", ",", "Left"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.949438746433976*^9, 3.9494387534182253`*^9}, {
  3.949438856308608*^9, 3.9494388649164124`*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"5e62990c-a694-438b-a892-437ee6886a97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImgRot", "[", "img_", "]"}], " ", ":=", " ", 
  RowBox[{"ImgHrz", "[", 
   RowBox[{"ImgVrt", "[", "img", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9494388907580853`*^9, 3.949438902884933*^9}},
 CellLabel->
  "In[491]:=",ExpressionUUID->"2cef992a-80ac-44da-9180-59cedfaa11b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Frieze Groups", "Subsection",
 CellChangeTimes->{{3.949443026886135*^9, 
  3.949443030142741*^9}},ExpressionUUID->"2d9dc25c-fa26-4f36-af0b-\
37225852e297"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FriezeImage", "[", 
   RowBox[{
    RowBox[{"img_", "?", "ImageQ"}], ",", "type_", ",", 
    RowBox[{"rpts_", "?", "IsPosInt"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"img1", ",", "img2", ",", "img3", ",", "UnitCell"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\"\<p1\>\"", ",", "img", ",", "\[IndentingNewLine]", 
        "\"\<p11m\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "img", "}"}], ",", 
            RowBox[{"{", "img1", "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p11g\>\"", ",", " ", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p1m1\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2 h\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgRot", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "img", "}"}], ",", 
            RowBox[{"{", "img1", "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2 v\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgRot", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2mm\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img2", ",", "img3"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2mg\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img3", ",", "img2"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "_", ",", "Null"}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"UnitCell", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImageAssemble", "[", 
      RowBox[{"{", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"UnitCell", ",", "rpts"}], "]"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.949437756414494*^9, 3.94943778105385*^9}, {
  3.9494379512155523`*^9, 3.949437988065976*^9}, {3.9494380527797537`*^9, 
  3.949438062115839*^9}, {3.94943821019139*^9, 3.9494382320318623`*^9}, {
  3.949438343097274*^9, 3.9494383864738903`*^9}, {3.949438458691494*^9, 
  3.9494386969624577`*^9}, {3.949438867621951*^9, 3.949438929735836*^9}, {
  3.949439089481908*^9, 3.9494391657371273`*^9}},
 CellLabel->
  "In[497]:=",ExpressionUUID->"4f484d5b-dc7e-49cd-b68a-d62dd8778c21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FriezeImage", "[", 
   RowBox[{
    RowBox[{"img_", "?", "ImageQ"}], ",", "All", ",", 
    RowBox[{"rpts_", "?", "IsPosInt"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"FriezeImage", "[", 
         RowBox[{"img", ",", "type", ",", "rpts"}], "]"}], ",", 
        RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p1\>\"", ",", "\"\<p11m\>\"", ",", "\"\<p11g\>\"", ",", 
        "\"\<p1m1\>\"", ",", "\"\<p2 h\>\"", ",", "\"\<p2 v\>\"", ",", 
        "\"\<p2mm\>\"", ",", "\"\<p2mg\>\""}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9494389444231243`*^9, 3.949439018871297*^9}, {
  3.9494391835063133`*^9, 3.9494391868900127`*^9}, {3.949439346941333*^9, 
  3.949439364484867*^9}, {3.949439518328011*^9, 3.949439529503725*^9}, {
  3.9494395955443697`*^9, 3.949439596184441*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"46dfdcc4-a1d5-4173-830a-2240245b0861"]
}, Closed]],

Cell[CellGroupData[{

Cell["Wallpaper Groups", "Subsection",
 CellChangeTimes->{{3.949441981304286*^9, 
  3.9494419838816633`*^9}},ExpressionUUID->"2c5f3f46-de6e-47e7-8ffd-\
699df96dfc00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WallpaperImage", "[", 
   RowBox[{
    RowBox[{"img_", "?", "ImageQ"}], ",", "type_", ",", 
    RowBox[{"rpts1_", "?", "IsPosInt"}], ",", 
    RowBox[{"rpts2_", "?", "IsPosInt"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"img1", ",", "img2", ",", "img3", ",", "UnitCell"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UnitCell", " ", "=", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\"\<p1\>\"", ",", "img", ",", "\[IndentingNewLine]", 
        "\"\<p2 h\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgRot", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "img", "}"}], ",", 
            RowBox[{"{", "img1", "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2 v\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgRot", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p11m\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "img", "}"}], ",", 
            RowBox[{"{", "img1", "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p1m1\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p11g\>\"", ",", " ", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"img", ",", "img1"}], "}"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p1g1\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "img", "}"}], ",", 
            RowBox[{"{", "img1", "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<c11m\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img1", ",", "img"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<c1m1\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img1", ",", "img"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2mm\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img2", ",", "img3"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2mg\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img3", ",", "img2"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<p2gm\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img2", ",", "img1"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<c2mm h\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img3", ",", "img2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img1", ",", "img"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"img2", ",", "img3"}], "}"}]}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<c2mm v\>\"", ",", 
        RowBox[{
         RowBox[{"img1", " ", "=", " ", 
          RowBox[{"ImgVrt", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img2", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img", "]"}]}], ";", " ", 
         RowBox[{"img3", " ", "=", " ", 
          RowBox[{"ImgHrz", "[", "img1", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"ImageAssemble", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"img", ",", "img3", ",", "img2", ",", "img1"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"img2", ",", "img1", ",", "img", ",", "img3"}], "}"}]}], 
           "}"}], "]"}]}], ",", "\[IndentingNewLine]", "_", ",", "Null"}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"UnitCell", "===", "Null"}], ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImageAssemble", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"UnitCell", ",", 
        RowBox[{"{", 
         RowBox[{"rpts2", ",", "rpts1"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.949442031007247*^9, 3.949442183936358*^9}, {
  3.949442241928948*^9, 3.949442242348405*^9}, {3.949442337467678*^9, 
  3.949442370099925*^9}, {3.9494424920077143`*^9, 3.949442550318232*^9}, {
  3.9494470314841413`*^9, 3.9494471210598183`*^9}, {3.949447246559943*^9, 
  3.949447260191337*^9}, {3.949447373157187*^9, 3.949447443054202*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"84889317-1692-4468-8e9a-a43823c145b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WallpaperImage", "[", 
   RowBox[{
    RowBox[{"img_", "?", "ImageQ"}], ",", "All", ",", 
    RowBox[{"rpts1_", "?", "IsPosInt"}], ",", 
    RowBox[{"rpts2_", "?", "IsPosInt"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"WallpaperImage", "[", 
         RowBox[{"img", ",", "type", ",", "rpts1", ",", "rpts2"}], "]"}], ",", 
        RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"type", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p1\>\"", ",", "\"\<p2 h\>\"", ",", "\"\<p2 v\>\"", ",", 
        "\"\<p11m\>\"", ",", "\"\<p1m1\>\"", ",", "\"\<p11g\>\"", ",", 
        "\"\<p1g1\>\"", ",", "\"\<c11m\>\"", ",", "\"\<c1m1\>\"", ",", 
        "\"\<p2mm\>\"", ",", "\"\<p2mg\>\"", ",", "\"\<p2gm\>\"", ",", 
        "\"\<c2mm h\>\"", ",", "\"\<c2mm v\>\""}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9494389444231243`*^9, 3.949439018871297*^9}, {
  3.9494391835063133`*^9, 3.9494391868900127`*^9}, {3.949439346941333*^9, 
  3.949439364484867*^9}, {3.949439518328011*^9, 3.949439529503725*^9}, {
  3.9494395955443697`*^9, 3.949439596184441*^9}, {3.94944282588131*^9, 
  3.9494428772420397`*^9}, {3.9494429324861107`*^9, 3.949442934235532*^9}, {
  3.9494471817755957`*^9, 3.949447187050251*^9}, {3.9494474853659277`*^9, 
  3.9494474907894287`*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"72fa3743-8bba-4051-9021-6e49a2c24bb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", "4", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Green", ",", "Red"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.949446985637927*^9, 3.949447003382185*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"13379fd6-6949-4d6a-808a-9fdc151c182d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"p1\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0, 1}}, {
            0, 0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], {{{1, 0}, {0, 1}}, {0, 0}}], {{{{1, 0}, {0,
             1}}, {0, 0}}}], {3, 2}]}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy81H+QG/Zf33mttStbXtmyZcsnI5+MXHnkkUeuXHnkkZFHHnlklCooSpQo
UaJEiRIlSjbZZHOb2+/tl4WF5ZYzB4Xjd/lRFY7v8B1+FQoHx3f4Dt+B8uOu
tEwZOtzQI8t9y7f8KJQrhaNQON1jp4PL4fFfkvLHy7Oj3fHo857nPL7olc3x
6J1XNt989ZXP/8L3X3lv/Oar/83n33v3fR8FlwKBpbHFPj+w7OdpIPDQP28G
Ah/Fz0f/8ye7gcBfTgLBv5gEQn82CRz/k0ngxB9NAqf+cBI48weTwLnfmwQ+
77cngeRvTQKp35wELv3GJHD51yeBK782CVz91Ungb//KJFD45Umg+EuTwM1f
nARu/cIk8AX/ZBKofmYSqH16Eqh/ahJo/MQk0PyxSeCJfzwJPPWPJoFnfmAS
ePaTk8Dzn5gEXvzuSeDlySTw6ndOAm982yTw1rdMAu984yTw7tdNAu9/zSTw
wVdNAh/7ykngi/cmgS/98kngy790Etj74kngKz82CXzVB5PA17w/CXzte5PA
178zCXzTW5PAt74xCXzHaBKYDCeB7x5MAt/zwiTwvc9NAt/3zCTwg09NAj/8
xCTwY180CfzE350EPvWFk8Cn704CP31nEviZ25PAz92aBH7x5iTwS8VJ4Jf/
ziTwK397EvjVq5PAr12ZBH798iTwG5cmgYPUJPDZ5CTwuc+bBH733CTw+2cm
gT+MTQJ/dHIS+OPVSeBPj00Cf74yCfzlkf98k1nu+nf++l1/bhK4/TOTwJ2f
/uju+nXvTgLf6K7f4q7f5q7f+aq7vuyuL7rr8/O962+662+562+76++56x8c
3vWUu56YBP7k+CTwZ6FJ4C+Ck8DUXY9MF3PXu+76he76d931iw7v+sPu+oPu
+n2TwHPf667fs/i7fsJdP/nsJPAD7vqP3PUfH9616a4Nd627a22edw0Eev/l
tIf/zeFpV/58Ejj2p5PA6h9PAiedNnZ42t932t912s857Wed9mC+p33BaQdO
O3Ta0Xc47bc67Tc57ddPAu997Ud32s9UJ4F/8gWTwC/89dMWZkl2N/CXgUD4
/yfuQXDpL6fB5f80DR79j9Pg8T+ZBk/80TR46g+nwTO/Pw2e+91p8Py/mQYv
/Otp8OJvToOXfmMavPzr0+CVX5sGr/7qNHjtX0yDhX8+DRb/6TRY+sVpsPzz
02DlZ6fB6memwdqnp8H6p6bBxk9Mg80fmwZbPzINPvlD0+DT3z8NPvvJafD5
T0yDL373NPjyZBp89Tumwdf//jT45jdPg29/wzT47tdNg+9/zTT4wVdNgx/7
ymnw418xDX7Jl02DX/Yl0+Dex6fB/Y9Ng/c/mAa/+v1p8Gvfmwa//p1p8Jve
mga/9Y1p8Ntfmwb/wSvT4He9NA1+zwvT4Pc+Nw1+3zPT4A8+NQ3+8BPT4I8+
Pg3++GPT4E/emwZ/6u40+NN3psGfuT0N/tytafAXb06D//TGNPjPr0+D/+La
NPirV6fBX7syDf765WnwNy5NgwcXp8HPXpgGP3d+Gvydc9Pgvz07Df6709Pg
vz85Df7x6jT4p8emwT9fmQb/8sg0mP6N2e563V1vuOtNd731c9Pg7Z+ZBu/8
tLv+lLv+pLv++Hzv+hXu+pXu+lXu+jXu+nXvToPf8PY0+M1vToN///Vp8Dte
nQYnL7vri+76/Hzv+pvu+q/d9d+46++66++fmQb/8NQ0+EcnpsE/OT4N/sej
0+B/Wp4G/9+laXDpLxZz17vues9dH3PXx390Gnzih6fBp35wGnzm+6bB577X
Xb/HXb9rcXf9bnf9hLt+8tlp8PufngZ/6Mlp8Eda0+CPNd214a51d63N867E
/S+n/fDzp8EjTrvitMf+dBpc/eNp8OS/nwZP/7tp8Oy/ddrfcdrPOe1nnfZg
vqd9wWlfctpX/sE0+Nq3T4NvfOs0+NY3TYPvfP00+N7XOu1XO+19p9132r35
nvYnnPZTTvtpp/1MdRr82co0+PNlpy05bdFpC7MkeyDZvyluaOnPpqFlU3BI
wSEFhxQcUnBIwSEFhxQcUnDImUPOHHLmkDOHnDlE3BBxQ8QNETdE3BBxQ8QN
ETdE3BAZQmQIkSFEhhAZQmQIkSGk4JCCQwoOKTik4JCCQwoOKTik4JCCQ84c
cuYQcUPEDRE3RNwQcUPEDRE3RNwQcUPEDRE3RNwQGUJkCJEhRIYQGUJkCJEh
RIaQgkMKDik4pOCQgkMKDjlzyJlDzhxy5pAzh4gbIm6IuCHihogbIm6IuCHi
hogbIm6IuKH0r892V/mG5BuSb0i+IfmG5Bsiboi4IeLO9a7yDck3JN+QfEPy
Dck3JN+QfEPyDck3RNwQced6V/mG5BuSb0i+IfmG5BuSb0i+IfmGsBAi7sy9
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
DEkyJMmQJEOSDEkyJBWcVHBSwUkFJxWcVHBSwUkFJxWcVHDSmZPOnCRukrhJ
4iaJmyRukrhJ4iaJmyRukrhJ4iaJmyRDkgxJMiTJkCRDkgxJMiTJkFRwUsFJ
BScVnFRwUsFJZ046c9KZk86cdOYkcZPETRI3SdwkcZPETRI3SdwkcZPETRI3
mf6F2e4q36R8k/JNyjcp36R8k8RNEjdJ3LneVb5J+Sblm5RvUr5J+Sblm5Rv
Ur5J+SaJmyTuXO8q36R8k/JNyjcp36R8k/JNyjcp3yQWksSduddH3RULSSwk
sZDEQhILSSwksZDEQpK4SeIu7K5YSGIhiYUkFpJYSGIhiYUkcZPETRJ3jnc9
FPfBaT/8r6fJI063Ysds1U7aaTv710/7Wac9mO9piZskbpK4SeImiZskbpK4
SeImiZskbpK4SeLO9bTETRI3SdwkcZPETRI3SdwkcZPEnSHZg+TD4qaW/q9p
atmO2nE7YafsjJ2z83bBFJxy5pQzp5w55cwpZ04RN0XcFHFTxE0RN0XcFHFT
xE0RN0WGFBlSZEiRIUWGFBlSZEgpOKXglIJTCk4pOKXglIJTCk4pOKXglDOn
nDlF3BRxU8RNETdF3BRxU8RNETdF3BRxU8RNETdFhhQZUmRIkSFFhhQZUmRI
kSGl4JSCUwpOKTil4JSCU86ccuaUM6ecOeXMKeKmiJsiboq4KeKmiJsiboq4
KeKmiJsibir9c7PdVb4p+abkm5JvSr4p+aaImyJuirhzvat8U/JNyTcl35R8
U/JNyTcl35R8U/JNETdF3LneVb4p+abkm5JvSr4p+abkm5JvSr4pLKSIO3Ov
j7orFlJYSGEhhYUUFlJYSGEhhYUUcVPEXdhdsZDCQgoLKSyksJDCQgoLKeKm
iJsi7hzveijug9MSN3XE2VbsmK3aSTttZ//maQ/me1ripoibIm6KuCnipoib
Im6KuCnipoibIm6KuHM9LXFTxE0RN0XcFHFTxE0RN0XcFHFnSPYg9bC46aUP
p+llO2rH7YSdsjN2zs7bBbtozpx25rQzp5057cxp4qaJmyZumrhp4qaJmyZu
mrhp4qbJkCZDmgxpMqTJkCZDmgxpBacVnFZwWsFpBacVnFZwWsFpBacVnHbm
tDOniZsmbpq4aeKmiZsmbpq4aeKmiZsmbpq4aeKmyZAmQ5oMaTKkyZAmQ5oM
aTKkFZxWcFrBaQWnFZxWcNqZ086cdua0M6edOU3cNHHTxE0TN03cNHHTxE0T
N03cNHHTxE2nf2a2u8o3Ld+0fNPyTcs3Ld80cdPETRN3rneVb1q+afmm5ZuW
b1q+afmm5ZuWb1q+aeKmiTvXu8o3Ld+0fNPyTcs3Ld+0fNPyTcs3jYU0cWfu
9VF3xUIaC2kspLGQxkIaC2kspLGQJm6auAu7KxbSWEhjIY2FNBbSWEhjIU3c
NHHTxJ3jXQ/FfXBa4qaPONmKHbNVO2mn7eyCT0vcNHHTxE0TN03cNHHTxE0T
N03cNHHTxE0Td66nJW6auGnipombJm6auGnipombJu4MyR6kHxb3by39n9PM
8r+aZo7acTthp+yMnbPzdsEu2iVz5owzZ5w548wZ4maImyFuhrgZ4maImyFu
hrgZ4mbIkCFDhgwZMmTIkCFDhgwZBWcUnFFwRsEZBWcUnFFwRsEZBWcUnHHm
jDNniJshboa4GeJmiJshboa4GeJmiJshboa4GeJmyJAhQ4YMGTJkyJAhQ4YM
GTJkFJxRcEbBGQVnFJxRcMaZM86cceaMM2ecOUPcDHEzxM0QN0PcDHEzxM0Q
N0PcDHEzxM2kPzPbXeWbkW9Gvhn5ZuSbkW+GuBniZog717vKNyPfjHwz8s3I
NyPfjHwz8s3INyPfDHEzxJ3rXeWbkW9Gvhn5ZuSbkW9Gvhn5ZuSbwUKGuJml
f7WYu2Ihg4UMFjJYyGAhg4UMFjJYyBA3Q9yF3RULGSxksJDBQgYLGSxksJAh
boa4GeLO8a6H4j447Yf+7IhzrdgxW7WTdtrOLvi0xM0QN0PcDHEzxM0QN0Pc
DHEzxM0QN0PcDHHnelriZoibIW6GuBniZoibIW6GuBnizpDswd96WNzs0v8x
zS7bUTtuJ+yUnbFzdt4u2EW7ZJfNmbPOnHXmLHGzxM0SN0vcLHGzxM0SN0vc
LHGzZMiSIUuGLBmyZMiSIUuGrIKzCs4qOKvgrIKzCs4qOKvgrIKzCs46c9aZ
s8TNEjdL3Cxxs8TNEjdL3Cxxs8TNEjdL3Cxxs2TIkiFLhiwZsmTIkiFLhiwZ
sgrOKjir4KyCswrOKjjrzFlnzjpz1pmzzpwlbpa4WeJmiZslbpa4WeJmiZsl
bpa4WeJm05+e7a7yzco3K9+sfLPyzco3S9wscbPEnetd5ZuVb1a+Wflm5ZuV
b1a+Wflm5ZuVb5a4WeLO9a7yzco3K9+sfLPyzco3K9+sfLPyzWIhS9yZe33U
XbGQxUIWC1ksZLGQxUIWC1ksZImbJe7C7oqFLBayWMhiIYuFLBayWMgSN0vc
LHHneNdDcR+clrjZI061Ysds1U7aaTu74NMSN0vcLHGzxM0SN0vcLHGzxM0S
N0vcLHGzxJ3raYmbJW6WuFniZombJW6WuFniZok7Q7IH2YfFzS39y2lu2Y7a
cTthp+yMnbPzdsEu2iW7bFfMmXPOnCNujrg54uaImyNujrg54uaImyNujgw5
MuTIkCNDjgw5MuTIkFNwTsE5BecUnFNwTsE5BecUnFNwTsE5Z845c464OeLm
iJsjbo64OeLmiJsjbo64OeLmiJsjbo4MOTLkyJAjQ44MOTLkyJAjQ07BOQXn
FJxTcE7BOQXnnDnnzDlnzjlzzplzxM0RN0fcHHFzxM0RN0fcHHFzxM0RN0fc
XPpTs91Vvjn55uSbk29Ovjn55oibI26OuHO9q3xz8s3JNyffnHxz8s3JNyff
nHxz8s0RN0fcud5Vvjn55uSbk29Ovjn55uSbk29Ovjks5Ig7c6+PuisWcljI
YSGHhRwWcljIYSGHhRxxc8Rd2F2xkMNCDgs5LOSwkMNCDgs54uaImyPuHO96
KO6D036YnOaOONOKHbNVO2mn7eyCT0vcHHFzxM0RN0fcHHFzxM0RN0fcHHFz
xM0Rd66nJW6OuDni5oibI26OuDni5oibI+4MyR7kHhY3v/Qr0/yyHbXjdsJO
2Rk7Z+ftgl20S3bZrthVc+Y8cfPEzRM3T9w8cfPEzRM3T9w8cfNkyJMhT4Y8
GfJkyJMhT4a8gvMKzis4r+C8gvMKzis4r+C8gvMKzjtz3pnzxM0TN0/cPHHz
xM0TN0/cPHHzxM0TN0/cPHHzZMiTIU+GPBnyZMiTIU+GPBnyCs4rOK/gvILz
Cs4rOO/MeWfOO3PemfPOnCdunrh54uaJmydunrh54uaJmydunrh54ubT/+ts
d5VvXr55+eblm5dvXr554uaJmyfuXO8q37x88/LNyzcv37x88/LNyzcv37x8
88TNE3eud5VvXr55+eblm5dvXr55+eblm5dvHgt54s7c66PuioU8FvJYyGMh
j4U8FvJYyGMhT9w8cRd2VyzksZDHQh4LeSzksZDHQp64eeLmiTvHux6K++C0
xM0fcaIVO2ardtJO29kFn5a4eeLmiZsnbp64eeLmiZsnbp64eeLmiZsn7lxP
S9w8cfPEzRM3T9w8cfPEzRM3T9wZkj3IPyxuYemXp4VlO2rH7YSdsjN2zs7b
Bbtol+yyXbGrds2IWyBugbgF4haIWyBugbgF4haIWyBDgQwFMhTIUCBDgQwF
MhQUXFBwQcEFBRcUXFBwQcEFBRcUXFBwwZkLzlwgboG4BeIWiFsgboG4BeIW
iFsgboG4BeIWiFsgQ4EMBTIUyFAgQ4EMBTIUyFBQcEHBBQUXFFxQcEHBBWcu
OHPBmQvOXHDmAnELxC0Qt0DcAnELxC0Qt0DcAnELxC0Qt5D+X2a7q3wL8i3I
tyDfgnwL8i0Qt0DcAnHnelf5FuRbkG9BvgX5FuRbkG9BvgX5FuRbIG6BuHO9
q3wL8i3ItyDfgnwL8i3ItyDfgnwLWCgQd+ZeH3VXLBSwUMBCAQsFLBSwUMBC
AQsF4haIu7C7YqGAhQIWClgoYKGAhQIWCsQtELdA3Dne9VDcB6clbuGI86zY
MVu1k3bazi74tMQtELdA3AJxC8QtELdA3AJxC8QtELdA3AJx53pa4haIWyBu
gbgF4haIWyBugbgF4s6Q7EHhYXGLS/9sWlz+pWnxqB23E3bKztg5O28X7KJd
sst2xa7aNSsYcYvELRK3SNwicYvELRK3SNwiGYpkKJKhSIYiGYpkKJKhqOCi
gosKLiq4qOCigosKLiq4qOCigovOXHTmInGLxC0St0jcInGLxC0St0jcInGL
xC0St0jcIhmKZCiSoUiGIhmKZCiSoUiGooKLCi4quKjgooKLCi46c9GZi85c
dOaiMxeJWyRukbhF4haJWyRukbhF4haJWyRukbjF9I/OdtfrJt+ifIvyLcq3
KN8icYvELRJ3rneVb1G+RfkW5VuUb1G+RfkW5VuUb1G+ReIWiTvXu8q3KN+i
fIvyLcq3KN+ifIvyLcq3iIUicYtLv7SYu2KhiIUiFopYKGKhiIUiFopYKBK3
SNyF3RULRSwUsVDEQhELRSwUsVAkbpG4ReLO8a6H4j447YefNy0ecZoVO2ar
dtJO29kFn5a4ReIWiVskbpG4ReIWiVskbpG4ReIWiVsk7lxPS9wicYvELRK3
SNwicYvELRK3SNwZkj0oPixuael/m5aW7agdtxN2ys7YOTtvF+yiXbLLdsWu
2jUrWNGIWyJuibgl4paIWyJuibglMpTIUCJDiQwlMpTIUCJDScElBZcUXFJw
ScElBZcUXFJwScElBZecueTMJeKWiFsibom4JeKWiFsibom4JeKWiFsibom4
JTKUyFAiQ4kMJTKUyFAiQ4kMJQWXFFxScEnBJQWXFFxy5pIzl5y55MwlZy4R
t0TcEnFLxC0Rt0TcEnFLxC0Rt0TcEnFL6R+e7a7X7YbJtyTfknxL8i0Rt0Tc
EnHnelf5luRbkm9JviX5luRbkm9JviX5luRbIm6JuHO9q3xL8i3JtyTfknxL
8i3JtyTfknxLWCgRd+ZeH3VXLJSwUMJCCQslLJSwUMJCCQsl4paIu7C7YqGE
hRIWSlgoYaGEhRIWSsQtEbdE3Dne9VDcB6clbumIs6zYMVu1k3bazi74tMQt
EbdE3BJxS8QtEbdE3BJxS8QtEbdE3BJx53pa4paIWyJuibgl4paIWyJuibgl
4s6Q7EHpYXHLSz8/LS/bUTtuJ+yUnbFzdt4u2EW7ZJftil21a1awopWMuGXi
lolbJm6ZuGXilslQJkOZDGUylMlQJkOZDGUFlxVcVnBZwWUFlxVcVnBZwWUF
lxVcduayM5eJWyZumbhl4paJWyZumbhl4paJWyZumbhl4pbJUCZDmQxlMpTJ
UCZDmQxlMpQVXFZwWcFlBZcVXFZw2ZnLzlx25rIzl525TNwyccvELRO3TNwy
ccvELRO3TNwyccvELad/cLa7XrcbdtPkW5ZvWb5l4paJWybuXO8q37J8y/It
y7cs37J8y/Ity7cs37J8y8QtE3eud5VvWb5l+ZblW5ZvWb5l+ZblW5ZvGQtl
4s7c66PuioUyFspYKGOhjIUyFspYKGOhTNwycRd2VyyUsVDGQhkLZSyUsVDG
Qpm4ZeKWiTvHux6K++C0xC0fcZIVO2ardtJO29kFn5a4ZeKWiVsmbpm4ZeKW
iVsmbpm4ZeKWiVsm7lxPS9wyccvELRO3TNwyccvELRO3TNwZkj0oPyzuFyz9
7LSybEftuJ2wU3bGztl5u2AX7ZJdtit21a5ZwYpWsrIRt0LcCnErxK0Qt0KG
ChkqZKiQoUKGChkqZKgouKLgioIrCq4ouKLgioIrCq4ouKLgijNXnLlC3Apx
K8StELdC3ApxK8StELdC3ApxK8StELdChgoZKmSokKFChgoZKmSokKGi4IqC
KwquKLii4IqCK85cceaKM1ecueLMFeJWiFshboW4FeJWiFshboW4FeJWiFsh
biX9/bPd9brdsJt2y+RbkW+FuBXiVog717vKtyLfinwr8q3ItyLfinwr8q3I
tyLfCnErxJ3rXeVbkW9FvhX5VuRbkW9FvhX5VuRbwUKFuJVZe33UXbFQwUIF
CxUsVLBQwUIFCxUsVIhbIe7C7oqFChYqWKhgoYKFChYqWKgQt0LcCnHneNdD
cR+c9kN/csQ5VuyYrdpJO21nF3xa4laIWyFuhbgV4laIWyFuhbgV4laIWyFu
hbhzPS1xK8StELdC3ApxK8StELdC3ApxZ0j24AseFre69JlpddmO2nE7Yafs
jJ2z83bBLtolu2xX7Kpds4IVrWRlqxhxq8StErdK3CoZqmSokqFKhioZqmSo
kqGq4KqCqwquKriq4KqCqwquKriq4KqCq85cdeYqcavErRK3StwqcavErRK3
StwqcavErRK3StwqGapkqJKhSoYqGapkqJKhSoaqgqsKriq4quCqgqsKrjpz
1Zmrzlx15qozV4lbJW6VuFXiVolbJW6VuFXiVolbJW6VuNX0J2e763W7YTft
lt02+VaJWyVulbhzvat8q/Ktyrcq36p8q/Ktyrcq36p8q/KtErdK3LneVb5V
+VblW5VvVb5V+VblW5VvVb5VLFSJO3Ovj7orFqpYqGKhioUqFqpYqGKhioUq
cavEXdhdsVDFQhULVSxUsVDFQhULVeJWiVsl7hzveijug9MSt3rEKVbsmK3a
STttZxd8WuJWiVslbpW4VeJWiVslbpW4VeJWiVslbpW4cz0tcavErRK3Stwq
cavErRK3StwqcWdI9qD6sLi1pU9Pa8t21I7bCTtlZ+ycnbcLdtEu2WW7Ylft
mhWsaCUrW8WqRtwacWvErZGhRoYaGWpkqJGhRoYaGWoKrim4puCagmsKrim4
puCagmsKrim45sw1Z64Rt0bcGnFrxK0Rt0bcGnFrxK0Rt0bcGnFrxK2RoUaG
GhlqZKiRoUaGGhlqZKgpuKbgmoJrCq4puKbgmjPXnLnmzDVnrjlzjbg14taI
WyNujbg14taIWyNujbg14taIW0t/Yra7XrcbdtNu2W27c3jXn3LXn3TXH5/v
XeVbk29NvjX51uRbk29NvjX51uRbk2+NuDXizvWu8q3Jtybfmnxr8q3Jtybf
mnxr8q1hoUbcmXt91F2xUMNCDQs1LNSwUMNCDQs1LNSIWyPuwu6KhRoWalio
YaGGhRoWalioEbdG3Bpx53jXQ3EfnJa4tSPOsGLHbNVO2mk7u+DTErdG3Bpx
a8StEbdG3Bpxa8StEbdG3Bpxa8Sd62mJWyNujbg14taIWyNujbg14taIO0Oy
B7WHxa0vfWpaX7ajdtxO2Ck7Y+fsvF2wi3bJLtsVu2rXrGBFK1nZKla1mhG3
Ttw6GepkqJOhToY6GepkqJOhruC6gusKriu4ruC6gusKriu4ruC6guvOXHfm
OnHrxK0Tt07cOnHrxK0Tt07cOnHrxK0Tt07cOhnqZKiToU6GOhnqZKiToU6G
uoLrCq4ruK7guoLrCq47c92Z685cd+a6M9eJWydunbh14taJWydunbh14taJ
Wydunbj19P88212v2w27abfstt35q7v+pLv++HzvKt+6fOvyrcu3Lt+6fOvy
rcu3Lt+6fOvErRN3rneVb12+dfnW5VuXb12+dfnW5VuXbx0LdeLO3Ouj7nrX
sFDHQh0LdSzUsVDHQh0LdeLWibuwu2KhjoU6FupYqGOhjoU6FurErRO3Ttw5
3vVQ3Aen/TAxrR9xghU7Zqt20k7b2QWflrh14taJWydunbh14taJWydunbh1
4taJWyfuXE9L3Dpx68StE7dO3Dpx68StE7dO3BmSPag/LG5j6SemjWU7asft
hJ2yM3bOztsFu2iX7LJdsat2zQpWtJKVrWJVq1ndiNsgQ4MMDTI0yNAgQ4MM
DTI0FNxQcEPBDQU3FNxQcEPBDQU3FNxQcMOZG87cIG6DuA3iNojbIG6DuA3i
NojbIG6DuA3iNojbIEODDA0yNMjQIEODDA0yNMjQUHBDwQ0FNxTcUHBDwQ1n
bjhzw5kbztxw5gZxG8RtELdB3AZxG8RtELdB3AZxG8RtELeR/oez3fW63bCb
dstu252/ftcfn+9d5duQb0O+Dfk25NuQb0O+Dfk25NuQb4O4DeLO9a7ybci3
Id+GfBvybci3Id+GfBvybWChQdyZe33UXe/aPcNCAwsNLDSw0MBCAwsN4jaI
u7C7YqGBhQYWGlhoYKGBhQYWGsRtELdB3Dne9VDcB6clbuOI56/YMVu1k3ba
zi74tMRtELdB3AZxG8RtELdB3AZxG8RtELdB3AZx53pa4jaI2yBug7gN4jaI
2yBug7gN4s6Q7EHjYXGbSz82bS7bUTtuJ+yUnbFzdt4u2EW7ZJftil21a1aw
opWsbBWrWs3q1jAyNMnQJEOTDE0yNMnQJENTwU0FNxXcVHBTwU0FNxXcVHBT
wU0FN5256cxN4jaJ2yRuk7hN4jaJ2yRuk7hN4jaJ2yRuk7hNMjTJ0CRDkwxN
MjTJ0CRDkwxNBTcV3FRwU8FNBTcV3HTmpjM3nbnpzE1nbhK3SdwmcZvEbRK3
SdwmcZvEbRK3SdwmcZvp75ztrtftht20W3bb7izwrvJtyrcp36Z8m/Jtyrcp
36Z8m/JtyrdJ3CZx53pX+Tbl25RvU75N+Tbl25RvU75N+Tax0CTuzL0+6q53
7Z49ZlhoYqGJhSYWmlhoErdJ3IXdFQtNLDSx0MRCEwtNLDSx0CRuk7hN4s7x
rofiPjjth//VtHnE01fsmK3aSTttZxd8WuI2idskbpO4TeI2idskbpO4TeI2
idskbpO4cz0tcZvEbRK3SdwmcZvEbRK3SdwmcWdI9qD5sLitpR+ZtpbtqB23
E3bKztg5O28X7KJdsst2xa7aNStY0UpWtopVrWZ1a1jTyNAiQ4sMLTK0yNAi
Q0vBLQW3FNxScEvBLQW3FNxScEvBLQW3nLnlzC3itojbIm6LuC3itojbIm6L
uC3itojbIm6LuC0ytMjQIkOLDC0ytMjQIkOLDC0FtxTcUnBLwS0FtxTccuaW
M7ecueXMLWduEbdF3BZxW8RtEbdF3BZxW8RtEbdF3BZxW+lvn+2u1+2G3bRb
dtvuLPCu8m3JtyXflnxb8m3JtyXflnxb8m3Jt0XcFnHnelf5tuTbkm9Lvi35
tuTbkm9Lvi35trDQIu7MvT7qrnftnj1mjxsWWlhoYaGFhRZxW8Rd2F2x0MJC
CwstLLSw0MJCCwst4raI2yLuHO96KO6D0xK3dcSzV+yYrdpJO21nF3xa4raI
2yJui7gt4raI2yJui7gt4raI2yJui7hzPS1xW8RtEbdF3BZxW8RtEbdF3BZx
Z0j2oPWwuO2lH5q2l+2oHbcTdsrO2Dk7bxfsol2yy3bFrto1K1jRSla2ilWt
ZnVrWNNaRoY2GdpkaJOhTYa2gtsKbiu4reC2gtsKbiu4reC2gtsKbjtz25nb
xG0Tt03cNnHbxG0Tt03cNnHbxG0Tt03cNnHbZGiToU2GNhnaZGiToU2GNhna
Cm4ruK3gtoLbCm4ruO3MbWduO3PbmdvO3CZum7ht4raJ2yZum7ht4raJ2yZu
m7ht4rbT3zrbXa/bDbtpt+y23VngXeXblm9bvm35tuXblm9bvm35tuXblm+b
uG3izvWu8m3Lty3ftnzb8m3Lty3ftnzb8m1joU3cmXt91F3v2j17zB63JwwL
bSy0sdAmbpu4C7srFtpYaGOhjYU2FtpYaGOhTdw2cdvEneNdD8V9cFrito94
8oods1U7aaft7IJPS9w2cdvEbRO3Tdw2cdvEbRO3Tdw2cdvEbRN3rqclbpu4
beK2idsmbpu4beK2idsm7gzJHrQfFrez9APTzvL3TztH7bidsFN2xs7Zebtg
F+2SXbYrdtWuWcGKVrKyVaxqNatbw5rWsieNDB0ydMjQIUNHwR0FdxTcUXBH
wR0FdxTcUXBHwR0Fd5y548wd4naI2yFuh7gd4naI2yFuh7gd4naI2yFuh7gd
MnTI0CFDhwwdMnTI0CFDhwwdBXcU3FFwR8EdBXcU3HHmjjN3nLnjzB1n7hC3
Q9wOcTvE7RC3Q9wOcTvE7RC3Q9wOcTvpb57trtftht20W3bb7izwrvLtyLcj
3458O/LtyLcj3458O/LtyLdD3A5x53pX+Xbk25FvR74d+Xbk25FvR74d+Xaw
0CFuZ+n7F3PXu3bPHrPH7Ql7yrDQwUKHuB3iLuyuWOhgoYOFDhY6WOhgoYOF
DnE7xO0Qd453PRT3wWk/9Osjnrtix2zVTtppO7vg0xK3Q9wOcTvE7RC3Q9wO
cTvE7RC3Q9wOcTvEnetpidshboe4HeJ2iNshboe4HeJ2iDtDsgedh8XtLn1y
2l22o3bcTtgpO2Pn7LxdsIt2yS7bFbtq16xgRStZ2SpWtZrVrWFNa9mT9rSR
oUuGLhm6Cu4quKvgroK7Cu4quKvgroK7Cu4quOvMXWfuErdL3C5xu8TtErdL
3C5xu8TtErdL3C5xu8TtkqFLhi4ZumTokqFLhi4ZumToKrir4K6CuwruKrir
4K4zd52568xdZ+46c5e4XeJ2idslbpe4XeJ2idslbpe4XeJ2idtNf8Nsd71u
N+ym3bLbdmeBd5VvV75d+Xbl25VvV75d+Xbl25VvV75d4naJO9e7yrcr3658
u/Ltyrcr3658u/LtyreLhS5xZ+71UXe9a/fsMXvcnrCn7BnDQpe4XeIu7K5Y
6GKhi4UuFrpY6GKhi4UucbvE7RJ3jnc9FPfBaYnbPeKpK3bMVu2knbazCz4t
cbvE7RK3S9wucbvE7RK3S9wucbvE7RK3S9y5npa4XeJ2idslbpe4XeJ2idsl
bpe4MyR70H1Y3N7SJ6a9ZTtqx+2EnbIzds7O2wW7aJfssl2xq3bNCla0kpWt
YlWrWd0a1rSWPWlP27NGhh4ZegruKbin4J6CewruKbin4J6CewruKbjnzD1n
7hG3R9wecXvE7RG3R9wecXvE7RG3R9wecXvE7ZGhR4YeGXpk6JGhR4YeGXpk
6Cm4p+CegnsK7im4p+CeM/ecuefMPWfuOXOPuD3i9ojbI26PuD3i9ojbI26P
uD3i9ojbS3/dbHe9bjfspt2y23ZngXeVb0++Pfn25NuTb0++Pfn25NuTb0++
PeL2iDvXu8q3J9+efHvy7cm3J9+efHvy7cm3h4UecWfu9VF3vWv37DF73J6w
p+wZe+7wrt/jrt+1uLtioYeFHhZ6WOhhoYeFHhZ6xO0Rt0fcOd71UNwHp/0w
Pu0d8cwVO2ardtJO29kFn5a4PeL2iNsjbo+4PeL2iNsjbo+4PeL2iNsj7lxP
S9wecXvE7RG3R9wecXvE7RG3R9wZkj3oPSzui0vfPe0v21E7bifslJ2xc3be
LthFu2SX7YpdtWtWsKKVrGwVq1rN6tawprXsSXvanrXnjQx9BfcV3FdwX8F9
BfcV3FdwX8F9BfcV3HfmvjP3idsnbp+4feL2idsnbp+4feL2idsnbp+4feL2
ydAnQ58MfTL0ydAnQ58MfTL0FdxXcF/BfQX3FdxXcN+Z+87cd+a+M/eduU/c
PnH7xO0Tt0/cPnH7xO0Tt0/cPnH7xO2n/95sd71uN+ym3bLbdmeBd5VvX759
+fbl25dvX759+fbl25dvX7594vaJO9e7yrcv3758+/Lty7cv3758+/Lty7eP
hT5x+7P2+qi73rV79pg9bk/YU/aMPfdXd/2uxd0VC30s9LHQx0IfC30s9LHQ
J26fuH3izvGuh+I+OC1x+0c8ccWO2aqdtNN2dsGnfcGI2ydun7h94vaJ2ydu
n7h94vaJ2ydun7hzPS1x+8TtE7dP3D5x+8TtE7dP3D5xZ0j24MWHxR0s/cPp
YNmO2nE7YafsjJ2z83bBLtolu2xX7Kpds4IVrWRlq1jVala3hjWtZU/a0/as
PW8vmoIHCh4oeKDggYIHCh4oeKDggYIHCh4488CZB8QdEHdA3AFxB8QdEHdA
3AFxB8QdEHdA3AFxB2QYkGFAhgEZBmQYkGFAhgEZBgoeKHig4IGCBwoeKHjg
zANnHjjzwJkHzjwg7oC4A+IOiDsg7oC4A+IOiDsg7oC4A+IO0l89212v2w27
abfstt1Z4F3lO5DvQL4D+Q7kO5DvQL4D+Q7kO5DvgLgD4s71rvIdyHcg34F8
B/IdyHcg34F8B/IdYGFA3Jl7fdRd79o9e8wetyfsKXvGnvsI7oqFARYGWBhg
YYCFARYGWBgQd0DcAXHneNdDcR+clriDI563Ysds1U7aaTu74NO+YC/ZK05L
3AFxB8QdEHdA3AFxB8QdEHdA3LmelrgD4g6IOyDugLgD4g6IOyDugLgzJHsw
eFjc4dJ3TofLdtSO2wk7ZWfsnJ23C3bRLtllu2JX7ZoVrGglK1vFqlazujWs
aS170p62Z+15e9FeNgUPFTxU8FDBQwUPFTxU8FDBQwUPnXnozEPiDok7JO6Q
uEPiDok7JO6QuEPiDok7JO6QuEMyDMkwJMOQDEMyDMkwJMOQDEMFDxU8VPBQ
wUMFDxU8dOahMw+deejMQ2ceEndI3CFxh8QdEndI3CFxh8QdEndI3CFxh+n7
s931ut2wm3bLbtudBd5VvkP5DuU7lO9QvkP5DuU7lO9QvkP5Dok7JO5c7yrf
oXyH8h3KdyjfoXyH8h3KdyjfIRaGxJ2510fd9a7ds8fscXvCnrJn7LmP4K5Y
GGJhiIUhFoZYGGJhiIUhcYfEHRJ3jnc9FPfBaYk7POJpK3bMVu2knbazCz7t
C/aSvWKvOS1xh8QdEndI3CFxh8QdEndI3LmelrhD4g6JOyTukLhD4g6JOyTu
kLgzJHswfFjc0dK3TUfLdtSO2wk7ZWfsnJ23C3bRLtllu2JX7ZoVrGglK1vF
qlazujWsaS170p62Z+15e9FetldNwSMFjxQ8UvBIwSMFjxQ8UvDImUfOPCLu
iLgj4o6IOyLuiLgj4o6IOyLuiLgj4o6IOyLDiAwjMozIMCLDiAwjMozIMFLw
SMEjBY8UPFLwSMEjZx4588iZR848cuYRcUfEHRF3RNwRcUfEHRF3RNwRcUfE
HRF3lP7K2e563W7YTbtlt+3OAu8q35F8R/IdyXck35F8R/IdyXck35F8R8Qd
EXeud5XvSL4j+Y7kO5LvSL4j+Y7kO5LvCAsj4s7c66Puetfu2WP2uD1hT9kz
9txHcFcsjLAwwsIICyMsjLAwwsKIuCPijog7x7seivvgtB9K+YhnrdgxW7WT
dtrOLvi0L9hL9oq9Zm84LXFHxB0Rd0TcEXFHxB0Rd66nJe6IuCPijog7Iu6I
uCPijog7Iu4MyR6MHhZ3vPQt0/GyHbXjdsJO2Rk7Z+ftgl20S3bZrthVu2YF
K1rJylaxqtWsbg1rWsuetKftWXveXrSX7VV73RQ8VvBYwWMFjxU8VvBYwWNn
HjvzmLhj4o6JOybumLhj4o6JOybumLhj4o6JOybumAxjMozJMCbDmAxjMozJ
MCbDWMFjBY8VPFbwWMFjBY+deezMY2ceO/PYmcfEHRN3TNwxccfEHRN3TNwx
ccfEHRN3TNxx+itmu+t1u2E37ZbdtjsLvKt8x/Idy3cs37F8x/Idy3cs37F8
x/IdE3dM3LneVb5j+Y7lO5bvWL5j+Y7lO5bvWL5jLIyJO3Ovj7rrXbtnj9nj
9oQ9Zc/Ycx/BXbEwxsIYC2MsjLEwxsIYC2Pijok7Ju4c73oo7oPTEnd8xJNW
7Jit2kk7bWcXfNoX7CV7xV6zN4y4Y+KOiTsm7pi4Y+KOiTvX0xJ3TNwxccfE
HRN3TNwxccfEHRN3hmQPxg+L+/bSN07Xlu2oHbcTdsrO2Dk7bxfsol2yy3bF
rto1K1jRSla2ilWtZnVrWNNa9qQ9bc/a8/aivWyv2uv2pil4TcFrCl5T8JqC
1xS85sxrzrxG3DXirhF3jbhrxF0j7hpx14i7Rtw14q4Rd424a2RYI8MaGdbI
sEaGNTKskWGNDGsKXlPwmoLXFLym4DUFrznzmjOvOfOaM6858xpx14i7Rtw1
4q4Rd424a8RdI+4acdeIu0bctfSXzXbX63bDbtotu213FnhX+a7Jd02+a/Jd
k++afNfkuybfNfmuyXeNuGvEnetd5bsm3zX5rsl3Tb5r8l2T75p81+S7hoU1
4q7N2uuj7nrX7tlj9rg9YU/ZM/bcR3BXLKxhYQ0La1hYw8IaFtawsEbcNeKu
EXeOdz0U98FpP/SrI56zYsds1U7aaTu74NO+YC/ZK/aavWFvGXHXiLtG3DXi
rhF3jbhzPS1x14i7Rtw14q4Rd424a8RdI+4acWdI9uDth8VdX/qfpuvLdtSO
2wk7ZWfsnJ23C3bRLtllu2JX7ZoVrGglK1vFqlazujWsaS170p62Z+15e9Fe
tlftdXvT3jYFryt4XcHrCl5X8LozrzvzOnHXibtO3HXirhN3nbjrxF0n7jpx
14m7Ttx14q6TYZ0M62RYJ8M6GdbJsE6GdTKsK3hdwesKXlfwuoLXFbzuzOvO
vO7M68687szrxF0n7jpx14m7Ttx14q4Td52468RdJ+46cdfTXzrbXa/bDbtp
t+y23VngXeW7Lt91+a7Ld12+6/Jdl++6fNfluy7fdeKuE3eud5XvunzX5bsu
33X5rst3Xb7r8l2X7zoW1ok7c6+Puutdu2eP2eP2hD1lz9hzH8FdsbCOhXUs
rGNhHQvrWFjHwjpx14m7Ttw53vVQ3AenJe76EU9ZsWO2aifttJ1d8GlfsJfs
FXvN3rC37B0j7jpx14m7Ttx14s71tMRdJ+46cdeJu07cdeKuE3eduOvEnSHZ
g/WHxd1Y+nvTjWU7asfthJ2yM3bOztsFu2iX7LJdsat2zQpWtJKVrWJVq1nd
Gta0lj1pT9uz9ry9aC/bq/a6vWlv27um4A0Fbyh4Q8EbzrzhzBvE3SDuBnE3
iLtB3A3ibhB3g7gbxN0g7gZxN4i7QYYNMmyQYYMMG2TYIMMGGTbIsKHgDQVv
KHhDwRsK3lDwhjNvOPOGM28484YzbxB3g7gbxN0g7gZxN4i7QdwN4m4Qd4O4
G8TdSH/xbHe9bjfspt2y23ZngXeV74Z8N+S7Id8N+W7Id0O+G/LdkO+GfDeI
u0Hcud5Vvhvy3ZDvhnw35Lsh3w35bsh3Q74bWNgg7sy9Puqud+2ePWaP2xP2
lD1jz30Ed8XCBhY2sLCBhQ0sbGBhAwsbxN0g7gZx53jXQ3EfnJa4G0c8Y8WO
2aqdtNN2dsGnfcFeslfsNXvD3rJ37L2/Ou19p9132r35npa4G8TdIO4GcTeI
u0HcDeJuEHeDuDMke7DxsLgfLP2P081lO2rH7YSdsjN2zs7bBbtol+yyXbGr
ds0KVrSSla1iVatZ3RrWtJY9aU/bs/a8vWgv26v2ur1pb9u79r4peFPBmwre
dOZNZ94k7iZxN4m7SdxN4m4Sd5O4m8TdJO4mcTeJu0ncTTJskmGTDJtk2CTD
Jhk2ybBJhk0Fbyp4U8GbCt5U8KaCN51505k3nXnTmTedeZO4m8TdJO4mcTeJ
u0ncTeJuEneTuJvE3STuZnp7trtetxt2027ZbbuzwLvKd1O+m/LdlO+mfDfl
uynfTfluyndTvpvE3STuXO8q3035bsp3U76b8t2U76Z8N+W7Kd9NLGwSd3PW
Xh9117t2zx6zx+0Je8qesec+grtiYRMLm1jYxMImFjaxsImFTeJuEneTuHO8
66G4D077YWy6ecQTVuyYrdpJO21nF3zaF+wle8VeszfsLXvH3vvrp9132r35
npa4m8TdJO4mcTeJu0ncTeJuEneTuDMke/DBw+JuLf0P061lO2rH7YSdsjN2
zs7bBbtol+yyXbGrds0KVrSSla1iVatZ3RrWtJY9aU/bs/a8vWgv26v2ur1p
b9u79r59YAreUvCWM2858xZxt4i7Rdwt4m4Rd4u4W8TdIu4WcbeIu0XcLeJu
kWGLDFtk2CLDFhm2yLBFhi0ybCl4S8FbCt5S8JaCtxS85cxbzrzlzFvOvOXM
W8TdIu4WcbeIu0XcLeJuEXeLuFvE3SLuFnG30luz3fW63bCbdstu250F3lW+
W/Ldku+WfLfkuyXfLfluyXdLvlvy3SLuFnHnelf5bsl3S75b8t2S75Z8t+S7
Jd8t+W5hYYu4M/f6qLvetXv2mD1uT9hT9ow99xHcFQtbWNjCwhYWtrCwhYUt
LGwRd4u4W8Sd410PxX1wWuJuHfH1V+yYrdpJO21nF3zaF+wle8VeszfsLXvH
3vvrp9132r35npa4W8TdIu4WcbeIu0XcLeJuEXeLuDMke7D1sLjbS//9dHvZ
jtpxO2Gn7Iyds/N2wS7aJbtsV+yqXbOCFa1kZatY1WpWt4Y1rWVP2tP2rD1v
L9rL9qq9bm/a2/auvW8f2MdMwdvOvO3M28TdJu42cbeJu03cbeJuE3ebuNvE
3SbuNnG3ibtNhm0ybJNhmwzbZNgmwzYZtsmwreBtBW8reFvB2wreVvC2M287
87YzbzvztjNvE3ebuNvE3SbuNnG3ibtN3G3ibhN3m7jbxN1Ob8521+t2w27a
LbttdxZ4V/luy3dbvtvy3Zbvtny35bst3235bst3m7jbxJ3rXeW7Ld9t+W7L
d1u+2/Ldlu+2fLflu42FbeLO3Ouj7nrX7tlj9rg9YU/ZM/bcR3BXLGxjYRsL
21jYxsI2FraxsE3cbeJuE3eOdz0U98FpP5TxEV99xY7Zqp2003Z2wad9wV6y
V+w1e8Pesnfsvb952r35npa428TdJu42cbeJu03cbeJuE3ebuDMke7D9sLg7
S18+3Vm2o3bcTtgpO2Pn7LxdsIt2yS7bFbtq16xgRStZ2SpWtZrVrWFNa9mT
9rQ9a8/bi/ayvWqv25v2tr1r79sH9jH7uDnzjjPvEHeHuDvE3SHuDnF3iLtD
3B3i7hB3h7g7xN0h7g4ZdsiwQ4YdMuyQYYcMO2TYIcOOgncUvKPgHQXvKHhH
wTvOvOPMO86848w7zrxD3B3i7hB3h7g7xN0h7g5xd4i7Q9wd4u4Qdyf9/mx3
vW437Kbdstt2Z4F3le+OfHfkuyPfHfnuyHdHvjvy3ZHvjnx3iLtD3LneVb47
8t2R7458d+S7I98d+e7Id0e+O1jYIe7MvT7qrnftnj1mj9sT9pQ9Y899BHfF
wg4WdrCwg4UdLOxgYQcLO8TdIe4Oced410NxH5yWuDtHfO0VO2ardtJO29kF
n/YFe8lesdfsDXvL3rH3Fnxa4u4Qd4e4O8TdIe4OcXeIu0PcHeLOkOzBzsPi
7i596XR32Y7acTthp+yMnbPzdsEu2iW7bFfsql2zghWtZGWrWNVqVreGNa1l
T9rT9qw9by/ay/aqvW5v2tv2rr1vH9jH7OP2JebMu8TdJe4ucXeJu0vcXeLu
EneXuLvE3SXuLnF3ibtLhl0y7JJhlwy7ZNglwy4Zdsmwq+BdBe8qeFfBuwre
VfCuM+86864z7zrzrjPvEneXuLvE3SXuLnF3ibtL3F3i7hJ3l7i7xN1Nvzvb
Xa/bDbtpt+y23VngXeW7K99d+e7Kd1e+u/Ldle+ufHfluyvfXeLuEneud5Xv
rnx35bsr31357sp3V7678t2V7y4Wdok7c6+Puutdu2eP2eP2hD1lz9hzH8Fd
sbCLhV0s7GJhFwu7WNjFwi5xd4m7S9w53vVQ3AenJe7uEV95xY7Zqp2003Z2
wad9wV6yV+w1e8PesnfsvQWflri7xN0l7i5xd4m7S9xd4u4Sd5e4MyR7sPuw
uHtLO9O95S+e7h2143bCTtkZO2fn7YJdtEt22a7YVbtmBStaycpWsarVrG4N
a1rLnrSn7Vl73l60l+1Ve93etLftXXvfPrCP2cftS+zLjLh7xN0j7h5x94i7
R9w94u4Rd4+4e8TdI+4ecffIsEeGPTLskWGPDHtk2CPDHhn2FLyn4D0F7yl4
T8F7Ct5z5j1n3nPmPWfec+Y94u4Rd4+4e8TdI+4ecfeIu0fcPeLuEXePuHvp
d2a763W7YTftlt22Owu8q3z35Lsn3z357sl3T7578t2T75589+S7R9w94s71
rvLdk++efPfkuyffPfnuyXdPvnvy3cPCHnH3lr54MXe9a/fsMXvcnrCn7Bl7
7iO4Kxb2sLCHhT0s7GFhDwt7WNgj7h5x94g7x7seivvgtB/6+Iivu2LHbNVO
2mk7u+DTvmAv2Sv2mr1hb9k79t6CT0vcPeLuEXePuHvE3SPuHnH3iLtH3BmS
Pdh7WNz9pf9uur9sR+24nbBTdsbO2Xm7YBftkl22K3bVrlnBilayslWsajWr
W8Oa1rIn7Wl71p63F+1le9VetzftbXvX3rcP7GP2cfsS+zLbM+LuE3efuPvE
3SfuPnH3ibtP3H3i7hN3n7j7ZNgnwz4Z9smwT4Z9MuyTYZ8M+wreV/C+gvcV
vK/gfQXvO/O+M+87874z7zvzPnH3ibtP3H3i7hN3n7j7xN0n7j5x94m7T9z9
9Fuz3fW63bCbdstu250F3vUrTL778t2X77589+W7L999+e7Ld1+++8TdJ+5c
7yrfffnuy3dfvvvy3Zfvvnz35bsv330s7BN35l4fdde7ds8es8ftCXvKnrHn
PoK7YmEfC/tY2MfCPhb2sbCPhX3i7hN3n7hzvOuhuA9OS9z9I77qih2zVTtp
p+3sgk/7gr1kr9hr9oa9Ze/Yews+LXH3ibtP3H3i7hN3n7j7xN0n7j5xZ0j2
YP9hce8v/bfT+8t21I7bCTtlZ+ycnbcLdtEu2WW7YlftmhWsaCUrW8WqVrO6
NaxpLXvSnrZn7Xl70V62V+11e9PetnftffvAPmYfty+xL7M92zfi3ifufeLe
J+594t4n7n3i3ifufeLeJ+59Mtwnw30y3CfDfTLcJ8N9Mtwnw/3/j/f6j5U5
8fc8n+PWmc/Zj/tRFGXKsGOYcdeNu4ZhGIZRl8swDMsSwjIMw7IsMStrY1fW
smzZsmXLlpSULTnm2ONwOBy/f7RuTbeOjl4dHR2d7j4d3/Vd39Xb3/Q3/U3f
fO/efPZxkmm5ifirTvnjEXJO/fjknVeewYJzFpyz4JwF5yw4Z8E5Z845c86Z
c86cc+ac4uYUN6e4OcXNKW5OcXOKm1PcnOLmFDenuLlhG2q761jGM5HJTCVb
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
C82y0CwLzbLQLAvNstCsuM2K26y4PXjX7uK+Pq3iNvfyGI000Zs+9GNAnU+7
glWsYR0b2MQWttX5tIrbrLjNitusuM2K26y4zYrbrLjNilvDZLua3yzuv2tY
EbckCAiJ6Et/BjKIIQxlOCMYyShGM4ZxTGASU5jGdGYym7nMZyGLWcpyVrKa
taxnI5vZynZ2sJNd7GYPe9lPjjwFipQoU6FKM4rbogwtytCiDC3K0KIMLcrQ
ogwtytBiwS0W3GLBLRbcYsEtFtzizC3O3OLMLc7c4swtituiuC2K26K4LYrb
orgtituiuC2K26K4LYrbMuw/qe2uYxnPRCYzlWwd77qPAxzkEIc5wlGOcZwT
v9x1ec/e1XxbzLfFfFvMt8V8W8y3xXxbzLfFfFtkoUVxW2rd69vuOoNZzGEe
C1jEEpa9g7ueRBZaZKFFFlpkoUUWWmShRXFbFLdFcXvwrt3FfX3ab/84bunl
ERppojd96MeAOp92BatYwzo2sIktbKvzaRW3RXFbFLdFcVsUt0VxWxS3RXFb
FLeGyXb9uzeL29qwLG5NEBAS0Zf+DGQQQxjKcEYwklGMZgzjmMAkpjCN6cxk
NnOZz0IWs5TlrGQ1a1nPRjazle3sYCe72M0e9rKfHHkKFClRpkKVZlpQhlZl
aFWGVmVoVYZWZWhVhlZlaLXgVgtuteBWC2614FYLbnXmVmdudeZWZ2515lbF
bVXcVsVtVdxWxW1V3FbFbVXcVsVtVdxWxW0d9i9ru+tYxjORyUwlW8e77uMA
BznEYY5wlGMc50Sd7mq+rebbar6t5ttqvq3m22q+rebbar6tstCquDXv9W13
ncEs5jCPBSxiCcvewV1PcgpZaJWFVllolYVWWWhV3FbFbVXcHrxrd3Ffn1Zx
W3v5+kaa6E0f+jGgzqddwSrWsI4NbGIL2+p8WsVtVdxWxW1V3FbFbVXcVsVt
VdxWxa1hsl2tbxa3rWFJ3JYgICSiL/0ZyCCGMJThjGAkoxjNGMYxgUlMYRrT
mcls5jKfhSxmKctZyWrWsp6NbGYr29nBTnaxmz3sZT858hQoUqJMhSrNtNCK
MrQpQ5sytClDmzK0KUObMrRZcJsFt1lwmwW3WXCbBbc5c5sztzlzmzO3OXOb
4rYpbpvitilum+K2KW6b4rYpbpvitilum+K2DfsXtd11LOOZyGSmkq3jXfdx
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
Nc4mbsfZ4GacDa/H2ehKnO17Kc72vxhnB3bE2UHtcXbImTg79HScHf5/xNkR
LXF2ZHOcHXUizo7+3+PsmEqcHVeOsxOOxtlJ/1ucnVKMs9MOx9np/0ucnZmP
s7NzcXbugTg7/3+Mswv3xtnF/32cXbo7zi7/b+Psyv8mzq7+r+Ps2h1xdv2/
jbMbt8XZzf9lnN26Oc5u3xRnd/zncXbnv4mzu9bG2d1r4uyefxVn9/5ncXb/
8jibWxZn80vibGFxnC0uirOlBXG2/C/jbGVunK3OibPN/zzOtvxFnG2dHmfP
ZOPsualx9sI/jbOXJsXZqxPj7I1/HGdv/6M4+/6YOPvh6Dj70Z/F2U/+NM5+
+h/F2c9GxNnP/36c/eLvxdkv/26c/WpInP3m78TZrr8dZ5+n4+yL/nH2Zd84
+yoZZ3+I4uyPYZz9qSnO/vy34uwfEnH2rxvi7LATtd11rLuOd9eJ7jrZXaf+
r3E2W3DXQ+76P7vr/9Szd93nrgfc9aC7HnLXw/9pnD2yMM4edddj7nr8X8TZ
E7PddZa7zujZu37nrr9y11+762/c9fs+cfa3fxxnf+euvw/irH8wZP/qj+Ks
4mYb3q/PXWe46yx3neOu8/bH2QX74uyi/yHOLnHXZf+du+6q711Puuspdz39
53H27LQ4e95dL7rr5X/irhPcdby7ju3Ju3YX9/Vpv/XWXnfibKPTNt2Is72v
xdk+TtvPaQdccNrz//60bU7b2rOnXeG0q5x2jdOu+6/i7IbtcXaT027ZEme3
/RdOu9FpNzjtOqf91z172mtOe9Np33PaD/5hnL33H8fZj0f9+9P+idP+g1om
2zXnzeL+UcP/FycSfxUngr+ME+Hv40T0uzjR97dxov/3cWLgb+LEoF/HiSG/
ihNDv4sTw7+JEyO+ihMjv4wTo76IE6M/jxNjPosT4z6NExM+iROTPo4TU+7F
iWkfxInp78WJmTfjxOxrcWLu5Tgx/2KcWHg+Tiw+GyeWno4Ty0/FiZUn48Tq
E3Fi7fE4sf5YnNh4NE5sPhInth6OE9sPxYkdB+PEzgNxYte+OLF7T5zYsztO
7N0VJ/bvjBO5HXEivz1OFLbFieKWOFHaFCfKG+JEZV2cqK6JE82r4kTLijjR
uixOnFkSJ84tihMXFsSJS/PixNU5ceLGrDhxe0aceD8bJz6cGic+mhwnPpkY
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
TZtv2nzT5ptW3LTiphW3R+9qvmnzTZtv2nzT5ps237T5ps03bb5p800rblpx
e/Su5ps237T5ps03bb5p802bb9p80+abloW04ta817fdVRbSspCWhbQspGUh
LQtpWUjLQlpx04pbt7vKQloW0rKQloW0LKRlIS0LacVNK25acXvwrt3FfX1a
xU33csJGmuhNH/ox4JfTvnDa507b1bOnVdy04qYVN624acVNK25acdOKm1bc
tOKmFTetuD16WsVNK25acdOKm1bctOKmFTetuGnFrWGyXek3i5tp+L/jTIKA
kIi+9GcgFpyx4IwFZ5w548wZZ844c8aZM4qbUdyM4mYUN6O4GcXNKG5GcTOK
m1GGjDJklCGjDBllyChDRhkyFpyx4IwFZyw4Y8EZC85YcMaCMxacseCMM2ec
OaO4GcXNKG5GcTOKm1HcjOJmFDejuBnFzShuRnEzypBRhowyZJQhowwZZcgo
Q0YZMhacseCMBWcsOGPBGQvOOHPGmTPOnHHmjDNnFDejuBnFzShuRnEziptR
3IziZhQ3o7gZxc0Me1jbXc03Y74Z882Yb8Z8M+abUdyM4mYUt0fvar4Z882Y
b8Z8M+abMd+M+WbMN2O+GfPNKG5GcXv0ruabMd+M+WbMN2O+GfPNmG/GfDPm
m5GFjOLWvNe33VUWMrKQkYWMLGRkISMLGVnIyEJGcTOKW7e7ykJGFjKykJGF
jCxkZCEjCxnFzShuRnF78K7dxX19WsXN9HK+RproTR/6MeCX075w2udO29Wz
p1XcjOJmFDejuBnFzShuRnEziptR3IziZhQ3o7g9elrFzShuRnEziptR3Izi
ZhQ3o7gZxa1hsl2ZN4s7uOH/igcnCAiJ6Et/BjIICx5swYOdebAzD3bmwc48
2JkHK+5gxR2suIMVd7DiDlbcwYo7WHEHK+5gZRisDIOVYbAyDFaGwcowWBkG
W/BgCx5swYP/f17q+LXtfN/zOzYxNnbt2rXr1pWr8M0qKCgoKCgoKKugoKCg
VKlSBQUFBaVKlVU0oxnPeOqpp57rqaeaauqznvXBpz744LO+9b2+eMltS0vb
2+7ShaWlLYUthUKhsGVM+4+4D/9wzWVNfpKUH56/2AZ/vm9ePCw4ZMEhCw5Z
cMiCQxYcsuCQM4ecOUTcEHFDxA0RN0TcEHFDxA0RN0TcEHFDxA0RN0SGEBlC
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
N0XcFHFTxE0RN0XcFHFTxE2RIUWGFBlSZEiRIUWGFBlSZEhZcMqCUxacsuCU
BacsOOXMKWdOOXPKmVPOnCJuirgp4qaImyJuirgp4qaImyJuirgp4qaC/7K/
u97VPZlvynxT5psy3xRxU8RNEXegdzXflPmmzDdlvinzTZlvynxT5psy35T5
poibIu5A72q+KfNNmW/KfFPmmzLflPmmzDdlvikspIjb914/dlcspLCQwkIK
CykspLCQwkIKCynipog7tLtiIYWFFBZSWEhhIYWFFBZSxE0RN0XcAd71QtzL
0xI3NeosY5rQlGY0p4Uhn5a4KeKmiJsiboq4KeKmiJsiboq4KeKmiJsi7kBP
S9wUcVPETRE3RdwUcVPETRE3Rdw+JnuWuipueuR/OU9f07gmNa1ZzWtRS1rW
dd3QTd3Sbd1RQkmlRNw0cdPETRM3Tdw0cdNkSJMhTYY0GdJkSJMhTYa0Bact
OG3BaQtOW3DagtMWnLbgtAWnLTjtzGlnThM3Tdw0cdPETRM3Tdw0cdPETRM3
Tdw0cdPETZMhTYY0GdJkSJMhTYY0GdJkSFtw2oLTFpy24LQFpy047cxpZ047
c9qZ086cJm6auGnipombJm6auGnipombJm6auGnipoP/vL+73tU93Zf5ps03
bb5p4qaJmybuQO9qvmnzTZtv2nzT5ps237T5ps03bb5p800TN03cgd7VfNPm
mzbftPmmzTdtvmnzTZtv2nzTWEgTt++9fuyuWEhjIY2FNBbSWEhjIY2FNBbS
xE0Td2h3xUIaC2kspLGQxkIaC2kspImbJm6auAO864W4l6clbnrUScY0oSnN
aE4LQz4tcdPETRM3Tdw0cdPETRM3Tdw0cdPETRM3TdyBnpa4aeKmiZsmbpq4
aeKmiZsmbpq4fUz2LH1V3L898j+dZ65pXJOa1qzmtaglLeu6buimbum27iih
pFJKi7gZ4maImyFuhrgZMmTIkCFDhgwZMmTIkCFDxoIzFpyx4IwFZyw4Y8EZ
C85YcMaCMxacceaMM2eImyFuhrgZ4maImyFuhrgZ4maImyFuhrgZ4mbIkCFD
hgwZMmTIkCFDhgwZMmQsOGPBGQvOWHDGgjMWnHHmjDNnnDnjzBlnzhA3Q9wM
cTPEzRA3Q9wMcTPEzRA3Q9wMcTPBX/Z317u6p/t6IPPNmG+GuBniZog70Lua
b8Z8M+abMd+M+WbMN2O+GfPNmG/GfDPEzRB3oHc134z5Zsw3Y74Z882Yb8Z8
M+abMd8MFjLEzfS714/dFQsZLGSwkMFCBgsZLGSwkMFChrgZ4g7trljIYCGD
hQwWMljIYCGDhQxxM8TNEHeAd70Q9/K0v/qTUecY04SmNKM5LQz5tMTNEDdD
3AxxM8TNEDdD3AxxM8TNEDdD3AxxB3pa4maImyFuhrgZ4maImyFuhrgZ4vYx
2bO/fVXc7Mg/Oc9e07gmNa1ZzWtRS1rWdd3QTd3Sbd1RQkmllFZGxM0SN0vc
LHGzZMiSIUuGLBmyZMiSIUuGrAVnLThrwVkLzlpw1oKzFpy14KwFZy0468xZ
Z84SN0vcLHGzxM0SN0vcLHGzxM0SN0vcLHGzxM2SIUuGLBmyZMiSIUuGLBmy
ZMhacNaCsxacteCsBWctOOvMWWfOOnPWmbPOnCVulrhZ4maJmyVulrhZ4maJ
myVulrhZ4maDf9DfXe/qnu7rgR7KfLPEzRI3S9yB3tV8s+abNd+s+WbNN2u+
WfPNmm/WfLPmmyVulrgDvav5Zs03a75Z882ab9Z8s+abNd+s+WaxkCVu33v9
2F2xkMVCFgtZLGSxkMVCFgtZLGSJmyXu0O6KhSwWsljIYiGLhSwWsljIEjdL
3CxxB3jXC3EvT0vc7KhTjGlCU5rRnBaGfFriZombJW6WuFniZombJW6WuFni
ZombJW6WuAM9LXGzxM0SN0vcLHGzxM0SN0vcLHH7mOxZ9qq4uZF/fJ67pnFN
alqzmteilrSs67qhm7ql27qjhJJKKa2MsiJujrg54ubIkCNDjgw5MuTIkCND
jgw5C85ZcM6Ccxacs+CcBecsOGfBOQvOWXDOmXPOnCNujrg54uaImyNujrg5
4uaImyNujrg54uaImyNDjgw5MuTIkCNDjgw5MuTIkLPgnAXnLDhnwTkLzllw
zplzzpxz5pwz55w5R9wccXPEzRE3R9wccXPEzRE3R9wccXPEzQV/0d9d7+qe
7uuBHurRxV3/B3f9h+76V4O9q/nmzDdnvjnzzZlvznxz5psz35z55sw3R9wc
cQd6V/PNmW/OfHPmmzPfnPnmzDdnvjnzzWEhR9y+9/qxu2Ihh4UcFnJYyGEh
h4UcFnJYyBE3R9yh3RULOSzksJDDQg4LOSzksJAjbo64OeIO8K4X4l6elri5
UWcY04SmNKM5LQz5tMTNETdH3Bxxc8TNETdH3Bxxc8TNETdH3BxxB3pa4uaI
myNujrg54uaImyNujrg54vYx2bPcVXHzI//oPH9N45rUtGY1r0UtaVnXdUM3
dUu3dUcJJZVSWhlllRNx88TNkyFPhjwZ8mTIkyFPhjwZ8hact+C8BectOG/B
eQvOW3DegvMWnLfgvDPnnTlP3Dxx88TNEzdP3Dxx88TNEzdP3Dxx88TNEzdP
hjwZ8mTIkyFPhjwZ8mTIkyFvwXkLzltw3oLzFpy34Lwz550578x5Z847c564
eeLmiZsnbp64eeLmiZsnbp64eeLmiZsP/ry/u97VPd3XAz3Uo7++6z90178a
7F3NN2++efPNm2/efPPmmzffvPnmzTdvvnni5ok70Luab9588+abN9+8+ebN
N2++efPNm28eC3ni9r3Xj931sbCQx0IeC3ks5LGQx0IeC3ni5ok7tLtiIY+F
PBbyWMhjIY+FPBbyxM0TN0/cAd71QtzL0/76r57nR51gTBOa0ozmtDDk0xI3
T9w8cfPEzRM3T9w8cfPEzRM3T9w8cfPEHehpiZsnbp64eeLmiZsnbp64eeLm
idvHZM/yV8UtjPx354VrGtekpjWreS1qScu6rhu6qVu6rTtKKKmU0sooq5zy
Im6BDAUyFMhQIEOBDAUyFMhQsOCCBRcsuGDBBQsuWHDBggsWXLDgggUXnLng
zAXiFohbIG6BuAXiFohbIG6BuAXiFohbIG6BuAUyFMhQIEOBDAUyFMhQIEOB
DAULLlhwwYILFlyw4IIFF5y54MwFZy44c8GZC8QtELdA3AJxC8QtELdA3AJx
C8QtELdA3ELwn/Z317u6p/t6oId69Dfv+leDvav5Fsy3YL4F8y2Yb8F8C+Zb
MN+C+RbMt0DcAnEHelfzLZhvwXwL5lsw34L5Fsy3YL4F8y1goUDcvvf6sbs+
1hNhoYCFAhYKWChgoYCFAnELxB3aXbFQwEIBCwUsFLBQwEIBCwXiFohbIO4A
73oh7uVpiVsY9fljmtCUZjSnhSGflrgF4haIWyBugbgF4haIWyBugbgF4haI
WyDuQE9L3AJxC8QtELdA3AJxC8QtELdA3D4me1a4Km5x5L85L17TuCY1rVnN
a1FLWtZ13dBN3dJt3VFCSaWUVkZZ5ZRXQWQokqFIhiIZimQokqFIhqIFFy24
aMFFCy5acNGCixZctOCiBRctuOjMRWcuErdI3CJxi8QtErdI3CJxi8QtErdI
3CJxi8QtkqFIhiIZimQokqFIhiIZimQoWnDRgosWXLTgogUXLbjozEVnLjpz
0ZmLzlwkbpG4ReIWiVskbpG4ReIWiVskbpG4ReIWg7/f313v6p7u64Ee6tEQ
72q+RfMtmm/RfIvmWzTfovkWzbdovkXzLRK3SNyB3tV8i+ZbNN+i+RbNt2i+
RfMtmm/RfItYKBK3771+7K6P9URPhYUiFopYKGKhiIUicYvEHdpdsVDEQhEL
RSwUsVDEQhELReIWiVsk7gDveiHu5Wl//VfOi6M+fUwTmtKM5rQw5NMSt0jc
InGLxC0St0jcInGLxC0St0jcInGLxB3oaYlbJG6RuEXiFolbJG6RuEXiFonb
x2TPilfFLY38V+elaxrXpKY1q3ktaknLuq4buqlbuq07SiiplNLKKKuc8iqo
KDKUyFAiQ4kMJTKUyFCy4JIFlyy4ZMElCy5ZcMmCSxZcsuCSBZecueTMJeKW
iFsibom4JeKWiFsibom4JeKWiFsibom4JTKUyFAiQ4kMJTKUyFAiQ4kMJQsu
WXDJgksWXLLgkgWXnLnkzCVnLjlzyZlLxC0Rt0TcEnFLxC0Rt0TcEnFLxC0R
t0TcUnDY313v6p7u64Ee6tEQ72q+JfMtmW/JfEvmWzLfkvmWzLdkviXzLRG3
RNyB3tV8S+ZbMt+S+ZbMt2S+JfMtmW/JfEtYKBG3771+7K6P9URP9UxYKGGh
hIUSFkrELRF3aHfFQgkLJSyUsFDCQgkLJSyUiFsibom4A7zrhbiXpyVuadRn
j2lCU5rRnBaGfFrilohbIm6JuCXilohbIm6JuCXilohbIm6JuAM9LXFLxC0R
t0TcEnFLxC0Rt0TcEnH7mOxZ6aq45ZH/4rx8TeOa1LRmNa9FLWlZ13VDN3VL
t3VHCSWVUloZZZVTXgUVVRIZymQok6FMhjIZyhZctuCyBZctuGzBZQsuW3DZ
gssWXLbgsjOXnblM3DJxy8QtE7dM3DJxy8QtE7dM3DJxy8QtE7dMhjIZymQo
k6FMhjIZymQok6FswWULLltw2YLLFly24LIzl5257MxlZy47c5m4ZeKWiVsm
bpm4ZeKWiVsmbpm4ZeKWiVsODvq7613d03090EM9GuJdzbdsvmXzLZtv2XzL
5ls237L5ls23bL5l4paJO9C7mm/ZfMvmWzbfsvmWzbdsvmXzLZtvGQtl4va9
14/d9bGe6Kme6bmwUMZCGQtl4paJO7S7YqGMhTIWylgoY6GMhTIWysQtE7dM
3AHe9ULcy9MStzzqk8c0oSnNaE4LQz4tccvELRO3TNwyccvELRO3TNwyccvE
LRO3TNyBnpa4ZeKWiVsmbpm4ZeKWiVsmbpm4fUz2rHxV3Jcj/9l55dpfnlfG
NalpzWpei1rSsq7rhm7qlm7rjhJKKqW0Msoqp7wKKqqksshQIUOFDBUyVCy4
YsEVC65YcMWCKxZcseCKBVcsuGLBFWeuOHOFuBXiVohbIW6FuBXiVohbIW6F
uBXiVohbIW6FDBUyVMhQIUOFDBUyVMhQIUPFgisWXLHgigVXLLhiwRVnrjhz
xZkrzlxx5gpxK8StELdC3ApxK8StELdC3ApxK8StELcS/L6/u97VPd3XAz3U
oyHe1Xwr5lsx34r5Vsy3Yr4V862Yb8V8K+ZbIW6FuAO9q/lWzLdivhXzrZhv
xXwr5lsx34r5VrBQIW5l5C+Hc9fHeqKneqbneiEsVLBQIW6FuEO7KxYqWKhg
oYKFChYqWKhgoULcCnErxB3gXS/EvTztr3496nPHNKEpzWhOC0M+LXErxK0Q
t0LcCnErxK0Qt0LcCnErxK0Qt0LcgZ6WuBXiVohbIW6FuBXiVohbIW6FuH1M
9uzlVXGrI//gvHpN45rUtGY1r0UtaVnXdUM3dUu3dUcJJZVSWhlllVNeBRVV
UlkVkaFKhioZqhZcteCqBVctuGrBVQuuWnDVgqsWXLXgqjNXnblK3Cpxq8St
ErdK3Cpxq8StErdK3Cpxq8StErdKhioZqmSokqFKhioZqmSokqFqwVULrlpw
1YKrFly14KozV5256sxVZ646c5W4VeJWiVslbpW4VeJWiVslbpW4VeJWiVsN
ftffXe/qnu7rgR7q0RDvar5V862ab9V8q+ZbNd+q+VbNt2q+VfOtErdK3IHe
1Xyr5ls136r5Vs23ar5V862ab9V8q1ioErfvvX7sro/1RE/1TM/1Qi+FhSpx
q8Qd2l2xUMVCFQtVLFSxUMVCFQtV4laJWyXuAO96Ie7laYlbHfWpY5rQlGY0
p4Uhn5a4VeJWiVslbpW4VeJWiVslbpW4VeJWiVsl7kBPS9wqcavErRK3Stwq
cavErRK3Stw+JntWvSpubeQvzmvXNK5JTWtW81rUkpZ1XTd0U7d0W3eUUFIp
pZVRVjnlVVBRJZVVUVVkqJGhZsE1C65ZcM2CaxZcs+CaBdcsuGbBNQuuOXPN
mWvErRG3RtwacWvErRG3RtwacWvErRG3RtwacWtkqJGhRoYaGWpkqJGhRoYa
GWoWXLPgmgXXLLhmwTULrjlzzZlrzlxz5poz14hbI26NuDXi1ohbI26NuDXi
1ohbI26NuLXgt/3d9a7u6b4e6KEeDfGu5lsz35r51sy3Zr41862Zb818a+Zb
M98acWvEHehdzbdmvjXzrZlvzXxr5lsz35r51sy3hoUacfve68fu+lhP9FTP
9Fwv9FKvLu564q7Hw7srFmpYqGGhhoUaFmpYqGGhRtwacWvEHeBdL8S9PO2v
//J5bdRnjmlCU5rRnBaGfFri1ohbI26NuDXi1ohbI26NuDXi1ohbI26NuAM9
LXFrxK0Rt0bcGnFrxK0Rt0bcGnH7mOxZ7aq49ZE/O69f07gmNa1ZzWtRS1rW
dd3QTd3Sbd1RQkmllFZGWeWUV0FFlVRWRVXVRIa6BdctuG7BdQuuW3DdgusW
XLfgugXXLbjuzHVnrhO3Ttw6cevErRO3Ttw6cevErRO3Ttw6cevErZOhToY6
GepkqJOhToY6GepkqFtw3YLrFly34LoF1y247sx1Z647c92Z685cJ26duHXi
1olbJ26duHXi1olbJ26duHXi1oO/199d7+qe7uuBHurREO9qvnXzrZtv3Xzr
5ls337r51s23br51860Tt07cgd7VfOvmWzffuvnWzbduvnXzrZtv3XzrWKgT
t++9fuyuj/VET/VMz/VCL/Xqr+96PLy7YqGOhToW6lioY6GOhToW6sStE7dO
3AHe9ULcy9MStz7qE8c0oSnNaE4LQz7taxG3Ttw6cevErRO3Ttw6cevErRO3
Ttw6cQd6WuLWiVsnbp24deLWiVsnbp24deL2Mdmz+lVxGyN/et64pnFNalqz
mteilrSs67qhm7ql27qjhJJKKa2Mssopr4KKKqmsiqqqqS4Lblhww4IbFtyw
4IYFNyy4YcENC25YcMOZG87cIG6DuA3iNojbIG6DuA3iNojbIG6DuA3iNojb
IEODDA0yNMjQIEODDA0yNMjQsOCGBTcsuGHBDQtuWHDDmRvO3HDmhjM3nLlB
3AZxG8RtELdB3AZxG8RtELdB3AZxG8RtBH+3v7ve1T3d1wM91KMh3tV8G+bb
MN+G+TbMt2G+DfNtmG/DfBvm2yBug7gDvav5Nsy3Yb4N822Yb8N8G+bbMN+G
+Taw0CBu33v92F0f64me6pme64Ve6tUnuCsWGlhoYKGBhQYWGlhoYKFB3AZx
G8Qd4F0vxL08LXEboz5tTBOa0ozmtDDk077WGxG3QdwGcRvEbRC3QdwGcRvE
bRC3QdyBnpa4DeI2iNsgboO4DeI2iNsgboO4fUz2rHFV3ObI3z9vXvvjeXNc
k5rWrOa1qCUt67pu6KZu6bbuKKGkUkoro6xyyqugokoqq6KqaqqrIQtuWnDT
gpsW3LTgpgU3LbhpwU0Lbjpz05mbxG0St0ncJnGbxG0St0ncJnGbxG0St0nc
JnGbZGiSoUmGJhmaZGiSoUmGJhmaFty04KYFNy24acFNC246c9OZm87cdOam
MzeJ2yRuk7hN4jaJ2yRuk7hN4jaJ2yRuk7jNYLu/u97VPd3XAz3UoyHe1Xyb
5ts036b5Ns23ab5N822ab9N8m+bbJG6TuAO9q/k2zbdpvk3zbZpv03yb5ts0
36b5NrHQJG5z5I/DuetjPdFTPdNzvdBLvfoEd8VCEwtNLDSx0MRCEwtNLDSJ
2yRuk7gDvOuFuJen/dWUR33WmCY0pRnNaWHIp32tN3or4jaJ2yRuk7hN4jaJ
2yRuk7hN4g70tMRtErdJ3CZxm8RtErdJ3CZxm8TtY7Jnzavitkb+cN66pnFN
alqzmteilrSs67qhm7ql27qjhJJKKa2Mssopr4KKKqmsiqqqqa6GmrLglgW3
LLhlwS0Lbllwy4JbFtxy5pYzt4jbIm6LuC3itojbIm6LuC3itojbIm6LuC3i
tsjQIkOLDC0ytMjQIkOLDC0ytCy4ZcEtC25ZcMuCWxbccuaWM7ecueXMLWdu
EbdF3BZxW8RtEbdF3BZxW8RtEbdF3BZxW0Gvv7ve1T3d1wM91KMh3tV8W+bb
Mt+W+bbMt2W+LfNtmW/LfFvm2yJui7gDvav5tsy3Zb4t822Zb8t8W+bbMt+W
+baw0CJu33v92F0f64me6pme64Ve6tUnuCsWWlhoYaGFhRYWWlhoYaFF3BZx
W8Qd4F0vxL08LXFboz5pTBOa0ozmtDDk077WG73VOxG3RdwWcVvEbRG3RdwW
cVvEHehpidsibou4LeK2iNsibou4LeK2iNvHZM9aV8Vtj/z+vH1N45rUtGY1
r0UtaVnXdUM3dUu3dUcJJZVSWhlllVNeBRVVUlkVVVVTXQ011ZIFty24bcFt
C25bcNuC2xbcdua2M7eJ2yZum7ht4raJ2yZum7ht4raJ2yZum7ht4rbJ0CZD
mwxtMrTJ0CZDmwxtMrQtuG3BbQtuW3DbgtsW3HbmtjO3nbntzG1nbhO3Tdw2
cdvEbRO3Tdw2cdvEbRO3Tdw2cdtBt7+73tU93dcDPdSjId7VfNvm2zbftvm2
zbdtvm3zbZtv23zb5tsmbpu4A72r+bbNt22+bfNtm2/bfNvm2zbftvm2sdAm
bt97/dhdH+uJnuqZnuuFXurVJ7grFtpYaGOhjYU2FtpYaGOhTdw2cdvEHeBd
L8S9PC1x26M+Z0wTmtKM5rQw5NO+1hu91Tu9F3HbxG0Tt03cNnHbxG0Td6Cn
JW6buG3itonbJm6buG3itonbJm4fkz1rXxX3i5H/5Lxz7XfnnXFNalqzmtei
lrSs67qhm7ql27qjhJJKKa2Mssopr4KKKqmsiqqqqa6GmmrpM1lwx4I7Ftyx
4I4Fdyy448wdZ+4Qt0PcDnE7xO0Qt0PcDnE7xO0Qt0PcDnE7xO2QoUOGDhk6
ZOiQoUOGDhk6ZOhYcMeCOxbcseCOBXcsuOPMHWfuOHPHmTvO3CFuh7gd4naI
2yFuh7gd4naI2yFuh7gd4naCH/u7613d03090EM9GuJdzbdjvh3z7Zhvx3w7
5tsx3475dsy3Y74d4naIO9C7mm/HfDvm2zHfjvl2zLdjvh3z7ZhvBwsd4nZG
fjecuz7WEz3VMz3XC73Uq09wVyx0sNDBQgcLHSx0sNDBQoe4HeJ2iDvAu16I
e3naX/1q1KeMaUJTmtGcFoZ82td6o7d6p/f6XMTtELdD3A5xO8TtEHegpyVu
h7gd4naI2yFuh7gd4naI2yFuH5M9++KquCsjvz1fuaZxTWpas5rXopa0rOu6
oZu6pdu6o4SSSimtjLLKKa+CiiqprIqqqqmuhppq6TN9IQteseAVC16x4BUL
XnHmFWdeIe4KcVeIu0LcFeKuEHeFuCvEXSHuCnFXiLtC3BUyrJBhhQwrZFgh
wwoZVsiwQoYVC16x4BULXrHgFQteseAVZ15x5hVnXnHmFWdeIe4KcVeIu0Lc
FeKuEHeFuCvEXSHuCnFXiLsS/NDfXe/qnu7rgR7q0RDvar4r5rtivivmu2K+
K+a7Yr4r5rtivivmu0LcFeIO9K7mu2K+K+a7Yr4r5rtivivmu2K+K+a7goUV
4va914/d9bGe6Kme6ble6KVefYK7YmEFCytYWMHCChZWsLCChRXirhB3hbgD
vOuFuJenJe7KqM8Y04SmNKM5LQz5tK/1Rm/1Tu/1ub4UcVeIu0LcFeKuEHeg
pyXuCnFXiLtC3BXirhB3hbgrxF0hbh+TPVu5Ku7qyN87X72mcU1qWrOa16KW
tKzruqGbuqXbuqOEkkoprYyyyimvgooqqayKqqqproaaaukzfaGvZMGrFrxq
wasWvOrMq868StxV4q4Sd5W4q8RdJe4qcVeJu0rcVeKuEneVuKtkWCXDKhlW
ybBKhlUyrJJhlQyrFrxqwasWvGrBqxa8asGrzrzqzKvOvOrMq868StxV4q4S
d5W4q8RdJe4qcVeJu0rcVeKuEnc1+JP+7npX93RfD/RQj4Z4V/NdNd9V8101
31XzXTXfVfNdNd9V810131XirhJ3oHc131XzXTXfVfNdNd9V810131XzXTXf
VSysErfvvX7sro/1RE/1TM/1Qi/16hPcFQurWFjFwioWVrGwioVVLKwSd5W4
q8Qd4F0vxL08LXFXR33GmCY0pRnNaWHIp32tN3qrd3qvz/Wlvv7r0247bc9p
u4M9LXFXibtK3FXirhJ3lbirxF0l7ipx+5js2epVcb8d+bvna9c0rklNa1bz
WtSSlnVdN3RTt3Rbd5RQUimllVFWOeVVUFEllVVRVTXV1VBTLX2mL/SVvpEF
r1nwmgWvOfOaM68Rd424a8RdI+4acdeIu0bcNeKuEXeNuGvEXSPuGhnWyLBG
hjUyrJFhjQxrZFgjw5oFr1nwmgWvWfCaBa9Z8JozrznzmjOvOfOaM68Rd424
a8RdI+4acdeIu0bcNeKuEXeNuGvEXQs2+rvrXd3TfT3QQz0a4l3Nd81818x3
zXzXzHfNfNfMd81818x3zXzXiLtG3IHe1XzXzHfNfNfMd81818x3zXzXzHfN
fNewsEbctX73+rG7PtYTPdUzPdcLvdSrT3BXLKxhYQ0La1hYw8IaFtawsEbc
NeKuEXeAd70Q9/K0v/5L52ujPmFME5rSjOa0MOTTvtYbvdU7vdfn+lJf/83T
9py2O9jTEneNuGvEXSPuGnHXiLtG3DXirhG3j8mefXtV3PWR//h8/ZrGNalp
zWpei1rSsq7rhm7qlm7rjhJKKqW0Msoqp7wKKqqksiqqqqa6Gmqqpc/0hb7S
N/pWFrxuwevOvO7M68RdJ+46cdeJu07cdeKuE3eduOvEXSfuOnHXibtOhnUy
rJNhnQzrZFgnwzoZ1smwbsHrFrxuwesWvG7B6xa87szrzrzuzOvOvO7M68Rd
J+46cdeJu07cdeKuE3eduOvEXSfuOnHXg/X+7npX93RfD/RQj4Z4V/NdN991
810333XzXTffdfNdN991810333XirhN3oHc133XzXTffdfNdN991810333Xz
XTffdSysE7fvvX7sro/1RE/1TM/1Qi/16hPcFQvrWFjHwjoW1rGwjoV1LKwT
d52468Qd4F0vxL08LXHXRz1/TBOa0ozmtDDk077WG73VO73X5/pSX//N0/ac
tjvY0xJ3nbjrxF0n7jpx14m7Ttx14q4Tt4/Jnq1fFXdj5D8637imcU1qWrOa
16KWtKzruqGbuqXbuqOEkkoprYyyyimvgooqqayKqqqproaaaukzfaGv9I2+
1Xey4A1n3nDmDeJuEHeDuBvE3SDuBnE3iLtB3A3ibhB3g7gbxN0gwwYZNsiw
QYYNMmyQYYMMG2TYsOANC96w4A0L3rDgDQvecOYNZ95w5g1n3nDmDeJuEHeD
uBvE3SDuBnE3iLtB3A3ibhB3g7gbwVp/d72re7qvB3qoR0O8q/lumO+G+W6Y
74b5bpjvhvlumO+G+W6Y7wZxN4g70Lua74b5bpjvhvlumO+G+W6Y74b5bpjv
BhY2iNv3Xj9218d6oqd6pud6oZd69QnuioUNLGxgYQMLG1jYwMIGFjaIu0Hc
DeIO8K4X4l6e9lczHvX0MU1oSjOa08KQT/tab/RW7/Ren+tLff3Pn7Y72NMS
d4O4G8TdIO4GcTeIu0HcDeJuELePyZ5tXBV3c+Q/PN+8pnFNalqzmteilrSs
67qhm7ql27qjhJJKKa2Mssopr4KKKqmsiqqqqa6GmmrpM32hr/SNvtV3+l7O
vOnMm8TdJO4mcTeJu0ncTeJuEneTuJvE3STuJnE3ibtJhk0ybJJhkwybZNgk
wyYZNsmwacGbFrxpwZsWvGnBmxa86cybzrzpzJvOvOnMm8TdJO4mcTeJu0nc
TeJuEneTuJvE3STuJnE3g2/6u+td3dN9PdBDPRriXc1303w3zXfTfDfNd9N8
N81303w3zXfTfDeJu0ncgd7VfDfNd9N8N81303w3zXfTfDfNd9N8N7GwSdy+
9/qxuz7WEz3VMz3XC73Uq09wVyxsYmETC5tY2MTCJhY2sbBJ3E3ibhJ3gHe9
EPfytMTdHPXsMU1oSjOa08KQT/tab/RW7/Ren+tLfT3k0xJ3k7ibxN0k7iZx
N4m7SdxN4m4St4/Jnm1eFXdr5D8437qmcU1qWrOa16KWtKzruqGbuqXbuqOE
kkoprYyyyimvgooqqayKqqqproaaaukzfaGv9I2+1Xf6Xj/ImbeIu0XcLeJu
EXeLuFvE3SLuFnG3iLtF3C3ibhF3iwxbZNgiwxYZtsiwRYYtMmyRYcuCtyx4
y4K3LHjLgrcseMuZt5x5y5m3nHnLmbeIu0XcLeJuEXeLuFvE3SLuFnG3iLtF
3C3ibgVf9XfXu7qn+3qgh3o0xLua75b5bpnvlvlume+W+W6Z75b5bpnvlvlu
EXeLuAO9q/lume+W+W6Z75b5bpnvlvlume+W+W5hYYu4fe/1Y3d9rCd6qmd6
rhd6qVef4K5Y2MLCFha2sLCFhS0sbGFhi7hbxN0i7gDveiHu5WmJuzXqyWOa
0JRmNKeFIZ/2td7ord7pvT7Xl/p6yKcl7hZxt4i7Rdwt4m4Rd4u4W8TdIm4f
kz3buipud2TzvHvtT86745rUtGY1r0UtaVnXdUM3dUu3dUcJJZVSWhlllVNe
BRVVUlkVVVVTXQ011dJn+kJf6Rt9q+/0vX7QjyJul7hd4naJ2yVul7hd4naJ
2yVul7hd4naJ2yVDlwxdMnTJ0CVDlwxdMnTJ0LXgrgV3LbhrwV0L7lpw15m7
ztx15q4zd525S9wucbvE7RK3S9wucbvE7RK3S9wucbvE7QZf9nfXu7qn+3qg
h3o0xLuab9d8u+bbNd+u+XbNt2u+XfPtmm/XfLvE7RJ3oHc13675ds23a75d
8+2ab9d8u+bbNd8uFrrE7Y78yXDu+lhP9FTP9Fwv9FKvPsFdsdDFQhcLXSx0
sdDFQhcLXeJ2idsl7gDveiHu5Wl/9eNRzx3ThKY0ozktDPm0r/VGb/VO7/W5
vtTXQz4tcbvE7RK3S9wucbvE7RK3S9wucfuY7Fn3qri9kX//vHdN45rUtGY1
r0UtaVnXdUM3dUu3dUcJJZVSWhlllVNeBRVVUlkVVVVTXQ011dJn+kJf6Rt9
q+/0vX7Qj+qKuD3i9ojbI26PuD3i9ojbI26PuD3i9ojbI0OPDD0y9MjQI0OP
DD0y9MjQs+CeBfcsuGfBPQvuWXDPmXvO3HPmnjP3nLlH3B5xe8TtEbdH3B5x
e8TtEbdH3B5xe8TtBZ/3d9e7uqf7eqCHejTEu/4k8+2Zb898e+bbM9+e+fbM
t2e+PfPtEbdH3IHe1Xx75tsz35759sy3Z7498+2Zb898e1joEbfvvX7sro/1
RE/1TM/1Qi/16hPcFQs9LPSw0MNCDws9LPSw0CNuj7g94g7wrhfiXp6WuL1R
Tx3ThKY0ozktDPm0r/VGb/VO7/W5vtTXQz4tcXvE7RG3R9wecXvE7RG3R9we
cfuY7FnvqrjbI//e+fY1jWtS05rVvBa1pGVd1w3d1C3d1h0llFRKaWWUVU55
FVRUSWVVVFVNdTXUVEuf6Qt9pW/0rb7T9/pBP6qrnoi7Tdxt4m4Td5u428Td
Ju42cbeJu03cbTJsk2GbDNtk2CbDNhm2ybBNhm0L3rbgbQvetuBtC9624G1n
3nbmbWfeduZtZ94m7jZxt4m7Tdxt4m4Td5u428TdJu42cbeJux287++ud3VP
9/VAD/VoiHf9ST/LfLfNd9t8t81323y3zXfbfLfNd5u428Qd6F3Nd9t8t813
23y3zXfbfLfNd9t8t813GwvbxO17rx+762M90VM903O90Eu9+gR3xcI2Frax
sI2FbSxsY2EbC9vE3SbuNnEHeNcLcS9PS9ztUc8c04SmNKM5LQz5tK/1Rm/1
Tu/1ub7U10M+LXG3ibtN3G3ibhN3m7jbxN0m7jZx+5js2fZVcX8Z+XfPd65p
XJOa1qzmtaglLeu6buimbum27iihpFJKK6OscsqroKJKKquiqmqqq6GmWvpM
X+grfaNv9Z2+1w/6UV31tC3i7hB3h7g7xN0h7g5xd4i7Q9wd4u6QYYcMO2TY
IcMOGXbIsEOGHTLsWPCOBe9Y8I4F71jwjgXvOPOOM+84844z7zjzDnF3iLtD
3B3i7hB3h7g7xN0h7g5xd4i7Q9yd4O/0d9e7uqf7eqCHejTEu/6kn/Ubme+O
+e6Y74757pjvjvnumO8OcXeIO9C7mu+O+e6Y74757pjvjvnumO+O+e6Y7w4W
doi70+9eP3bXx3qip3qm53qhl3r1Ce6KhR0s7GBhBws7WNjBwg4Wdoi7Q9wd
4g7wrhfiXp7213/xfGfUE8c0oSnNaE4LQz7ta73RW73Te32uL/X1kE9L3B3i
7hB3h7g7xN0h7g5xd4i7Q9w+Jnv2y1Vxd0e+Pt+9pnFNalqzmteilrSs67qh
m7ql27qjhJJKKa2Mssopr4KKKqmsiqqqqa6GmmrpM32hr/SNvtV3+l4/6Ed1
1dO2dkTcXeLuEneXuLvE3SXuLnF3ibtLhl0y7JJhlwy7ZNglwy4Zdsmwa8G7
FrxrwbsWvGvBuxa868y7zrzrzLvOvOvMu8TdJe4ucXeJu0vcXeLuEneXuLvE
3SXuLnF3g3+nv7ve1T3d1wM91KMh3vUn/azf6BeZ76757prvrvnumu+u+e4S
d5e4A72r+e6a76757prvrvnumu+u+e6a76757mJhl7h97/Vjd32sJ3qqZ3qu
F3qpV5/grljYxcIuFnaxsIuFXSzsYmGXuLvE3SXuAO96Ie7laYm7O+p5Y5rQ
lGY0p4Uhn/a13uit3um9PteX+nrIpyXuLnF3ibtL3F3i7hJ3l7i7xN0lbh+T
Pdu9Ku7eyJfne9c0rklNa1bzWtSSlnVdN3RTt3Rbd5RQUimllVFWOeVVUFEl
lVVRVTXV1VBTLX2mL/SVvtG3+k7f6wf9qK562taOdkXcPeLuEXePuHvE3SPu
HnH3yLBHhj0y7JFhjwx7ZNgjwx4Z9ix4z4L3LHjPgvcseM+C95x5z5n3nHnP
mfeceY+4e8TdI+4ecfeIu0fcPeLuEXePuHvE3SPuXvBv93fXu7qn+3qgh3o0
xLv+pJ/1G/2i38p898x3z3z3zHfPfPeIu0fcgd7VfPfMd89898x3z3z3zHfP
fPfMd89897CwR9y+9/qxuz7WEz3VMz3XC73Uq09wVyzsYWEPC3tY2MPCHhb2
sLBH3D3i7hF3gHe9EPfytMTdG/W0MU1oSjOa08KQT/tab/RW7/Ren+tLfT3k
0xJ3j7h7xN0j7h5x94i7R9w94u4Rt4/Jnu1dFXd/5PPz/Wsa16SmNat5LWpJ
y7quG7qpW7qtO0ooqZTSyiirnPIqqKiSyqqoqprqaqiplj7TF/pK3+hbfafv
9YN+VFc9bWtHu9oTcfeJu0/cfeLuE3efuPtk2CfDPhn2ybBPhn0y7JNhnwz7
FrxvwfsWvG/B+xa8b8H7zrzvzPvOvO/M+868T9x94u4Td5+4+8TdJ+4+cfeJ
u0/cfeLuE3c/qPd317u6p/t6oId6NMS7/qSf9Rv9ot/qdzLfffPdN999890n
7j5xB3pX8903333z3TffffPdN9998903333z3cfCPnH73uvH7vpYT/RUz/Rc
L/RSrz7BXbGwj4V9LOxjYR8L+1jYx8I+cfeJu0/cAd71QtzL0/5qwqOeNaYJ
TWlGc1oY8mlf643e6p3e63N9qa+HfFri7hN3n7j7xN0n7j5x94m7T9x94vYx
2bP9q+IejLw/P7imcU1qWrOa16KWtKzruqGbuqXbuqOEkkoprYyyyimvgooq
qayKqqqproaaaukzfaGv9I2+1Xf6Xj/oR3XV07Z2tKs97Yu4B8Q9IO4BcQ+I
e0CGAzIckOGADAdkOCDDARkOyHBgwQcWfGDBBxZ8YMEHFnzgzAfOfODMB858
4MwHxD0g7gFxD4h7QNwD4h4Q94C4B8Q9IO4BcQ+CWn93vat7uq8HeqhHQ7zr
T/pZv9Ev+q1+p9/LfA/M98B8D4h7QNyB3tV8D8z3wHwPzPfAfA/M98B8D8z3
wHwPsHBA3L73+rG7PtYTPdUzPdcLvdSrT3BXLBxg4QALB1g4wMIBFg6wcEDc
A+IeEHeAd70Q9/K0xD0Y9aQxTWhKM5rTwpBP+1pv9Fbv9F6f60t9PeTTEveA
uAfEPSDuAXEPiHtA3APiHhC3j8meHVwV948jf+f88Nq788NxTWpas5rXopa0
rOu6oZu6pdu6o4SSSimtjLLKKa+CiiqprIqqqqmuhppq6TN9oa/0jb7Vd/pe
P+hHddXTtna0qz3t60DEPSTuIXEPiXtIhkMyHJLhkAyHZDgkwyEZDslwaMGH
FnxowYcWfGjBhxZ86MyHznzozIfOfOjMh8Q9JO4hcQ+Je0jcQ+IeEveQuIfE
PSTuIXEPg1f93fWu7um+HuihHg3xrj/pZ/1Gv+i3+p1+rz/IfA/N95C4h8Qd
6F3N99B8D8330HwPzffQfA/N99B8D833EAuHxD0ceTecuz7WEz3VMz3XC73U
q09wVywcYuEQC4dYOMTCIRYOsXBI3EPiHhJ3gHe9EPfytL/60ajnjGlCU5rR
nBaGfNrXeqO3eqf3+lxf6ushn5a4h8Q9JO4hcQ+Je0jcQ+IeEveQuH1M9uyP
V8U9Gnl7fnRN45rUtGY1r0UtaVnXdUM3dUu3dUcJJZVSWhlllVNeBRVVUlkV
VVVTXQ011dJn+kJf6Rt9q+/0vX7Qj+qqp23taFd72teBDkXcI+IeEfeIDEdk
OCLDERmOyHBEhiMyHJHhyIKPLPjIgo8s+MiCjyz4yJmPnPnImY+c+ciZj4h7
RNwj4h4R94i4R8Q9Iu4RcY+Ie0TcI+IeBS/7u+td3dN9PdBDPRriXX/Sz/qN
ftFv9Tv9Xn/QH2W+R8Q9Iu5A72q+R+Z7ZL5H5ntkvkfme2S+R+Z7ZL5HWDgi
bt97/dhdH+uJnuqZnuuFXurVJ7grFo6wcISFIywcYeEIC0dYOCLuEXGPiDvA
u16Ie3la4h6NesqYJjSlGc1pYcinfa03eqt3eq/P9aW+HvJpiXtE3CPiHhH3
iLhHxD0i7hFxj4jbx2TPjq6Kezzy5vz4msY1qWnNal6LWtKyruuGbuqWbuuO
EkoqpbQyyiqnvAoqqqSyKqqqproaaqqlz/SFvtI3+lbf6Xv9oB/VVU/b2tGu
9rSvAx3qSMQ9Ju4xGY7JcEyGYzIck+GYDMdkOCbDsQUfW/CxBR9b8LEFH1vw
sTMfO/OxMx8787EzHxP3mLjHxD0m7jFxj4l7TNxj4h4T95i4x8Q9Dl70d9e7
uqf7eqCHejTEu/6kn/Ub/aLf6nf6vf6gP+pPL+5ad9faYO9qvsfme2y+x+Z7
bL7H5ntsvsfme2y+x1g4Jm7fe/3YXR/riZ7qmZ7rhV7q1Se4KxaOsXCMhWMs
HGPhGAvHWDgm7jFxj4k7wLteiHt5WuIej3rGmCY0pRnNaWHIp32tN3qrd3qv
z/Wlvh7yaYl7TNxj4h4T95i4x8Q9Ju4xcY+J28dkz46vivvnI6/PT65pXJOa
1qzmtaglLeu6buimbum27iihpFJKK6OscsqroKJKKquiqmqqq6GmWvpMX+gr
faNv9Z2+1w/6UV31tK0d7WpP+zrQoY50LOKekOGEDCdkOCHDCRlOyHBChhMy
nFjwiQWfWPCJBZ9Y8IkFnzjziTOfOPOJM5848wlxT4h7QtwT4p4Q94S4J8Q9
Ie4JcU+Ie0Lck+Df6u+ud3VP9/VAD/VoiHf9ST/rN/pFv9Xv9Hv9QX/Un/71
XWuDvav5npjvifmemO+J+Z6Y74n5npjvifmeYOGEuCf97vVjd32sJ3qqZ3qu
F3qpV5/grn8mLJxg4QQLJ1g4wcIJFk6Ie0LcE+IO8K4X4l6e9td/4fxk1BPG
NKEpzWhOC0M+7Wu90Vu903t9ri/19ZBPS9wT4p4Q94S4J8Q9Ie4JcU+Ie0Lc
PiZ79udXxT0deXV+ek3jmtS0ZjWvRS1pWdd1Qzd1S7d1RwkllVJaGWWVU14F
FVVSWRVVVVNdDTXV0mf6Ql/pG32r7/S9ftCP6qqnbe1oV3va14EOdaRjnYgM
p2Q4JcMpGU7JcEqGUzKckuHUgk8t+NSCTy341IJPLfjUmU+d+dSZT5351JlP
iXtK3FPinhL3lLinxD0l7ilxT4l7StxT4p4G/2Z/d72re7qvB3qoR0O860/6
Wb/RL/qtfqff6w/6o/50SHc131PzPTXfU/M9Nd9T8z0131PzPTXfUyycErfv
vX7sro/1RE/1TM/1Qi/16hPc9c/0F8LCKRZOsXCKhVMsnBL3lLinxB3gXS/E
vTwtcU9H/fsxTWhKM5rTwpBP+1pv9Fbv9F6f60t9PeTTEveUuKfEPSXuKXFP
iXtK3FPinhK3j8menV4V98PIy/MP1zSuSU1rVvNa1JKWdV03dFO3dFt3lFBS
KaWVUVY55VVQUSWVVVFVNdXVUFMtfaYv9JW+0bf6Tt/rB/2ornra1o52tad9
HehQRzrWiU5Fhg9k+ECGD2T4QIYPZPhAhg8W/MGCP1jwBwv+YMEfLPiDM39w
5g/O/MGZPzjzB+J+IO4H4n4g7gfifiDuB+J+IO4H4n4g7gfifgj+jf7uelf3
dF8P9FCPhnjXn/SzfqNf9Fv9Tr/XH/RH/emQ7mq+H8z3g/l+MN8P5vvBfD+Y
7wfz/WC+H7Dwgbh97/Vjd338//Nex7EyJ/6/33P8xv2cftyPOzI6v8zvzr1z
x2/8xm/8xh133PEbl5hSSrmEEkIppZRSopVqtFKllFJKCaGEUEqPHjnucY8c
PWvXrr32Z6+tra3N7p6NrW98Y7vf7Df7zf7y/fWXTx8nuSu/VPw1Z/zxyBFm
Pp/knVeeOZjJbOYyn4UsZuk7uOtFLnMVWbgmC9dk4ZosXFPca4p7TXEH8a4D
xX19WsW9NsSrh9LOMIYzgpEtPu1yVrKataxnI5vZ2uLTKu41xb2muNcU95ri
XlPca4p7TXGvKW4Tk+2/9mZxO9oWxh0JAkIikqRIkyFLjlGMZgxjGUeFKjXq
TGYq05jBLOYwjwUsYgnLWMEq1rCODWxiC9vYzg52sovd7GEfBzjEEY5xglOc
4RwXuMQVrqEMHcrQoQwdytChDB3K0GHBHRbcYcEdFtxhwR0W3OHMHc7c4cwd
ztzhzB2K26G4HYrbobgdituhuB2K26G4HYrbobgdituRn9XcXcczgYlMYgqN
Ft51L/s5yGGOcpyTnOYs51t0V/PtMN8O8+0w3w7z7TDfDvPtMN8O8+2QhQ7F
bXqvb7vrdGYym7nMZyGLWfoO7nqRy1zlOrLQIQsdstChuB2K26G4g3jXgeK+
Pu035jvEa4fSzjCGM4KRLT7tclaymrWsZyOb2dri0ypuh+J2KG6H4nYobofi
dihuh+J2KG4Tk+3veLO4nW3z484EASERSVKkyZAlxyhGM4axjKNClRp1JjOV
acxgFnOYxwIWsYRlrGAVa1jHBjaxhW1sZwc72cVu9rCPAxziCMc4wSnOcI4L
XOIK1+hAGTqVoVMZOpWhUxk6LbjTgjstuNOCOy2404I7nbnTmTududOZO525
U3E7FbdTcTsVt1NxOxW3U3E7FbdTcTsVt1NxO/MzmrvreCYwkUlModHCu+5l
Pwc5zFGOc5LTnOV8i+5qvp3m22m+nebbab6d5ttpvp3m22m+nbLQqbhN7/Vt
d53OTGYzl/ksZDFL38FdL3KZq1znBrLQKQuditupuJ2KO4h3HSju69MqbucQ
rxxKO8MYzghGtvi0y1nJatayno1sZmuLT6u4nYrbqbiditupuJ2K26m4nYrb
qbhNTLa/883i3mr7p3FXYm7cFRASkSRFmgxZcoxiNGMYyzgqVKlRZzJTmcYM
ZjGHeSxgEUtYxgpWsYZ1bGATW9jGdnawk13sZg/7OMAhjnCME5ziDOe4wCWu
cI0OOlGGLmXoUoYuZeiy4C4L7rLgLgvusuAuC+5y5i5n7nLmLmfucuYuxe1S
3C7F7VLcLsXtUtwuxe1S3C7F7VLcLsXtyk9v7q7jmcBEJjGFRgvvupf9HOQw
RznOSU5zlvMtuqv5dplvl/l2mW+X+XaZb5f5dplvl/l2yUKX4na1zW3NXacz
k9nMZT4LWczSd3DXi1zmKte5wU1koUtxuxS3S3EH8a4DxX192m+ceYjXDaWd
YQxnBCNbfNrlrGQ1a1nPRjaztcWnVdwuxe1S3C7F7VLcLsXtUtwuxe1S3CYm
23/rzeJ2t82OuxMEhEQkSZEmQ5YcoxjNGMYyjgpVatSZzFSmMYNZzGEeC1jE
EpaxglWsYR0b2MQWtrGdHexkF7vZwz4OcIgjHOMEpzjDOS5wiStco4NOulCG
bmXoVoZuC+624G4L7rbgbgvutuBuZ+525m5n7nbmbmfuVtxuxe1W3G7F7Vbc
bsXtVtxuxe1W3G7F7Vbc7nyjubuOZwITmcQUGi286172c5DDHOU4JznNWc63
6K7m222+3ebbbb7d5tttvt3m222+3ebbLQvditv0Xt921+nMZDZzmc9CFrP0
Hdz1Ipe5ynVucJNbA3ed5a4z3HXaYN51oLivT6u43UO8aijtDGM4IxjZ4tMu
ZyWrWct6NrKZrS0+reJ2K2634nYrbrfiditut+J2K2634jYx2f7uN4vb0zYz
7kkQEBKRJEWaDFlyjGI0YxjLOCpUqVFnMlOZxgxmMYd5LGARS1jGClaxhnVs
YBNb2MZ2drCTXexmD/s4wCGOcIwTnOIM57jAJa5wjQ466aIbZehRhh4L7rHg
HgvuseAeC+6x4B5n7nHmHmfuceYeZ+5R3B7F7VHcHsXtUdwexe1R3B7F7VHc
HsXtUdye/JTm7jqeCUxkElNotPCue9nPQQ5zlOOc5DRnOd+iu5pvj/n2mG+P
+faYb4/59phvj/n2mG+PLPQobtN7fdtdpzOT2cxlPgtZzNJ3cNeLXOYq17nB
TW79ctcZ7jptMO86UNzXp1XcniFeM5R2hjGcEYxs8WmXs5LVrGU9G9nM1haf
9jaK26O4PYrbo7g9itujuD2K26O4TUy2v+fN4t5tmx73JggIiUiSIk2GLDlG
MZoxjGUcFarUqDOZqUxjBrOYwzwWsIglLGMFq1jDOjawiS1sYzs72MkudrOH
fRzgEEc4xglOcYZzXOASV7hGB5100U0PytBrwb0W3GvBvRbca8G9FtzrzL3O
3OvMvc7c68y9ituruL2K26u4vYrbq7i9ituruL2K26u4vYrbm/8nzd11PBOY
yCSm0GjhXfeyn4Mc5ijHOclpznK+RXc1317z7TXfXvPtNd9e8+01317z7TXf
XlnoVdzeZvf6trtOZyazmct8FrKYpe/grhe5zFWuc4Ob3Pqbd502mHcdKO7r
037zr8W9Q7xiKO0MYzgjGNni0y5nJatZy3o2spmtLT7tbe6guL2K26u4vYrb
q7i9ituruE1Mtv/um8Xta2vEfQkCQiKSpEiTIUuOUYxmDGMZR4UqNepMZirT
mMEs5jCPBSxiCctYwSrWsI4NbGIL29jODnayi93sYR8HOMQRjnGCU5zhHBe4
xBWu0UEnXXTTQy8W3GfBfRbcZ8F9FtxnwX3O3OfMfc7c58x9ztynuH2K26e4
fYrbp7h9itunuH2K26e4fYrbp7h9+T9v7q7jmcBEJjGFRgvvupf9HOQwRznO
SU5zlvMtuqv59plvn/n2mW+f+faZb5/59plvn/n2yUKf4ja917fddTozmc1c
5rOQxSx9B3e9yGWucp0b3ORWy+46UNzXp1XcviEePZR2hjGcEYxs8WmXs5LV
rGU9G9nM1haf9jZ3uIvi9ilun+L2KW6f4vYpbhOT7e97s7j32qbE9xIEhEQk
SZEmQ5YcoxjNGMYyjgpVatSZzFSmMYNZzGEeC1jEEpaxglWsYR0b2MQWtrGd
HexkF7vZwz4OcIgjHOMEpzjDOS5wiStco4NOuuimh176sOB7FnzPgu9Z8D0L
vufM95z5njPfc+Z7znxPce8p7j3Fvae49xT3nuLeU9x7intPce8p7j3FvZf/
x83ddTwTmMgkptBo4V33sp+DHOYoxznJac5yvkV3Nd975nvPfO+Z7z3zvWe+
98z3nvneM997snBPcZve69vuOp2ZzGYu81nIYpa+g7te5DJXuc4NbnKrZXcd
KO7r035jukM8dijtDGM4IxjZ4tMuZyWrWct6NrKZrS0+7W3ucJf3UNx7intP
ce8p7j3FbWKy/ffeLO4HbZPi+wkCQiKSpEiTIUuOUYxmDGMZR4UqNepMZirT
mMEs5jCPBSxiCctYwSrWsI4NbGIL29jODnayi93sYR8HOMQRjnGCU5zhHBe4
xBWu0UEnXXTTQy99vI8F37fg+xZ834LvO/N9Z77vzPed+b4z31fc+4p7X3Hv
K+59xb2vuPcV977i3lfc+4p7X3Hv56vN3XU8E5jIJKbQaOFd97KfgxzmKMc5
yWnOcr5FdzXf++Z733zvm+99871vvvfN97753jff+7JwX3HvN7vXt911OjOZ
zVzms5DFLH0Hd73IZa5ynRvc5FbL7jpQ3NenVdz7QzxyKO0MYzgjGNni0y5n
JatZy3o2spmtLT7tbe5wl/f4AMW9r7j3Ffe+4jYx2f4P3izug7Y/jx8kCAiJ
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
3GeK+0xxnynuM8V9prjPFPeZ4j5T3GeK+0xxn+Xzzd11PBOYyCSm0GjhXfey
n4Mc5ijHOclpznK+RXc132fm+8x8n5nvM/N9Zr7PzPeZ+T4z32ey8Exxm97r
2+46nZnMZi7zWchilr6Du17kMle5zg1ucqtldx0o7uvTKu6zIb46lHaGMZwR
jGzxaZezktWsZT0b2czWFp/2Nne4y3t8wEdNn/aXu/Y/e7O4X7f9cfxVgoCQ
iCQp0mTIkmMUoxnDWMZRoUqNOpOZyjRmMIs5zGMBi1jCMlawijWsYwOb2MI2
trODnexiN3vYxwEOcYRjnOAUZzjHBS5xhWt00EkX3fTQSx/v8yEf8wmf8hmf
8wVf4sxfKe5XivuV4n6luF8p7leK+5XifqW4XynuV4r7leJ+lc81d9fxTGAi
k5hCo4V33ct+DnKYoxznJKc5y/kW3dV8vzLfr8z3K/P9yny/Mt+vzPcr8/3K
fL+Sha8U96tm9/q2u05nJrOZy3wWspil7+CuF7nMVa5zg5vcatldB4r7+rTf
mO0QXxtKO8MYzghGtvi0y1nJatayno1sZmuLT3ubO9zlPT7go6ZP+8td+79+
s7j9bf8g7k8QEBKRJEWaDFlyjGI0YxjLOCpUqVFnMlOZxgxmMYd5LGARS1jG
ClaxhnVsYBNb2MZ2drCTXexmD/s4wCGOcIwTnOIM57jAJa5wjQ466aKbHnrp
430+5GM+4VM+43O+4Eu+RnH7FbdfcfsVt19x+xW3X3H7FbdfcfsVt19x+/PZ
5u46nglMZBJTaLTwrnvZz0EOc5TjnOQ0Zznforuab7/59ptvv/n2m2+/+fab
b7/59ptvvyz0K27Te33bXaczk9nMZT4LWczSd3DXi1zmKte5wU1uteyuA8V9
fVrF7R/iK0NpZxjDGcHIFp92OStZzVrWs5HNbG3xaW9zh7u8xwd81PRpf7lr
f/+bxX3e9vfi5wkCQiKSpEiTIUuOUYxmDGMZR4UqNepMZirTmMEs5jCPBSxi
CctYwSrWsI4NbGIL29jODnayi93sYR8HOMQRjnGCU5zhHBe4xBWu0UEnXXTT
Qy99vM+HfMwnfMpnfM4XfMnX9KO4zxX3ueI+V9znivtccZ8r7nPFfa64zxX3
eT7T3F3HM4GJTGIKjRbedS/7OchhjnKck5zmLOdbdNdvMd/n5vvcfJ+b73Pz
fW6+z833ufk+l4Xnitv0Xt921+nMZDZzmc9CFrP0Hdz1Ipe5ynVucJNbLbvr
QHFfn1Zxnw/x8aG0M4zhjGBki0+7nJWsZi3r2chmtrb4tLe5w13e4wM+avq0
v9y1//mbxX3R9kfxiwQBIRFJUqTJkCXHKEYzhrGMo0KVGnUmM5VpzGAWc5jH
AhaxhGWsYBVrWMcGNrGFbWxnBzvZxW72sI8DHOIIxzjBKc5wjgtc4grX6KCT
LrrpoZc+3udDPuYTPuUzPucLvuRr+nmO4r5Q3BeK+0JxXyjuC8V9obgvFPeF
4r7I/2Fzdx3PBCYyiSk0WnjXveznIIc5ynFOcpqznG/RXb/lO8z3hfm+MN8X
5vvCfF+Y7wvzfSELLxS36b2+7a7Tmcls5jKfhSxm6Tu460Uuc5Xr3OAmt1p2
14Hivj7tNwzx0aG0M4zhjGBki0+7nJWsZi3r2chmtrb4tLe5w13e4wM+avq0
v9y1/8WbxX3Z9ofxywQBIRFJUqTJkCXHKEYzhrGMo0KVGnUmM5VpzGAWc5jH
AhaxhGWsYBVrWMcGNrGFbWxnBzvZxW72sI8DHOIIxzjBKc5wjgtc4grX6KCT
LrrpoZc+3udDPuYTPuUzPucLvuRr+nnOCxT3peK+VNyXivtScV8q7kvFfam4
L/Mjm7vreCYwkUlModHCu+5lPwc5zFGOc5LTnOV8i+76Ld/xK8z3pfm+NN+X
5vvSfF+a70tZeKm4Te/1bXedzkxmM5f5LGQxS9/BXS9ymatc5wY3udWyuw4U
9/VpFfflEB8bSjvDGM4IRrb4tMtZyWrWsp6NbGZri097mzvc5T0+4KOmT/vL
Xftfvlnc79tS8avEyPhVQEhEkhRpMmTJMYrRjGEs46hQpUadyUxlGjOYxRzm
sYBFLGEZK1jFGtaxgU1sYRvb2cFOdrGbPezjAIc4wjFOcIoznOMCl7jCNTro
pItueuilj/f5kI/5hE/5jM/5gi/5mn6e84KXKO4rxX2luK8U95XivlLcV4r7
Kj+iubuOZwITmcQUGi286172c5DDHOU4JznNWc636K7f8h2/4teY7yvzfWW+
r8z3lfm+koVXivuqbWRr7jqdmcxmLvNZyGKWvoO7XuQyV7nODW5yq2V3HSju
69N+8wfxqyE+MpR2hjGcEYxs8WmXs5LVrGU9G9nM1haf9jZ3uMt7fMBHTZ/2
l7v2f/9mcX9oGxH/kCAgJCJJijQZsuQYxWjGMJZxVKhSo85kpjKNGcxiDvNY
wCKWsIwVrGIN69jAJrawje3sYCe72M0e9nGAQxzhGCc4xRnOcYFLXOEaHXTS
RTc99NLH+3zIx3zCp3zG53zBl3xNP895wUteobg/KO4PivuD4v6guD8o7g/5
v9PcXcczgYlMYgqNFt51L/s5yGGOcpyTnOYs51t012/5jl/xa77HfH8w3x/M
9wfz/UEWflDcpvf6trtOZyazmct8FrKYpe/grhe5zFWuc4Ob3GrZXQeK+/q0
ivvDEP88lHaGMZwRjGzxaZezktWsZT0b2czWFp/2Nne4y3t8wEdNn/aXu/b/
8GZxf2wbHv+YICAkIkmKNBmy5BjFaMYwlnFUqFKjzmSmMo0ZzGIO81jAIpaw
jBWsYg3r2MAmtrCN7exgJ7vYzR72cYBDHOEYJzjFGc5xgUtc4RoddNJFNz30
0sf7fMjHfMKnfMbnfMGXfE0/z3nBS17xA4r7o+L+qLg/Ku6Pivtj/m83d9fx
TGAik5hCo4V33ct+DnKYoxznJKc5y/kW3fVbvuNX/Jrv+Q3m+6P5/mi+P8rC
j4rb9F7fdtfpzGQ2c5nPQhaz9B3c9SKXucp1bnCTWy2760BxX59WcX8c4p+G
0s4whjOCkS0+7XJWspq1rGcjm9na4tPe5g53eY8P+Kjp0/5y1/4f3yzuT23D
4p8SBIREJEmRJkOWHKMYzRjGMo4KVWrUmcxUpjGDWcxhHgtYxBKWsYJVrGEd
G9jEFraxnR3sZBe72cM+DnCIIxzjBKc4wzkucIkrXKODTrropode+nifD/mY
T/iUz/icL/iSr+nnOS94ySt+4EcU9yfF/Ulxf1Lcn/Jhc3cdzwQmMokpNFp4
173s5yCHOcpxTnKas5xv0V2/5Tt+xa/5nt/wW8z3J/P9SRZ+Utym9/q2u05n
JrOZy3wWspil7+CuF7nMVa5zg5vcatldB4r7+rTfmOwQfz2UdoYxnBGMbPFp
l7OS1axlPRvZzNYWn/Y2d7jLe3zAR02f9pe79v/0ZnF/bmuPf04QEBKRJEWa
DFlyjGI0YxjLOCpUqVFnMlOZxgxmMYd5LGARS1jGClaxhnVsYBNb2MZ2drCT
XexmD/s4wCGOcIwTnOIM57jAJa5wjQ466aKbHnrp430+5GM+4VM+43O+4Eu+
pp/nvOAlr/iBH/kJxf1ZcX9W3J/zQXN3Hc8EJjKJKTRaeNe97OcghznKcU5y
mrOcb9Fdv+U7fsWv+Z7f8Ft+h/n+LAs/K27Te33bXaczk9nMZT4LWczSd3DX
i1zmKte5wU1uteyuA8V9fVrF/XmIvx5KO8MYzghGtvi0y1nJatayno1sZmuL
T3ubO9zlPT7go6ZP+8td+39+s7i/bxsa/z5BQEhEkhRpMmTJMYrRjGEs46hQ
pUadyUxlGjOYxRzmsYBFLGEZK1jFGtaxgU1sYRvb2cFOdrGbPezjAIc4wjFO
cIoznOMCl7jCNTropItueuilj/f5kI/5hE/5jM/5gi/5mn6e84KXvOIHfuQn
fkZxf6+4v88nmrvreCYwkUlModHCu+5lPwc5zFGOc5LTnOV8i+76Ld/xK37N
9/yG3/I7/hJZ+L3iNr3Xt911OjOZzVzms5DFLH0Hd73IZa5ynRvc5FbL7jpQ
3Nen/cZph/jzUNoZxnBGMLLFp13OSlazlvVsZDNbW3za29zhLu/xAR81fdpf
7tr/+zeL+9dtQ+K/ThAQEpEkRZoMWXKMYjRjGMs4KlSpUWcyU5nGDGYxh3ks
YBFLWMYKVrGGdWxgE1vYxnZ2sJNd7GYP+zjAIY5wjBOc4gznuMAlrnCNDjrp
opseeunjfT7kYz7hUz7jc77gS76mn+e84CWv+IEf+Ymf+T2K+9f5Ju86nglM
ZBJTaLTwrnvZz0EOc5TjnOQ0Zznfort+y3f8il/zPb/ht/yOv+SvUNym9/q2
u05nJrOZy3wWspil7+CuF7nMVa5zg5vcatldB4r7+rSK+9dD/BxKO8MYzghG
tvi0y1nJatayno1sZmuLT3ubO9zlPT7go6ZP+8td+//6zeLObuuOG4neuBHc
iRvhP48b0T+LG8muuJG6GTfS/1vcyPyvcSN7LW7krsaNUf9z3Bh9KW6MuRA3
xp6PG+P+p7hRORM3qqfiRu1k3Kj/j3Fj8rG4MfVo3Jj238eNGYfixqwDcWPO
/rgx77+JGwv2xI1F/1XcWLIrbiz7L+LGiv88bqz6z+LGmu1xY91/Ejc2bI0b
m/7juLFlU9zYtjFubP8P48aO/yBu7FwTN3atjhu7/724seffjRv7lsWNA0vj
xqHFcePIorhxbGHcODE/bpz6p3HjzJy4cW523Ljwb8WNS/9m3LgyLW5ca8SN
jilxo/OfxI2uetzonhg3ev5x3Oj9R3GjrxI33h8XNz78s7jx8Z/GjU+KcePT
0XHjsz+OG5//g7jxxd+PG19m48bXfxQ3+v8wbjz/1+PGi1TceJmMG6/+Ttz4
IYobP4Zx46f2uPHz34obv0/Ejb9uixv5883ddby7TnDXie46yV2n/A9xo3HE
XQ+763/nrv/t4N51r7vud9eD7nrYXY/+O3Hj+IK4cdJdT7vr2X87bpyf5a4z
3XX64N71W3f9zl1/5a6/dtfvh8eN3/ztuPFbd/1dEDf8wtD4qz+IG4rbaOtr
zV2nu+tMd53trnP3xY35e+PGwv86bix216X/pbvubO1dL7rrZXe9+m/EjetT
48YNd73prrf+3F1r7jrBXccP5l0Hivv6tN/46pD/PW4Mddr2nrgx7HbcGO60
I5x2ZKfT3vhXp/1fnPbK4J52udOudNrVTrv2P40b67fFjY1Ou3lz3Nj6Hznt
Bqdd77RrnfbfH9zT3nbaO05712nf+4dx44Ny3Pho7L867Z84baGZyfbPfrO4
f9D2/8aJxF/FieAv40T4uzgR/TZOJH8TJ1Lfx4n0r+NE5ldxIvtdnMh9GydG
fR0nRn8ZJ8Z8ESfGfh4nxn0WJyqfxonqJ3Gi9nGcqH8UJyZ/ECemvhcnpt2N
EzPuxIlZt+PEnFtxYt7NOLHgRpxYdD1OLLkaJ5ZdjhMrLsaJVefjxJqzcWLd
6Tix4WSc2HQ8Tmw5Gie2HY4T2w/GiR3748TOvXFi1+44sXtXnNizM07s2xEn
DmyPE4e2xYkjW+PEsc1x4sTGOHFqfZw4szZOnFsdJy6sjBOXlseJK0vjxLXF
caJjYZzonB8nuubGie7ZcaJnZpzonR4n+hpx4v0pceLDSXHi44lx4pMJceLT
8XHis3Fx4vOxceKLMXHiy9Fx4utRcaI/FyeeZ+PEi0yceJmOE69GxokfRsSJ
H4fHiZ+GxYmf2+PE74fGCb/jJvJfNXfX8e46wV0nuuukD+PElPfjRKPPXXvd
tcdduwf3rnvddb+7HnTXw+56dEucOL4pTpzcECdOr4sTZ9fEifOr3HWFuy4b
3Lt+667fueuv3PXX7vp9Kk78JhknfhvFid+FceIvgzjhv74JxU20/VVr7jrd
XWe662x3ndsVJ+Z3xomFHXFi8bU4sfSKu15y1wutu+tFd73srleXxInri+LE
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
4iYVN6m4ScVNKm5ScZuYbH/yzeKm2v6fOJX4Pk4FhEQkseCUBacsOGXBKQtO
OXPKmVPOnHLmlDOnFDeluCnFTSluSnFTiptS3JTiphQ3pQwpZUgpQ0oZUsqQ
UoaUMqQsOGXBKQtOWXDKglMWnLLglAWnLDhlwSlnTjlzSnFTiptS3JTiphQ3
pbgpxU0pbkpxU4qbUtyU4qaUIaUMKWVIKUNKGVLKkFKGlDKkLDhlwSkLTllw
yoJTFpxy5pQzp5w55cwpZ04pbkpxU4qbUtyU4qYUN6W4KcVNKW5KcVOKm8r/
y+buar4p802Zb8p8U+abMt+U4qYUN6W4g3pX802Zb8p8U+abMt+U+abMN2W+
KfNNmW9KcVOKO6h3Nd+U+abMN2W+KfNNmW/KfFPmmzLflCykFDfV9n1r7ioL
KVlIyUJKFlKykJKFlCykZCGluCnFbdldZSElCylZSMlCShZSspCShZTiphQ3
pbiDeNeB4r4+7Td/P04NccKhtDOM4YxAcVOKm1LclOKmFHdQT6u4KcVNKW5K
cVOKm1LclOKmFDeluCnFTSluSnEH9bSKm1LclOKmFDeluCnFTSluSnFTitvE
ZPtTbxY33fbrOJ0gICQiSQoLTltw2oLTFpx25rQzp5057cxpZ04rblpx04qb
Vty04qYVN624acVNK25aGdLKkFaGtDKklSGtDGllSFtw2oLTFpy24LQFpy04
bcFpC05bcNqC086cdua04qYVN624acVNK25acdOKm1bctOKmFTetuGnFTStD
WhnSypBWhrQypJUhrQxpZUhbcNqC0xactuC0BactOO3MaWdOO3PamdPOnFbc
tOKmFTetuGnFTStuWnHTiptW3LTiphU3nf+L5u5qvmnzTZtv2nzT5ps237Ti
phU3rbiDelfzTZtv2nzT5ps237T5ps03bb5p802bb1px04o7qHc137T5ps03
bb5p802bb9p80+abNt+0LKQVt+m9vu2uspCWhbQspGUhLQtpWUjLQloW0oqb
VtyW3VUW0rKQloW0LKRlIS0LaVlIK25acdOKO4h3HSju69MqbnqI8w2lnWEM
ZwQjB0770mlfOO1zp+0f3NMqblpx04qbVty04qYVN624acVNK25acdOKm1bc
QT2t4qYVN624acVNK25acdOKm1bctOI2Mdn+9JvFzbT9Ks4kCAiJSJIijQVn
LDhjwRlnzjhzxpkzzpxx5oziZhQ3o7gZxc0obkZxM4qbUdyM4maUIaMMGWXI
KENGGTLKkFGGjAVnLDhjwRkLzlhwxoIzFpyx4IwFZyw448wZZ84obkZxM4qb
UdyM4mYUN6O4GcXNKG5GcTOKm1HcjDJklCGjDBllyChDRhkyypBRhowFZyw4
Y8EZC85YcMaCM86cceaMM2ecOePMGcXNKG5GcTOKm1HcjOJmFDejuBnFzShu
RnEz+X/R3F3NN2O+GfPNmG/GfDPmm1HcjOJmFHdQ72q+GfPNmG/GfDPmmzHf
jPlmzDdjvhnzzShuRnEH9a7mmzHfjPlmzDdjvhnzzZhvxnwz5puRhYziNr3X
t91VFjKykJGFjCxkZCEjCxlZyMhCRnEzituyu8pCRhYyspCRhYwsZGQhIwsZ
xc0obkZxB/GuA8V9fVrFzQxxuqG0M4zhjGDkL6d94bTPnbZ/cE+ruBnFzShu
RnEziptR3IziZhQ3o7gZxc0obkZxB/W0iptR3IziZhQ3o7gZxc0obkZxM4rb
xGT7M28W9++2/d9xNvFdnA0IiUiSIk0GC85acNaZs86cdeasM2edOau4WcXN
Km5WcbOKm1XcrOJmFTeruFllyCpDVhmyypBVhqwyZJUha8FZC85acNaCsxac
teCsBWctOGvBWQvOOnPWmbOKm1XcrOJmFTeruFnFzSpuVnGziptV3KziZhU3
qwxZZcgqQ1YZssqQVYasMmSVIWvBWQvOWnDWgrMWnLXgrDNnnTnrzFlnzjpz
VnGziptV3KziZhU3q7hZxc0qblZxs4qbVdxs/kFzdzXfrPlmzTdrvlnzzZpv
VnGziptV3EG9q/lmzTdrvlnzzZpv1nyz5ps136z5Zs03q7hZxR3Uu5pv1nyz
5ps136z5Zs03a75Z882ab1YWsoqbbfuuNXeVhawsZGUhKwtZWcjKQlYWsrKQ
Vdys4rbsrrKQlYWsLGRlISsLWVnIykJWcbOKm1XcQbzrQHFfn/abvxdnhzjb
UNoZxnBGMPJvnva50/YP7mkVN6u4WcXNKm5WcbOKm1XcrOJmFTeruFnFzSru
oJ5WcbOKm1XcrOJmFTeruFnFzSpuVnGbmGz/332zuLm2b+NcgoCQiCQp0mTI
YsE5Z845c86Zc86cc+ac4uYUN6e4OcXNKW5OcXOKm1PcnOLmlCGnDDllyClD
ThlyypBThpwF5yw4Z8E5C85ZcM6Ccxacs+CcBecsOOfMOWfOKW5OcXOKm1Pc
nOLmFDenuDnFzSluTnFziptT3Jwy5JQhpww5ZcgpQ04ZcsqQU4acBecsOGfB
OQvOWXDOgnPOnHPmnDPnnDnnzDnFzSluTnFziptT3Jzi5hQ3p7g5xc0pbk5x
c/n7zd3VfHPmmzPfnPnmzDdnvjnFzSluTnEH9a7mmzPfnPnmzDdnvjnzzZlv
znxz5psz35zi5hR3UO9qvjnzzZlvznxz5psz35z55sw3Z745WcgpbtN7fdtd
ZSEnCzlZyMlCThZyspCThZws5BQ3p7gtu6ss5GQhJws5WcjJQk4WcrKQU9yc
4uYUdxDvOlDc16dV3NwQJxtKO8MYzghG/v9P2z+4p1XcnOLmFDenuDnFzSlu
TnFziptT3Jzi5hQ3p7iDelrFzSluTnFziptT3Jzi5hQ3p7g5xW1isv25N4ub
b/s6zicICIlIkiJNhiw5nDnvzHlnzjtz3pnziptX3Lzi5hU3r7h5xc0rbl5x
84qbV4a8MuSVIa8MeWXIK0NeGfIWnLfgvAXnLThvwXkLzltw3oLzFpy34Lwz
5505r7h5xc0rbl5x84qbV9y84uYVN6+4ecXNK25ecfPKkFeGvDLklSGvDHll
yCtDXhnyFpy34LwF5y04b8F5C847c96Z886cd+a8M+cVN6+4ecXNK25ecfOK
m1fcvOLmFTevuHnFzefvNXdX882bb9588+abN9+8+eYVN6+4ecUd1Luab958
8+abN9+8+ebNN2++efPNm2/efPOKm1fcQb2r+ebNN2++efPNm2/efPPmmzff
vPnmZSGvuE3v9W13lYW8LORlIS8LeVnIy0JeFvKykFfcvOK27K6ykJeFvCzk
ZSEvC3lZyMtCXnHziptX3EG860BxX59WcfNDnGso7QxjOCMY2eLTKm5ecfOK
m1fcvOLmFTevuHnFzStuXnHziptX3EE9reLmFTevuHnFzStuXnHziptX3Lzi
NjHZ/vybxf3jti/jQoKAkIgkKdJkyJJjFM5ccOaCMxecuaC4BcUtKG5BcQuK
W1DcguIWFLeguAVlKChDQRkKylBQhoIyFJShYMEFCy5YcMGCCxZcsOCCBRcs
uGDBBQsuOHPBmQuKW1DcguIWFLeguAXFLShuQXELiltQ3ILiFhS3oAwFZSgo
Q0EZCspQUIaCMhSUoWDBBQsuWHDBggsWXLDggjMXnLngzAVnLjhzQXELiltQ
3ILiFhS3oLgFxS0obkFxC4pbUNxCvq+5u5pvwXwL5lsw34L5Fsy3oLgFxS0o
7qDe1XwL5lsw34L5Fsy3YL4F8y2Yb8F8C+ZbUNyC4g7qXc23YL4F8y2Yb8F8
C+ZbMN+C+RbMtyALBcUtNLvXt91VFgqyUJCFgiwUZKEgCwVZKMhCQXELituy
u8pCQRYKslCQhYIsFGShIAsFxS0obkFxB/GuA8V9fdpvfGyIUw2lnWEMZwQj
W3xaxS0obkFxC4pbUNyC4hYUt6C4BcUtKG5BcQuKO6inVdyC4hYUt6C4BcUt
KG5BcQuKW1DcJibb/8dvFrfY9n/FxQQBIRFJUqTJkCXHKEbjzEVnLjpzUXGL
iltU3KLiFhW3qLhFxS0qblFxi8pQVIaiMhSVoagMRWUoKkPRgosWXLTgogUX
LbhowUULLlpw0YKLFlx05qIzFxW3qLhFxS0qblFxi4pbVNyi4hYVt6i4RcUt
Km5RGYrKUFSGojIUlaGoDEVlKCpD0YKLFly04KIFFy24aMFFZy46c9GZi85c
dOai4hYVt6i4RcUtKm5RcYuKW1TcouIWFbeouMX83ebuar5F8y2ab9F8i+Zb
NN+i4hYVt6i4g3pX8y2ab9F8i+ZbNN+i+RbNt2i+RfMtmm9RcYuKO6h3Nd+i
+RbNt2i+RfMtmm/RfIvmWzTfoiwUFbfpvb7trrJQlIWiLBRloSgLRVkoykJR
FoqKW1Tclt1VFoqyUJSFoiwUZaEoC0VZKCpuUXGLijuIdx0o7uvTKm5xiFMN
pZ1hDGcEI1t8WsUtKm5RcYuKW1TcouIWFbeouEXFLSpuUXGLijuop1XcouIW
FbeouEXFLSpuUXGLiltU3CYm2198s7iltv8zLiUICIlIkiJNhiw5RjGaMThz
yZlLiltS3JLilhS3pLglxS0pbklxS4pbUoaSMpSUoaQMJWUoKUNJGUoWXLLg
kgWXLLhkwSULLllwyYJLFlyy4JIzl5y5pLglxS0pbklxS4pbUtyS4pYUt6S4
JcUtKW5JcUvKUFKGkjKUlKGkDCVlKClDSRlKFlyy4JIFlyy4ZMElCy45c8mZ
S85ccuaSM5cUt6S4JcUtKW5JcUuKW1LckuKWFLekuCXFLeXvNHdX8y2Zb8l8
S+ZbMt+S+ZYUt6S4JcUd1Luab8l8S+ZbMt+S+ZbMt2S+JfMtmW/JfEuKW1Lc
Qb2r+ZbMt2S+JfMtmW/JfEvmWzLfkvmWZKGkuE3v9W13lYWSLJRkoSQLJVko
yUJJFkqyUFLckuK27K6yUJKFkiyUZKEkCyVZKMlCSXFLiltS3EG860BxX5/2
m78bl4Y401DaGcZwRjCyxadV3JLilhS3pLglxS0pbklxS4pbUtyS4pYUt6S4
g3paxS0pbklxS4pbUtyS4pYUt6S4JcVtYrL9pTeLW277P+JygoCQiCQp0mTI
kmMUoxnDWJy5rLhlxS0rbllxy4pbVtyy4pYVt6y4ZWUoK0NZGcrKUFaGsjKU
laFswWULLltw2YLLFly24LIFly24bMFlCy47c9mZy4pbVtyy4pYVt6y4ZcUt
K25ZccuKW1bcsuKWFbesDGVlKCtDWRnKylBWhrIylJWhbMFlCy5bcNmCyxZc
tuCyM5eduezMZWcuO3NZccuKW1bcsuKWFbesuGXFLStuWXHLiltW3HL+nzd3
V/Mtm2/ZfMvmWzbfsvmWFbesuGXFHdS7mm/ZfMvmWzbfsvmWzbdsvmXzLZtv
2XzLiltW3EG9q/mWzbdsvmXzLZtv2XzL5ls237L5lmWhrLhN7/Vtd5WFsiyU
ZaEsC2VZKMtCWRbKslBW3LLituyuslCWhbIslGWhLAtlWSjLQllxy4pbVtxB
vOtAcV+fVnHLQ5xoKO0MYzgjGNni0ypuWXHLiltW3LLilhW3rLhlxS0rbllx
y4pbVtxBPa3ilhW3rLhlxS0rbllxy4pbVtyy4jYx2f7ym8WttP3LuJIgICQi
SYo0GbLkGMVoxjCWcShuRXEriltR3IriVhS3orgVxa0obkUZKspQUYaKMlSU
oaIMFWWoWHDFgisWXLHgigVXLLhiwRULrlhwxYIrzlxx5oriVhS3orgVxa0o
bkVxK4pbUdyK4lYUt6K4FcWtKENFGSrKUFGGijJUlKGiDBVlqFhwxYIrFlyx
4IoFVyy44swVZ644c8WZK85cUdyK4lYUt6K4FcWtKG5FcSuKW1HciuJWFLeS
/2fN3dV8K+ZbMd+K+VbMt2K+FcWtKG5FcQf1ruZbMd+K+VbMt2K+FfOtmG/F
fCvmWzHfiuJWFHdQ72q+FfOtmG/FfCvmWzHfivlWzLdivhVZqChu03t9211l
oSILFVmoyEJFFiqyUJGFiixUFLeiuC27qyxUZKEiCxVZqMhCRRYqslBR3Iri
VhR3EO86UNzXp1XcyhDnGUo7wxjOCEa2+LSKW1HciuJWFLeiuBXFrShuRXEr
iltR3IriVhR3UE+ruBXFrShuRXEriltR3IriVhS3orhNTLa/8mZxq22P4mri
L+JqQEhEkhRpMmTJMYrRjGEs46iguFXFrSpuVXGriltV3KriVhW3qgxVZagq
Q1UZqspQVYaqMlQtuGrBVQuuWnDVgqsWXLXgqgVXLbhqwVVnrjpzVXGriltV
3KriVhW3qrhVxa0qblVxq4pbVdyq4laVoaoMVWWoKkNVGarKUFWGqjJULbhq
wVULrlpw1YKrFlx15qozV5256sxVZ64qblVxq4pbVdyq4lYVt6q4VcWtKm5V
cauKW813NXfX8Zhv1Xyr5ls136r5VhW3qrhVxR3Uu5pv1Xyr5ls136r5Vs23
ar5V862ab9V8q4pbVdxBvav5Vs23ar5V862ab9V8q+ZbNd+q+VZloaq41ba/
aM1dZaEqC1VZqMpCVRaqslCVhaosVBW3qrgtu6ssVGWhKgtVWajKQlUWqrJQ
Vdyq4lYVdxDvOlDc16f95o/i6hCnGUo7wxjOCEa2+LSKW1XcquJWFbequFXF
rSpuVXGriltV3KriVhV3UE+ruFXFrSpuVXGriltV3KriVhW3qrhNTLa/+mZx
a23/Iq4lCAiJSJIiTYYsOUYxmjGMZRwVqihuTXFriltT3Jri1hS3prg1Zagp
Q00ZaspQU4aaMtSUoWbBNQuuWXDNgmsWXLPgmgXXLLhmwTULrjlzzZlriltT
3Jri1hS3prg1xa0pbk1xa4pbU9ya4tYUt6YMNWWoKUNNGWrKUFOGmjLUlKFm
wTULrllwzYJrFlyz4Joz15y55sw1Z645c01xa4pbU9ya4tYUt6a4NcWtKW5N
cWuKW1PcWr6zubuOZwLmWzPfmvnWzLemuDXFrSnuoN7VfGvmWzPfmvnWzLdm
vjXzrZlvzXxr5ltT3JriDupdzbdmvjXzrZlvzXxr5lsz35r51sy3Jgs1xW16
r2+7qyzUZKEmCzVZqMlCTRZqslCThZri1hS3ZXeVhZos1GShJgs1WajJQk0W
aopbU9ya4g7iXQeK+/q0ilsb4ixDaWcYwxnByBafVnFriltT3Jri1hS3prg1
xa0pbk1xa4pbU9ya4g7qaRW3prg1xa0pbk1xa4pbU9ya4tYUt4nJ9tfeLG69
7aO4niAgJCJJijQZsuQYxWjGMJZxVKhSQ3HriltX3Lri1hW3rrh1ZagrQ10Z
6spQV4a6MtSVoW7BdQuuW3DdgusWXLfgugXXLbhuwXULrjtz3ZnriltX3Lri
1hW3rrh1xa0rbl1x64pbV9y64tYVt64MdWWoK0NdGerKUFeGujLUlaFuwXUL
rltw3YLrFly34Loz15257sx1Z647c11x64pbV9y64tYVt664dcWtK25dceuK
W1fcer6jubuOZwITMd+6+dbNt664dcWtK+6g3tV86+ZbN9+6+dbNt26+dfOt
m2/dfOvmW1fcuuIO6l3Nt26+dfOtm2/dfOvmWzffuvnWzbcuC3XFbXqvb7ur
LNRloS4LdVmoy0JdFuqyUJeFuuLWFbdld5WFuizUZaEuC3VZqMtCXRbqiltX
3LriDuJdB4r7+rSKWx/iJENpZxjDGcHIFp9Wcev/Hy91/NJmwvd7Hoti165d
u3bdFQSpIAiyoujq6omkpKSkm550U1JSUtJNNz0pKSnp5pBDDnk2a0lJyayz
Ds46ODjHWec4ODjrjTfeeONNb/rQhx4KPZw/YfxT3Jc/POWw0p+S9IcXhbbk
uq4vH96Ku6i4i4q7qLiLiruouIuKu6i4i4q7qLiLitvW0yruouIuKu6i4i4q
7qLiLiruouIuKm4Lkz1dvFjcf9H1T2eBbnrpo58BBhlimBFGGWOcCSaZYppZ
5llEcQOKG1DcgOIGFDegDAFlCChDQBkCyhBQhoAyBCw4YMEBCw5YcMCCAxYc
sOCABQcsOGDBAWcOOHNAcQOKG1DcgOIGFDeguAHFDShuQHEDihtQ3IDiBpQh
oAwBZQgoQ0AZAsoQUIaAMgQsOGDBAQsOWHDAggMWHHDmgDMHnDngzAFnDihu
QHEDihtQ3IDiBhQ3oLgBxQ0obkBxA4obuPF7a3edYY4FljDfgPkGFDeguAHF
betdzTdgvgHzDZhvwHwD5hsw34D5Bsw3YL4BxQ0oblvvar4B8w2Yb8B8A+Yb
MN+A+QbMN2C+AVkIKG6g1b1+6a6yEJCFgCwEZCEgCwFZCMhCQBYCihtQ3I7d
VRYCshCQhYAsBGQhIAsBWQgobkBxA4rbxrueF/fzaf/wXy45Rw+XucJVrnG9
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
yoJTFpxy5pQzpxQ3pbgpxU0pbkpxU4qbUtyU4qYUN6W4KcVNKW5KGVLKkFKG
lDKklCGlDCllSClDyoJTFpyy4JQFpyw4ZcEpZ045c8qZU86ccuaU4qYUN6W4
KcVNKW5KcVOKm1LclOKmFDeluKkb37V21xnmWGCJZW528K7mmzLflPmmzDdl
vinzTZlvynxT5psy35TiphS3rXc135T5psw3Zb4p802Zb8p8U+abMt+ULKQU
t+W9fumut7jNHe5yj/s84OH5XXfddadzd5WFlCykZCElCylZSMlCShZSiptS
3JTitvGu58X9fNo//puz1CWf2cNlrnCVa1zv8GkVN6W4KcVNKW5KcVOKm1Lc
lOKmFDeluCnFTSluW0+ruCnFTSluSnFTiptS3JTiphQ3pbgtTPY0dbG46a5f
ztLd9NJHPwMMMsQwI4wyxjgTTDLFNLPMs0iAICHCRIgSI06CJCmUIW3BaQtO
W3DagtMWnLbgtAWnLThtwWkLTjtz2pnTiptW3LTiphU3rbhpxU0rblpx04qb
Vty04qYVN60MaWVIK0NaGdLKkFaGtDKklSFtwWkLTltw2oLTFpy24LQzp505
7cxpZ047c1px04qbVty04qYVN624acVNK25acdOKm1bc9I3/q7W7zjDHAkss
c7ODdzXftPmmzTdtvmnzTZtv2nzT5ps237T5phU3rbhtvav5ps03bb5p802b
b9p80+abNt+0+aZlIa24Le/1S3e9xW3ucJd73OcBD//5rjudu6sspGUhLQtp
WUjLQloW0rKQVty04qYVt413PS/u59MqbvqST+zhMle4yjWud/i0j1DctOKm
FTetuGnFTStuWnHTiptW3LTiphW3radV3LTiphU3rbhpxU0rblpx04qbVtwW
JnuavljcTNfPZ5lueumjnwEGGWKYEUYZY5wJJplimlnmWSRAkBBhIkSJESdB
khRpLDhjwRkLzlhwxoIzFpyx4IwFZyw4Y8EZZ844c0ZxM4qbUdyM4mYUN6O4
GcXNKG5GcTOKm1HcjOJmlCGjDBllyChDRhkyypBRhowyZCw4Y8EZC85YcMaC
MxacceaMM2ecOePMGWfOKG5GcTOKm1HcjOJmFDejuBnFzShuRnEzipu58X+2
dtcZ5lhgiWVudvCu5psx34z5Zsw3Y74Z882Yb8Z8M+abMd+M4mYUt613Nd+M
+WbMN2O+GfPNmG/GfDPmmzHfjCxkFLflvX7prre4zR3uco/7PODhV7irLGRk
ISMLGVnIyEJGFjKykFHcjOJmFLeNdz0v7ufTKm7mkk/r4TJXuMo1rnf4tI94
jOJmFDejuBnFzShuRnEziptR3IziZhS3radV3IziZhQ3o7gZxc0obkZxM4qb
UdwWJnuauVjcbNe/O8t2/3SW7aWPfgYYZIhhRhhljHEmmGSKaWaZZ5EAQUKE
iRAlRpwESVKkyWDBWQvOWnDWgrMWnLXgrAVnLThrwVlnzjpzVnGziptV3Kzi
ZhU3q7hZxc0qblZxs4qbVdys4maVIasMWWXIKkNWGbLKkFWGrDJkLThrwVkL
zlpw1oKzFpx15qwzZ50568xZZ84qblZxs4qbVdys4mYVN6u4WcXNKm5WcbOK
m73RbO2uM8yxwBLL3OzgXc03a75Z882ab9Z8s+abNd+s+WbNN2u+WcXNKm5b
72q+WfPNmm/WfLPmmzXfrPlmzTdrvllZyCputuunztz1Fre5w13ucZ8HPPwK
d5WFrCxkZSErC1lZyMpCVhayiptV3KzitvGu58X9fNo/TPmSz+rhMle4yjWu
d/i0j3jMExQ3q7hZxc0qblZxs4qbVdys4mYVt62nVdys4mYVN6u4WcXNKm5W
cbOKm1XcFiZ7mr1Y3FzXj2e5bnrpo58BBhlimBFGGWOcCSaZYppZ5lkkQJAQ
YSJEiREnQZIUaTJkseCcBecsOGfBOQvOWXDOgnMWnHPmnDPnFDenuDnFzSlu
TnFziptT3Jzi5hQ3p7g5xc0pbk4ZcsqQU4acMuSUIacMOWXIKUPOgnMWnLPg
nAXnLDhnwTlnzjlzzplzzpxz5pzi5hQ3p7g5xc0pbk5xc4qbU9yc4uYUN6e4
uRuN1u46wxwLLLHMzQ7e1Xxz5psz35z55sw3Z745882Zb858c+abU9yc4rb1
ruabM9+c+ebMN2e+OfPNmW/OfHPmm5OFnOK2vNcv3fUWt7nDXe5xnwc8/Ap3
lYWcLORkIScLOVnIyUJOFnKKm1PcnOK28a7nxf18WsXNXfJJPVzmCle5xvUO
n/YRj3nCUxQ3p7g5xc0pbk5xc4qbU9yc4rb1tIqbU9yc4uYUN6e4OcXNKW5O
cXOK28JkT3MXi5vv+uEs300vffQzwCBDDDPCKGOMM8EkU0wzyzyLBAgSIkyE
KDHiJEiSIk2GLDksOG/BeQvOW3DegvMWnLfgvDPnnTmvuHnFzStuXnHziptX
3Lzi5hU3r7h5xc0rbl5x88qQV4a8MuSVIa8MeWXIK0NeGfIWnLfgvAXnLThv
wXkLzjtz3pnzzpx35rwz5xU3r7h5xc0rbl5x84qbV9y84uYVN6+4ecXN36i3
dtcZ5lhgiWVudvCu5ps337z55s03b755882bb9588+abN9+84uYVt613Nd+8
+ebNN2++efPNm2/efPPmmzffvCzkFbflvX7prre4zR3uco/7PODhV7irLORl
IS8LeVnIy0JeFvKykFfcvOLmFbeNdz0v7ufTKm7+ks/p4TJXuMo1rnf4tI94
zBOe8gzFzStuXnHziptX3Lzi5hW3radV3Lzi5hU3r7h5xc0rbl5x84qbV9wW
Jnuav1jcF13/91mh+/uzQi999DPAIEMMM8IoY4wzwSRTTDPLPIsECBIiTIQo
MeIkSJIiTYYsOfJYcMGCCxZcsOCCBRcsuODMBWcuKG5BcQuKW1DcguIWFLeg
uAXFLShuQXELiltQ3IIyFJShoAwFZSgoQ0EZCspQUIaCBRcsuGDBBQsuWHDB
ggvOXHDmgjMXnLngzAXFLShuQXELiltQ3ILiFhS3oLgFxS0obkFxCzdetXbX
GeZYYIllbnbwruZbMN+C+RbMt2C+BfMtmG/BfAvmWzDfguIWFLetdzXfgvkW
zLdgvgXzLZhvwXwL5lsw34IsFBS30PV9Z+56i9vc4S73uM8DHn6Fu8pCQRYK
slCQhYIsFGShIAsFxS0obkFx23jX8+J+Pu0f/umST+nhMle4yjWud/i0j3jM
E57yjOcobkFxC4pbUNyC4hYUt62nVdyC4hYUt6C4BcUtKG5BcQuKW1DcFiZ7
+uJicYtd350Vu+mlj34GGGSIYUYYZYxxJphkimlmmWeRAEFChIkQJUacBElS
pMmQJUeeAhZctOCiBRctuGjBRWcuOnNRcYuKW1TcouIWFbeouEXFLSpuUXGL
iltU3KLiFpWhqAxFZSgqQ1EZispQVIaiMhQtuGjBRQsuWnDRgosWXHTmojMX
nbnozEVnLipuUXGLiltU3KLiFhW3qLhFxS0qblFxi4pbvFFr7a4zzLHAEsvc
7OBdzbdovkXzLZpv0XyL5ls036L5Fs23aL5FxS0qblvvar5F8y2ab9F8i+Zb
NN+i+RbNt2i+RVkoKm7Le/3SXW9xmzvc5R73ecDDr3BXWSjKQlEWirJQlIWi
LBRloai4RcUtKm4b73pe3M+nVdziJZ/Rw2WucJVrXO/waR/xmCc85RnPeYHi
FhW3qLhFxS0qbltPq7hFxS0qblFxi4pbVNyi4hYVt6i4LUz2tHixuKWub89K
3fTSRz8DDDLEMCOMMsY4E0wyxTSzzLNIgCAhwkSIEiNOgiQp0mTIkiNPgSIW
XLLgkgWXLLjkzCVnLiluSXFLiltS3JLilhS3pLglxS0pbklxS4pbUtySMpSU
oaQMJWUoKUNJGUrKUFKGkgWXLLhkwSULLllwyYJLzlxy5pIzl5y55MwlxS0p
bklxS4pbUtyS4pYUt6S4JcUtKW5JcUs3qq3ddYY5FlhimZsdvKv5lsy3ZL4l
8y2Zb8l8S+ZbMt+S+ZbMt6S4JcVt613Nt2S+JfMtmW/JfEvmWzLfkvmWzLck
CyXFbXmvX7rrLW5zh7vc4z4PePgV7ioLJVkoyUJJFkqyUJKFkiyUFLekuCXF
beNdz4v7+bSKW7rkE3q4zBWuco3rHT7tIx7zhKc84zkveHl+2lWnbTptw2nr
7T2t4pYUt6S4JcUtKW5JcUuKW1LckuK2MNnT0sXilru+OSt300sf/QwwyBDD
jDDKGONMMMkU08wyzyIBgoQIEyFKjDgJkqRIkyFLjjwFipSw4LIFly247Mxl
Zy4rbllxy4pbVtyy4pYVt6y4ZcUtK25ZccuKW1bcsjKUlaGsDGVlKCtDWRnK
ylBWhrIFly24bMFlCy5bcNmCy85cduayM5eduezMZcUtK25ZccuKW1bcsuKW
FbesuGXFLStuWXHLN/5ta3edYY4FlljmZgfvar5l8y2bb9l8y+ZbNt+y+ZbN
t2y+ZfMtK25Zcdt6V/Mtm2/ZfMvmWzbfsvmWzbdsvmXzLctCWXFb3uuX7nqL
29zhLve4zwMefoW7ykJZFsqyUJaFsiyUZaEsC2XFLStuWXHbeNfz4n4+7R//
9Vn5ktfv4TJXuMo1rnf4tI94zBOe8oznvODlP5+26bQNp62397SKW1bcsuKW
FbesuGXFLStuWXHLitvCZE/LF4tb6XpzVummlz76GWCQIYYZYZQxxplgkimm
mWWeRQIECREmQpQYcRIkSZEmQ5YceQoUKVHGgisWXHHmijNXFLeiuBXFrShu
RXEriltR3IriVhS3orgVxa0obkUZKspQUYaKMlSUoaIMFWWoKEPFgisWXLHg
igVXLLhiwRVnrjhzxZkrzlxx5oriVhS3orgVxa0obkVxK4pbUdyK4lYUt6K4
lRv/prW7zjDHAkssc7ODdzXfivlWzLdivhXzrZhvxXwr5lsx34r5VhS3orht
vav5Vsy3Yr4V862Yb8V8K+ZbMd+K+VZkoaK4Le/1S3e9xW3ucJd73OcBD7/C
XWWhIgsVWajIQkUWKrJQkYWK4lYUt6K4bbzreXE/n1ZxK5e8eg+XucJVrnG9
w6d9xGOe8JRnPOcFL//z0zactt7e0ypuRXEriltR3IriVhS3orgVxa0obguT
Pa1cLO4/dNXPqt2vz6q99NHPAIMMMcwIo4wxzgSTTDHNLPMsEiBIiDARosSI
kyBJijQZsuTIU6BIiTIVLLjqzFVnripuVXGriltV3KriVhW3qrhVxa0qblVx
q4pbVdyqMlSVoaoMVWWoKkNVGarKUFWGqgVXLbhqwVULrlpw1YKrzlx15qoz
V5256sxVxa0qblVxq4pbVdyq4lYVt6q4VcWtKm5Vcas3/nVrd51hjgWWWOZm
B+9qvlXzrZpv1Xyr5ls136r5Vs23ar5V860qblVx23pX862ab9V8q+ZbNd+q
+VbNt2q+VfOtykJVcatdrztz11vc5g53ucd9HvDwK9xVFqqyUJWFqixUZaEq
C1VZqCpuVXGritvGu54X9/Np/zDjS167h8tc4SrXuN7h0z7iMU94yjOe84KX
///T1tt7WsWtKm5VcauKW1XcquJWFbequFXFbWGyp/9wsbi1rldntW566aOf
AQYZYpgRRhljnAkmmWKaWeZZJECQEGEiRIkRJ0GSFGkyZMmRp0CREmUqVHHm
mjPXFLemuDXFrSluTXFriltT3Jri1hS3prg1xa0pbk0ZaspQU4aaMtSUoaYM
NWWoKUPNgmsWXLPgmgXXLLhmwTVnrjlzzZlrzlxz5pri1hS3prg1xa0pbk1x
a4pbU9ya4tYUt6a4tRv/W2t3nWGOBZZY5mYH72q+NfOtmW/NfGvmWzPfmvnW
zLdmvjXzrSluTXHbelfzrZlvzXxr5lsz35r51sy3Zr41863JQk1xW97rl+56
i9vc4S73uM8DHn6Fu8pCTRZqslCThZos1GShJgs1xa0pbk1x23jX8+J+Pq3i
1i555R4uc4WrXON6h0/7iMc84SnPeM4LXnb4tIpbU9ya4tYUt6a4NcWtKW5N
cWuK28JkT2sXi7vS9X+crXTTSx/9DDDIEMOMMMoY40wwyRTTzDLPIgGChAgT
IUqMOAmSpEiTIUuOPAWKlChToUoNZ15R3BXFXVHcFcVdUdwVxV1R3BXFXVHc
FcVdUdwVxV1RhhVlWFGGFWVYUYYVZVhRhhVlWLHgFQteseAVC16x4BULXnHm
FWdeceYVZ15x5hXFXVHcFcVdUdwVxV1R3BXFXVHcFcVdUdwVxV25UWztrjPM
scASy9zs4F3Nd8V8V8x3xXxXzHfFfFfMd8V8V8x3xXxXFHdFcdt6V/NdMd8V
810x3xXzXTHfFfNdMd8V812RhRXFbXmvX7rrLW5zh7vc4z4PePgV7ioLK7Kw
IgsrsrAiCyuysCILK4q7orgritvGu54X9/NpFXflklfu4TJXuMo1rnf4tI94
zBOe8oznvOBlh0+ruCuKu6K4K4q7orgriruiuCuKu6K4LUz2dOVicetd//tZ
vfsfzuq99NHPAIMMMcwIo4wxzgSTTDHNLPMsEiBIiDARosSIkyBJijQZsuTI
U6BIiTIVqtR4heLWFbeuuHXFrStuXXHriltX3Lri1hW3rrh1xa0rQ10Z6spQ
V4a6MtSVoa4MdWWoW3DdgusWXLfgugXXLbjuzHVnrjtz3ZnrzlxX3Lri1hW3
rrh1xa0rbl1x64pbV9y64tYVt37jRWt3nWGOBZZY5mYH72q+dfOtm2/dfOvm
WzffuvnWzbduvnXzrStuXXHbelfzrZtv3Xzr5ls337r51s23br51863LQl1x
613/0Jm73uI2d7jLPe7zgIdf4a6yUJeFuizUZaEuC3VZqMtCXXHriltX3Dbe
9by4n0/7h7++5HV7uMwVrnKN6x0+7SMe84SnPOM5L3jZ4dMqbl1x64pbV9y6
4tYVt664dcWtK24Lkz2tXyxuo+vfnjW66aWPfgYYZIhhRhhljHEmmGSKaWaZ
Z5EAQUKEiRAlRpwESVKkyZAlR54CRUqUqVClxivqKG5DcRuK21DchuI2FLeh
uA3FbShuQ3EbittQhoYyNJShoQwNZWgoQ0MZGsrQsOCGBTcsuGHBDQtuWHDD
mRvO3HDmhjM3nLmhuA3FbShuQ3EbittQ3IbiNhS3obgNxW0obuPG89buOsMc
CyyxzM0O3vU15tsw34b5Nsy3Yb4N822Yb8N8G+bbUNyG4rb1rubbMN+G+TbM
t2G+DfNtmG/DfBvm25CFhuK2vNcv3fUWt7nDXe5xnwc8/Ap3lYWGLDRkoSEL
DVloyEJDFhqK21DchuK28a7nxf18WsVtXPKqPVzmCle5xvUOn/YRj3nCU57x
nBe87PBpFbehuA3FbShuQ3EbittQ3IbiNhS3hcmeNi4Wt9n1b86a3fTSRz8D
DDLEMCOMMsY4E0wyxTSzzLNIgCAhwkSIEiNOgiQp0mTIkiNPgSIlylSoUuMV
dRooblNxm4rbVNym4jYVt6m4TcVtKm5TcZvK0FSGpjI0laGpDE1laCpDUxma
Fty04KYFNy24acFNC246c9OZm87cdOamMzcVt6m4TcVtKm5TcZuK21TcpuI2
FbepuE3Fbd541tpdZ5hjgSWWudnBu77mDebbNN+m+TbNt2m+TfNtmm/TfJuK
21Tctt7VfJvm2zTfpvk2zbdpvk3zbZpv03ybstBU3Jb3+qW73uI2d7jLPe7z
gIdf4a6y0JSFpiw0ZaEpC01ZaMpCU3GbittU3Dbe9by4n0+ruM1LXrOHy1zh
Kte43uHTPuIxT3jKM57zgpcdPq3iNhW3qbhNxW0qblNxm4rbVNym4rYw2dPm
xeJ+2/Wvz1a76aWPfgYYZIhhRhhljHEmmGSKaWaZZ5EAQUKEiRAlRpwESVKk
yZAlR54CRUqUqVClxivqNGiiuKuKu6q4q4q7qririruquKuKu6q4q8qwqgyr
yrCqDKvKsKoMq8qwqgyrFrxqwasWvGrBqxa8asGrzrzqzKvOvOrMq868qrir
iruquKuKu6q4q4q7qririruquKuKu6q4qzf+VWt3nWGOBZZY5mYH7/qaN3yD
+a6a76r5rprvqvmumu+q+a4q7qritvWu5rtqvqvmu2q+q+a7ar6r5rtqvqvm
uyoLq4q72upev3TXW9zmDne5x30e8PAr3FUWVmVhVRZWZWFVFlZlYVUWVhV3
VXFXFbeNdz0v7ufT/vFfna1e8oo9XOYKV7nG9Q6f9hGPecJTnvGcF7zs8GkV
d1VxVxV3VXFXFXdVcVcVd1VxVxW3hcmefnuxuGtdL8/Wuumlj34GGGSIYUYY
ZYxxJphkimlmmWeRAEFChIkQJUacBElSpMmQJUeeAkVKlKlQpcYr6jRosori
rinumuKuKe6a4q4p7pririnumjKsKcOaMqwpw5oyrCnDmjKsKcOaBa9Z8JoF
r1nwmgWvWfCaM68585ozrznzmjOvKe6a4q4p7pririnumuKuKe6a4q4p7pri
rinu2o3/tbW7zjDHAkssc7ODd33NG77hW8x3zXzXzHfNfNfMd8181xR3TXHb
elfzXTPfNfNdM981810z3zXzXTPfNfNdk4U1xW15r1+66y1uc4e73OM+D3j4
Fe4qC2uysCYLa7KwJgtrsrAmC2uKu6a4a4rbxrueF/fzaRV37ZLX6+EyV7jK
Na53+LSPeMwTnvKM57zgZYdPq7hrirumuGuKu6a4a4q7prhrirumuC1M9nTt
YnHXu16crXfTSx/9DDDIEMOMMMoY40wwyRTTzDLPIgGChAgTIUqMOAmSpEiT
IUuOPAWKlChToUqNV9Rp0GSVNRR3XXHXFXddcdcVd11x1xV3XRnWlWFdGdaV
YV0Z1pVhXRnWlWHdgtcteN2C1y143YLXLXjdmdeded2Z15153ZnXFXddcdcV
d11x1xV3XXHXFXddcdcVd11x1xV3/cb/0tpdZ5hjgSWWudnBu77mDd/wLd9h
vuvmu26+6+a7br7riruuuG29q/mum++6+a6b77r5rpvvuvmum++6+a7Lwrri
trzXL931Fre5w13ucZ8HPPwKd5WFdVlYl4V1WViXhXVZWJeFdcVdV9x1xW3j
Xc+L+/m0irt+yav1cJkrXOUa1zt82kc85glPecZzXvCyw6dV3HXFXVfcdcVd
V9x1xV1X3HXFXVfcFiZ7un6xuBtdz882uumlj34GGGSIYUYYZYxxJphkimlm
mWeRAEFChIkQJUacBElSpMmQJUeeAkVKlKlQpcYr6jRossoa6yjuhuJuKO6G
4m4o7obibijDhjJsKMOGMmwow4YybCjDhjJsWPCGBW9Y8IYFb1jwhgVvOPOG
M28484YzbzjzhuJuKO6G4m4o7obibijuhuJuKO6G4m4o7obibtxIt3bXGeZY
YIllbnbwrq95wzd8y3d8j/lumO+G+W6Y74bibihuW+9qvhvmu2G+G+a7Yb4b
5rthvhvmu2G+G7Kwobgt7/VLd73Fbe5wl3vc5wEPv8JdZWFDFjZkYUMWNmRh
QxY2ZGFDcTcUd0Nx23jX8+J+Pu0fJnzJa/VwmStc5RrXO3zaRzzmCU95xnNe
8LLDp1XcDcXdUNwNxd1Q3A3F3VDcDcXdUNwWJnu6cbG4m13Pzja76aWPfgYY
ZIhhRhhljHEmmGSKaWaZZ5EAQUKEiRAlRpwESVKkyZAlR54CRUqUqVClxivq
NGiyyhrrbKC4m4q7qbibirupuJvKsKkMm8qwqQybyrCpDJvKsKkMmxa8acGb
FrxpwZsWvGnBm8686cybzrzpzJvOvKm4m4q7qbibirupuJuKu6m4m4q7qbib
irupuJs3Uq3ddYY5FlhimZsdvOtr3vAN3/Id3/MD5rtpvpvmu6m4m4rb1rua
76b5bprvpvlumu+m+W6a76b5bprvpixsKm7Le/3SXW9xmzvc5R73ecDDr3BX
WdiUhU1Z2JSFTVnYlIVNWdhU3E3F3VTcNt71vLifT6u4m5e8Ug+XucJVrnG9
w6d9xGOe8JRnPOcFLzt8WsXdVNxNxd1U3E3F3VTcTcXdVNxNxW1hsqebF4v7
U9e/Otvqfnq21Usf/QwwyBDDjDDKGONMMMkU08wyzyIBgoQIEyFKjDgJkqRI
kyFLjjwFipQoU6FKjVfUadBklTXW2WATxd1S3C3F3VLcLWXYUoYtZdhShi1l
2FKGLWXYUoYtC96y4C0L3rLgLQvesuAtZ95y5i1n3nLmLWfeUtwtxd1S3C3F
3VLcLcXdUtwtxd1S3C3F3VLcrRsPW7vrDHMssMQyNzt419e84Ru+5Tu+5wd+
xHy3zHdLcbcUt613Nd8t890y3y3z3TLfLfPdMt8t890y3y1Z2FLcra6nnbnr
LW5zh7vc4z4PePgV7ioLW7KwJQtbsrAlC1uysCULW4q7pbhbitvGu54X9/Np
//BXl7xOD5e5wlWucb3Dp33EY57wlGc85wUvO3xaxd1S3C3F3VLcLcXdUtwt
xd1S3C3FbWGypz9dLO5215Oz7W566aOfAQYZYpgRRhljnAkmmWKaWeZZJECQ
EGEiRIkRJ0GSFGkyZMmRp0CREmUqVKnxijoNmqyyxjobbLKF4m4r7rbibivD
tjJsK8O2Mmwrw7YybCvDtjJsW/C2BW9b8LYFb1vwtgVvO/O2M28787Yzbzvz
tuJuK+624m4r7rbibivutuJuK+624m4r7rbibt940NpdZ5hjgSWWudnBu77m
Dd/wLd/xPT/wIz9hvtuKu624bb2r+W6b77b5bpvvtvlum++2+W6b77b5bsvC
tuK2vNcv3fUWt7nDXe5xnwc8/Ap3lYVtWdiWhW1Z2JaFbVnYloVtxd1W3G3F
beNdz4v7+bSKu33Jq/RwmStc5RrXO3zaRzzmCU95xnNe8LLDp1XcbcXdVtxt
xd1W3G3F3VbcbcXdVtwWJnu6fbG4O12Pz3a66aWPfgYYZIhhRhhljHEmmGSK
aWaZZ5EAQUKEiRAlRpwESVKkyZAlR54CRUqUqVClxivqNGiyyhrrbLDJFtso
7o7i7ijDjjLsKMOOMuwow44y7CjDjjLsWPCOBe9Y8I4F71jwjgXvOPOOM+84
844z7zjzjuLuKO6O4u4o7o7i7ijujuLuKO6O4u4o7o7i7ty439pdZ5hjgSWW
udnBu77mDd/wLd/xPT/wIz/x8/ld0+6aau9dzXfHfHfMd8d8d8x3x3x3zHfH
fHfMd0cWdhS35b1+6a63uM0d7nKP+zzg4Ve4qyzsyMKOLOzIwo4s7MjCjizs
KO6O4u4obhvvel7cz6dV3J1LXqOHy1zhKte43uHTPuIxT3jKM57zgpcdPq3i
7ijujuLuKO6O4u4o7o7i7ijujuK2MNnTnYvF/fddj852u+mlj34GGGSIYUYY
ZYxxJphkimlmmWeRAEFChIkQJUacBElSpMmQJUeeAkVKlKlQpcYr6jRossoa
62ywyRbb7KC4u8qwqwy7yrCrDLvKsKsMu8qwqwy7FrxrwbsWvGvBuxa8a8G7
zrzrzLvOvOvMu868q7i7iruruLuKu6u4u4q7q7i7iruruLuKu6u4uzf+59bu
OsMcCyyxzM0O3vU1b/iGb/mO7/mBH/mJn//5rqn23tV8d81313x3zXfXfHfN
d9d8d81313x3ZWFXcXdb3euX7nqL29zhLve4zwMefoW7/oIs7MrCrizsysKu
LOzKwq7i7iruruK28a7nxf182j/+y7PdS16hh8tc4SrXuN7h0z7iMU94yjOe
84KXHT6t4u4q7q7i7iruruLuKu6u4u4q7q7itjDZ039/sbh7XQ/P9rrppY9+
BhhkiGFGGGWMcSaYZIppZplnkQBBQoSJECVGnARJUqTJkCVHngJFSpSpUKXG
K+o0aLLKGutssMkW2+ywizLsKcOeMuwpw54y7CnDnjLsKcOeBe9Z8J4F71nw
ngXvWfCeM+85854z7znznjPvKe6e4u4p7p7i7inunuLuKe6e4u4p7p7i7inu
3o1/2dpdZ5hjgSWWudnBu77mDd/wLd/xPT/wIz/xc4fuar575rtnvnvmu2e+
e+a7Z7575rtnvnuysKe4Le/1S3e9xW3ucJd73OcBD7/CXX/hV2RhTxb2ZGFP
FvZkYU9x9xR3T3HbeNfz4n4+reLuXfL4Hi5zhatc43qHT/uIxzzhKc94zgte
dvi0irunuHuKu6e4e4q7p7h7irunuHuK28JkT/cuFne/68HZfje99NHPAIMM
McwIo4wxzgSTTDHNLPMsEiBIiDARosSIkyBJijQZsuTIU6BIiTIVqtR4RZ0G
TVZZY50NNtlimx122UMZ9pVhXxn2lWFfGfaVYV8Z9i1434L3LXjfgvcteN+C
951535n3nXnfmfedeV9x9xV3X3H3FXdfcfcVd19x9xV3X3H3FXdfcfdv/E+t
3XWGORZYYpmbHbzra97wDd/yHd/zAz/yEz936K7mu2++++a7b7775rtvvvvm
u2++++a7Lwv7itvyXr9011vc5g53ucd9HvDwK9z1F37lN2RhXxb2ZWFfFvYV
d19x9xW3jXc9L+7n0yru/iWP7uEyV7jKNa53+LSPeMwTnvKM57zgZYdPq7j7
iruvuPuKu6+4+4q7r7j7iruvuC1M9nT/YnEPuu6fHXTTSx/9DDDIEMOMMMoY
40wwyRTTzDLPIgGChAgTIUqMOAmSpEiTIUuOPAWKlChToUqNV9Rp0GSVNdbZ
YJMtttlhlz32UYYDZThQhgNlOFCGA2U4sOADCz6w4AMLPrDgAws+cOYDZz5w
5gNnPnDmA8U9UNwDxT1Q3APFPVDcA8U9UNwDxT1Q3APFPbgRae2uM8yxwBLL
3OzgXV/zhm/4lu/4nh/4kZ/4uUN3Nd8D8z0w3wPzPTDfA/M9MN8D8z0w3wNZ
OFDclvf6pbve4jZ3uMs97vOAh1/hrr/wK7/xO7JwIAsHsnCguAeKe6C4bbzr
eXE/n/YP873ksT1c5gpXucb1Dp/2EY95wlOe8ZwXvOzwaRX3QHEPFPdAcQ8U
90BxDxT3QHEPFLeFyZ4eXCzuYde9s8NueumjnwEGGWKYEUYZY5wJJplimlnm
WSRAkBBhIkSJESdBkhRpMmTJkadAkRJlKlSp8Yo6DZqsssY6G2yyxTY77LLH
Pgcow6EyHCrDoTIcKsOhBR9a8KEFH1rwoQUfWvChMx8686EzHzrzoTMfKu6h
4h4q7qHiHiruoeIeKu6h4h4q7qHiHiru4Y1wa3edYY4FlljmZgfv+po3fMO3
fMf3/MCP/MTPHbqr+R6a76H5Hprvofkemu+h+R6a76H5HsrCoeK2vNcv3fUW
t7nDXe5xnwc8/Ap3/YVf+Y3f+ROycCgLh4p7qLiHitvGu54X9/NpFffwkkf2
cJkrXOUa1zt82kc85glPecZzXvCyw6dV3EPFPVTcQ8U9VNxDxT1U3EPFPVTc
FiZ7enixuH/p+pdnR913z4566aOfAQYZYpgRRhljnAkmmWKaWeZZJECQEGEi
RIkRJ0GSFGkyZMmRp0CREmUqVKnxijoNmqyyxjobbLLFNjvsssc+BxyiDEfK
cKQMR8pwZMFHFnxkwUcWfGTBRxZ85MxHznzkzEfOfOTMR4p7pLhHinukuEeK
e6S4R4p7pLhHinukuEeKe3TjVmt3nWGOBZZY5mYH7/qaN3zDt3zH9/zAj/zE
zx26q/keme+R+R6Z75H5Hpnvkfkeme+R+R7JwpHiHnXd7cxdb3GbO9zlHvd5
wMOvcNdf+JXf+J0/8Wdk4UhxjxT3SHHbeNfz4n4+7R/OfMnjerjMFa5yjesd
Pu0jHvOEpzzjOS942eHTKu6R4h4p7pHiHinukeIeKe6R4h4pbguTPf3LxeIe
d905O+6mlz76GWCQIYYZYZQxxplgkimmmWWeRQIECREmQpQYcRIkSZEmQ5Yc
eQoUKVGmQpUar6jToMkqa6yzwSZbbLPDLnvsc8AhRyjDsTIcK8OxBR9b8LEF
H1vwsQUfW/CxMx8787EzHzvzsTMfK+6x4h4r7rHiHivuseIeK+6x4h4r7rHi
Hivu8Y2brd11hjkWWGKZmx2862ve8A3f8h3f8wM/8hM/d+iu5ntsvsfme2y+
x+Z7bL7H5ntsvsfmeywLx4rb8l6/dNdb3OYOd7nHfR7w8Cvc9Rd+5Td+50/8
mb+c3zXirmF3DbXzrufF/XxaxT2+5FE9XOYKV7nG9Q6f9hGPecJTnvGcF7zs
8GkV91hxjxX3WHGPFfdYcY8V91hxjxW3hcmeHl8s7knX7bOTbnrpo58BBhli
mBFGGWOcCSaZYppZ5lkkQJAQYSJEiREnQZIUaTJkyZGnQJESZSpUqfGKOg2a
rLLGOhtsssU2O+yyxz4HHHLEMcpwogwnFnxiwScWfGLBJxZ8YsEnznzizCfO
fOLMJ858orgninuiuCeKe6K4J4p7orgninuiuCeKe6K4JzeWW7vrDHMssMQy
Nzt419e84Ru+5Tu+5wd+5Cd+7tBdzffEfE/M98R8T8z3xHxPzPfEfE/M90QW
ThS35b1+6a63uM0d7nKP+zzg4Ve46y/8ym/8zp/4M3/557uG3TXUzrueF/fz
aRX35JLH9HCZK1zlGtc7fNpHPOYJT3nGc17wssOn/SuKe6K4J4p7orgninui
uCeKe6K4LUz29ORicf/edevsbTe99NHPAIMMMcwIo4wxzgSTTDHNLPMsEiBI
iDARosSIkyBJijQZsuTIU6BIiTIVqtR4RZ0GTVZZY50NNtlimx122WOfAw45
4pgTlOGtBb+14LcW/NaC31rwWwt+68xvnfmtM7915rfO/FZx3yruW8V9q7hv
Ffet4r5V3LeK+1Zx3yruW8V9e+NftHbXGeZYYIllbnbwrq95wzd8y3d8zw/8
yE/83KG7mu9b831rvm/N9635vjXft+b71nzfmu9bWXiruG9b3euX7nqL29zh
Lve4zwMefoW7/sKv/Mbv/Ik/85f//K6hdt71vLifT/vHf3H29pJH9HCZK1zl
Gtc7fNpHPOYJT3nGc17wssOn/St/Q3HfKu5bxX2ruG8V963ivlXcFiZ7+veL
xX3XdfPsXTe99NHPAIMMMcwIo4wxzgSTTDHNLPMsEiBIiDARosSIkyBJijQZ
suTIU6BIiTIVqtR4RZ0GTVZZY50NNtlimx122WOfAw454pgT3mLB7yz4nQW/
s+B3FvzOgt858ztnfufM75z5nTO/U9x3ivtOcd8p7jvFfae47xT3neK+U9x3
ivtOcd/d+B9bu+sMcyywxDI3O3jX17zhG77lO77nB37kJ37u0F3N9535vjPf
d+b7znzfme87831nvu/M950svFPclvf6pbve4jZ3uMs97vOAh1/hrr/wK7/x
O3/iz/ylY3c9L+7n0yruu0t+uofLXOEq17je4dM+4jFPeMoznvOClx0+7V/5
G39Hcd8p7jvFfae47xT3neK2MNnTdxeL+75r+ex9N7300c8AgwwxzAijjDHO
BJNMMc0s8ywSIEiIMBGixIiTIEmKNBmy5MhToEiJMhWq1HhFnQZNVlljnQ02
2WKbHXbZY58DDjnimBPe8g4Lfm/B7y34vQW/t+D3zvzemd8783tnfu/M7xX3
veK+V9z3ivtecd8r7nvFfa+47xX3veK+V9z3N/6H1u46wxwLLLHMzQ7e9TVv
+IZv+Y7v+YEf+YmfO3RX831vvu/N9735vjff9+b73nzfm+97830vC+8Vt+W9
fumut7jNHe5yj/s84OFXuOsv/Mpv/M6f+DN/6dhdz4v7+bR/mO4lP9vDZa5w
lWtc7/BpH/GYJzzlGc95wcsOn/av/I2/848o7nvFfa+47xX3veK2MNnT9xeL
+6Fr6exDN7300c8AgwwxzAijjDHOBJNMMc0s8ywSIEiIMBGixIiTIEmKNBmy
5MhToEiJMhWq1HhFnQZNVlljnQ022WKbHXbZY58DDjnimBPe8o73WPAHC/5g
wR8s+IMzf3DmD878wZk/OPMHxf2guB8U94PiflDcD4r7QXE/KO4Hxf2guB8U
98ON2dbuOsMcCyyxzM0O3vU1b/iGb/mO7/mBH/mJnzt0V/P9YL4fzPeD+X4w
3w/m+8F8P5jvB/P9IAsfFLflvX7prre4zR3uco/7PODhV7jrL/zKb/zOn/gz
f+nYXc+L+/m0ivvhkp/s4TJXuMo1rnf4tI94zBOe8oznvOBlh0/7V/7G3/lH
/gnF/aC4HxT3g+K2MNnTDxeL+7Fr4exjN7300c8AgwwxzAijjDHOBJNMMc0s
8ywSIEiIMBGixIiTIEmKNBmy5MhToEiJMhWq1HhFnQZNVlljnQ022WKbHXbZ
Y58DDjnimBPe8o73fMCCP1rwRwv+6MwfnfmjM3905o/O/FFxPyruR8X9qLgf
Ffej4n5U3I+K+1FxPyruR8X9eGO6tbvOMMcCSyxzs4N3fc0bvuFbvuN7fuBH
fuLnDt3VfD+a70fz/Wi+H833o/l+NN+P5vvRfD/KwkfFbXmvX7rrLW5zh7vc
4z4PePgV7voLv/Ibv/Mn/sxfOnbX8+J+Pq3ifrzk53q4zBWuco3rHT7tIx7z
hKc84zkveNnh0/6Vv/F3/pF/4j+cn3beaWeddrqVyZ5+vFjc/9g1e/ape+7s
Uy999DPAIEMMM8IoY4wzwSRTTDPLPIsECBIiTIQoMeIkSJIiTYYsOfIUKFKi
TIUqNV5Rp0GTVdZYZ4NNtthmh1322OeAQ4445oS3vOM9H/iIBX+y4E/O/MmZ
PznzJ2f+5MyfFPeT4n5S3E+K+0lxPynuJ8X9pLifFPeT4n5S3E83/vvW7jrD
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
\
\>"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2 h\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 2}]}}], 
     ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 
         2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2 v\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 3], 0}}, {{{1, 0}, {0, 
             1}}, {-0.3333333333333333, 0}}]], {{{{1, 0}, {0, 1}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}}], {3, 
         2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p11m\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 2}]}}], 
     ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}}], {3, 2}]}}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p1m1\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-3, 8], 0}}, {{{1, 0}, {0, 
             1}}, {-0.375, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 2}]}}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p11g\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{1, 0}, {0, 1}}, {Rational[-1, 4], 0}}, {{{1, 0}, {0, 
             1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, 1}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 1}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {
             0, -1}}, {0.5, 0}}}]], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p1g1\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{1, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {
             0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0,
              1}}, {0, 0.5}}}]], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c11m\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 2}]}}], ",", 
     
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 
             1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, 1}}, {
             0.5, 0.5}}, {{{1, 0}, {0, -1}}, {0.5, 0.5}}}]], {3, 2}]}}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c1m1\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0,
              1}}, {Rational[-1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {
             0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {-0.5, 0.5}}}]], {3, 2}]}}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2mm\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 3], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.3333333333333333, 0.25}}]], {{{{1, 0}, {0, 1}}, {
            0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         0, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         0, 1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         1, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         1, 1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         2, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         2, 1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         3, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         3, 1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {-0.25,
              0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
            0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {0, 0}}}], {
         3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2mg\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], Rational[1, 4]}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], 0}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], 0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 0}}, {{{-1, 
             0}, {0, 1}}, {0.5, 0}}}]], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2gm\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 4], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.25, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, Rational[1, 2]}}, {{{-1, 0}, {0, 
             1}}, {0, Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 
             0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0.5}}, {{{-1, 
             0}, {0, 1}}, {0, 0.5}}}]], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2gg h\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{1, 0}, {0, Rational[1, 4]}}, {
             0, Rational[1, 8]}}, {{{1, 0}, {0, 0.25}}, {0, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2gg v\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 6], 0}}, {{{0.5, 0}, {
              0, 0.5}}, {-0.16666666666666666`, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, 1}}, {
             Rational[-1, 8], 0}}, {{{0.25, 0}, {0, 1}}, {-0.125, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c2mm h\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         2}]}, {GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         2}]}, {GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[3, 8]}}, {{{0.25, 0}, {0, 0.25}}, {0.25,
              0.375}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 4], Rational[1, 8]}}, {{{0.5, 0}, {0, 0.25}}, {0.25, 
             0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{-1, 0}, {0, 1}}, {1, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {1, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c2mm v\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 
         2}]}, {GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 
         2}]}, {GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 
         2}]}, {GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         1}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.125, 
             0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, -1}}, {
             Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {0, -1}}, {
             Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {-0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {
             0, -1}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 
         2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 8], Rational[1, 4]}}, {{{0.25, 0}, {0, 0.5}}, {0.125,
              0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {0, 1}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{1, 0}, {0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1,
              0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{-1, 0}, {0, 1}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{1, 0}, {0, -1}}, {0, 
             1}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{1, 0}, {0, 1}}, {0.5, 
             0.5}}, {{{-1, 0}, {0, -1}}, {0.5, 0.5}}, {{{1, 0}, {0, -1}}, {
             0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5, 0.5}}}]], {3, 2}]}}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p4 a\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], {{{{1, 
            0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}}], {3, 2}]}}], ",", 
     
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{-0.5, 0.5}, {0.5, 
             0.5}}, {0, 0}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 
            0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {
            0, 0}}}], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p4 d\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 4], Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0.25, 
             0.25}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 
            0}}}], {3, 2}]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p4m\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 6], Rational[1, 3]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.16666666666666666`, 
             0.3333333333333333}}]], {{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {
            1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {-1, 
            0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 
            0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 
            0}}}], {3, 2}]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {0, 0.5}}, {-0.5, 0}}]], {{{{1,
             0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {
            0, -1}}, {0, 0}}, {{{0, 1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, 
            1}}, {0, 0}}, {{{0, -1}, {-1, 0}}, {0, 0}}}], {3, 2}]}}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p4g\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 8], Rational[1, 8]}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.125, 0.125}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {1, 
             0}}, {{{-1, 0}, {0, -1}}, {1, 0}}, {{{0, 1}, {-1, 0}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0,
              1}, {1, 0}}, {Rational[1, 2], Rational[-1, 2]}}, {{{-1, 0}, {0, 
             1}}, {Rational[1, 2], Rational[-1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {1, 0}}, {{{-1, 0}, {0, -1}}, {1, 
             0}}, {{{0, 1}, {-1, 0}}, {0, 0}}, {{{1, 0}, {0, -1}}, {0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {0.5, -0.5}}, {{{-1, 0}, {0, 1}}, {
             0.5, -0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 2}]}}], 
     ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {0, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {1, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {2, 2}]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 1}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {0, 
             0}}, {{{0.5, 0}, {0, 0.5}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 0}}, {{{0, -1}, {1, 0}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 1}}, {{{0, 1}, {-1, 0}}, {0, 
             1}}, {{{1, 0}, {0, -1}}, {Rational[-1, 2], Rational[1, 2]}}, {{{
             0, 1}, {1, 0}}, {Rational[-1, 2], Rational[1, 2]}}, {{{-1, 0}, {
             0, 1}}, {Rational[1, 2], Rational[1, 2]}}, {{{0, -1}, {-1, 0}}, {
             Rational[1, 2], Rational[1, 2]}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{0, -1}, {1, 0}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             1}}, {{{0, 1}, {-1, 0}}, {0, 1}}, {{{1, 0}, {0, -1}}, {-0.5, 
             0.5}}, {{{0, 1}, {1, 0}}, {-0.5, 0.5}}, {{{-1, 0}, {0, 1}}, {0.5,
              0.5}}, {{{0, -1}, {-1, 0}}, {0.5, 0.5}}}]], {3, 2}]}}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p3 p\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         0, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         1, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         2, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         3, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         0, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         1, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         2, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         3, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, 0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p3 e\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         0, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         1, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         2, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         3, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{0, Rational[1, 2]}, {Rational[-1, 2], 0}}, {
             0, Rational[-1, 4]}}, {{{0, 0.5}, {-0.5, 0}}, {0, -0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         0, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         1, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         2, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], {
         3, 0}], GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[
            NCache[{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5}, {0.5, -0.5}, {
             0.5, 0.5}, {-0.5, 0.5}}],
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             0, Rational[-1, 2] 3^Rational[-1, 2]}}, {{{0.5, 0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {
             0, -0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
LqWbpKaSQ7b9GqnvtEL6deWQ7c4h25NDts9MGTOAQ3bwJJk8fLxMG8UhO26k
zJvIITuFQ3YGh+zs3rJ2fp00LeaQXd5Ztq/ikF3HIbuRQ3ZLsRzb0VpO7uGQ
3Z8tFw6ny+XjHLKnOWTPcchejJCHVzlkbwTK8zu+8ukDDtlH7vLVRxyyH9vL
jy84ZD/XyB9fq+Wf33PIvuKQ/UWlKn2rFBP9R2nMzGwWI6M3Ymb6D7G0+FW0
WqpkR5UcqZIrVfKkSt6fSID/UwkOpkphVCnqrsTF3ZSkJKqUSpW4RqtWVCmf
KrWhSqVUqZIqtd8p1Z2oUleqVLteevVcLX36UKUBVGnwAhkxfI6MGkWVxlKl
iY0yZQpVmk6VZo+Q+fOp0mKqtIwqreol69ZRpQ3dZOsWqrSDx7I9VGl/mRw5
XCTHj1OlU7nSfI4qXaRKV6jSjXi5eydaHjygSh+GyNOPAuTjj6lSC1X63E2+
/tpJvv+eKv1kLb/9SpX+QZXeUKX/+15zaOhDMTZ+LWqzP0Rj+YtYW1MlO6rk
9JW4u1ElHVXy+VgCA6hSCFUKp0rRdyQ+nvexZKqURpWyeB/LpUoFVKmIKpVR
pbZUqQNVqqZK3ahS93XSuxfvY32p0kCqNGS+jBzB+9hoqjSOKjXyPjaVKs2g
SnOGy4IFnERLqNJyqrSa97H1VGljV9m2lSrt5CTaS5UOlMrRI1TpBFU63UrO
N/M+dokqXaVKN6nSXar0AVV6FCzPnvI+9glVekGVvnCVb77hfewHqvSKKv1G
lf6kSm8MG/m/FgOD/yMmJv8Uc/XvYqX5WWxsqJI9VXKmSu5UyYsq+T6XoECq
RH6REVQp5rYkJFClFKqUTpWyeV7No0qtqVIxVSqnSm2pUhVV6kyVaqhS3Vqp
702V+lGlgVRp6DwZOZLn1TFUaTxVmsTz6jSqNJMqzaVKC6nSUqq0ol7WruF5
tYkqbeoi27dRpV1UaR9VOlgix45SpZNU6QxVOs/z6mWqdI0q3YqV+/d4Xn1I
lR5TpWdU6VOq9BlV+tJFvv2W59UfqdLPVOl3qvRPk5aPPgpoWr26txgZ/peY
mv4pFua/idbqldjaciw7cCy7cCx7vBBveuPv90yCgx5JWBjHcuQ9iYu9JYmJ
VyU1lWM5g97kcCzncywXHpHSEo7lCo7ldhzLHbdK1y4bpZbe9OyxRvrUL5f+
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
MNEIE48wSQijR5g0hMlEmMMIk4cwRQhTijBHnklhzRMx1D+QVGboJGboKHIT
zAztzQztMnJW7MZWxZwZ2vd2qywhzArCrCPMJsJcQphttQkpwtxGmPsI8whh
3nynTN56o0Leu4u21wqUMB9fANw1wF0E3GnAHQXcAcDtBNwmwK0C3BLAzQHc
DMDVAW4s4IYBrh/gugOug5n82sJExWZeXvv/hTHbEUa9rZn/6R57+YEJupih
ixW62KCLA7o4o4sbunihix+6BKFLKLpEokssuiSc0JakmUhBlwx0yUaXHHQp
QJfityW//C3JJlEpJCqBREWSqEC13zaJciJRNiTKjERlqwX60WUTXS6hyxV0
uY4ut9HlHro8Qpc30eUtdHn37VL58DFz0Z0c+eI2pTlPaVYozQKlmUqUb45Q
mv5I+XY7J4sNlKbST/6+iNIY3eVHaZQm2UF+Hm0r/xVCaXwpjauJ/B9zc+3s
6Jf7SJWFqfzG6nXtnfA/70UXc3TZjy626HIAXVzQxR1dvNHFH12C0SUMXaLQ
JQ5dEtHlILqkoksmuhjQJRddCtGl5B3JVdugkSg97+/iSFQ4ifInUR4kypFE
7SdRpiRKXdOwgS7n0eUyumyjyw21GTS63EeXx+jyFF3e/qBI3nuOtA+R9hbS
biHtOaRdRto5pJ1E2iGk7UXaVqStQ9oKpC1AWgPSpiBtItJGIm0Q0nrvk1cH
OAMwM9OUVe9hXlnulV9bmshPTezlH009te/c1Le237BDF0d0cUUXD3TxQZeA
Gu2O0qvh6BKNLvHokoQuenRJQ5dMdDmMLnnoUvRUikvfESOJSlcbLpKoGBIV
SqJ8SZQbiXIgUZYkyoREraLLWXS5gC5b6HIVXW6iy1211bHaaBJdnqHLO++V
yPtPkfZ+nrbG9JcuIe0G0i7p5eszSDuOtINI2x2u3eX7vRqkLUPaPKTNQlo9
0sbbad/O/zKAnvA0lV/b0yem9MleS+29y6+tTLQa/eh1dNmHLpboYoMu9uji
hC5u6OKJLr7oEoguoegSgS4x6JKALsnocghd0tElC12M6JKPLsXPpbDsbTFU
PpVUZuckziSjmJ2DmZ29yY0Ls7Mds7P58Q3xv9ola+hyDl0uossVdLlG39xC
l3vo8hBd3lDbwaHLu7x/+eANpL2LtNeQ9kLmnj1O8tU1sF0E22mwHQXbAbDt
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
0Jk7b5Ps7qXSP4vOnL1OhvZfpW7QVTCUzpxPZy6YI1PH0ZknTZM5UyfJ/Bl0
5jmjZZmyQeoiOvMyOvOqXCldmy1bN9CZS3tI2VY68046c1nd3Zj9reXE4XQ5
VU5zPtFYqk8l1b18Wk1zvkxzvh4ij27TnO/7qmgoz6eoXxG+oTl/sJLvX2jO
PzKT/a6T//yuXyh/6emF1BkmsN4wZ083kakzp4rG6E8xMPtVTLjCtrD9Qawd
P4m96ztx9ngt7j4vxCvgifgFP5Cg8LsSGn1TIhteldjESxLf6IIkk3ST5iel
WasKadHuqLTpcFAyOu+Tjt13S9es7dKz72bp079EcgYWS97Q1TI4f4UMK1gi
I8cVyZiJ82TC1FkyecZ0mT57ssyaP0HmLhojRctGypKVw2X52sGyekOeFG/K
kRJl6wplE4KyrrJ7fyfZezhDDpa3kaOVLaXiVLO6JUUuJsuFywlScz1Wrt6O
lJv3wuTuo6C6p46VB7/euEvtB2d598VePn2zka/fLdQ7Cb/+ZSCPX3qRxTQp
Lc2WxhyP1vgPMTT/RUy5wra0+yo2Th/Fwe2tuHjWirvvc/EOfCz+IQ8kOOKO
hMXckKj4KxKXVCMJjc9LStppaZpeJc1bH5eW7Y+oSydmdtkrnXrskm69t0mv
7M3SN3ej9Bu0TgYMXSVDRiyX4aMXy6jxC2TspLkycdpMmcJYCudMktkLxsu8
xaPr9ghdNUxWrBskazbmyvrSHNm0rbds2dVDdpR1kT0HOsq+I+3l0PHWcuxE
C6k8nSYnmYOdrU6Si1fi5dKNGLl2J0Ju3Q+Ve48D5eFzX3la6ykv37rJ649O
8v6rnXz+0Vp++MVcfv7DWH7jYlnJbBrnpmRLtjQw+Ft0XBAYWXwXM+tvYmX/
RWydP4ij+xtx9XolHn7PxCfokQSE3peQyNsSHntdohMuS8Pkaklsck4aNTsl
qS1OSHqbcmmVcVjaddwvHbqWSeeeO6V7n62SlVMq2XkbpP/gtTJw2EoZOnKZ
5I9ZJAUT5su4yXNk4vQZMnXWVJkxd5LMKRon85cUyKIV+bJM2QSzeKCsLekv
GzZnS+n2LNm6u7vs3NtZypTFa5WlSCtaSXlVupw4kyqnLjSSczWJUn21Yd0r
hspLYw9C5P6TAHn0wkee1XrIq3eu6lMIH36wlS8/Wcm3X83kOxfKv/+jUzMr
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
/HcbcmKMtuYc13a0teGKyB5tndHWHW13UTNvtPVH2yC0DUPbKLRVuTGgbTLa
qtxkoW0e2hahbSkzYiXZraVPVW5ayG4HfdpDX/aj7fBfLJQwY7Rqj1aWpI0J
YGpJLBDGCmHsEMYRYdR+eurmFE+E8UGYAIQJCSY6Pj/V1tzVO3wtiVZfSIrJ
J/PpWz54TpiHCPMewnyEMJ8izJcI842P9izPd2qXLI72Q1L1Dqm6x9He5miv
bf5a6BRHu0SqFkjVDIfaSUfHfhsjRlTIlApto0JWzNF2VMiRCrm+USY7qZAn
FfKlQgF0TQgViqBCMXSNngol8p6pvGcGXZNDhQp4zxK6ppwKVfOe9f9kK03o
1sZ81MV7NjJisSTQiK41ZZ62QBgrhLFDGAeEcUEY9c2gDmF8ECYAYUIQRm2/
ER1EedSTim6Ux/5TybD8UHKMH2tbZj95H2E+RpjPEOYrhPkWYb4Pk2+RT93w
+D6pUtvy3SVVt0jVVVJ1dvP3Huoj59z/MpNpUtX+L9bidr9EttJFZmhribbW
aLsDbZ3Q1g1tPdDWC2390DaQrglF20i0jaVr4tE2ifdM4z0zGYdcxqGQ9yxl
HCoYhxreswFtmxmHdpLczXs28p5x/N2tiK/mx20IY40wOxDGEWFcEcYDYTwR
xhdhAhEmFGEiwtE2AG11aOuCtnafSKbFB5Jr9EiePUKYDxDmE4T5HGF+hDA/
RpifhsvXyPcpqXpMqh6Q8juk5iapukyq1knVCmO0SKrU58wpUlVBvaxJjjHa
mqPtdhS0QVt7tHVGW3e03YW23mjrj7ZBaBtGBKLQNo6xNqBtMu+ZzntmMQ55
jEMR71nK61YyDrW8ZyPatjAOHbxnD++pesadehvzGduMz5aWCKP9XghhnBDG
DWF2IYzattNPbeGJMGGxP5bI0J9KrB/aeqCtE9rafCxZZu/LVNiSPH2MMB8i
zKcI84Wb9sTkL74L0rZp+Qr5PqaHH9HD93+n0+6guE4PX6SH15BvmeM5RA/P
It8EM7TWw1wRmaCtBdpaoa0t2jqgrQva7kRbHdr6oK3KTTDahqNttMoN2iag
bQrvmfHLAMlmHPIZh2Les4xxqGIc6njPJrRtZRw6ec+GP1krYWJ4WxuiasLH
SnOE2Y4wtgijfXmDMO4Io0MYb4TxR5hghAmP/snG41U+gOsOuA6fSrrVR5Jt
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
JygLgtITVPaKyXIWXBrA5RK4XAOXW+DyyYNQuXc7XB5dBdrzQHuCI3gQaKs5
ghUcwU0cwbVAWwq0CziCM3m+391VKswLZYNulGwyHi7bzAarrwBU2RKUI0G5
EJQHQfkQlD9BBWern2JvjCaoOIJKIqjU5m9RZBNUG45FB45FPseiK8eiZ9NL
osorXD8PJqjhHItROvmp0FxqXLvLIi24GIGLKbhYgIsNuDiAizO4uIOLN7j4
gUsQuITdlpCoT8Qn9pa4EpQtQZkRlI6gJp/JlnPg0gAul8HlOrh8DC537oXJ
/VtAexlozwJtPdDWAe0eoN0BtOVAuxpoS4C2WC/vR1qpx2pdi7FSbjhSNpsM
k+1mg6TSiqDseqvv7dS5EpRnJznmS00B1BTSfMWKGGqKp6Zkakqjpgxqymn+
mFlHjkUBx6Ibx6IXx6Ivx6LQQj0fVZ8RjNbKV11cZLPFMFmoAxdjcGkJLpbg
YgsujuDiAi4e4OIDLv7gEgwu4XclKOq2eDGcnRnO1pwrmTKcNQznXYByHlwu
gssV/vsNcLkNLnd55vLgBtA2Au1poD3K/q0F2iqg3cb+LQPalezfxUA711B+
HG6prokyEDbqR8gW06Gyw3yg7LJmONv3khpnhrNbZ+VzTMq5Ur0f8zmQ+RzK
fI5Mk8uxKeqPK5dYuJPO3MvkcOQyn9sxnztxODozn7tzOHpzOPpxOAZyOIYy
n0cwn8dolNvJGrg0CZPY/DSmxKCouNgAXTTookcXE3QxRxdrdLFHFyd0cUMX
L3TxRZdAdAl9IJ6Rd8SRoqwoypiinHpUy0V0uYIuN9DlY3S5iy4PHrGT71D3
NepuYHVOUfdh6q5hdSpZnS2sznrqXm4o7yZby8XUNOqeIcv0U2Wl6SRZaz5O
NlhTlD1FOQ1W3w2s8qIoP4oKpKhQioqkqBiKSshWv9vamEZRmRSVS1Htmj8p
35nH0Z2ielFUP4oaSFFDm177Ul7N+HkCRU2mqOk69X9XeBZKkRZdjNDFFF0s
0MUGXRzQxRld3NHFG1380CXovviF3RN3irKnKAuK0lNU3tLp0oguV9HlJrrc
RpdP0eUhT10+v81jucpjOc9jOcFjOchjqeaxVCDtJqRdy2Mp1cn7SZyJh3WU
Em2RLDeaop63rbOgKBuKcqAoZ4pSronvTVF+FBVEUWEUFUVRsRSV2HxVgnSK
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
a74GV+ds9Yq6jb1aydV+1DSQmoZGNX14XvlE9ARqmkxN06lpFvt4HjUtoKYl
1LSMmlZS01qd/LDARlYETJH+WnAxApeW4GIBLjbg4gAuLuDiDi7eX4oz3Vgz
nE0ZzhqG87GvXORTcHkILp+Dy1NwefGYv+8u9d4A2kb+vtNAe5S/r5a/r0on
b0tt1TtEjNWuk4lGq2Sq6TIpsiiR2TYL1W4WOjfdbVu5b/IqvwmyLojhHDZS
7WZ7LMM5sel65/vSu0tdFsM5T31BRknnZCfmcxfmc4909bL31/oznwfFyp2h
kXJvJPN5LKfzE/3U2+i+LMK+2dhHOj8sJO8SCzWdP1aR9zptg5T/x0M2Gtg1
IZPW/IJMX4NK6dYCXAzBxQRczMDFClzswMUJXFxfiKPnc7EiKGNlQuWclofg
8hhcnoLLi69d5PUzNugjFucOi3ONxWng1OMUi3NYJ2/K7NVr8xVqK2SI0VYZ
brpRRluUyXgbgrInKGeCcicob4LyI6ggggojqEiCiiWoRIJKIah0gsoiqDyC
akdQnQiqC0F176Beuvx0f4IaRFBDCWokQY0lqAnR6q1QlRtzP55NUPMIaiFB
lfB4lxHUKjb4OoLawAbfzAbfzgZfaSd1nTtLFw246MHFFFzMwcUaXOzBxRlc
3F6KvdczsSAoPUF1mr1QHoHL5+DyJbi8fO0mXz1lgz4A2tsciatAex5oT3Ak
Dmrl+3V2MtFulQzU7ZChxltkRMty9WR+gi1BORCUC0F5EJQ3QfkTVPAM9WPo
q6IIKo6gkgiqFUG1JqjsAeplsarbE1Q+QXUlqB7Nl1kaQFCDCWoYQY0iqHEE
NTFK/drFwxkENYegir3lxSI2+FIe73KCWt384lg5G3wLx3CHTl2nBcFzpEAL
Lkbg0hJcLMDFBlwcwMXlqbi6vxRbgjIjKB1BLTzcST4Dlyfg8gxcXvHM5esn
QHsPaG8B7WWgPQu09Xr5bqOjuuaT7FbKIMPtMsxks4w02yBjrdap6zTVkaBc
CcqToHwIKqDpbsrKrXFXRRNUPEElE1QqQWUQVE7T9az3dSCoAoLq1knqe1JT
X2oqpKYh1DQ8Ra6Npqbx1DSJmqZR00xqmktN86lpMY+3lMe7gprWcAzLqGkj
NW3lGFZo5bOZgTLavkw66cDFGFzMwMUSXGzBxRFcXJ+Js8cLsfZ5KqZ0o2E4
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
JntqcqYmd2ryoiY/agqiplBqiqSmWGpKpKYUakqnpixqyqWmdtTUiZo6U1N3
aupNTf2paSA1DaWmkeOabjA2gZqmDFZvpV01i5rmUdNCalpCTcuoaRU1raOm
DdS0mZq2U9NOatpNTfuoaT81HaKmY9R00kNen6GmC9R0iZqusgNusgM+4fe8
RxWnXWX92LHirkUWPbKY/iR6iw/Sa0yZ/Igsv/zMLnvLLnutk9cXXWVA3E4J
1d2XSKM76jmVckaeYkNNDtTkQk0e1ORNTf7UFExNYdQURU1x1JRITa2oqTU1
Za+TCXnU1J6a8qmpCzX1aL6Z+wBqGkRNw6hpFDWNpaaJ1DSVmmZQ02xqKqam
RdRUQk3LqWk1Na2jpnJq2kJNOxLlZiU17aGmmrCmD8wepqZ6ajpFTWepqYFz
mss26itq6jnNHX7P+1RxxkX6JOwWVx2yGCFLy59FZ/mjlO3tJR/+NJJfP7SU
P9+wxV5q5cDSzpLjelrCDO9JlPEnEmd2UxKtqMmWmhypyZWaPKjJh5oCqCmE
msKpKZqa4qkpiZpSqSmDmnKoqQ01daCmAmrqSk09qakvNRVS02BqGk5No6lp
HDVNoqZp1DSTmuZQ03xqWkxNS3mqu4KU1pDSelLaSEpbSamClHaR0l5SqiWl
A6R0hJSOk9JpUjpHShdJ6QopXSelj0npbtM0ObQkX7xaIIshshi/E1Ozn0Vj
9V7uvvCQn343kd/eo+y3hvLykrusV7rRPJBw/acSbXJb4s1vSBLdpNo1qu/J
KR8OaePJZPY9KgWBTGa66RnBZI6pksKEChmczGRO2ySjM5nMuUzmtkzmjqVq
N3O6MZl7zZXF/WbK0oFM5iHN93KkG+WWrVsnD5GK6YWyaxaTeW4vqV3AZKab
I6VNr8asbCun1+bIuTKG86Y0ubKN4byT4VzFcK6OUNP57CDD+aivPD/BcD7j
1vSWaCPDmXR+usFAuc2v+qmh/PehplgeGRiYNQmT23yi5GHwotjJ4Bux0qKL
/g/1nenf/tHKn78ayYu7nrJy0iRx17wUL8Nn4mfyRILMH0moFUXZ3VHfYEl0
oyhPivKlqECKCqGoCIqKoagEikqmqDSKyqSoHIpqS1EdKaqAorpRVC+K6kdR
hRQ1pPlu3aMpajxFTZ4o66ZT1EyKmktRCyhqMUWVUtRKilpLUWUUtYmitjVf
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
dYrzx3MEdZGgLhPUdYL6mKDuEtR9zh8/I6gvCOoZQb0iqG8I6ntb9ZW3n38i
qN8I6k9DuXC+tRTPmydakDEy/FNMTX4VC/MPYmP1Tuzt3qjvoSjv5nt5EpQv
QQUSVAjPdiMIKoagEggqmWe7aQSVSVA5PNttS1AdCaqAoLrxbLcXQfUjqEKe
7Q4hqBEENXq9TBhPUJMJajpBzeTZ7lyCWkBQi3m2W0pQKwlqDUGV8Wx3E0Ft
I6gKnu1WEVQ1QdUS1EGe7R6lphPUpFxdRblYRiM1XaGmG9R0m5o+paYHPNtV
PgP3lJqe82z3NTV9S03fU9N7y6bz5N+p6S+dXLjQtCY6pRvOAFqa/iKWFj+K
rfUP4mDPcHZmONONso/8/RjOSjehDOdIhnMswzmB4ZzCcE5nOCvd5DKc2zGc
Ox2Srp0Zzt0Zzr13qzdsGDSQ4TyU4Txyg4wbw/njBIbzFIaz0s2sherjWKR0
s4ThvIzhvIrhvJbhvIHhvJnhrHSzk+G8m+G8r7sc2M9wPtT0aswx5rOSzhnm
8wXm86UUuX6VU8ibzOdPmM9KOg+Zz58zn7/0klcvmM9fMZ+/Yz6/ZT7/yHz+
hfmspPO3tvB//2thYPT/E8ZD/jSQf/6rkRkcMQ27Rm/9Tkzs34i5c9M7b3Ze
z8TJ74m4BX4mXqH3xTfyjgTG3pLQhOsSkXJZYtIbJCHznCTnnpK0dvWS2emw
5HY+IG2710jH3nukc79d0m3gDuk1dIv0Y9cMHLNehkxYLSOUm/lOXyrjZy2S
yfOKZfqCOTJryQyZu2yqLFg1UZasHSelG0bJys3DZO22wbJh5wDZxPPzbeya
nfu7StWhfKk+1l72n2gjB89ky1GO+Al2zZmrSXL+Zpw0fhIlVz8NlxsPg+X2
5/7yKbvmIWfKj79ykaffOciLt7by+kdL+faXlurrcsorLQ/492k5Z2Rw/+3q
aFLOkbQWH8TI5gcxdfhOLFy+Ehv3l2Lf/KEqd84rvcLuiV/UJxIUd1PCEq9J
ZKtLEtv6giRmnZWUvJOS3v6YZOUfkrwuddKuxz7p1HxDgu6DtkvvYZulP7tm
0Nh1MnTiKhk5dZmMLSqRCbMXyhSUK1o4W2aXFMm85VNk4eoJUrJurCwrHymr
tgyVddsHyYbK/rJ5T2/Zzq5RL7x/uJPsq28ndSfz5NDZLDnWkC4n2TJnryXK
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
SrRdhbbuaOuNtv5oG4S2YWgbhbaxaBuPtskcSzraZqFtHtoWoW0p2lbQrzX0
awP92szYtNOv3fRrH2OzgX4dpl830q8TjE0//9+D+uu47jbhWkK9Y7FGGLVo
nAPCOCOMG8J4Iowvwmj343qgrRPa6j+VOPOPJNHwA20KhocfmmozSX33maP2
AMaXn/vLfcbmE8bmfcZGff94lbG5yNicZSxOMDaH1FL39OsINVI1WYa2xjs3
ijnaWqGtntzYo60T2rqirQfa+qBtANoGo2042kaj7RooSCA3ahsZaJtNbvLR
thht16JtJdrW0q+N9GvLt6ukg37toV/7eN2B/22lhBmhZcdBr++vT6KjZ1iM
uNQ0VeuKI8wKtc6i+rAeYVwQxh1hvBDGL/SnEuT3cwlzA1xHwLX+ROJNP3yQ
ZPD+U8K8hTA3EeY2wtxBmI8R5i7C3EOYn4ZqK5PcZi/VvSVXGLkL7OVptXw5
I6eWMl9YOidMMXLVdJgVXaKja0ypkAUVWkGFbHnP6EiFXNQdS5fWihcV8qNC
gVQolK6J5NBWU6E4uiaJCqVRocyfBksur13Ia5fy2uW8djWvXc9rN/1ZL228
dhevvY7X7ue1s7kKtH62R3RcM5gijAXCrFALaKtPXRFGLTvoppYgRBg/hAlC
mNDgn0ikz2fazMRx9h9KktX7kmZ8SxayRuTxOwjzHsLcsdUe+Pr6RwhzP0g+
Y+Q+IlW3SNV1UnWZY1bTO58iVUcZuf2kap5UzZKqCVK1hmMyRFsjusYMbS3R
dgXa2qHtSrRdhbbudI032vqjbRDahtE1UWgbi7bxdE0y2qajbRba5vHaRbz2
Wl67gteu4bUbeO1mdG3ntbt57T66t4UUaa+9fUKMNs+KGcJYIoweYewQZiXC
rEIYd4TxRhh/hAmO/LGEBaGt19LzebZ3JNniPUnXvSM3RrLk0S2EeR9hPrTX
Zpb96jMf7W77u5wn75Cqm2opS1KllrU8t/Tp8mFad5FU7SRVM/+jk56l/VqG
tsZoa462VqRdj7b2aOuEtq5o64G2PmgbgLbBaBuOttFouwZtE9A2BW0z0DYb
bfN57WJee626Y5TXruW1G3ntFl67g9fu4bXXo20rPRP/UbwsQzlj3pWYI4wV
wtggjD3COCGMK8Koe3h8ECYAYUIQJjwAbT3Q1glt9Xckxfy2ZBjelD+cdZSH
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
FXKjKz2pkC8VCqRrQqhQBBWK+d5O4qhQIhVKpUKZdE0y3eNDdxnSNUZcH5kh
jCXCrEAYO4TRvsdCGHeE8UYYf4QJQpgwhIlCmNUIE881THI05QmmPD43JM+V
8tirqR0vS4XxRTmS1C2PLyDMqwhzBWGuuWhLy6l1CT+7jTB34uXWx7Fyna6/
TNefZ/9P0fVHl24umCdVs3T9BF0/zP730fXt7HcD+19BqnypnQHaGtE1pmhr
gbYr6BpbtHVEW5f7oeJOV3qhrR/aBtE1oWgbibar0TaerkyiU9LQNouuSaE2
aptaV3I9YI4wVgijRxh7hHFCmFUIo91zgTABCBOMMOEIE40wsQiTEPehpETe
1ta1VEuL5bugre0VWWvxqlTqLsh73Uny6CLCXEaY1xHmTYS5gTDvIMx70XKH
/b/JOF9jTC8xpufY/5OM6WHGdJH93/mbJ9/njNP1g+x/L2Payn7Xsf+59Is2
pmhrjLZmaGuJtnq0taPvVtJ3q9DWg77z5jj96btgtA2j76Lou1i0TaDvktlO
On2XjbaqX2zps2VcP5twPae980AYG4RxQBhnhHFFGE+E8UWYQIQJQZgIhIlB
mDUp70liLNqGvysZaqYfD7R1Qlv9a1JmfkmqDF+W7w/Yy8NXTLU1ar676qhN
1PTlDxDmFsK8v1pbmvzGJzFyVT29wRn0LPt/gjE9xJjuZf/nfuss04zpGGdo
9VlRN2PazJjWsP/Z/71cnPmbZSo3aGuOtlYqN2hrT9850XeuaOtJ36naBajc
oG24uuGWvltDFhPpuxT6LoO+yyGLodRrOTXWcb1o+kQYC4RZgTDah+4I44Iw
bgjjhTB+CBOEMOqBoEiEWY0wcQiTFAO4oYDrB7hugOsIuNaXpdz0lQfVBuf/
pTCnEeYcwlxAmFcR5grCXAvQlpr++Gas3Obo3uborpCqCxzdaY7uGKk6yNEt
LN2TMkWqRjm6fo6uk1SpdwZVHF2JOjpcdqOiBnSNERUyZRsWbGMFWtmyDUe2
4ULXuFMhL7bh90d7CaJCoerdBdtYTdfEUyFffm7Gfug495sijAXCqPertgjj
iDDOCOOGMF4I44cwgQij3Y2NMDEIE4cwSRnvSFoC5+joH0huMOXxuSolrq9J
uf0rUm11XuqNz8rxhHZ5fAZhXkKYiwhzGWFeR5g3EeYGwrwTJ7feS5HrpOoy
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
V/9uFZ3mwd9404H+bCuY7YYhTBSvpx6GS0CYZIRJR5hshMlDmCKEWYsw2lSv
CNPQ9IK0VKNtKdrmom0a2sahbSTaBqGtF9q6oK3tZtlhsUnmdaPy85xAeTSG
MBMIM40wWxFmDmHmEWYvwjyDMIcQ5ijCnECYU7Vy8my9HOZstMh+7Vyafm6c
VA2Sql5S1Uqq6khVGakqUA8A3A+VRFIVQ6pCSJUvx+pKqhxIlTWpMlGfcP7D
VKzUZzDqxkWEcUIYV9VPCOODMAEIE4Iw4fRiNMKsoUcTESZFTXiAMDkIk48w
xQhThjBVCFOLMI1cw7RWom0x2majbQraxqJt+MKTpcQ90NYJbfVTstN8XHYb
jsh/dVrLw40IM4kwWxBmFmF2IMxuhNmHMPsR5lmEeQ5hnkeYFxrkBD17iH3a
yxl6jv2bppfHrufIBs7Q3ex3Mz1ewzGU0u95HE+6uk2XY4siB0EcpzdnaBeO
2Y58WHL8RmRFxztG9fmlLf3iQO8400du9JQX/eVLrwXSd6H0YAT9GENvxtGn
SU+ESUWYTIRRc30VIEwJwpQjTDXC1CFMU/1paSsH3ELAzQTcJMCNAdxQwPUD
XDfAdQRc60nZZbrxwYLB8FPCdCNMP8IMIcwowmxCmM0IsxVhtiPMLoTZgzCL
CHMQYY4gzHGEOdkiB+nmhZeeTKE7xZ6P0uX9HEUnqWriiKrofvXoq3qIMZUj
jSNVERx1IAnxpALOS18+qqt/HZVRneOAMM5UzY0KeiKMuoksEGFCqHgE1Y9B
mDhGJRFhUhmtTDVNBsIUIEwJwpQjTBXC1CFME8Joi0DUUp4yypNPeTL2yWgC
5YneIVPBlMeH8rhOyk77jbJgNSKLxgNy0z9DHm9AmGGEGUOYCYSZRpitCDOH
MPMIsxdhnkGYQwhzFGFONMvRU82yn1TNk6pZUjWxNM1YH9d47aSqgVRVkKoi
UpVFqpJJVSypCiNV/qTKnVStJFV6UmWmvtD/k632OZUjwrggjDt18uLf+1G/
IIQJpa6R1Hg1wsRT+yReM40xyUKYXIQpRJhShKlAmGqEqUeY5q7npK3peemq
RttStM1F2zS0jUPbSLQNQlsvtHVBW9sx2WMxLM/oNsgvMvzl0QDCjCDMRoSZ
RJgtCDOLMDsQZjfC7EOY/QjzLMI8V6stoHGYdC8yTjtJ1QypGidVg4xfL6lq
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
0f22WDGdLR/0l2+Y+rc/uMr3t3jlbOLHXrKT385C7Ql+7GEl6d8/rietD0O2
Ysi2DNmRIeu+Fre+fxd7pmHBNG4y5FsM+Q5D/uFrFu86i3eBxTvDUR5n8Xr+
+nG1mcphSTVnqNYM1Y6hOjFUV4aqvyO2nt9I/9It8hVDvc1Q/36Hp6A3Watr
rNV51uo0a3WMtfrrx+n4cUcl2YI52jBHe+bozBw5UWfDt2JNzKqbquVr5vjt
XRf57jYvr26wNldYm3OszSntRJWg3vnN1L46GeOVMz1RfZibFXOzZW6OzE33
o1j1vSNvvZ8h3zG3uz+4yK+37OW+CbYu8WPOKP16v72Wb5cIc+ZkzZzsmJPT
92Lv+r1Y6L+Vb5nT9786yE/fOcu9rxn3dcZ94f98eyzfHmbBXGyYiz1zcf5R
bN2+k4yRb8kd5vLDz07y8x3Ge5PxXmO85xnvSSVV+3ZnDv742iiz8xJiySxs
mYXDt+Ls8qNYs1o1y2vk78ziRzL1y21GeoORXmGk5xjpcZ40985htvbVvjZY
uSo+5py/Nedv94tYOf2kvZHjF87/Hz9Q/lt8q4lvvago6dr32NUalc/Fy4KT
tvlO7O1/FQvnu3KXk/6VcNz/jll9zcl+/uCf2xvDlYtr/cw4UUtO1PYHsXX4
VXsDwk+c6L2fWaU7zOcrvuWq8p/fY/I148ysODO7u2Lt+LM8Vf+U/Hyfw7rL
UG4zlBsMhe8J7T2jR7Sv1rUG5VtxtPhZrGzuy77DWfL7P/jxP/BPbynKAO3f
2Bg9lFtr3cxYMkuO3va+/OOflvLHr5zp95zprQf/zDqHf2bSmXHEVvcli5f9
93+3Mv3rZ470W0XJ+o+HczbnCK1/k6eff1p+u8/D3eXf8HC911ZljvbVwuii
/LjWyuwP0+49RbVyT8nt/c85DsovJnOzf5n+/BcH+ctf/7nWRrknOQMPrpU/
OKYflZx//5BaK+W+aU71S+oPiex9iPvaV3Ojoojy1/9V9f4/+fdy/3/9b6XP
/wCRylgL\
\>"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p31m\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {0.8660254037844386, -0.5}},
              {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2]}}, {{{
              0.3333333333333333, 0}, {0, 0.3333333333333333}}, {0.25, 
             0.14433756729740646`}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{1,
              0}, {0, -1}}, {0, 0}}, {{{-0.5, 0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{-0.5, 
             0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{1, 0}, {
             0, -1}}, {-1, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{1, 0}, {0, -1}}, {-1, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0.5, 0.8660254037844386}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p3m1\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 3], 0}, {0, Rational[1, 3]}}, {
             Rational[1, 3], 0}}, {{{0.3333333333333333, 0}, {
              0, 0.3333333333333333}}, {0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {0.8660254037844386, -0.5}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p6 p\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             0, Rational[1, 4]}}, {{{0.5, 0}, {0, 0.5}}, {0, 0.25}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[-1, 2], Rational[-1, 2]}, {
              Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {0, 0}}, {{{-0.5, -0.5}, {
             0.2886751345948129, -0.2886751345948129}}, {0, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p6 e\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 2], 0}, {0, Rational[1, 2]}}, {
             Rational[1, 3], 0}}, {{{0.5, 0}, {0, 0.5}}, {
             0.3333333333333333, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], Rational[-1, 2]}, {
              Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2] 
               3^Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[-1, 2]}}, {{{
             0.5, -0.5}, {-0.2886751345948129, -0.2886751345948129}}, {0.5, 
             0.2886751345948129}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {-1, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {
             Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{{
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {
             Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}}, {{{{1, 0}, {
             0, 1}}, {-1, 0}}, {{{0.5, -0.8660254037844386}, {
             0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0.5, 
             0.8660254037844386}}, {{{0.5, 
             0.8660254037844386}, {-0.8660254037844386, 0.5}}, {-0.5, 
             0.8660254037844386}}}]], 
         NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}]]}}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p6m\"\>", ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[
           PolygonBox[{{-0.025, -0.3}, {-0.025, 0.3}, {0.025, 0.3}, {0.325, 
            0.19999999999999998`}, {0.025, 0.09999999999999998}, {
            0.025, -0.3}}], 
           NCache[{{{Rational[1, 4], 0}, {0, Rational[1, 4]}}, {
             Rational[1, 3], Rational[1, 6] 3^Rational[-1, 2]}}, {{{
              0.25, 0}, {0, 0.25}}, {0.3333333333333333, 
             0.09622504486493763}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}], ",", 
     GraphicsBox[{{
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {0, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{1, 3^Rational[1, 2]}, {
          1, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {1, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{2, 3^Rational[1, 2]}, {
          2, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {2, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{3, 3^Rational[1, 2]}, {
          3, 1.7320508075688772`}]]}, {
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], {3, 0}], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{
          Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
          0.8660254037844386}]], 
        GeometricTransformationBox[
         GeometricTransformationBox[
          GeometricTransformationBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}},
            VertexColors->{
              RGBColor[0, 0, 1], 
              RGBColor[0, 1, 0], 
              RGBColor[1, 0, 0]}], 
           NCache[{{{Rational[1, 2], 0}, {
              0, Rational[1, 2] 3^Rational[-1, 2]}}, {
             Rational[-1, 2], 0}}, {{{0.5, 0}, {
              0, 0.2886751345948129}}, {-0.5, 0}}]], 
          NCache[{{{{1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 0}}, {{{
             1, 0}, {0, -1}}, {0, 
             0}}, {{{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
              Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{-1, 0}, {0, 1}}, {0, 
             0}}, {{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[1, 2]}}, {0, 
             0}}, {{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
              Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {0, 
             0}}}, {{{{1, 0}, {0, 1}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-1, 0}, {0, -1}}, {0, 
             0}}, {{{-0.5, 
             0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 0}}, {{{
             0.5, 0.8660254037844386}, {-0.8660254037844386, 0.5}}, {0, 
             0}}, {{{1, 0}, {0, -1}}, {0, 0}}, {{{0.5, 0.8660254037844386}, {
             0.8660254037844386, -0.5}}, {0, 0}}, {{{-0.5, 
             0.8660254037844386}, {0.8660254037844386, 0.5}}, {0, 0}}, {{{-1, 
             0}, {0, 1}}, {0, 
             0}}, {{{-0.5, -0.8660254037844386}, {-0.8660254037844386, 
             0.5}}, {0, 0}}, {{{
             0.5, -0.8660254037844386}, {-0.8660254037844386, -0.5}}, {0, 
             0}}}]], NCache[{4, 3^Rational[1, 2]}, {
          4, 1.7320508075688772`}]]}}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.949447006622439*^9},
 CellLabel->
  "Out[534]=",ExpressionUUID->"b9251ad2-4015-4250-9a43-3acb6273ea27"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Old: Sampled Image", "Section",
 CellChangeTimes->{{3.9494376954768047`*^9, 3.949437695911248*^9}, {
  3.949443059112653*^9, 3.949443064190608*^9}, {3.949443164702984*^9, 
  3.949443166540328*^9}},ExpressionUUID->"6614310a-1f75-4006-9b02-\
9d92630381bf"],

Cell["\<\
Makes an image from another image by tiling the original image using various \
symmetries.

TileImage[center_,tlfunc_,tlfparams_,nsamps_,img_]
Args:
Center for the transformation (horizontal, vertical)
Transformation function on pixel coordinates
Args parameters coords - returns new coords
Parameters for that function
Number of samples per pixel (at least 1: more is smoother but more \
time-consuming))
Mma image object

Returns transformed image

Rosette[center_,params_,nsamps_,img_]
Args:
Center
Params: list of
- Starting angle in radians
 - Number of divisions
 - Whether cyclic (False) or dihedral (True)
Number of samples per pixel
Mma image object

Returns transformed image

Types: C(n), D(n)

Frieze[center_,params_,nsamps_,img_] 
Args:
Center
Params:
- Type: 1 to 7
- Starting angle in radians
- Length of repeat
- Starting angle of second line in radians (only for 1, 5)
Number of samples per pixel
Mma image object

Returns transformed image

Types: p1, p11m, p11g, p1m1 p2, p2mm, p2mg

Wallpaper[center_,params_,nsamps_,img_]
Args:
Center
Params:
- Type: 1 to 17
- Starting angle in radians
- Length of repeat
- Starting angle of second line in radians (1, 2, 5, 9)
- Length of second repeat (1 to 4, 6 to 8)
Number of samples per pixel
Mma image object

Returns transformed image

Types: p1, p2, pm, pg, cm, pmm, pmg, pgg, cmm, p4, p4m, p4g, p3, p3m1, p31m, \
p6, p6m

LogSpiral[center_,params_,nsamps_,img_] 
Args:
Center
Params
- Starting angle in radians
- Starting radius
- Pitch
Number of samples per pixel
Mma image object

Returns transformed image\
\>", "Text",
 CellChangeTimes->{{3.949441244274989*^9, 
  3.949441246188308*^9}},ExpressionUUID->"1ea8f8bf-8020-4bf2-8eb8-\
94128a533edc"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Creates", " ", "an", " ", "array", " ", "of", " ", "indices", " ", "and", 
   " ", "works", " ", "with", " ", "it"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"c25b2253-d238-48fb-97da-ef3fe3f2bdc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TileImage", "[", 
   RowBox[{
   "center_", ",", "tlfunc_", ",", "tlfparams_", ",", "nsamps_", ",", 
    "img_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "srcimg", ",", "srcdata", ",", "dstdata", ",", "nh", ",", "nv", ",", 
      "nhxt", ",", "nvxt", ",", "ixs", ",", "tfct", ",", "clpf", ",", 
      "prfc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Need", " ", "to", " ", "reflect", " ", "the", " ", "image", " ", "to", 
      " ", "count", " ", "the", " ", "center", " ", "from", " ", "the", " ", 
      "bottom", " ", "instead", " ", "of", " ", "from", " ", "the", " ", 
      "top"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"srcimg", " ", "=", " ", 
      RowBox[{"ImageReflect", "[", 
       RowBox[{"Image", "[", 
        RowBox[{"img", ",", "\"\<Real\>\""}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"srcdata", " ", "=", " ", 
      RowBox[{"ImageData", "[", "srcimg", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Horizontal", ",", " ", 
       RowBox[{"then", " ", "vertical"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nh", ",", "nv"}], "}"}], " ", "=", " ", 
      RowBox[{"ImageDimensions", "[", "srcimg", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"For", " ", "each", " ", "destination", " ", "pixel"}], ",", 
       " ", 
       RowBox[{
        RowBox[{"its", " ", "source"}], "-", 
        RowBox[{"pixel", " ", 
         RowBox[{"index", ".", " ", "Indexed"}], " ", "vertical"}]}], ",", 
       " ", 
       RowBox[{
        RowBox[{"horizontal", ".", " ", "Made"}], " ", "oversized", " ", "to",
         " ", "do", " ", "antialiasing"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nhxt", " ", "=", " ", 
      RowBox[{"nsamps", "*", "nh"}]}], ";", " ", 
     RowBox[{"nvxt", " ", "=", " ", 
      RowBox[{"nsamps", "*", "nv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", 
            RowBox[{"Range", "[", "nvxt", "]"}], ",", 
            RowBox[{"Range", "[", "nhxt", "]"}]}], "]"}], " ", "-", " ", 
          "0.5"}], ")"}], "/", "nsamps"}], " ", "+", " ", "0.5"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Reverse", "[", "#", "]"}], "-", "center"}], "&"}], ",", 
        "ixs", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"tlfunc", "[", 
          RowBox[{"tlfparams", ",", "#"}], "]"}], "&"}], ",", "ixs", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Reverse", "[", "#", "]"}], "+", "center"}], "&"}], ",", 
        "ixs", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{"Round", "[", "ixs", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ixs", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "nv"}], "}"}]}], "]"}], ",", 
           RowBox[{"Clip", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "nh"}], "}"}]}], "]"}]}], "}"}], "&"}], ",", 
        "ixs", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Get", " ", "the", " ", "new", " ", "image"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"dstdata", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"srcdata", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
        "ixs", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Undo", " ", "that", " ", "reflection"}], ",", " ", 
       RowBox[{"get", " ", "to", " ", "the", " ", "original", " ", "size"}]}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageReflect", "[", 
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"Image", "[", "dstdata", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"nh", ",", "nv"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[356]:=",ExpressionUUID->"7aad3653-0373-487d-80a4-73a8a72b25b6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"The", " ", "original", " ", 
   RowBox[{"version", ":", " ", 
    RowBox[{"point", " ", "by", " ", "point"}]}]}], " ", "*)"}]], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"55fffe85-8740-4048-90ae-8e4a822c67c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OldTileImage", "[", 
   RowBox[{
   "center_", ",", "tlfunc_", ",", "tlfparams_", ",", "nsamps_", ",", 
    "img_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "srcimg", ",", "srcdata", ",", "dstdata", ",", "zero", ",", "nsr", ",", 
      "cv", ",", "ch", ",", "nv", ",", "nh", ",", "iv", ",", "ih", ",", "jv", 
      ",", "jh", ",", "kv", ",", "kh", ",", "lv", ",", "lh", ",", "prs"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ch", ",", "cv"}], "}"}], " ", "=", " ", "center"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Need", " ", "to", " ", "reflect", " ", "the", " ", "image", " ", "to", 
       " ", "count", " ", "the", " ", "center", " ", "from", " ", "the", " ", 
       "bottom", " ", "instead", " ", "of", " ", "from", " ", "the", " ", 
       "top"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"srcimg", " ", "=", " ", 
      RowBox[{"ImageReflect", "[", 
       RowBox[{"Image", "[", 
        RowBox[{"img", ",", "\"\<Real\>\""}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"srcdata", " ", "=", " ", 
      RowBox[{"ImageData", "[", "srcimg", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nh", ",", "nv"}], "}"}], " ", "=", " ", 
      RowBox[{"ImageDimensions", "[", "srcimg", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nsr", " ", "=", " ", 
      RowBox[{"1.0", "/", "nsamps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dstdata", " ", "=", " ", 
      RowBox[{
       RowBox[{"nsr", "^", "2"}], "*", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"kv", " ", "=", " ", 
             RowBox[{"iv", " ", "+", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"nsr", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "*", "jv"}], "-", "1"}], ")"}]}], "-", "1"}],
                 ")"}]}], " ", "-", " ", "cv"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"kh", " ", "=", " ", 
             RowBox[{"ih", " ", "+", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"nsr", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "*", "jh"}], "-", "1"}], ")"}]}], "-", "1"}],
                 ")"}]}], " ", "-", " ", "ch"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"prs", " ", "=", "  ", 
             RowBox[{"tlfunc", "[", 
              RowBox[{"tlfparams", ",", 
               RowBox[{"{", 
                RowBox[{"kh", ",", "kv"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lv", " ", "=", " ", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"prs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "cv"}], 
              "]"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"lv", " ", "=", " ", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"lv", ",", "1"}], "]"}], ",", "nv"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lh", " ", "=", " ", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"prs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "ch"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lh", " ", "=", " ", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"lh", ",", "1"}], "]"}], ",", "nh"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"srcdata", "[", 
             RowBox[{"[", 
              RowBox[{"lv", ",", "lh"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jv", ",", "nsamps"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"jh", ",", "nsamps"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"iv", ",", "nv"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ih", ",", "nh"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Undo", " ", "that", " ", "reflection"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ImageReflect", "[", 
      RowBox[{"Image", "[", "dstdata", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[358]:=",ExpressionUUID->"3c0e70f6-c5d9-495c-9783-67bf0b4c2fc0"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "rosette", " ", "groups"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[359]:=",ExpressionUUID->"14d0f404-ed1f-4e80-aacc-91673cc7ce40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RosetteTlf", "[", 
   RowBox[{"params_", ",", "pt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a0", ",", "n", ",", "cd", ",", "x", ",", "y", ",", "r", ",", "a"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a0", ",", "n", ",", "cd"}], "}"}], " ", "=", " ", "params"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", "pt"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
         RowBox[{"y", " ", "\[Equal]", " ", "0"}]}], ",", "0", ",", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "Pi"}], ")"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"a", "-", "a0"}], ")"}]}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"cd", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"a", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"a", " ", "=", " ", 
          RowBox[{"1", " ", "-", " ", "a"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"a0", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}], "/", "n"}], ")"}], "*", "a"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"r", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], ",", 
        RowBox[{"Sin", "[", "a", "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[360]:=",ExpressionUUID->"a54b0a9c-0bd8-4666-82b3-d9fa99ddacb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rosette", "[", 
   RowBox[{"center_", ",", "params_", ",", "nsamps_", ",", "img_"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"TileImage", "[", 
   RowBox[{
   "center", ",", "RosetteTlf", ",", "params", ",", "nsamps", ",", "img"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[361]:=",ExpressionUUID->"54ed6d16-6220-4b67-922f-c6d4362e8e92"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "lattice", " ", "groups"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[362]:=",ExpressionUUID->"97c70b11-d23a-4caa-80e4-29c200364bc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LatticeTlf", "[", 
   RowBox[{"params_", ",", "pt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lat", ",", "invlat", ",", "tlfunc", ",", "tlfparams", ",", "ptx"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lat", ",", "invlat", ",", "tlfunc", ",", "tlfparams"}], "}"}],
       " ", "=", " ", "params"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ptx", " ", "=", " ", 
      RowBox[{"invlat", ".", "pt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ptx", " ", "=", " ", 
      RowBox[{"tlfunc", "[", 
       RowBox[{"tlfparams", ",", "ptx"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lat", ".", "ptx"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"41ec2e59-28f3-4b60-925c-d1b24957b0c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LatticeTileImage", "[", 
   RowBox[{
   "center_", ",", "latparams_", ",", "tlfunc_", ",", "tlfparams_", ",", 
    "nsamps_", ",", "img_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a1", ",", "l1", ",", "a2", ",", "l2", ",", "lat", ",", "invlat", ",", 
      "ltfparams"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], " ", "=", " ", 
      "latparams"}], ";", "\[IndentingNewLine]", 
     RowBox[{"lat", " ", "=", 
      RowBox[{"1.0", "*", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l1", "*", 
            RowBox[{"Cos", "[", "a1", "]"}]}], ",", 
           RowBox[{"l2", "*", 
            RowBox[{"Cos", "[", "a2", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l1", "*", 
            RowBox[{"Sin", "[", "a1", "]"}]}], ",", 
           RowBox[{"l2", "*", 
            RowBox[{"Sin", "[", "a2", "]"}]}]}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invlat", " ", "=", " ", 
      RowBox[{"Inverse", "[", "lat", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ltfparams", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"lat", ",", "invlat", ",", "tlfunc", ",", "tlfparams"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"TileImage", "[", 
      RowBox[{
      "center", ",", "LatticeTlf", ",", "ltfparams", ",", "nsamps", ",", 
       "img"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"9d0ab4db-b016-498c-860d-a7abc66c00c6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "frieze", " ", "groups"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[365]:=",ExpressionUUID->"bc6fdcab-3a44-47d5-a585-e30590bc65f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FriezeTlf", "[", 
   RowBox[{"params_", ",", "pt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", "pt"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"type", " ", "=", " ", "params"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "type", ",", "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
       "Null", ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", "<", " ", "0"}], ",", " ", 
         RowBox[{"y", " ", "*=", " ", 
          RowBox[{"-", "1"}]}]}], "]"}], ",", "\[IndentingNewLine]", "3", ",",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"y", " ", "*=", " ", 
          RowBox[{"-", "1"}]}]}], "]"}], ",", "\[IndentingNewLine]", "4", ",",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"x", " ", "*=", " ", 
          RowBox[{"-", "1"}]}]}], "]"}], ",", "\[IndentingNewLine]", "5", ",",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", "<", " ", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}], ";", " ", 
          RowBox[{"y", "*=", " ", 
           RowBox[{"-", "1"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", "6", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", "<", " ", "0"}], ",", " ", 
          RowBox[{"y", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", "7", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", "<", " ", "0"}], ",", "  ", 
          RowBox[{
           RowBox[{"x", " ", "+=", " ", 
            RowBox[{"1", "/", "2"}]}], ";", 
           RowBox[{"x", " ", "=", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[366]:=",ExpressionUUID->"f41a1521-7e66-4df6-85d5-afab34d15607"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Frieze", "[", 
   RowBox[{"center_", ",", "params_", ",", "nsamps_", ",", "img_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", "a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"type", " ", "=", " ", 
      RowBox[{"First", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], ",", "type"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"type", ",", "a1", ",", "l1", ",", "a2"}], "}"}], " ", "=", 
        " ", "params"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
         "type"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type", ",", "a1", ",", "l1"}], "}"}], " ", "=", " ", 
         "params"}], ";", 
        RowBox[{"a2", " ", "=", " ", 
         RowBox[{"a1", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}]}]}], ",", "\[IndentingNewLine]", "True", 
       ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"l2", " ", "=", " ", "l1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"LatticeTileImage", "[", 
      RowBox[{"center", ",", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], ",", 
       "FriezeTlf", ",", "type", ",", "nsamps", ",", "img"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[367]:=",ExpressionUUID->"d2c494a0-0133-4eb6-8c9f-10461367edaf"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "wallpaper", " ", "groups"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[368]:=",ExpressionUUID->"635fc4a4-b766-4f4f-a2e7-10ff93d24e90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WallpaperTlf", "[", 
   RowBox[{"params_", ",", "pt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", "pt"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"type", " ", "=", " ", "params"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "type", ",", "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
       "Null", ",", "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}], ";", " ", 
          RowBox[{"y", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", "3", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"y", " ", "*=", " ", 
          RowBox[{"-", "1"}]}]}], "]"}], ",", "\[IndentingNewLine]", "4", ",",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"x", " ", "+=", " ", 
           RowBox[{"1", "/", "2"}]}], ";", 
          RowBox[{"x", " ", "=", " ", 
           RowBox[{"Mod", "[", 
            RowBox[{"x", ",", "1"}], "]"}]}], ";", 
          RowBox[{"y", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", "5", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", "x"}], ",", " ", 
         RowBox[{
          RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
          RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
          RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "6", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"y", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", "7", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"x", " ", "+=", " ", 
            RowBox[{"1", "/", "2"}]}], ";", " ", 
           RowBox[{"x", " ", "=", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"x", " ", "*=", " ", 
           RowBox[{"-", "1"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", "8", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{
           RowBox[{"x", " ", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", 
           RowBox[{"x", " ", "=", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
           RowBox[{"y", " ", "=", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"y", ",", "1"}], "]"}]}]}]}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], " ", "<", " ", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{
           RowBox[{"x", "+=", " ", 
            RowBox[{"1", "/", "2"}]}], ";", " ", 
           RowBox[{"y", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "-", " ", "y"}]}]}]}], "]"}], ";", 
        " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "-", "y"}], " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{
           RowBox[{"x", " ", "-=", " ", 
            RowBox[{"1", "/", "2"}]}], ";", " ", 
           RowBox[{"y", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "-", " ", "y"}]}]}]}], "]"}]}], 
       ",", "\[IndentingNewLine]", "9", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], " ", "\[GreaterEqual]", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
           RowBox[{"x", " ", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", " ", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "10", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", " ", ">", " ", 
            RowBox[{"1", "/", "2"}]}], ",", 
           RowBox[{
            RowBox[{"x", " ", "=", " ", 
             RowBox[{"1", "-", "x"}]}], ";", " ", 
            RowBox[{"y", " ", "=", " ", 
             RowBox[{"1", "-", "y"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
            RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
            RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
            RowBox[{"x", " ", "*=", " ", 
             RowBox[{"-", "1"}]}]}]}], "]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", " ", ">", " ", 
            RowBox[{"1", "/", "2"}]}], ",", " ", 
           RowBox[{
            RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
            RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
            RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
            RowBox[{"y", " ", "*=", " ", 
             RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "11", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"x", " ", ">", " ", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"x", " ", "=", " ", 
              RowBox[{"1", "-", "x"}]}], ";", " ", 
             RowBox[{"y", " ", "=", " ", 
              RowBox[{"1", "-", "y"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
             RowBox[{"x", " ", "*=", " ", 
              RowBox[{"-", "1"}]}]}]}], "]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"x", " ", ">", " ", 
             RowBox[{"1", "/", "2"}]}], ",", " ", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
             RowBox[{"y", " ", "*=", " ", 
              RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"y", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", " ", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "12", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"x", " ", ">", " ", 
             RowBox[{"1", "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"x", " ", "=", " ", 
              RowBox[{"1", "-", "x"}]}], ";", " ", 
             RowBox[{"y", " ", "=", " ", 
              RowBox[{"1", "-", "y"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
             RowBox[{"x", " ", "*=", " ", 
              RowBox[{"-", "1"}]}]}]}], "]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"x", " ", ">", " ", 
             RowBox[{"1", "/", "2"}]}], ",", " ", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
             RowBox[{"y", " ", "*=", " ", 
              RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], ";", " ", 
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"y", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], " ", ">", " ", 
           RowBox[{"1", "/", "2"}]}], ",", " ", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "-", "x"}]}], ";", " ", 
           RowBox[{"y", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "-", "y"}]}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "13", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"y", " ", ">", " ", "x"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", "x"}], "+", "y"}], " ", "<", " ", "1"}], ",", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", 
              RowBox[{
               RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}], ";", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "+", 
              RowBox[{"2", "y"}]}], " ", ">", " ", "2"}], ",", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", 
              RowBox[{
               RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "+", 
              RowBox[{"2", "y"}]}], " ", "<", " ", "1"}], ",", " ", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
             RowBox[{"x", " ", "=", " ", 
              RowBox[{
               RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", " ", 
             RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", "x"}], "+", "y"}], " ", ">", " ", "2"}], ",", 
            RowBox[{
             RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
             RowBox[{"y", " ", "=", " ", 
              RowBox[{
               RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", " ", 
             RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "14", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", "<", " ", "1"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", "<", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "15", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", "<", " ", "1"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", "<", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
           RowBox[{"x", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       "16", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", "<", " ", "1"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", "<", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], ">", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"x", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       "17", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", "<", " ", "1"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"2", "y"}]}], " ", "<", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
              RowBox[{"x", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "1"}]}], ";", 
              " ", 
              RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"2", "x"}], "+", "y"}], " ", ">", " ", "2"}], ",", 
             RowBox[{
              RowBox[{"z", " ", "=", " ", "y"}], ";", " ", 
              RowBox[{"y", " ", "=", " ", 
               RowBox[{
                RowBox[{"-", "x"}], "-", "y", " ", "+", " ", "2"}]}], ";", 
              " ", 
              RowBox[{"x", " ", "=", " ", "z"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "+", "y"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}], ";", " ", 
           RowBox[{"x", "*=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{"y", " ", "*=", " ", 
            RowBox[{"-", "1"}]}]}]}], "]"}], ";", 
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"y", ",", "1"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", " ", ">", " ", "x"}], ",", " ", 
          RowBox[{
           RowBox[{"z", " ", "=", " ", "x"}], ";", " ", 
           RowBox[{"x", " ", "=", " ", "y"}], ";", " ", 
           RowBox[{"y", " ", "=", " ", "z"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"x", ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"f7552269-f3ad-4d77-8171-aef521b07c0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Wallpaper", "[", 
   RowBox[{"center_", ",", "params_", ",", "nsamps_", ",", "img_"}], "]"}], 
  " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"type", ",", "a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"type", " ", "=", " ", 
      RowBox[{"First", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "type"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"type", ",", "a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], 
        " ", "=", " ", "params"}], ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
         "type"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type", ",", "a1", ",", "l1", ",", "l2"}], "}"}], " ", "=", 
         " ", "params"}], ";", 
        RowBox[{"a2", " ", "=", " ", 
         RowBox[{"a1", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "9"}], "}"}], ",", "type"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type", ",", "a1", ",", "l1", ",", "a2"}], "}"}], " ", "=", 
         " ", "params"}], ";", 
        RowBox[{"l2", " ", "=", " ", "l1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "11", ",", "12"}], "}"}], ",", "type"}], "]"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type", ",", "a1", ",", "l1"}], "}"}], " ", "=", " ", 
         "params"}], ";", 
        RowBox[{"a2", " ", "=", " ", 
         RowBox[{"a1", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}]}], ";", " ", 
        RowBox[{"l2", " ", "=", " ", "l1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14", ",", "15", ",", "16", ",", "17"}], "}"}], 
         ",", "type"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type", ",", "a1", ",", "l1"}], "}"}], " ", "=", " ", 
         "params"}], ";", 
        RowBox[{"a2", " ", "=", " ", 
         RowBox[{"a1", " ", "+", " ", 
          RowBox[{"Pi", "/", "3"}]}]}], ";", " ", 
        RowBox[{"l2", " ", "=", " ", "l1"}]}], ",", "\[IndentingNewLine]", 
       "True", ",", 
       RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"LatticeTileImage", "[", 
      RowBox[{"center", ",", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "l1", ",", "a2", ",", "l2"}], "}"}], ",", 
       "WallpaperTlf", ",", "type", ",", "nsamps", ",", "img"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[370]:=",ExpressionUUID->"cd677f3b-56e0-48d5-a653-54573ed2ea50"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "the", " ", "logarithmic", " ", 
   RowBox[{"spiral", " ", "--"}], " ", "just", " ", "do", " ", "p1", " ", 
   "for", " ", 
   RowBox[{"now", ".", " ", "Can"}], " ", "use", " ", "other", " ", 
   "wallpaper", " ", "groups", " ", "if", " ", 
   RowBox[{"desired", "."}]}], " ", "*)"}]], "Input",
 CellLabel->
  "In[371]:=",ExpressionUUID->"804640ba-6210-45e6-8831-2577e1d90f65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogSpiralTlf", "[", 
   RowBox[{"params_", ",", "pt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a0", ",", "r0", ",", "pitch", ",", "rptang", ",", "x", ",", "y", ",", 
      "r", ",", "a", ",", "lra", ",", "n", ",", "rx"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a0", ",", "r0", ",", "pitch", ",", "rptang"}], "}"}], " ", 
      "=", " ", "params"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "  ", "=", " ", 
      RowBox[{"pt", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"pt", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}]}], ";", " ", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "\[Equal]", "0"}], "&&", 
          RowBox[{"y", "\[Equal]", "0"}]}], ",", "0", ",", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "]"}], " ", "-", " ", "a0"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"r", "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"r0", "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "a0", "]"}], ",", 
           RowBox[{"Sin", "[", "a0", "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lra", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"r", "/", "r0"}], "]"}], "/", "pitch"}], "  ", "-", " ", 
       "a"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Floor", "[", 
       RowBox[{"lra", "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lra", " ", "-=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", "Pi"}], ")"}], "*", "n"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "+=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", "Pi"}], ")"}], "*", "n"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "-=", " ", 
      RowBox[{"rptang", "*", 
       RowBox[{"Floor", "[", 
        RowBox[{"a", "/", "rptang"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rx", " ", "=", " ", 
      RowBox[{"r0", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"pitch", "*", 
         RowBox[{"(", 
          RowBox[{"lra", "+", "a"}], ")"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", " ", "+=", " ", "a0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rx", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], ",", 
        RowBox[{"Sin", "[", "a", "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[372]:=",ExpressionUUID->"faa02330-834e-4a4e-8d86-773a7e12f50f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogSpiral", "[", 
   RowBox[{"center_", ",", "params_", ",", "nsamps_", ",", "img_"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"TileImage", "[", 
   RowBox[{
   "center", ",", "LogSpiralTlf", ",", "params", ",", "nsamps", ",", "img"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[373]:=",ExpressionUUID->"ee919db3-2014-426d-8fef-93b3c86d3d0a"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Test", " ", "images"}], " ", "*)"}]], "Input",
 CellLabel->
  "In[374]:=",ExpressionUUID->"f0367dd4-e43e-4994-9733-711506b9dbe4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rose", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<ExampleData/rose.gif\>\"", "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[375]:=",ExpressionUUID->"8d649079-d18c-4d80-8c9c-8f7c5393a5cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ImageData", "[", "rose", "]"}], "]"}]], "Input",
 CellLabel->
  "In[376]:=",ExpressionUUID->"3fdb4462-05f8-4f39-a129-60bb85c4d36f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"164", ",", "223", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.947491845589875*^9, 3.947509719764078*^9, 
  3.94761332279778*^9, 3.94766657465272*^9, 3.9480713302103148`*^9, 
  3.948985537245387*^9, 3.949437449501401*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"5683d43e-e5f5-4543-9b22-e7b3d7cfb421"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lena", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<ExampleData/lena.tif\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[377]:=",ExpressionUUID->"45f09f40-2c10-4e48-841e-fe283fd4ea17"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxUugVQXHn6/Z3ZkcxESHB3dw/BXRp3dw1uwd3dncbd3V0baKCVdoHGCURG
dnZndmfy3sz8auv/Uqe/dZu6VFH14ZznOZfm9420DfzHo0ePYr8HDlufBN2Y
GJ8ku5fAG4eI2OCgiAB/UMTbgKCAmNe+XwPffAu86oHXl+tPXb6/DoY8dAZQ
qlxQOVYjzqJ50o+6TNhgsbrn5U7vWrzvO32vOwLu2r1/bvP6VO9EK7SAROk2
mIpESTFGSrMkv+bN1RIqNRAtMhQHVG4kUWUiWWcq1Wgq2QwS67KUGrKXH3dW
nnFVmfd4PeelueirveKrs+6juemlvu2jseuvteOvPe/2GhZvh8/yajOT6PO3
7gu06wuy7wt26g5yaAu0G4j1Hk990//Wu++t92RG6HhGyGhK1Fxe6kxhxnx1
4WJTxUpX485E7/b0IGRh7HBjDra9CNtdgh2MwQ8n4Idzx4dLKNgWDgMlnhzQ
UAd3qH3YeHfD26BkS70ee41JD8NBB40Jd91Zb/1JN61RZ7UhZ7VuR5U2e6VG
W/kaS9lWK5UJd/3dKGtcpiu5wINU6IHO9UDkeMGzfRBZPuh0L1Sq+0mOK7HI
C5/ngkizhKeYI1PNMekW+CwrbIbFSbrZSYYFOt3iKN3iOMMOnm6PyHA4SbfF
pJlhM40PUnWp3QGfz/o//3GAR3QZKLHSf/2Ijenpy5dMnBw8IjxCkjwcSvws
0mxP+ekf8zEz8rFz8LK94GF+xs34RJiDXpyHkf3FD7/2BP7aH3zV6I0pclqO
1CtWfZki8lWPmQA0Vp9UYH3f4vmp1++6M+CmzevHVvcPNQ7UfNPtSK16U5EI
CfoIaeZUdcF8PbEyY8lKC4UKC4UqU4VqU9laU5l6U8lWC+luW7lBJ6VRZ+UJ
J6VJ11dT7uqzXloLXporXuqb3hpb3urbvhrb/lrLPpq7keYTHmqdwP1BDt2+
1t3+tr1vHLuCHLqCHUfjfUfjfIZiPMbiPSeTfcYTvIbiQqbSEqaykmeLs5cb
Snf6WqBTg/vTo3sL49CVmaP1+cPNecj+4BFs4gSxiIOvEWDbVPQR7QRGPN4n
Hh+8vyATUdCG8vxc41elhkp1Fq+7HLT6HVXH3DVHXFT7HV51Oii3OijV2ylV
WiuCLVQm3PT3ou1I2Z5nRV6npZ7EIp+TXE9Ypsdxqhss0fkwzv4oyfYk2xWf
54bJsjtJt8GkW+MzbYhZtth0S1Sq2Um65Um6BSLDEp7hAM9yRmS5YLIcCZmW
1CwTar7FSaX9r/u1yNUSM21uxh8esdN/y8H4jJWBgZ+Tg5+VVYybRZKbXoT1
iSArnRgXhyAHJwfTDxyMP0jws6rLCHHSff/40aPfewJ/bPOl1XofZDq22skn
SD9LlXnRaSWzE2WAy7V43+r6c5/nTaffTZsnQPB9tT0lD7QVoVlnIhQm9jJU
kjlFTaAAIGgiWWGmVGmqWAlSrDSRrQTJ1JhIg63kuu2U+p1fDbmqjLi9+kvq
M15ac17qi55qm74aW75q2wGai+5KiES7zXBQj6P8qKdGj7N2t5POgIfRSIDl
SIjTaITrWLT7SLT76FvPmWTf2VTfqUSP+cTAxeQ382khK0VvN6pS91uLDvqr
oSONxzMd8KUB9PoIemsMDp87QS3jkatE2CoJtnWK3CcjD4hoOAGHOcGfwIl4
DI06XFkSZ2UYB1JPN1asc1DrdFTpd3rVZa/YbqsMdnhda6dWYanSBFIZd9Hf
j7QnZXnQirxoJV7UUj9CsR8y2/Mg3mEv0hISbroRCTpKtsfnehJzXbHpdphU
a3KWPSXbgZBug06xwKRZnaRaYjMtMJk2yGwXZI4HJteVlOtAy7U+K7CjNgRs
VIcaKXPS/fCIh/UlO/33PPQ/SHIySnDSi3G+EOR4xvLyG07W5yL8HMKc7LzM
jLzszGL8XGoyIpKczMxAxqrJ/Kvd977OHVvgNBWin6PBGy/HkizH0mohB4k1
pRTbfWh1/rHL+a4bSFHPTy1uD1V2lFyTzXDNWpBQJJCiMmypGkKFBhJVZjKl
JgplxgoVIKUqU/kac4U6c/kGc9k2G4Uex1f9birDHqpDnqqjHhqzPjpznpoA
wS1fwIaqaz6vISG6hCy3aR+NbieFdhvpflulcTetcS+DCT/QZIjdSLDdUIj9
aJTbWIzHZKL3QkbgXLr/QlrIXGrwTEbIUnHsQln8cn3mWnvRzlDt8UI3anMU
vTt5sjeDPVjCHCxhoctfPHiyTcAdnGCh0OMdyBHkCI1Ak8iUq5sf7++vMMiV
roYIA8UME5km+1fttgrAH16zuUKjlWqNlWYpSA1sqjblanwY40zN9b4s9b0s
8z0t86WUBuAKfA8THNb89WddVKaASIkAYbPcKPlehEwnXIYtQJCa40jKtMOl
WwMCIJIzzAmZVqgcJ0SuBzrfg5jvepbveF3hTWmI9FZmZ3v2DSvrC6aXL9jo
noqy0CnxvJBg+U6C/TEv22NWlh+4eJgF+TmF2Jj5megFebhfy8uJc7EwPnpk
KMYzX5Pzqd7ltsJ5LwHUZCsdK8uSqMyfqsTbZqkMTbCiljq8b7b/5W+CHd5/
EyTnmmyEaVQbC0R8IcierC6Qpy9aZSpTBlIqM1GqMAGcKF9tJl9rId9oqdBm
p9zj8hogOOCuMuihOuGlvRhgsOCts+ipvumrvub1atVbZS9cfyVIu89RrtNB
vs1WdtpBacVHe9Jda9RdZzbYaiLYduiNzXiM+1CYU3+402Siz1Syz2RywFRq
0HR22EJx7Gx5/FJzzlpXyd5kE2J9CLM3jdifhUNmcGsLxO0V8vEWHr0NQ65t
HS9twNcO8YfYCyLt7vbu4dO7hx/v//X7r3/8+fmPX/vL0t1lWAvNZJpt5OtM
JBtM5BrM1CpAWkVGGo0mquPORtAoJ0qO13mxN+DB01Kf01J/cnEAMtVlyUuz
01CwyUh4zFXlMM6OlONJzHIlZjoSM+wADwIcSRm2xCw7fIbtaZoZCQjVHHtY
risqzx2X635e7PmuIbzcXFr+ySMeFjo6RgZWZnYhVg5JtheKbN/Is34tyvyI
jeEf/CJsvMLcLCz0PAx0wiz0SnLy+lqaHE9/UOPn6EoJR/fXfSxyPctxGPVW
TNdijFNmSFJmzVNm7TOTgkWbUvLtr5tdH/p8PrYFfej0vet0o9Va47MNtgNV
mgwFIqQZgxW4E7QkCnXkqnWka0CyNSCZKhNpQMAcrDOTbrKQ7rSTH3JWHnVV
HndVmnBTmnFTX/bVnXFTXfHXWfDRXPTXXgs2XAk26HVQbLdT6HJ4NeihO+oH
GvEFDfmCRgLMh4Mse/1N+wIthkNtxyIcpqLdFhJ8ZuO8phO9Z5N9F9MDl9ID
13LC9quTj9vzMaO1pJVu3Hoffm/sBDJOhK7DNpbhu5vrK4ura6soHJ50eU17
90B7eDi9u6bdXp3fXl7d39/+9OMvn/88fXcR6OPgriZWbKTYpCPebSzbYCSf
a/Yq2ex1oYVcv7vGXoQ5JcPpvMSLWO6BKwc8GHRWGHqS6rP8xjRbgyNI7EWB
jvhSkB0+wf801fcszZ2Qak3KtcHnWODSrajp9pREJ3K8Ly7D46TABpWnSysE
XWbbXldGjUa7S738lunZVxz033HTfSfCzCzNwSHHxSnFxiBK/0yQ7nsRJjop
fm5uNiZmJkYOHh5BcTEVVWUZCX5VCa7SSKf95iR4c+x1tuNemE6FAftb5Wfp
WlyZmry5Smy9ZlJH0aAvBJtc73u8PrYFvu/wu+t0p9VZ43MMtoNeNxsLR8my
hCjyJGhLFunKV+vIVBlLVYOk68zkvsgUmIOSQBx12SkCm8yIi+K4i+LfBBe9
tec91Bd9tJb8tFeD9ACCg06KYDPJDjuFAXfNfjfdQS+jIR+TsUCLkSCLHh/j
Dk+DHn+z0XD76bdu8wney8n+S0l+80leC8neK+n+q5lBWwWR0Nq0w5ZcRH8F
eqYNtdKN3BwiwRZRO0uLowPrC9NYNOL65vru/Sfq9S356pp6e0O9vjy9OgcI
0oDrm5uLnz7++vmPY+imt6FKsCJfub50la54pbF8oblqsolSHki611V9L9yC
muF0WeJNqfTCV/iRSgJPC0LRqd7LwWZZGpxGjI+8hBjANnq74e74JJ/zHF9C
pi0uywKXbY7LsCal2JATnfBJXrh0V2QKiJRjcpFveVcRcFwQaiXExPrd10zP
vwNSVIyZTpGPV5aLS5aTQ4KFQfDFUxGm5xJczLxM9GwMdCKCgrKyCsoqr3Ve
K+krSBZE+UxVJq6UhWyWB5y8NR20EctQeZ6szpylJ5CmzpOtxNZlKgmNNvlC
sMH5XafHh/agB6BQdHhc1NkQcoy2Al83GQkBi+gXD2pLFusp1OjKVhgCPULq
b4K1IGmAYIu1fKetYr+D/LAzgE95yuPVnIfmkrf2io/OorfWRpDBRpD+iJNi
h6Vkj71Sh71ir4vagLvusI9Jn6dhn5dhu4dem7tun78ZYMDxKKfpOI/FRF8A
H3CupfttZQfu5oVs54Vs5UdslcTt1Gfsd5aczHedbA7vL/UtjbZM97Yidtfu
Lqi3V7TzCxr57Bx/do6hnlJvrs9vr0lnFAqNSr24uLh/f/Hp48d//evz59+W
Blrd5PmilHkztEQytcWy9ORS9GTzjKX6XDUPIqxomc5Xpd7UKm9CpR+5JOi8
OAKXFbAdZVtiIqrG8LXWy28SVCSHvawOY9woub6kfEdMphlAkJBpQ0iyJic7
AgbEZzidZdqeZ1hdFTjRKiOSDWSEnz4S52fnYnnJz/Bclo1Jmo0VMKAkKws/
3VNh5pfyQlxCHIy8rAy8bExiAoJykrIaqhpW6qr5Qb4jJanrTZkzeX6zuW6z
Xmol6syprxmzjYTTdAST1bgzldnaTSX2I42IBTZXDY537a4f2gLv2/3u2r0u
6x0IOaDNALVGQ8FwGeY3ilyJuhJlhoqNhgqVRpKVxpJfnGgCJCoQpFLNVnLt
1vJ99oojLsqT7q9nPFRnXTXm3NWXvDWXfbRX/fXmPNR7bWS7bWSBDacXWOPd
1Ie99YZ9DHvc9ductZod1Tu9DMYj7ceiHUYjHabj3JfTAtcyg9ezQg7y3uzn
Be9kBa5n+K/mBC/nR23XpaPHwai5nrXh5sHW0vW5gSsy+oaGvzglkAnYy6uL
q9tb6vnlCYGIJZKIZDKZQr6+uby4vzu7vb98//H64cOff/z5xy+fihJCdAVf
+Lzmi9YUSdWRTteSzDOS7nPXPo60Oc9wuS7xPq0AgtSbVOh3URSKzw7YjLYt
MROTZnsh+P1XzuJ8tfYmi+GO8BRnSr4jMdOclAXImpRsS0lxRGfbkdJt79Ic
3qU6f6qM7Qu2FXv+FRPdEw5OVtaXdAA1RU4WOXZWeQ42/hdPuel+EOFmEeZh
5mChE+Ll5Odgl+IX1FFSsdIxKvb2nMlLX63MmS+OmcjxOgBH1xsLpSvSJ6uy
ZxkCv7NwupZQpgpXC0hsO1wfl2t1Ve943+b6viXwXZvfbYf3VYMzKc9sK0Ct
2VgsQpY1WIk7SVfyC0FjecCAFUCnAIqhiVSNmUyDhWzTlzos12uvNOr2espT
bdpDdc5dY8FTCwjS7RDQiq/uuKPymMvrQUeVPkeVAVf1YS/tER/9Pnedfi+D
Lg+9Li+DoWDLiSiHqTiXybeuswme80k+Cyl+K+lBhwDB7MDVZK/FVK/1/LCN
sjhoR9HRcMNAefpAQ9Hx5uw1GXlzir2gnFxQcWenxPPzUzyBgMETcEQiiUIh
U4Av8tkZBU8DLHlHvbi7uv5wc/fpl1/++e7qtL0hz1ZDxEGGNeKVULKqaI6B
VK+bNizK9iLd5arI86zCi1LlRy0JuC6NIGQHroVbFhgLS3Aw8vzwjT4XU6K2
Qq+X0U6sJSHL5jTbipplQUqzIKfYUVKdcdlW51l2d6kOn/LfnGSFOktzMn//
9bPvv2elZ5Lm5lHm55bjZJBnZxWie8r19LE4N6uEEDcHMx03OyMfJ6uciLC8
gKCmpEyqf8h0Tup6WdZ6Rdp4dhCkOQ7Zn5ahwpahzpmuJZChL5qhL5GuIZyl
wgM2FdsI08XmWF3VOj60ur1veXPX5n/d4XPd6ELKM98MUG8ykgiXYQtU4IzX
EivSk6nVl6oESVaCpICltNpMts5crsFCrslKrtVGoddRZcxdDWjr424qsx5q
C15a855aB1HWwEbaZykz5PBqwkOrx/5Vt5MKsLUOeur0ueuO+JsM+BkNBZlP
RzuOR9mPxzjMJ3utZgQupvgCEAEPrid5bCZ7LSV6zCV7LOcEz+VHrNRljFSk
zrZWUuDbQO+joA8p2CMaCXl5RiAS0TgcGoM5QWNOiGSgRZABjFSA4CkFf04j
XVxfXn64vvx4dffT1cefH3779cc/PkI2x1y1Jd1EWWPk+dK1RLudtQ4jbACC
10UetAovcrkPpcgfIEjMCfqboCwfF9fzH8Qe/8Oc82mBoeRckB462fw82/o0
w5yUbEZKtiMnOwF+vMqy/jnP+0NJVJGhEs83X72g+4H+2QsRVh4FTl5lfg45
XnpZVmaBZz+IsTNJC/LwcjKxs7zg52UX5uEU42BXExEJtLTuyc5fK0zbKktb
yI/aB6fBejOgPckpqtwZOoKZemIZBlIZegBBoVwNgWZLyfVIfUye9XWd03ug
RDSH3HeGXLb6XDS4k/KstwN1wCbSUQrcQQrcb7VFCg2lKnXFy43FAIK1FgrV
FnLVJjK1IMCDCh12ygDBYRfVKQ+NSU/1GR/NEWfl3Sir3SjLHiuZDjPJTjPp
YWf1IVcN4LY+59e9Lhq9rtr9XvpD/iaTETZzb52nYxxXUn02swI3MgPWMwLX
M4PW0vzXk7yWE9zm4t0nkzxnc0Pb4zz78iJ3hhuukFt3BBgJAcEeQ7DwPSxy
/wS5j0Ee4k6QGAySSMKTSCQqlUo7PbsAZuP5Ofn69vTi3Tnt7pz2QLv+SP3w
E/bjB/IvD38AM3GkTY/npZsAU6KGaKeT1maA6VW2+3muC63Mi1ruRSsNuCwK
xqX7rLwxKzWTVBbk4ad7Ivb9P159/yhIiqXVXnE7ypiYbnuabU/OdEInOCIT
nSkZFhe5DvdlYTOh9pqsPzB/94iF7oXgSyYlJu5XrGwynC/F+V+IMdIJvXgm
J8DNz87EykTHx8suKsAtyM4kyc7sqqPRmZk+X1Y6nRUxlRO2Vp1w1JNz2J9x
MJCWosmXriOcoSuWqSeZpSeRpSmSqynQbCW5Hm2ILbC9qXN+ALu9awq+aX1z
3ux90eBJzLPZDNAFg2QAgoEKXLFawgX6EpW6ouVG4kCK1pjLAu0eCNKqL6NQ
us1GsddBZcRFddJdY8JddcTzdZ+T4mVt9FyAXoOBcIeFbI+NUr/Da+CeHgeV
fmCTcdUYcNcZ9QeNBZpNhFouxDmvpfns5gWvp/nOxwNVwmszM2gnJ2Qt2W/m
rftQlFNvjHNrtNN0ReLZ9ih+Y4RyuERD7pBh22Q4BA3dPjnaRUA3kYe7ODSc
TMBc0k5PqcAIBAxIPafRzs/PqXf3Z1f3Z7Qb2vkt5eIOd31P+ukX8k+f3v3r
039/fZ8d4mXIQReqzNts9xoSbkNOsT8vcD0rc6dWeNFK/C6L3uAzfFdDLMos
pNUFuQSffiPx/Dvxbx7p0H/1VpVnMMBwNdriMM15J8lpM8lzPcETlmxLKvZH
FId7yXByP37ERvctFz29DAv7ayYuJRYmKS46YZ5nQvRPAFgSXGxcjC8EudiE
eTk5GZ7zvXxipSJfFx+53lAxXZA2mBIwXxoNaUs/7MmG9mceDmak6Qln6osB
BDN0xHN0xLM0hDPVeBosxVejDTCFtrcNLh9aPO9bwq5bAIK+100+5EL7zSD9
VpBchBx3gCI3QDBPV7RCVxRI0SpTwIOyQJevNpcDzmZrxU57lX4n1WFXtXFX
tRHnV41WYrOhhr9PlPY6KTeYiHXZKnXbvepzeA2o30ltxENrzEt71Ftv5o3l
TIjVdKjVUpzrZob/Wqr37FuX2Rjn1RS/TaADJnhPRHsMR7lXuOi1RTvvtOYS
lrpu4Aunh3OY7Snc3iLlcAOzswzdXMIc7hIQB0TUIRWHopFw5xQijfolPM/O
zk7PTqmnp7izKyyZRiDTqLQLyuUV9vwG//CR9PGnd//+/c8/f78mo910VWz4
n1ZaKmyEWOCSbK/LvCglztRyD1qp71XxG1J2wEaYVYWFjLYgu+SLx2IvvhV8
/JX4t1/pMH/7RpGzxdsIB856mGvBdJaulyacNiZDi8LiTRX5Hj/iZfmOg/G5
MAvLa05uVWZ2JTZGGT56Qe6nYqwvpXlY+ZnpeZkZpQUFRDg5mB9/I8/JXBDs
s9pYNleYMpQSMlkQvtuadtiTA+lKh3Sl7nYlpesLZ+iLZGgLZQATUF0oXZUv
9RVrjanwYpT+SYHdTb37xxafh5bwK4AgOOCm2Y9c4LQVZNxqphQhzx2oxPNW
WyhPT6RKT7TMUKzUSKzCTKrqiw1l660UW+xfdTiodDuoDDirjrmoD9orV1oK
YMGRD0N5NWYijRZSzWaybZaKfY5qw66a/Y6q/U6vxzy0Rz30ZgJNF8OsV2Kc
NhI8NpK8t1J952NdFuLcNoACmOQ1FerUFeJa4W7aE+8H7Sm/3Z8625vAbg5i
t0dPj5ZwO7PQhSHk2tTJ3uYp+vgchzrFIkloGAF9RCFiz6gANwqJDOQpkXhK
xVKuMUQankI9vTw7u7kEKj/p6sP1p9+ot58+/hPoF5+rqwvVmR6VWcivRFgT
0l3Oil1JRU6n5e7npT63xcGUbP/NMOsKc2l9IVaBZ18LvPiOj5mO+cm3jx89
CrQ1ph1v/nlD/O0c+0BE3BLhn28Ikw2FvAzf09MB+Oj4GRlkONnkeTikOJik
eVjkBTjEv/yvgVmYg14ImIP8fOLs7ByPv5dkYohzspmrKVyqyhhKDZrLDwPw
HXXn7Hdkbrck7rYmb4MTknX4gRKRoSmQqS6YrS6QrsKTqsxaaSo0H6mLyrO5
bXD/1Op3Dw6/BL85bwm4avTD5zhsBho1Gsm9kWTxkWGLVOPN1OQt1xYoNhAp
NhAuMRYrNZYoM5YE9pkmG6UWG6V2ayBIXw05qXZZyoLdZX9Zr4FXh5aDhJpt
5Jst5TptVYacNcc99YZcNAYcVcc9tCd9jBaDLdejHbYS3DcT3JdjnBYAxbqs
JXkvxbsP+ZuC7TXrfe2nct8SxltPVwZOt0dxmwN7sy3w1T7E2hBidQS7OYHb
nMHubVEQUArykIQ8JqFgJPQxBXdCxGOwuBM0DoMlAgRPibR7/Ok1kXZGvqRS
b85o19cX1x9Pzz+cXv148+mfv37+fIA5spRiSlDlmQsxx6a5UAqdzyrczio9
zkv+IpgTsBlmVQYS1xNiEGN5yvb8m2dPv/vm28fBoaF317SruyscCnZJI7//
8f0///vv3z//G4eF8YsIff/kMS8ruyATkwwPuzgfmwAfkyAfixQXhywrmzA3
Iz/bCwkeTnlBQf4XL3h/eOKmrTlamrdclz+aHb5UHL3fmAzrzoG2Z+y1pELA
SZCWZEhLUpI2f4auULa2UL6WSIG2SK6GYIYKe7WZ8FwEQND6iwdb/R5aIq5b
Qi7bgy4b/XBZdltBRvWGMoHijF5SLBGqPBnqPOXa/OUgiTIT8QqQRDlIqtxY
ssZMttFaqcVaud1GGRhz/XZKzcYio0mmn0/6IAWelRbitZYyzbYK7Taveu2A
mNUecdMaddWc8tSZ8TVeDrFajbCbD7WZCDAd9jVejHVeS/RcTfAcCbLscNbp
9TLeqMq7WBw6WxpETLTsDtfCFjvg633b0+CdmVbU+ggVMkPamcPsbpCO9/6C
eEwBPIiAog73YEcQJAqGIxNIZ6d4yimOeoOlXJxQiZhTLJ6GPz0/PT+7OaW8
p559otx8uvj1Xw+f/9OYEvhGmmE0wBCdDtRwD0qZ02mlx8UXDwZRsv02Qi1L
TMRfcz1jffKP77569IyJoQzcdvv7f/ax+K1j+OnDh7vf/3P7+fPFH3/++N//
Aq52CA5+9N1jHkYOYUZg3rEIC7JxirCw8jAIMTIrMHDysb8Q5GQQ5WQT5+AQ
pqc3kJCoj4tdbaicLkqYzovYrU1AtKfDO7IPWlKP2tIOW9N2mxL2mhOzdIUB
ZeuL5hlIFOqLF+kIFKuyNRvxLwdpYHPtLuo87jsCbzuCrjv8rjq9zhucybnm
OwGatTpCYZJMPpJM4a/48rUkavSANUa8wkik0USi1VQSbCDcZCAANhNvsZDo
spcbcH496a7ZaiK20+f5GVm7H2depStQbSpXYa3UbvN6wlV3AODoogrMwSkv
3dVw05VIi8kAk0FP4yFv0GKE03Kk00K4/YCPcZWNalegzUlHGWGmizzfAxuo
O+iuhA3WY8Y7ERMdJwtDxK3Z7Yke1M4CCb5LgGzgdtZJB9uniH3C8S4Csnpy
uIU5gRIICAIRdYKFkah4DBmDpWAxlBM0BYc7p5KvrzEXV/ibe+zVA+bmI+Xj
bw///XyHp8VbGNQ4qMCy7Uk1PqRaL1qDx3W59UOpGTnHYinUMF5PkoHxh0eP
HinJy68trv786Ze1tc2t/e33/3x4+PX+5v31x08Pl5fXVz//8sfnz8VVVY8f
f8tG/1KAlUkEGH9cLGJsL0VZ6ERZX3C/eMzD8lSMj1mSh1WKnVmWmTHdw2O1
rnqlMm88M3SjLAbRnIRojgfYHbWmQVtSDsDJ+81JgHJ1hQHlGYgVGkuWGEmU
6wtVanF3mAqtBWngcm0vatzu2/0fukPvugNve3wvm1wp+Za7QVpN+iKRMqz+
MsxRr/kKdCTqgHXURKwGJN4MkgAbi4GNhNvNxNrMJTptZHqcFAdcVQedVBqN
RQgrbz/Dq7cjjKp0+OvMFSuAjLV93WEq120u1++mPu1nsPzGdDnEZDHYpM9V
ayrIejPeayHcEcA3G2pbZ6U8Em5/0px7Pg4mTrXttZcddFXgp9rhww3oyQ7y
6ih6fhCxMIzfXcDtLWEgy6T9Ddz2Cnpj4Xh15mhtBn2wekFCUInwEzQUjT5C
IA9PsAjKGZ5IxRKpOPI5mXQOjEUKkkjGnV/hL+4wF/e4qw+Eq0+//frn2kBP
iafhaqotvsqdWu1yUWF3X+1wVWSJyLTp8dJ1luR8Sve1u4crkYC/v72fnZ49
hiE+/vPHdz+9I12RKJfU84sL2tnF5c8///75c21z8+Pvv2VjeCnCxS7JzSbC
9EKI8ZkAwxMeuscAQX52eiFORlE2ev6nj13UXo+XFKzXls/kJ62UxEMbUuDg
RDg4AQB38Be+vwnuNSWWGIoVAzKWKDWVqgD2SUPham2eDhPB9UA1XI7Nda3b
h67Ad50ht52Bd71+N63ACLCFhum3GItFy7EFybPGqPMW6IrX6YvXmErUmUk2
m0q1mIgDduu0kOi1ke2xlwc8OOiq2uuo3GEr9wuq5J8rWYv+WrW6grVmCtX2
KnXGMp1m8jMeeqM+urOBxkuBJlOeWtO+emO+JgC7lWi31Ri3mRAb4ObpKAd8
Y+b1SMNhY+5OY+7JYAO0o3wX8ONcF3l1iLA8hFsZO1mdIO0voTemYcvj2K1F
9Prs1ljP3uww6WgDC10lIHaouGPCyTGBgMJiUQjkER4HPzsjYLGIXcjGweEe
Bo/HAKWRSsNRL7HUGwLtHSDa/S8///RP1FzPfLbHUZ7NWZnNu3Lr61Jrcr79
crxNjomit4Zie1fDu/trLBaztrJ+dnr+8dNP5zeXZ7fnOBoRAUxeAvnh/Y+A
B//z+XNNU9PX333NwcIoysUBEBRnZRBies7P8BSQCOtLUW52IU4W+n98JUlP
Vxsbud1St1yWM5MXB23MQbRmHYOTD5sTdhviIU2Jf7sPwAe8rTKRrDSRrAAB
DU6qxli82kCwToerByS4GahGzLK6qXb50OH7rv3NTWfQba//XZs7rcT2IFy3
1UQkWp4xWIklVpMnX1eozkC43kyq3kyyyUyq3UKq3VSi2Uio11aux06ux0Fh
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
TTkLBbGdsX6NycE/X2HaWyu/+fY7errnAhz0AD5hjqfiPOxywhKinHwSjFz+
errz+al7VWlLQOGtToCCM4+ACt+SAUCENADFAejvSQC+vwgm7AAraFMCpDkJ
EHC905hQaiRcChIrBkkVGEmVGkk1GUkOmIrN2osfhqpSCiwBD973Br0fDPvi
wZG/PFjnBI83aTMVD5NiCJBhfKvBX6gr3mAo+RdBYcCDdYZCTQaCrfqCQISC
DQQrDfgi5Z60R+h/Ppv8L6Lg1834qx73m2a7qzLzmxIHTIrVsL18l43SRozz
arTLcpTTYrx7j5fhaKD5XmbQQVYwJDVgLzVgJsxhKsxhMd5rJydiNTN0MSNo
uzAOXls0lRjb4ufbGhxa5uGR5+LekZjampTRmVY0WdZa5BVY5BO4XNe02gyG
dHevNjct1dTOV1butLTCh4aXWsFViW/7sjI2WxqnygsnynPgY53UrWnkwgBq
bfjiZPuScEA6gWBhWyeHy5jDVeTRJgp5iMdhCHgchYwnEbFnZyTKGRCfFPLF
OeX0/OKM9vund8T9xbWu8rHC6Hxn3ThTpRRHg+Pp7s//fbAw0Xj06BEHK5MQ
J4MA+xMOhm+EuVlkhcSE2blf84oW+Prs1RTulCYuFkfvN2UcAQtMSyYgSEMq
pCFprzH5i/5aOwE/bgMt/ksNTADOnb/eVppLlpmKAwSLQTKVJtKNRmK9JsLz
jtLwSE1yvsV1o/uXFB0KfxgOBgLwfb/PXb0zKtEUSNEwSXp/aQaAYJGeBECw
ylCkyli01ki0wVgEqPPNBoJAH2w0FCwz4A2X+74lXOfz5ey/MYU/7cXfDHtf
g+1pRSY3pQ7UHKdFH81pX6NhT6PRAMult27tHvrtnvobf324Yj3dZynRdTzC
djTUejzcbiczeD3VbzbGc78o8aSuaDI6os7FfSoleyghszIgPNnOPdDA2kZR
r7+oDTYBXaufr42pTA3JzkwqiQpOLkktH6joak2tqIzMTPGPigyKcHfx1OYX
qIyOWG0HI2dGDif7Nwdb0BuTV5i9C/wxHr5FPjnCoaF42B4BcYCHHxHQGBKB
TCCQyGQgPoH8JJ3SyCQKjkTFfbomff5A+4jc2QaX1AXbRRtIBqgLxVirTYPz
Pv90sTjRzfj0u2fffMPDwsDJ/AMn82MOpsdCvOzCXNzCrOweegZjOZnQypyt
/Nj1yqSjtrwDcNZ+c+ZRW+5eUwakMR3SlAZpSt1tTAa005C005D4t7brEwBt
1cVXm0sCEEtNZUpAslUgGbCJxICZ6JKrLCrmyxy8A3t9HAz9OBTxfjj4/XjQ
hwE/oOOjk8w6LaXCpOj9pBli1PnytUVrdL/UyRojsXqQRANIrBmAaCgINvrS
KSpNBKOVn1f7vPqNOv4LtuhfiPR/rcXctjvD4l/hkg1pea7Tbq977FVG/ECT
4XZgZ61OD8PFeI/1NL/FRI+NTN+hELOBILP5eNeleM/ZSNfFaPfd9NDd3KS5
hJiewDe7JTWtwfE5dn5xlu7+ejb2r0FmCsY1KbXzbWuDZbOFUfWBbmkgkwB9
PXcHy2BjVRsrNRtVQRURVmFGenY2Dm7mR4+Sfd1PIRurveDN4Q4qdPUGd0BF
7VLQ+xjYFga5i8ceo+F/fdoNDXQHDIVEAQji8YSzs9NLGvXqDP9wRfzplniP
2YD0VoOjvdKMX4W+EgjTEElx1GoriHpPPfj5nqT/SvL5t1/zsjDxszFyMT9h
Y/yOm/0ZHxczJz29DBd3fmDQVm05pCh5OzdqvynzuP1vgllHrcBFNqQxA9hI
IU3p2/UpW3UAwS+PRv9ffIAqTMSqzKXKzeWKjKUqTaQ6LWTGbaWX3GSQ0Zq0
Etv7Vp8PAyHvBwEPvvnLg75/E+ywkPzbg7GaAkCK1uiJVekL1xiL1ptK1JuK
NRmLNBoINBsJNRoL15iLxLyiy7UR+RHe8S9Kxe/4/M/Q9IsWxyV/4d1g5YMw
/REHpR4HtYkQK7Crdq2D2nyk60ay32qy93KyZ2+A8WSM3VKSB1DnV+K8pkMc
91NC4dlvp6NDa+wd51Ky+yLTSt0iqoJSMtyjKmIKwh3DnPQ9fa3C3/oUJATW
WepGivKbyyg4mVvH6uj6KspayIjoMPzAzfic47vHdBzcfAVxEYt9raPNlQdz
Qz/RTu6IR2TEFgm5g0fuoOHbONwBAgU5gu8jkEcnJ3ACAU0iEfAAPwKBTCK+
u6T+846K3Z3rKU1Id9MM0RCI1RCOU+LP1JMrdjYcKYs7Qy09XMHjo72Znzzi
pftBkI1JiJ1RkIOenfkHAR5GPk4m+u++MZKTHczN2azIX8+MQlQkH3fkAQQP
gRRtzTtqyz8A50AaM/easoBzuy5tqzZ1pz79L4JJ/y/BWlPpWnPZGkv5EmOJ
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
jkipsQTFSJxiKF5yc8AhXmooTjORrDZH1lmhmuxlGm2RlSbwGBWOyWTb//u6
63w/92w94/1Q7GCU5izBdjjYei3Mt9XdojnCoz8WN4yP6wmP6A4J7wqO7I7A
tYTGF7qGEs19wwx9rVBWdqqu+hau/AJIzt/ACFYEyZuoJCT38A4rRl5BQ0dT
BCaORqDlhRXgvBgDPT9hSUszF3Iojo7HUkIdwmaq274d7L3fXT7cm1vfnVxf
nVhfGFqZ6NpZ6F8Zb5sfat5cGNpcGNtenthdGj1YGj5ZGf2ydvxpeb6F7JeK
gZD1lON9IpycolPwBfmEjDRcyFJ5wf8Z7Pm5ONCcGonhZea/yyTAfgvKzYwU
4pOEAFEC3GghbhkIpwjPXRjPbRF+ZqQgWAYMsVZQoeFim4nhDbGuK5VxRz0Z
Wz1pqx0pWy2pDHybreSt1rQbtaQt1ycv16cs1ZP/R+kMiCtVWYv09HlaymxF
EkPVjko0O/n/EqSbo+hG4mUaoDpDyHywyg3BWp/rzpsn2/8l+L0z+KLCg0Gw
1UYuQgrgI8kZpSyUrI4o0BIpNhBliNHrGaIwUo2hON1UqsZSutFWts0R3e6E
brSRSteDpuqBv65Q/n5a+/2o+F1vzHiMwUSsdbOHQZetcYenzQA+uDc0sNrJ
oTPAbzAysjMksjEwotwn3EdBz0BY3gpjYqvqEOwYra1lKSwoDeGSwAiruRp7
IwVklKSUxOFiAnwghCBCFa2qp2SgLqltoeuuouxsaR8XiaUk4otbKY3Hk3O/
L0w/WRg+2pxaWRmcm+6dn+xam+1em2pfHmlan+zamhvcWRg/WJ56ujz5en3m
68Hq94OX55vLx31FTY7q0XLwcEt7N+dQB3OPkpScovT4BWrBKWOvupqJ3GGC
3WWSAN6HAe4jeB/KCPOjofxoCFBWkEuCkWE4mBC896UEucSA3BhBoUhr26YU
UlWMT3uS93ZjypO+nK3uzNU28mYzebs1dfsvfOtN5NX65NXGVIZWGhkoUxla
rE9brs5YqspYqEybryTP0ZJnacnVDkqV9gpUW0yFpczNExWGfdT5a/QEZgOV
TzKtPld5XnaEXHdF/38EqR7Pk2zbbeUZBL0lOCKVICkaIkXaN89kbtz33+N+
gxuIjH5RZY5ssJbpcJLrcsa02sswiidRjfd0KP0/33t/nlD/uZS3mmTf7qfb
HmTZZK3X6+vYG+7Z7m7T5eU8HRMxEh1Z5+XTEhGTYu3sIKOmjZCTg0qry2pb
6dtryejIi6rAgCiMpJ6mopWLTaCciKIgJxjCCYJwCwiDoYJ8QuDbXPJCGA/r
cF11N09XQkE6bbipZ31gYG+i93BhYG9hYGaoYXykaX6qY3midX6wenuqfXWo
eWWo/Whp+uPe1tn+xpfNxfPNxc/r+9+PNz7P1y0QXBI0JLTAYFNdC2NN42BX
j4o88jglezKB4C4vAf+NCcl5R5D5tpQABwrCIyPEqyAMUhDml725kemBAAcT
jPsBUpBHFMBhLC1THB3dkISjhDsNZIfstaYd9ORsd+dstGVtNqVsN6ferMK2
9JuXy5rT11sy15ozVhvTVurTl+vTFutSF2vTFmvS5qvJc5Ups/SkaWriXwQV
qXaYMkvpMhOJcgOxEnX+Sh3wTIDKcYbNx0qvy/aQy67oq76oy/7w751BFzTP
F8kO7fYK4SgebylAlCo0XVOsVF+q1FSyjCETyTIjKYqBOIMg1Vii1lSq0Uq2
wwnT66ZwcxxvoZKpBn3Zm/rrnxO/Pna8qA5rspMeiLBoDLQYCnDqdLWuszFc
DHfbIYbOYIO6Q3zxmqqBKqq2cgpWyupSgnAediAYDNXWNjBHajup26MQqjBR
bQhMPSq2wMrIg/cOjyiHAJyHn5ebi4Xtgej9B7F2LkEW7uEO4aVp1PGuifXZ
ufXZwaPHw0+WBtYGmxY6q6cH65Ynmndm22Y7Sxc6y3dHW18sT33YWrs63L/a
3f62ufb3/c2rw6dne8tnKw07OQG5ptIWUB4xDoCdvqGtvn5eesJQedFoWoqF
LALB9huc7Rac4y6SH4ARBslDQeoIiBoMLCvIjuC9K8jFhODhFOfhluLmDjAx
akxPrCEGNxC9ZyrwG80pW63pG+2PNjryGUF0s4m80Ziy0ZC62ZSx1ZK12Zy5
2Zy13pi52pC+VJu2VJv+lxnJC7XJs1UJ01QiI8lU2spV2SvQGAQtUKUMgobi
xeogqjZ4KlD1aZb9x0qf646Iy27sdR/2sjf8W0fIJd37ZYpTu4NihDSvrzRv
jAYiXUey1FC6zBRZbnpzJx7VVLrCBFnOMKAZst5CusVG9uYuC0/lXmdMu7FS
vhrsSRvp1z/H//Wyvi9YtdYI0eyhUR9s3uZm2utsOennPB/hOhXu1h/i2R4R
6CePFr11W1sMqY6U433IDeYV4ObmVZRXcsQY2ChYoBEaMrKWfGBVBRXn+NgC
I1VzZVE0mJWd9bdbXCy3M33cc/z9sgOipmsGmotqV8eX1pbm97Znnx3O7s/3
LrdWztWULfVWHc91bg9UzzXk7fRVvpzt/bixeLa3+e3Jwbf93e/bG3/ub18/
Pfnj5f4/DoefUfGldoqucAD89m8qYuJGGuop8biZ5qaOpCRpXlYxwD04+x0x
IKsELyOCcqsKC2iLQtVhICk+ZmGe3yA8t8X4+RGcAFWYcHaIf3tmfD3Jr+9R
yAwNP0vHrzSQ15pzdzopu21Z2wyaTanrDWkbjQwPZt2oKXu9IWu1LmOlNmO5
NmO1nrxal7Jcy0ikf/XBUgLNUrrSBk2zQZczPGgmRTOVKtUSousJTQdrPs1y
eE/1vmwLv+yOue6LueiN+N4ZekX3+Z3s0umoEi0D8pfmx2qIpOpIFhugKMZS
ZTe3GkrTzGTopii6KbLaTLreUrrdXq7PTbHfQ7HPWW7SSqdcQ6QvxfbXr/m3
c5kNNqK9VjJNLqoUD812D5OlYI/FANcON6N8Q0yxtUGCiZ6LHFoGwGuvZybE
A+Fh54FChCECEAgIZC6hbCSprSyur6boIipmDoLoRkTmSkuoioGgnEy3WZiY
Ynzs2lNxjcTY456hjbZRavKjse6Bqenhrd3p9fWh5aH6zbaarYbqp6PN+z20
5Zrsw87yd1Ntn5ZHLraWv+5tXj3Z/3G0/8fh3j9Pjv7+5t3fXx//er543lfU
HmwWheRF32YS4+JUlpUJC/Bf7h2sTySL8bCIcLOI83FKgbikQABFIZCqIEgb
AVEV4r3ZjMA7cNADUaAAgoPHTlmxLSupIzWqKdlnthI/Q8ePlERM0RKmKlIW
qrIe16euNaSsNZDXG9PXGzPWGjI3mjLXG7PW6rMe12WuMophDaPdJz6uSVqp
TlypJC1VxM9T8JWWMgyCVGvZCis0YxWWm0gWawpVGsImAtUPMx0/VQadN0V8
7cRe9kRf9ER874q4oPk8S3TodlLHy0MDZECRyvBUbalSY5mKv+6voFmiaeay
dGMU1RhJNZasNpFYi7VZjDDucZbrd8UsWKl3GCGrfdD/+NzycpTUbiUy56LW
5aZRbK80HGy/EuG1EOCWZ60bqS7rJiuuyserChVVEEVZGViy3+ESh0gpSMrD
+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
Le6W+boKKYoSuboKvUGuxxWJZ0PUrxP1F12V5+20q57q86W2n7uDZyvtP+a7
f65P/Nib/3U0+evF1N+2e9935g7HOCYri5lw3BNlvsXNcgcC4jNU0VzuHMqL
iZTl41IXEVJECCpKwRSQcDEIL5SXQ1yAX1oICucCYKDCpcG+3akxTSTf8eKI
rZakx/W4x/WE1TrSSi1puYa4UhO3XENYqE9aaUpdaU6dqyXOVBFmquJmKgkT
tPgxeiKD5hA1qYdC6skndeYQGY2yJYPYmBZXS8aVWsjTLRVrLRSrzOQpJjJ5
pmI5elCKBmjSU+U52YFB8GsP7r8Er0bwV/24LzVhT9M92hxU8BhQGEaQoCmZ
qiNToq9At2Dgw1SYoqlmMhUm0lRTZI2FLGMVtjko9rqrjvnpLEWabyRaPaFE
4HRlxO7cEb17Ny88qDM9Fmem5qkgbiAqZarqqK3qCeBS0NH2dnPDKiro37rF
IiujhJKUk0PKq8iqCPMJAFiYAcwPjDGWVoaecgoGgjBJLmbmmoSoZpzHk+bs
4/6C3xeav+xOjzVW9HVXvz1c+vp4eCI5ZCTS+ffihKfFxP0i4mJGZIWDVowk
T7DggzgZno5QixcNOdct5V8bKN876OfzLecr7d83+66nO76tjF5uTH4arV8q
xpX56qebSmUbIUuttHCaGEUQhyDnAzAPhwJCdKahtT4zVRUKVoYJaEghFCSg
jD0oJsjL8KAoP1AWKiwB5DOQQbeTYrqSIzuSAxbp+J2WxLU63GoNQ/ErVQzF
LVfhl6pws1Xxi3WJS/WJ89XxjKo4W0WYrSJOVSZMVqdM1aRPVGcM0VIHKcl9
RUmdeYmt2aS6VEJlUkyxGZpqLl9nqVRjqVRhgSkwl8rShZQwCHqpPU2xO6X5
XzAI9sZe98dcDMZe9cWe1YQ+y/DsdFYn3BAEx2lJZRrIUY2VG0wxtSboClNZ
ihmq1AzJ6JV1jDZhLd9oItlijZyJMn5NCXv1yOd5QchMZlhBqGuEpWF2WEBJ
RIgVUkJXSERVWN7dKQYlY62h5qOp4SUkpGRu5srBDsag1bkBYAg/zNclAMIN
5mJmEeDkFroDUkKpScjK3b5329/ZvJ0Qulea+qafdjRdffpy5mBtcLCt4vDp
2MZcTUWQWaO96qSX6XyAVaGBVFuUzWimf6mrWpO7Vo0lJk8dlq8nPhLr+r44
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
QbKIUFkBH2mAgxSbiQTQUZyvxVnnNNX5S2nQZQvhW2vCeSfxYjT5ajTlopXw
Ms9/KtQ0TUUgUJQ1SR1OMZKts1ChO4fEGzj7qFtYq5t7OAV5OEcyMrWRnm9U
eImyui9S0UPbOt7cM49cNBUYUeLjEQ/nFwVzPlTHiJrrK3Oz3We9cxcOEk+J
SbPTRQmwPJDklbjPDhGXQ1NoCXs9hW/nmo6GGhFCXJz3f4Nw3hPmZoXxsCEA
91Oc9RKVeeq0eOdsJdc81Na9jLf8LI+DTN9Fm72Kd32b7Pc+PfRtRvirTOyr
bAZEwvsi4mlx3On/I+Gsg9pK3K9PXXDi7iQQ3N3dKe7uBIiS4O5OkVIoULy4
FSh137oAhZYaheJe3f3u8qa/d+ZMJnMn+SefeZ5zzs29t4QxlxH6kut9J0D3
QZBpl4n8qLX6iLl8twG+11nzTmbc+ljH29aq5yXcmazwl4yARwy/pgALfcRx
NFgIABInIiAGBISrAtKKJKoIOw4RFjCSwdxtPD9WXBzsYIESEkiIML9fHnmr
yOfB2aDbLexrVQl3ytOvlsdeKeMPYOxkBWOinHG5lD5SHDdcHNdfQOsrjOKr
MzukJclnqCjkw5X0b69yfsxk70+l788Wf/twYX+hZ+fL4NbiyPrX0fX1y5ub
Exsb11ZXri0v3lxZuh2khghTgkXJQSJkAH5UUWcpIS8ZiXh1/GCg1dvs8IWq
qNVWxkpr/Gpn/NZw/Pdh1o+2yIUC52vhOumawGhZ0SRdUqmJWrOtWWOQV4q9
h5qEuoVauL5uCBCmJCWnHRYWr6lqb2UcrqbsdcYhwcsxIyKsjpk5FJTcQla1
PSFw0oCIutqQ72tAPS4gIC+jZOfog5aAmsiqx9r5lkdEnef6p/hrVSZ7Tj+Y
sDQwPHLoMBYhoaIAxyFEYWJHZEAnsrxtE/UpVSbkK64qj7yUn/movQrSmQo1
mouzf8V1nknyfJfmP58e9CEzYiE3+nNW9FIBfbWEtVTC/JgfM58ZMUP3fBrl
9Cja9Qk78CYrZIgeOn3+7MZI9+5Yz/y5gtf5rJmsyGd09xt0H4alEUxUDASH
i8NhkmiAqTTET5voIANXBQtKCp1UhkAn6+t6y9LZbgZaEIEL7DO3y2nX80If
VzEf1jDunqdfq4maPBs7XskYq6RfrmSOVrKGK5hDZazBMkZfMZ8grSc/si0z
sDnV+UqVz9qdlJ+v0n9OZey9yd35ULe12Lv5dXhzYWD3U8+Pxe6d9eGdtbHt
1SubX69tLt7Z/no/WAMTqgiNkgPTFKGBcgAnsqAnVSLNSGYiwuldXvRCTexS
M32lhbPaydka4nwfZvIJfi5wuRqmnakJoiuDeFqSefpKtaYG3XHh1eEM6kkZ
Haq3moqXioZDVGyiFEUDA1fRVHI3NYwI8M8PCyxzc8sPY7SkFl9xcOOChJGa
eExFQoSviRIZJEbFUwlo+UhP/7TQ6K7c4tn+S9kBVlxvrWcT9WdzeeInThAQ
SAJcXJECImMAaOAJBcjpTC+bdFP5GjPpCTeVJz6qL/01poP5BA1mY2ym2c5v
eJ5vk3zfJQd8zIxczI9bKmQsFjGXSthfSvm2yPxQELuYFDbP8X/B8Z8pZC91
Vj1tKNl9MPnP8zvrlzvenM2czop7kxL+mOXdG+lmikdA+NUVAgUi4LIEiL0S
xleL4KyA1kUD5IBiZGHRtvzc0XP5dEc1X3Vgb5rXzeLwW4XhT2tYD2vot+ti
r9ZGXamMGyuPG6uI4xMcLv/Djk9woITeW8jv8rTu3PDWdP/GFMdbDSG7j3J+
v8768Tpz/23h3kLj1te+ja/DGwv9e596fi72bK2NbK9NbK9e3V69tbPycHf1
sZ8SPEAGGCYNCJcF+UqL22JPOBGFM0wVr0S7zeVGLdTSFy+yVlrYK53szUHO
tz8EoxbyXa+H62VqQ4JIp5L15bJ0lVqdbK9lJBb5huvCdfRkvext6OFRGboG
NiAAAYtUVVdw1VT10TeKdPPOPeOW5+CSx+J0pCa26iiZuZqZ+djoGyviqQgQ
6DjQw9q/v65+rO7c4u0bLSkMVxV0U3bURFsJWvwUQkyQAAFIowDKJJAiGUGE
CsqDT6W4muXaqJ2zkBl3U3nqq/4qQHMmWHc6xGAuxvot2+0tx/ttvPcc13c+
JexzTuyH3NgPeXEfi9mfythvi+ivciJXU6O+JEfMpEcvtBb/O31jZqRp4f7I
j5k7KxOdb2tz36THTrGDHyYEZdlqSQsdR8FQYCgMDIeqUhCu6kRPVTR/Bg0I
YFmwGOroyRIWY6KhmOmomu6udCU/8HpuwN0SPkHmgxr69SralaroiYq4cT7B
stiRcgY/efYV0Qf4Rb6E0VsY21sQfSk3/GKKT1Oqw+NL9O/Pin69yvoxlfPz
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
j3c2n+xsPlVBCeuhRS3hQo44cVu8uBVRPECNlG6qPhLtMZUX87Ges9yTvD2Y
vD2SuDmWuDeasN0WN18Q1OdrnGOi1MeNTrY0Zaiojcdx+9MyXdWMdAh6Uhgt
MFCSJKkoJ6uloWorLeloaMRJyR0zd01190z0dEuyt+a4eOV4hpeQ1By1lMxr
wpMHGKk38wsP1j5Ov7zGO6NDs5K711sa7GIAOHGChEAhxSRk0WB1ojhF4pAK
VFAHDTWjIk2kEBShQ84qpBBtqWhVTLYepttV6Y6/1pMg3Rf+Oq8C9V5Fm87Q
rd+yHBaSPb8ke7+Jc7jnpXPdQWnMjDJmRLxjSX3lpvHQw+SOj81VT8dbIQFT
CeyPmWkvmJE3QjzuxPk/yeLeTOO5EpBg4WNIOBCDhoEhYkQMWJOCNMBJeCig
/FWx9tIgQ5ywtRIecPSEibzMaFna5YzQv4qCHhb63C/xfngu/E49/eo5+kQt
a6KaM1nF4Tvg8J8Yw+gvZgyUsgbKWH3FjF7+Ii2MbU0PqWa5jpR5fr1f9ON9
yz9r/T/WBvbXhr6vjX1bmdhbGt9bvvJt7er3jWvbW3e2t+7ytbN5b2fz/s7G
fTmUqAZazBwp5oAHWOLEzPBiQZrkTHPN4SjX6XzaYjN3rT95cyBpfYi7OZ64
dzlpq43+uTz6Wozr9aSYJEsDL2lKoZ3zNXZ6nk+gl56NDlHP0sgTAiWfFgEr
KOgqKdhQpd3MLNNK65/hlP2MzSLDggr8PXLV9CJxyp4GLkwWLedyZv0Nbm5P
NG39xdXstACui9aDzuLazBiYyBESCkaAI+EiwjixU8poMSnAYWWosCYGZkSC
WsrhZADHrOSw3uqSQcoYlgqk2UlxzFPtppfaIx+tR75aj8P1n0ebvI6zWkjx
/JTksZTs84FxZi7CajbQeMZL56237kKg8efY0G+FRf82tf5o6/3fwOWD63dm
SovvpvAeZKfezMtLsXUjHxaCiovwBxAOBUiIn6RgJZQwYnpYkQANYqA6zo4i
YUoQcVInI4SEdCUJY+UZt4tZD4tC7xX43K0IvHs++kY9Y7KOMXmOdaWWM1kT
f7mSNcI3wXJ2Pz+LljIHytm9JYyeYnp3Pq05NbiK6TpZ5b3xtOLf5d5/ti7v
rgzvro99X5/4tjL5na+1az82b/zcvrW3fWt36+bOxvWt9aubq9e2Vq9Jo8UU
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
5uN7lsMbyim6k18ynpp5AUdQC6cXqWqdcXH0Z4bRSBJi0lAJrPAJUxUFBQJe
CoWhINFYEEQSgVWmUGVwWH6wkcPA1MgYc3U5W3V5ZdAJK6wI05ha5ak74qV5
M9TkRqjJeKD+rWjLx/EuTxPcXibxCfo8Zrk+Zrm9TPCdzY18V86cr09825H5
bqT0/c26+ftNnx61fXlyaflp/86L4W/T47vTt3bnn31bfvP7x/LLp3d1tZQR
ooKOWmqmRIQFDuglA/eRQ8iLn2CeMbl9IbcvO+LqWcZIcWR/YfSlgpiuAkZP
AaszJ7Y1Naw9JfAiz48/j9U0z7Jw13x/u1QXgwt0t1aOa6abfIIt/sNI5t+b
HT/XWn+ttv67cennYhe/PtztTbJVBuOOC9goIMOsdH0NVH1U5aKNNRMcDeNt
lGn66BhDZGpqWkVRcWtNU3Vdf3FRZXpsgKehjKLYUQsMrMlN402J/0Yrfas3
dbUn+WtXwnZf/EYL7VWm07eRcw9bmsPdgyWJKmAADIuCwjAIFB6joCgPEpPQ
VlA1UNWh8Ks9XlpRTtXI2EZF2+DYaaCje6yzJ1scqKSq6q6s5O7kkGBjzXX3
KkzJGckoupJ37q6GJcPGwLu94bK1mQ+PkydNURIXEkMDxQ3V5ORJCCkMhIJH
YlFwSSxBVVGOhIMqQED6RLSZNCRYFZJip2kOB0iDhcKNyD3++uMBFteDrAbd
da8Fmj9nub+M93zKdH3F9XrN9XrG9HgR7/0mLXimKOZtJfvD+cT3Lakfu/M+
D5ctTFR9uVW/dLdx5cHFzWed2y/7d6fHf326+2vx6c/lNwf7azN/3TZWVVIj
4TWwCB0s1EmR5CJPUBA/mupjd+dc5nB6+M2yuMlSWl9RdFcxvb2IzVdXDrMj
I7YxN64+La6OR6+MZ+Wzo9MYnlkR5u00s3GW8QVvUlOM0tpUya/drh8bPf+s
Dhysdf/vY8P6k/zmdFtlEQEzBIJhrMcwlGYZwDlayGJH5Qp3rWRzCsOAkGAh
6+PrkxzPqy87V1U/WH+hvakik+ljpgw+ZYaGNrlpvi7w3u5g7Q2kbQ6krvUl
7Q9xt9pi3uS7fG3JbuawWMFxQoIwgBgQi4Rg8CgMDqWspChNIkvhJLFQrDJV
1VjXDIchHz0qBEcTCFIK0vLG9k7RZCkzIsFUTdXT2CDSxyffyjYxJXuElzUU
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
UIJKGHEqWEwOKSGLFNaHSPhSMefcNW8EKd+PMmyyUTIEH2cbSvf66jwLN5iK
MZuJs5iJM+NDfMO0mqJbTrOsptj2rzlnZhLd51J8ZjMCZrNDZvPD3pbQ5qtY
8+cT3jWnzXfmfRgs+zBWs3Cjfvle6+rjoc1X13bnHvwhuDS3v/Jpb33p2+bq
wcE/U88e8I2Dn7Vo2rhrxbTxkrDxs2EjZUGDpSGDheGDhbS+3OhLOREdOaHN
GQH1KeE1KZFnk8NLOf7lsWdakl32X9Ud7Pf/s9u2u9L8c73vYHfsYKv7YPHC
+r3ES2zVAgt4nj4+UxNXaiF1wUulNVCr2kklS5/CMyFnOKpmueqnuRjynIwZ
dgbHjh46cVjAWMsgr7anZ/L20HhXbVWajgIBISBQYi01W+K92Ra9O8yPMbyN
scTdEdZuX+znc153sv3oVvpkOJooKQNHQACA40CQMBQKEBcVhUKQDvYeVpZu
Ls4BRIK8mAgIjcBoKCvxPyUuKg4QA1NI8gAATl7WGIs38AnM9gjMs3ZOi4xv
zSy7GcW7xOW0Z2b1d/fPRMeUY3FKRIwUFYtWJkAV0CKaJKAiRkQGISSDgElB
RRUhxxxRYgnakgNhxnfDNe6EG5bpSxmATyeYUod8Nf4QpJlOx5rP0M3nWFZ8
TTMsp5mWUwybKZbDG57rXJLnmxSfNxnBc7lh74qi5yvo7/h5piH5XXvuh77S
96NVn6+fX77XvvxoaP3F5M7svd2PL/a+vNlb/rCzurCzvPT3/s6v79v2Fqb8
PZ9mrXg1P5xPcKImsq/Yv7cosLcgtC8vuicrqjM7rCUv7EJ2YH1qZFVSRFly
WCHLuyTKerQo8N/3LQfbXd+2GjfXWr5tDvy3c+Vg8+L/3lbMdIVcCJY6a4st
NyEU6uMrraQafTUafDULbaiZxuQkW9lsD70MN/14e22apbavrtJRAYHThwUM
1XWzq7o6Ll/vH+uqr8ux0JXDHBHIM8a/KfLYbYvZ6k9Y7uUs9bFXe2kbnZHz
lV63s/yyfV3VKAoIBElcXBQMPg2GA0BwoCSZpK9ngIFjSViyh4u3mqIGQARI
wOEV5eX5gQcqAYKDEDLSSmAgQVvLAUfUFwOpGNnEJOX0xWf1pxZfcQ4otraJ
YnEqSyt6C8va3b0jPNw8zPU0tKRRCihRbQpMh4qSQwKoWCweKKIJOxRBFD5r
KnklRPtuqPqdcLM0DSkjpHCGpfQVX7WnESYvIkxe00zn6Fbv2bZvGdb8N/yR
fE23mGJYv4m3n+O5vEnxmk0PeJcT/L4w4n05/X1V/By/G7Zkv+8peT9cuXDt
/PL99sW/BlefTezM3Nmdf7b3eWZ38d3u8sKPjfXvG2sHB/8WpCXzZ7DEWetK
dvBEcdhEbWR3sX9XUVB3flh3Hh9fRFtOZHNBeH1+UGN6ZE1ySEmifwnLtTra
4sl52sHHpv/WmndWarY2mv7eHj7YnjxYP7t1nzueYdEepHrBgVxjgqq2wNfY
Uhu9dWs8dDLNyUkmuJQzapmexokuBjHWWsGm2u6aKscP/SGoJa+WVtbGJzh6
ta+lqdDOWJVw/FCOIe5Nvtt+a+z2QNLqQMLKYMLGAGOrK+Z9pfdf+WGV0aHy
WGkJCRQMBofDxSWgQAgGgcVj8Tg8FACRIUrZmFiqyipj4Gj+MQwWA4VDkWAY
VAImiZeWoqhaWnpD4CqHT5DwVNv49M7YxLbYxM5Q5gU1DauTgghNPVspOW0r
Bxdba6twP9dYX8dMelCYi4W6JIICk5BEYnBAIUviiTQlSIeDzI0QrfsROnci
bdlKZGtJaJGD4u0g9WeR5q+iLKZiLN8ybN+z7d8xrN/yCcZavP6zWq1m2Xaz
HMfpJI83qX5vs4Pm88PnS+LmK1mz1fHvmjPmuwrn+ks/jNcs3W1deDj49enE
xvTtnXdPdj+83v48t7X44efm+ve1lf9+/bw9MY4QEa72MLiWFTxeGDpWHd5T
GnCpOLi7ILw7N6ozK6I1N7KpKOJ8YdDFjLC6lKASnldlvGtjnOVMY8zB54aD
jcatpbKttfr/bQ8drI78t5Q3fcmjJVKl3Ve15YzUOTN4lQWq1l62zlWnwFYl
wRDHNUUlu2iluBlzHAxoVnqh5kbBZsZCxwROCgjI4qU4OedahiYuXxvoaKuw
N1EjHRfINSHO5rntNUdvD6RsDKdsjaXvXU7Y7WF+qPR5XBiZ4uJAAGLgcEk4
AgUACYvBIH+SKAxKlpTEo9D8ZKqrqCaNJZLxBDAIBEejZBQUAMLifIIoMJYq
pWZm4QFFqChruqnpB7j4ZYfQ67zDq4Jj6zJzSvEkGTllDTEQVAQoAQKIKEqh
NCkICzWKi7Gmi7EOBQFBg+GSUDFvRfFybdSIm+y9MK2HUfrXwu2jpIkuCsQ6
L52nNN2XNOs3dPtZhv0c3XaeZfeOZcMfw2ma2VS06ZtYq1mWLR/iK57rdLLP
XGbAu9zQd8Ux78qZfwg2Zrxt5/+SBW+HKz7daPx8f2Dp2cT69J3tuSfb/0dw
9+vn/ZXlva9Lv7e2vn74oCEtVe9tcjsn7Epx+Gh1RE95cFdx8KWiiJ48WmdW
ZEteZGNxRG1BcEt6SENKQFm8ex3PrY2/B84FH7wpPVip3fiYt/m1+r/doYOV
we+vGNdKtFtClVtcldr4BC2gpUbAKhtqkZVyvA6JrY9NP0NJ9TTkORsxbPUj
zA2CzUyjbG3Fj4sIHjmFRWASEpJ7evtGxi63XDzvYaOrBBBIssA/yXbauRi9
PZiyPJjwdZi3NxG/3xvzsdJttjyqJthbEUFAwogQMFRI+DgQCMHjyZoaevLy
ahJiUDyGIiOlRKUoYJB4KD+fwtCKCmoiwvzMQ0GhCIqqKmq6Wmom5gQVfXt/
jq13Mo3ZHBRYbawXz4nti4ls1tLywkkqioFEZckI/v5UQYpqoKHSEHElCp4f
iNASAhoIQZo6tcpEYdJH/X6o8sM4g25fowCkEEsR1xpsdoNt/SrWYY7t+pbj
OsOyn+PYzyc4zHHtppiW/C06zbSZYdlNM+1eJTpMpTq9yfScy/F7Wxj6tjTm
bTVr/kLyu5ast+057/uKv/Cr/d3m5ad9a68n19482Hw/vfHx0+bC8s7Syt7K
yv7yl393Vrhh3uf85a/kuo6WhvVVMLrKme2ljK7SmL6SiL6C0K78kNb8yKbC
2OrsuNqk8As83wsprv8v0gMt/KGDSrSLROyvXvvIdfrNdfflj//0rfnqqvu8
csd6NaRXIKZYLZdMK4tDKYdFKotOM3A4HmgyGYdROolVP3tQQ3BHO25GOm9L
PW9NQG5OQQ8MEQYEBxMUFWtvcKesq7O5t6Wmn2pfUDkZAXpGINCGVfGhau6v
e+exeeWxd+63cvCqa+CUVtuTbqNuZkgwOSMeKgwLDBcYEDExNDk4PignLhUT
GxQSGickLSwpMiEeJR4cIjEvMx4cICUjJioqNBMUHTg5PzI1OxYcIj9JVxco
PDVFYGRylG92nW1tkywoUTEtZYOAsYKAnXt7hyIgHCEYDikZCzIeFDQfGCcV
DiUYERwUCycPAk8pFnlELp9QL8FfN8djNb5nQ41ONlAcCoBFMLVoRc5ySNVy
Uth2Vtt4WN58V9x6U9V1Sdd2TNRzSdJxR9JwSNNxStRyTNN7UNZ/U9iCWtmF
XtmJZNiOa9aRb9iZd9ieftijgtysieK2k+DBnebLq+jRt+nWxezc0+vf3u7k
5u/k5vTq6/Ll4v7z7L2toaVvP7iGV5lyTJ2AYp2BZqWKcKyNb6+OarGOaq6P
bqaOb6CMcZiIcJ6CaqyCY62IW62KT7OJR8GCP8uQS+W8cP3unf/1p/rnnfWt
ZrtvLp9UH5hPJo1GJoVAJotLMXxAJ2gwF3I9Jo9aRYVTP3FGOmlBNW5HO3BO
P3FQQl5AMwgNDQIIBw4WEl5oZ5+ppqmyr6Ckm29kVzoaBHZAHM+DUfCdaO2s
eOexeeWyd+u0b/CqauKVV8uDXqVvaFI5QikiLw4NDRkaESYmKR4dJBMSGBYW
Gx0bIikmLy0qMRwbIDg2OiclKCAeICUkJCAhJAwMEj4/RyIjMQcKHUxTbk1Z
egwaPQsaOyQtS3J1jEBAVRwaSFBPdqekvHVwexsTECkdFR4RBiwcEygYESQU
CyAQByQUDDsWDlsvHIBMKaxeL8JeM8ZeNrtnTWYzIEkmFZFfRspuR95uRNl2
V9h1Vth1VN17Vt58VNd2TNl4Tth3TdRzSdJxR9RyStZ1TdV7Udd/VNmBWtmE
XtmJY9eMaNWQbNaVc9ebeteigNuphuCyj96+meTHpufOtOjTweva0ere3evh
4u/l5vPp6vHk4vjq5Ozb0LuIWplqPXBIJHxcQYNjS41uVZ56XaWCYKuJZ6qO
b6WQcqKQdp+QdqKFabGDXrqPXbuSVreMTrV4Q7iBSuK/gv/3q/30n/fhjOKa
VadfIaJYJ49IIoE8HotILYVHLWsxF203HoBNNolWQXtLOWo/NGpEN3JNQG5N
PmpLPEsvIcSuBek=
    "], {{0, 116.}, {150., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ImageWidth" -> 150, "ImageLength" -> 116, 
        "BitsPerSample" -> {8, 8, 8}, "Compression" -> "Uncompressed", 
        "PhotometricInterpretation" -> "RGB", "FillOrder" -> "Normal", 
        "StripOffsets" -> {8, 8108, 16208, 24308, 32408, 40508, 48608}, 
        "Orientation" -> <|
         "CameraTopOrientation" -> Top, "Mirrored" -> False|>, 
        "SamplesPerPixel" -> 3, "RowsPerStrip" -> 18, 
        "StripByteCounts" -> {8100, 8100, 8100, 8100, 8100, 8100, 3600}, 
        "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
        "Chunky", "ResolutionUnit" -> "Inch", "Software" -> 
        "Wolfram Mathematica 7.0", "DateTime" -> 
        DateObject[{2008, 10, 22, 13, 18, 16.}, "Instant", "Gregorian", 
          None]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 116.},
  PlotRange->{{0, 150.}, {0, 116.}}]], "Output",
 CellChangeTimes->{3.9474918477611103`*^9, 3.947509722245944*^9, 
  3.947613325571869*^9, 3.947666575925045*^9, 3.948071332151058*^9, 
  3.948985540549193*^9, 3.949437452670898*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"e05dc230-bf5e-47c8-8e99-be3509cbd942"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ImageData", "[", "lena", "]"}], "]"}]], "Input",
 CellLabel->
  "In[378]:=",ExpressionUUID->"b367e808-50f7-438e-a386-702dad496b4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"116", ",", "150", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.9474918478084106`*^9, 3.9475097222917347`*^9, 
  3.9476133256689672`*^9, 3.947666575996168*^9, 3.948071332202725*^9, 
  3.948985540642642*^9, 3.949437453002747*^9},
 CellLabel->
  "Out[378]=",ExpressionUUID->"12b05a3b-c7cd-4ab0-87f3-a2dcea4c138a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Tests", " ", "*)"}]], "Input",
 CellLabel->
  "In[379]:=",ExpressionUUID->"e522f26b-21b5-4fb5-b990-a4a721dcfe61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Rosette", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "k", ",", "rfl"}], "}"}], ",", "1", ",", "lena"}], 
    "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rfl", ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[380]:=",ExpressionUUID->"7624ce1a-0bc0-42a8-a73d-c818f1f3e463"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3X+0t9lZ3/VHGmNExLFijVjjtKKOijjSirE853umNWLEGMd0jBEVB6QV
EelIo6VaXQOEMIUQhpCEKYR0CCEMIdAhpGEIEKYQQkhDGEIISQhhGkII4dcA
AcLPel77ut/fuedpgv3HtbrO+s5aZ5597rPvfe8f1/589nXta1/7T3z6X3rK
X/ywK1eu/OXHXPzvKZ/2V/7s537up/3VP/9ov/yFT/vsP/Xxn/1HLpJPv/h5
/sWP9K8+dNv517/oT57/wGtec7hM6d/6zf/j/KXf9G+e//ib33z4pV/87PMX
fd2fOP+7r3/94Z0/9d+fP+cr/tnzb3/5yw8/9qannD/jC//I+d984QsP3/Ky
jz3/tnvvPXztC/744Zlf9I+f/+1X/OnDRfdcUd5X3Hnn4e/cf//Zj7zxyec/
9573HL7wC77g8DPv+vTzL3/2R57/rW/91sMvvO+zzi/eO7/Ic/jFX/hf1rfU
4efe8xfPv+7u69d33/fz//P53X/zX1l53v/rf/nim487/95Xv3rV+aue/8dW
Oe/6e592/tfveMz513z1Vx9+8LWfdP73Hnxwfeuur/oXzp/33Oce/sZdjz14
9m333niRvuvsp9/5zoN6XtT77Dfe//6Lv916+O0PfODsi57xqPPf/sDnHb7i
zusOX/asj7go847Vri/56//k+Zd+yZccvuHFH/OItHZ82bOedfime2446Bvt
veiPw/Of98+v7873HrvSnn/NV3/0+Vc+5zmHi7Yd9M/XvuAFK883v/TfOv+m
e+45/MBrnnC492/9u6s/f/zNt6jjRX++4vBT7/jvDvd9x39w/l2vetWq63e8
8hNWH/zG+59+eNV3/oerz37/9/7a4Xu+++pKf/7ttx/u/97z8+//vu9beb7v
7/zZlf9iPA+v+f7/aD2/6L/Da3/gPz7/ode97qDNF99eaeX41ne88pXrW8bu
l37xFw/f+JKXHN721qedf8Hn/2OrLOPwVc9//mr7N77kX1/vft3dd6/0D7/h
DSu/9I+88Y0HbZP+sTe96WC8Xvz1/+p6/s0vfekqp/wXZS05Mdb64WJMDj/6
wAOHe77x3zj/+fe+dz1XTumXf9u/d/73/+APDj/xlres/NLk9lu/5d85/63f
/M015vqKXCpLf5IT+bTxK5/zR9fv+vCr/8a/eH7nl/8z5/rQ2Bg3fXIxPucv
+YZ/7Vy/veLb/9SaG2TsO+97/IXsfdz5G/7uf3Yhmzed+46+kk950vr3u171
Z1b69T/0n678D/zIf7HeUW5p777xh//zlZbf/PLO93/fnzt/60/81+dv+fH/
6mIufPL5T779Uy7m5S2rLDIvn7Q5Iv1Dr3viek9f6GPyr6/0NTknb1/0jGeQ
3SVvZEAfkisyrW3GxHP1+8777lvz6JV/+99f8++Ln/nMlZ9skBn9TFZ//r2f
uWS4tG9/y8tetuTW+PrWjz5w85oL3/DiFy85f+5X/nNL/i/6+/DCr/2XF5bI
33d9S/8ZQ3KlHz7/9ivNh/M7vvifWPV+x0/+t2sMpd/8Y3/+3ByWvvjewiiy
qp+/8As+bMm952RYWv7f/73fO8ij/8iIb+tj7/qWPjfn5SH/ZAkGKud3f+d3
Vp8qn7xdYMvhTT/6X65ypI2b8uFSc0c7f+ItT10y6LlvyWMuSfe8ukn/8Bue
dEyTE3nMF9/1fOvf9dz4Vaa+Vgf1VL7v6sMvf/azD+RGPY3vT7/zU5e8wNsr
V26/6PNbz8056T/4/f97yZj6+4a5AReN50Vfnf2jwFknHjzx4IkHTzx44sET
D5548MSDJx488eCJB088eOLBEw+eePDEgycePPHgiQdPPHjiwRMPnnjwxIMn
Hjzx4IkHTzx44sETD5548MSDJx488eCJB088eOLBEw+eePDEgycePPHgiQdP
PHjiwRMPnnjwxIMnHjzx4IkHTzx44sETD5548MSDJx488eCJB088eOLBEw+e
ePDEgycePPHgiQdPPHjiwRMPnnjwxIMnHjzx4IkHTzx44sETD5548MSDJx48
8eCJB088eOLBEw+eePDEgycePPHgiQdPPHjiwRMPnnjwxIMnHjzx4IkHTzx4
4sETD5548MSDJx488eCJB088eOLBEw+eePDEgycePPHgiQdPPHjiwRMPfige
xBfkyRy+bGl9ALPe87N/YeGBOaA/yQMc++7v+sRzXGJOfemXfPj5z777M2Dv
2cjCY6U/UXn6/kJGD+YwfCPb5JYMk23chwe/57u/e/EavPnB17528WD8+96f
+5+O3Pdrv/q/nZszZPVXfvlzzs0l424cv/iZj158A4fUzTzFk/HgT73jHQuz
L8bwTBoPXsjPGVnADxe8d1CGNuGpZ3/ZP73kBX9d8OLi2AucOcDK0rhP+dIw
Vdq8ft5zP2qlL7DyWAflqLt3fZvckdMLDF34o1/JVtiCB2FCz+GPeXkhj4dv
f/nHrz5Qbxilb7QXNseP8Dzuw4PGEL7BVuk4cVsHrXScaHzjUFikP81r9YEx
sM747Osfr2mXMo2vtDLlM7Y4DT6aS+WXJmueazvO9b70L7zvfQf1gLE/++53
H3wbl8hDZvQJfJcH9v/KL//ywjT5vYsT9RUc8DdpWOQd/UZ24aP24gxrH9yH
a8klufWO9uEYPKher/vB/2TxoG/Ko69xLLyy/sCxOE2/S+NN7ytHHlylL+EV
bMGbcB6ufe+rD+dvf9t/c+RUsg0TvYf7vONv8BkmKrc0vPrlX/pfz9/9M//j
Oa7wHL6ro/ZZt42MP2rJNlnSZhxIxqzfyKf1j3ExPuQBHhgf81z/kz2yYQ2M
EzyXR35lko0Nj5fMSyvfXIDf0uYUGblo1+EFX/Mvre/Gg3gWVujnn3nXuxbm
ww1jZdzhdNz04E//D2vcPI+zyIN+0k7P9Rf8Jz/6yZz3Dc9/9aGHrIcPxovM
4BR9/eu/9mtLbpXju9vcWzzoXXhIltQt3vn6F73oyH3aJr/veq5u8isTH8mD
Q+PfeLDnpfVLHBfnxnfSylT/+N14VDdjRpbUwbtkyXPr9TAzLjYe2g7/yRQM
w+mv/p6z82d96T+1sNwa+WJddUaXuMh/Rt/53d/5P4/ccZnSuAbvwCLzTn/A
TXNMf+pbsm38revgC1y/wMOzWU89Hq6emQvWPn6HLdZ11hHmO/nU/+asssgY
XQ/+kFvc532cGA96vudB7+IeY0dXJZ90LTiP58xT89qY0+/e9ta3Ln7D1/QH
vIQHcTdcx9f4ec+D6Xe4jxw0f/Ga+Svtm6Xlx4M913Zc7bk+Mt/1Ce7AEWEC
DCHLMASGpwPCGXPO8w+WxmXwNx5MT/QctuozbYPH8Z3+kfYczlprpFfqV/Ux
p+CD+nn3J9/+9oP2kBHjb9zxwbZ+Wc/V3zzRLtxNJ6XfwR46szr7lvkojaPk
U86sS16xMBbuqYc8peWh1/ie9uIxbcBlZE4aX6mz7+EeafKsXfLjYM9xom/j
Lpg5uuVNy9ahLBhAxvyNzBsbcoZL1Mm6EJaqB5sFLKLDaSu+woPySevrdEA/
xgfmwD7cCyfDGjgJl6VhfvognJdHvXCbtHrJ7xvKhXXpjcpXrn/9TT6/+5v5
DP9e9s3/9sI9+Ab7ySQulDbO5AcG40qybR7B3dY/6Xr6xhiSSby5cciB/Wbj
kCXz3sWtsIRMKcecIgvKoYv7rrS1BSzHg9psDaZcfQLDja92xIPS2iGtbTgR
bugT6xxpfRaH6jvrKHXCs8pXD2sVcm5ukwfPt7m95Ecd9GPcql+lyW28pm36
mRzhQeOlzmGUOviuusWbxhAGwcN0N+Nh/JSjbulx5Ylba5f+kqbD6h95qpt+
k/ZdfSWtbtYS8E6d9Zt1kvmp7eQdRpq3xvACO88u8h+572JundEFYekHfuuv
LHudOXiZ0nQ0cg9/9L++IutwBn6QT/0N/9gSyRRcz8ZYOt3H72SMPkjGyAP5
1P90OvlgKI4zl6TZedLTs4umM1qnbxywsEs5yjS++Cbchu3mHVnGg+R6bxfF
UWy2ZE1b5GFfwdXZOXGffOaWsul96YnphsrHHemG2XzoT/LoS2nPyZo0rsTt
ZFme+AWewBbtgwnwilxbb+NHfSCNFzxXb1xg/Yt34Kw88Vo8GPftdUPl0D28
C6OMkfFlJzFPzV/1oANlR43j1NmYqD9+V2e4px/gWHYzafikT63zYZL+osf5
lrHDGfRBaW30HG5o49g1X7n4MX3QuzhOG+hk1sb4TtthC/3T8/jOc2PsG7gr
2ynuIofkUn7jSpbxE70F1ugf7YS51nLqR6bwoHf0B07Tp+oL0+jP075blt7o
m+YR/PVNGFXac/zqm9fqg963TonjvONZ7/hRD/UydvC6f9XDWsa/cBAemyPs
O9aV5pp57sczdYKj2YTJqbWJccNr+oz8mws4a+OEI9+Rh/0aj/0/+bdu8Jy8
mRfS5NOcIgvk07vmjjScgd/mGB3NuMMEWG2Ob7K76e6vWWljJ23NUFp75YEh
+g+Oea5Ma3e8oK/JC0wzj/CJeacOe1uKvlBXfd+8UD59Sr50LnPDt/SXftnz
oPrDTfPcmMhP5uVPf9yn95yoHGXq077leftTm83oaBM27uomja+l9Snuk1YH
Njf4pT+1xZjDRb/jvot+OYOP9JsLbLmK97b9wLOL+i0OlG5/St9dpvSFLK7+
IXvmMZkhA+Tf2MI92AHL8R1M0m8XY3CY/ZybFz/C+U2/X3ZR5Ri71mzkkE5n
zpCTi7nxIXnQunuz631QHiQn8aD1DN0PblvXmE90PbJ8LQ8aa9xN3uWhU5oT
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
x7sI9S28xUV4BDaSQXxJLnAnbCwmDLm1NoU95kLnBL3TWQlyay3VGWxzsPOD
xdne7nU43iUE19Ste5cmTtjdSx8sTefcfL+OXK+N+Gu7s/ToG1N60zWP8YHl
h4nFzzEn0hnpgNL6p3hlyoG/eMq73VlDR8suai7mJ6Mt46c/e3zdkYcXzAc4
qK3mHfuhfii2le92N6Ly1T8ujgd9CyfguC2mwCP4Mb+d/f5gMfnln3uD5s4a
OhYdW9vU31iod+cs8BROottZN+AcXLm/1zJ9sLhq6lMcNu1St3Rk8rKtIZac
wCQcgIv8nWzgYDZQPKEsMkcfYY+Gm56rn3UT/KczkrO4UrnKz+aJJ+AaXRE/
yqP84qfJh4OKH6o++AruZkfFnfKohzJgY3G65YeZ+dJ4d3w6blk86Nudn8CP
nS+UtzMY6tL9FOmV+CkdUr+kM3auw++dbcQ76Z/tTbYfmT4of2f9lYvvzGNl
eQbr5fHcOld5/mUL9De4Tn5xQVxL1yc75kz3i1oTakM+ltrib2RCmuznGwMT
yKj6WY+Sdd/KH1T9i+05d37M3rrv5gcI7/d37PWfOcOm4sc6rViwzi90tnLi
2B+WLcA4GU/jm45XHFjrAX2lb/wtvVo5/t4ZFs/1pW8oP19cP/DWfPCD/2YP
8+6ro+Mtv52l6w2X3724br/3FyfO2bb7V35Yn19pZ1zw3ZwpnH3S7Kb0Ybgb
X1zWdNynn3BfOo61U+fyiis4doTrFo/oM9iRXZRcxIOdo+9sLHmmbxQ3hp2L
HMCobAvS8SO86b6VYpMWt8G6Dnb4lnr4e3ud3TGx2QuOsWXsWxb7opi62gUr
976jcVCxYnBZ98vLg+OykUoXe0ebilNhvYij5Iez8Fs9tCmfz/ww4XwxP+FA
5/q1BdbhG7Y+8yF76PgpvmPpwuZGtu7OMyofD+7tscZh/MWuP3Kl/s7PZx9D
hj5kPUIm9jGK0wGLrWF9Wow1bYk3J37x3cseBXeK/1ksjj335f+jfuq/3cm2
uLg88NoYkCc4XbwXPOB7+pvupJ34EefgRn0Ad+XxN/3XmQj4j7/1B8yEc92p
hE/TJdXVO8ohc37PZyZ/GPylb2A1PIwHu29CmZ55F+/5Vvf5mjPS8qi3v5kv
nc1Ib1P3eAsn+rf9RPmyu8aJnuVPo+7KaM+wdDplZyx8Mx6MN9NfO8cYV8aJ
+ZfGlea3PO0nkmHp9hTxAt1Hu80BcwLOFKNP++27kAflk+98RMm+tZrvGFtr
bN/zHI927h4+aH9xzIpnDO+sPWFbZwJnr+0m9w2tfezuklBv3y9GuX/Jqrnh
X+OIs32nvVH6HN+hfIjaVy3+Qfbnzrd03qWzL/6OB/1kI/UzPngfvX62c41n
8eDsG96+uA/f5fMzZ+LvX8/nzMptR72Pjos3N3vw0gvnrokHr+55sBhsuNYY
5TtxmdLWGPt0e17WU/lJZg/Mf1J+mE/u2NL0HxyBhXRva9+NxxYPWo+RQ2sd
YwlnzY3W98Uaha1kTdpz86o76ztPsd8LMEdgAd1v02OP3GSfCq6Tgc3P/nie
F8azqePBzgzGg9L5/MSPnTMif/WJb6Uz7nU3dU/v28cx66y6euz1QTgbD3Z2
D/7rz+5/ty603tdm8wym0uO7S2Lzfz0v1pW0OnfOMT9VbdE/uLizhOpTDDfr
Yxxg3a0s89w4eAfWS2tnNlLfhQfWKd7lSyO9naU88p36dmcEfCs2Y/6l+mhf
Z2UWcwYGWRPAMvKDF/EXrPd8Yjs+4ZiG//p07hmd+DDWbrhrrz+yX6Y/qhO9
z3M8Jk1u1bu7JOShB8Zx+iNeU19Y6F3cjDvoBsanu3rn3si5p5cstBeJW5WJ
x8ZuN/cN+l46n/bFV3C3+wpL+yEf3vUjHScqVx9232F+MMV0iyv1TzosHs4e
W0yb9Mr9mcZ8TLO7wm/lZYP1je7J2KfbqyTXsB5fkOt9/DprEPogudSGfAw6
NyGtrHTAzs4Xq7OYxsbEGkz+4lJbH273uh3vWOkeRmWqm/LqH+3G1+TBWGZ7
hkPpdNqQX23+RrAs3yhtzidmv8+bzy5doP3CvT7IfhoPwiVrfT8TI2ZiZY/v
y71L76PTtce350E4NX4cY/8svnYxRTdd75jurH06o3JwYbG24oLLkk73KW7Y
PnZKaf0PC/Xl+HzdsfAWrtJB9DvZld/zfFfwYHdsWd+TkdZyeBAuwU2yRxbp
G91Nj7vIUff0FGemuyfiwfFBf/vC7fjIGMLduQPwrmNcNbJiP4rdEXebK+2N
aku2Tfay/EJL6x/y13P1zSdzH1s1+7Ay1T0u0z/WraVhPMzvvl1zsjsK48fu
wzUXzCvcC2P0T/fMdlevOZwPsLWw9Yk0nMh/tTsvjIvvbmdZls61v39cOl1M
+cqC790t6LvW1ca+u2myeVqTKBcPShc71Bh2B5N1jX40XluMqEN7Q/LABf1o
fwhWzB0/VxZOa499RGmyZI+XvjU28SsLv5VrTYcntIdcZ//Uh/AWp9ElPVfv
ics4d0noezwjrV74RDv1GY6yDjC26gYf6ZPwDEb6G570bGwZT1jcR9bVDb7T
fzqL0X2F2jN7qk898qz6eD7xLD/lEWf28a50HKjs9vn8np8pHu4sRnuAvqdN
uBbv6AvfVvd8h7oLYx+3ex/PtN/hfHpT+5LxYvdHZXtVH3nUu/P7c5/R5yzc
5xdS/DbP1c0Y4WP2KbKi3O6xKL5099pI40HrDXJhfamvu6NEO8ee9ejFV9o3
dwx+1qqDtvq9vjUOxtv3u6NDnbv/yjv7GObp1/n55uOr3/VVe7j7eLLtpfpX
udovnT64t4tqByydM99Xrj58nvHKke9wWbZQGJQvaTFz5veHOQ4O0vvolg/H
mblt7S0WX3T2UB9ce4XFCYGHlymd3U+721fq+T6dnvW8Lf5YZ+el9SWMwAuw
19oSTsO3zu/Eg/iV7S/fmC1mysIMfEYWYAwMtS4jx3A2ruysUDxIVrs3Cv4V
Kyl90Pqmc7vG2H5aOmz6INnBd+0DStf27hWVpnOUNj/Nxe6V2Pz0j/G69U8x
V4ubkZ9c5/XwYHHM1M8cxcXqA0fZdrd7TBd+KA9+6UNrieKLFuMlv9DGq7ui
Ohuo/7oreeJDT6zj+i37bTxoTNuv7K4KXAnvu79GOt8DOIrjtr5bdZNHG2GS
tmmD8pWZP1X4hu/McW20PmMHhkP6Ze4aPCwMpE923gonwnPcLw950GYyB3/Y
ecks7E4HhM/dHwHzcNHEdv+kxV/q2LmK9grpFXM/xlOP/Djn4ia2Nl3Lu9ra
Xfbmh7ZYE8gDB/Mvbc9xzn/MGQ3vy69t8vhuvjedxZh7I5+y0t1lrw3qS0a0
Wb2sIcPhvQ8qfU/bfcs8jQuLgTP2lac9Qpf0Pb+na/rprH/6aLpN6ThTX8fB
6uBZ9uJ8i/Y+Pt0blS1VO/3AJrYD9SEP5EmZxS7WFtxHB9SGzofiLe3S13hl
7zdUzB/v1rf53/pbMc/xFvwpJnlnLltf5GN7bew73/JvNmjtyUepfcD0YvVU
Njuo72Q7bo/Qc3jHnmu+5C/KLpr/J44rLhrumzMgs3dobs95wHtXnvTB4six
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
n409kLztebB4nvAYrm9ysOyi5Ia+0t1S1t84J38hvE1e9rG19+l8h7S3+DOd
o0ye1CHdWTodkOznj9rZQ2l1384Frdh0nYXkK2ZuwlO+1DB0uydqYQm7n37I
D0YaPm/+Lku3UFdzGW4Z49kXmdg73W+oj8h7MWbpCt2rC3fgNB3cfC/+J2zs
PsH9HYJsdcZH26yFcXVnnOXHwTCBrmpMjR0exP2eqyd+hC/6ZYuPvtYGxSPt
XRjS3p86exc/yiOtDeRQ2/QFXCR7foehxnLudj0s+cQ12tJz9TGu+pQuPmdH
P2rpM+bJrO3+5Pr+xIO+YWGGuTJ2zwdW/9hLm/g+Ex9gbOJ/bOEoPspeqm7e
UzffpD9oozztD5oveCj+mrl00/msq+YMo/zKz35LBvWDd3Fbeit5xOnl128T
I+PRxzRsL8a7OhQzB27jHH2nHsqH58XkMd7G334XfvLN9tPIYHyFRzt7kV+r
9vu+dH42nd33u3Hsro3uotrHz9HudLl8Z/YxXjrLFw+2N1h8m+LDwZ74z9/o
azDIO9rdOdP8itPZ40RtIFNsJfrdv+Sz+3XJtPVttlDjNOe+rjvvXic+MJ1v
wIX5wHi25z7zdvPxPN4ViPO2e8EXHpZ/7KY3HOa+wrXHuPzdzH/zaO4e+MDR
x4yNCd50hrf7WLf7Ky5VurMA5nZ2RWOYbbD80vlI4ERzP/seOYarxoEMw0x+
MsU7gqt7fTBew3d4EC4XQ2avD8LBD6YPwqX2B61T4Pzgypxz3/ww1h6w98f2
edfiQfy8rbmO8UXzbym+3LU82D7g3kcofTC/Wbw2a+dnHtPxYDqjNFmXJpN4
j7yyY5gLnQHBg+YoPZvvGKzUj3xmilttDtkXoot1TzHdzXNYbk3gORm2ZjDf
2Phxk3m8j3daLG64ur8LnuzzyYFzuFef2wfpTsBiF+sLnI37fDfeNr6wDUeY
+9aZ5pkxkac0XaM4bDC0dN/yjXxs9JG6KZ+cyYP7fIuOZlzxKNmA53hImfRi
eIQDYBLuHv+SuUNOn+EuP7hz7gS+b9m3vauu8uNi34NvcEL5xsn7/u539dUX
0vhcWh+SG/Ki/saLXOgTWOqn5/LAn4nr9FHLljm2iesWN2mDb6XHGU/5PVMm
WR2bwHuXXVr/qzPZ8S481icTw+gx58Uc07/KpMNpH17ovMY+Ng7uiQ+6w0nf
5+uRT8vY+R6OBaes7tHQH2RSWruLYaOO6X1zRvZpxzsWs2dm38yfs/g13Vns
J1+azvRl++w99WbbjBuLe929i2K44D+cuPmsrD1A7TZnJp7Fx63+M09wiHkD
U8gfLDKnzLl8zKwZ9KWxNsfNbTrB+BjeubDpkXdePHDWub/tHp1lz8SJs194
/dL3tjjbV5+33RXI/mmNu/nobee6X7d0Sj5w9ELcCFPMAzJqPuYzRsaK16TN
uEEbyV8+fpcpbe7GHXseLD3n7sY2SJ/OD0Tfjr/AnUc9wljLYx7Bd3pXMW+N
s7WV92HLtXbRud/m7eu5uQWb9jZAXGntabys26zFyFx2v/YHs4t275K1kzVP
d5zteRBG4aliC8SD+QLlF5SvLDzK7yXbZvFk0q/TDdMB48r2DT3PP4csajMe
FCdJfr/TS80RmGJ94bwwDCCfYkuQV9yA49LB9G1305rD2mZs5MmXBqbBubhM
XxqjYmXnS2OdIp1N2hoGxuo7umfx7fC1tPzSOBTW6u/OR6gbHYI+5HvKMV7O
XXQ2lI7pW7jIHrPn+Y62P0gelKNMHKZf8LVvwyftVS6MxTVxk7nrG57Fa/Af
NtHjyB1d1TfIufb6tjW778tP/saX7O61r8lmTG7Io+9Yf+WXQifQdvJpTpCZ
8We+7mgP9l3fw6fWKNYX2uebfpdvzgWN300+E57PnWDXbfsOV1Y79LcyPLMW
0N5p58sPxYfd2dqOfYJ7jB+5wTnWIvmI6jvtw0nWqJ3xN8b+lh5DFnEHjhk7
0NOOcczyx8RtxSztPH7nDLOX4s3elb/zfPvYnJ1dz7czX5a97XNv/2x/r7MJ
8WIx3YqBiuvMH8/MO3jkHfvv+oUM4nj9ZHzIkvEiH/oyWxnZsddvvhtz8mJv
onssra2Ubw53T2a+TNbo3fNLx8NpfrrzaIsHsvw6nSEszS7a2cHtfOEj4snQ
+XBf5+g9Ly6UesNXmECWjA358Lvxg9vWjdlFySu7QNxxmdJ7TuyOCdw39p3n
LLtZfiCeFzcMd5innQGHb7BNftxEDq7dH8wuaq1MxvILlZ6zwu9YfBcPSsPE
fEp9Dwbuz+ObK8ZHPfYxPNMH8aB34sHum+j+weyi2QavPTvpeby/j71TnBnP
93fmdvYwHTB+3J+naF0hbR4508HuYVxwBTups0PmqfazhVrnwlw20vbVpGGu
Ntljh2mdJcGTyjHP4atvm9vmonEyN7c7vY93YdinhIPtl8O7+EhblM3HSD+b
S8pMX/N7MWG87zle8hx2mme4Nn/Rbb2yxlYaZyhH3bqDHobjO/juuTL1F4xn
j5o43G9ZaXvb5IAdcu44f/dqV3e95jtqPNMBfcOc176Rq/cd5nzlfYfsReRW
3+gnfdKdGMZbWXgofQ0fGg9yba2j7vmukh110ef6aPyq7lzYOXGMnrG+a72i
DurnG3Pv4ouWDg9Tu4uR7Gz3cy18e952/+q27tvuUn9gYSC8TL942M5936GY
18YHJ1rXGufiy42d/lOP919YU5EnnOV5NtDuEbYewVvpfZ0/l6fzeLhSXnxX
/vS+uHJ/3qE7EuOwPQ92rs/v6YDa1J3vxS1rP9C62u/KxkXmjDRbU/He9Efn
TPUFeYNXxsx4mFNkzr/WFe3/GIf0PnOELNC1jH37ivqNLdT31N+4Kwf2jm/L
3ev+CDw29wTe/Yi42Z2PoAP2DG92F8Tw55VD+XBlcWe6f1BeuEcWzT3jNPs0
H7naDmPISPHr1N84Feu+u1k7f3dZ0jiu8936ovha+sO4j23xuqM/YTHB9CuM
tpbHMbDLHPecXJMfusY+Jrbxh0GwPl4rdmh+MumDsOuD6YPdT/HBeNC8LV7Z
h9IHu2+CDO/tot3DW5/k01LMNPy4j6tWulhz8WDxV4tDHg/u45cqUz8X/81c
2OIErvWC585HwANtwncwwLix1ZjTZNnaEkbhA+tLa3bz0Fho8z7mOa6dNffc
UfUt2x0T7DbdfwFnJ77z3C8PB4qf1n6sPDA/boId5g0e6Sw8HZDNSxqXde5T
+3GrNuMe9cw/e3923v5jcdjwtfpol/kIa+BQfjV0VHnIm+f6Fm/JjxPT+9ge
1BmeWe+RVesuYw0P5KPLbj56a46oJyzr/ih9p376T7vIon7yd/Ug1/LjYTJL
b8BpZMy3ydDmx7D5Mj9xlef3uTvoPWvtKL+yN1+lQ/ONXMw90+vunIVpEyfi
5sV53U8++0kPbHEk555N/am93a1hHtLByaj5TTb0l3UKjjBv6XLWrp1noFPl
uwLH05WK5SIdj8HRzqor23vdn6GseHB/P5Tv+fG3+E55nXHIJrrnv37S99QV
PnTHn/sb2vfDw+ZD8Qjy4TR/yANcIGt4zfzdzjOveaT/zJU5g35lYQWc7Mzv
Zkta6x95ca/2zppu+Lc9nIl9fP8hTrM+wX3Gzbh2b3y20PxCPW9/sDgx8qtr
d9J3fqIz82SCXgmH1Jc8wVpYYw1ozUPW4Yl1rLaRf+PiuTls7QKHrKHhQHGo
LlvaPMxfwry1Z4S79ncR7n0gzX3zEkfNevmGoz6oTLLbnN7rg+TBOglGF0sN
huz3B+Vpf9DzeHCvD5LreNB4kWXr62v9RY27dZX35+73e/4Bu+j+HH0+sfv4
ovm0FENgH3N1f8dEd+8Wsy7u28cg7S4J8qVMafhr/qmbPhu7Cr31M5ZuAaPE
VSsGAT0RJxqT7uQln/pZ3+oTnAJHfRcetVdrzQvr8Zmy8aP2WM/A8GIRmNfG
zpq4MxTmuPHxOywzP7Z7HZfeh+fIgH4nB8bN38nTft8Qh7bPaN7Fm97Vfjyk
Psrb7qBa2NE+Ix4be+jVZT9Qrn7BmbhJPccX6v3LxutdPEgG9Q15M0b+1W/2
zXw/7tIffrduMxbFLoc1fidHxm3OXn7emjcT1/V1q1/ZLtXV7zDRM2UYZ202
d6SND+xVB898V7+YY8bNfDMP6XzxoLXMdtZ3YR4snBgjE2ck3cFP50Ly2Shm
y8O+GFeO59etI8hU8c7oVJ2rl8ZNe+6TJ/9MOJpONzL1lGOeeC2fT/nJS74y
5Kj4n/ips4Fwl1yXxzM/yogDlbu/vxY+mCPFKat+1u2tTXCcfrb+GDv0xJUa
W/L4bJPfzjHpv/aJzP3uLCNX5Ic8qefEofjIFSe72HbFaMW5yQrZsU6h801M
mAePd93Cl7Fz3nq8L77YaPs74rfz7mcPx4m542yL+39o3ZOuOPuEK5b2wj3y
Zz1X3KTZxz4sPcW8MpaDJQ+uez3IC/mh39ePMI08Tqyuy5Mev++vXnPO3CkO
M6yG7eaf+RwPdseQcSu2tucTt+nli1PiQeNvHZafDPn0fvrgXgfEcfC6u5Zg
Un4yMGWvD+550Nz4YPuDxrI76LuPnmzENRNf4WF98HnbPbb7mDnkcR9Trhh0
G1Yd75LoHgrPi0nemfrSxWfLLqqcYn17F29q/3ZP2LpvQln6B99pszUIu4p1
LVwXj5eMakf3EuICY+E9Y5oNFQeRbWMx52OfuPrN3OgOemvcYuN4F3bCCPJh
PlvnygfjcFExseMQ+27xV/uW3V9vPDa7+fFOXmWqpzrQE2GTNO6jJ8It35qz
Je9Y3O1bdKt8Y3EIfdO4+ps6m9P6hNyqY/thcwfxfesbE3t1bKDajfuNiXYX
Z8caaoulsLBli0e37EtwU1uV5bu4TVvgCxnU33tem72Ee5bdon1N9ddO/+pz
7xc/ZHTE61d6i++6sNqc2u6cW+v8LebRkuf0O3JaLGr4XMyA9GjcZ61BR+nM
Q/cAz/pl7JryxH10fXInH/nK/lksU8+LL9qZ8u6U8K50POt7caK8yur8e/42
2UTjwWKusc0WQ6aYan5ghvlvLWjNieetSfQvnCCHZMRcNo7GbPbI1p1Faw7q
Q3JlTaWvtUEZZCSfK+XRPWGX7+A+c9X6Dr7lPwRHydHw65Wz7grEX7NWGRtm
5wGNbzyXrbuzEviZXkfPk986aPPvP+QXup3xWni02QbOwjblWf+QUe1Wv7lH
9jFr/Npb17/aaA1ZvHprSHwOe+iQ+pi8mj+XKW2uGDM6PxkonU0HJ+qz9sXa
H9TnEwvquWs8Zs/33jV32x+0BiKv+cmYd52buPasxPhcv2lx3LU8uO0/rzz5
yfxhdlHYNb4Cw30figfVi94T38WD6W5xX2cDiy8aD7YeiBP3fqT6pD3B0nHi
Pi0/LO+sh/mQz0zx0PiUmWP4yvrBvMeD/GfILjn2nB6IqzqHrk5wx1pQ27xn
fYeP0uOsD3G0OmQjhQNb3LTFL/LDMv1s7Kwb566kN6w9PuOg/2EofFcWrIS7
eKJ7KPDAxEd+1+KBeJMs2ksjC57TF9RT/czT/DzzvTFPjYW6kzl+Bp6bp/42
8ddff2j/1ho+2wYeKTaqf9kGYIXn5IZ9isx33qqzVmyP/qY9E//mtUvP1N+4
zzd9T5vZqqzflZd/ysRoeNl6F9/Ja2y11zxTH2XmJ7/FpF28qG5zD87NC1dx
YzZTMgHj1MEawPqVzp//J/5rL88aRNqcMZ5kwLzVf7AO9+FSXERP6/w7LjJW
3utcg+fhP3mzriJ/3StRrGy8OHc1P/mY7i6Kzgl2J3F7iNLdfeSb7e+Rdesr
9dVm/TX2j1esH/1I9oqrxxZgjaQ/yA/ZNj7kkA48z5a+v3Rk841eDPNnvfWp
y35qnNVL2joS/hRnRz1bA6iLeWNccVXn37NnGlfpOb9w+1E+xh/0+kP7eTBl
7KLXLx6c8+73r33DdEbyQK6syYojOucLr19rf2s480mfbPrMkhFros5BkA3j
352exhT3WRekS2u79ulz6e5iI4eXKY0Hu68c/qcbwvbudYWT+dJ0px4enDiL
z1ljYD6wAZm/5hys696l9EE2C/h+LQ+SJRxn/U/GlAvH8GP3l/9hPAj7uu+1
+NV7HvxQ5yau5UHpzstvutFh4ovccbRthq31SXuL6YPpj93f1F1Oe59Ssta7
3ffhXdylbuaAuTu2lPvP7NfACn1vf9AaXRlspM1h5ynMTVygn/WVPoAzdM5s
OOSfjqSvYLBvWJu095cvClyBbeZK++kTt+z+JQOwZItDtNY/nZfX135XF9/P
5snOrUx46hlbIn3D2HZnve9Ye5MRXKyc7qXsHL0+0sZwS7nKmLgHL162Q9gw
+93PXvI7MZLuOvqcbGuNJf+bbfF4X02Y1H3dnbcae9Oyay2bJ/4ja/gNNxa/
cYvRusbZ3+CuOsKasRd/68Jn8oXfjEHrd+vSuVv1+uIcLx6Ud+IOPLDk2pww
h8lAZ7WtUczB4tLYdyiuWTxoHHBUsa3xWOcB8/EsjiiO3Mflxhvpid1j2HP8
JL/xV05c2V6h7ykz3TB/mO568A3vF6da2bhSXXCS/jZuxlOftc/lObkmT9Zk
+hc+FL8Wtms/LLNuVPbETrpu6ZXmiL6yPoc5cATf0hOML+zqPIz86iufvqVH
k/FZC96TrB39kbYz6mv/LjsnecqeAIsmZuhDay+vuwKtn6TlZy8lBzhNujx4
EV5Ij/xeOcZJ48+l/OIlktdtj2itkWCxsSnGoPHv7rNiy9sr6Ixq+qB5OPep
PzLe1GVJmzfpfflvdKd5+4ZhPmzpjj/rms7RGw9zBg7pf/JuvsLV7h/EtfjL
t+M1/VwMbeliil57jv7/Sx+MB/29u/a6d+mD6YPxYOfo0/U6R38tD3Yuvjgz
6YD5yex5MP/S7rhXDjndnzHc3z/YHb7tRaZXatO2H3QGO+Ze9DcvGymewxvS
+BGPWUtYg9OLrKO7x6o9Vs/z4TQW+FCfmZfwy3zBR/nAwGt6X/4qsJI9Vfvz
S+3uCficnbO0+snvW/s0LjMee78X3zZP2TPNTfPS963VtGF06jsW9ygD/+By
fZtPpTEx7v5uTP2rj6XJur4mm2TeeMAPMmEdADvId3H6jTWsoQPKl91SnZWb
H6nyYI/yNh/lZaPK94U86yd5yV26yxYLYL3n+9qnrhOnbvw88Z+x0mbzB/eZ
O8YVlsE2ZdLxiucJn3EKeTFfzMPu7OvOA33eXU7x4JyPGZ9QshInyu+5/NYs
uEl58nf/oefKJCvydwbC37JbKss8Lb5MZ+s9p38pV35yDIO1eWJL37PFx7z3
OE76b/zNnnuY87S/ufqHfJOjbKH4iRzDlbnD8w/WOpDdGCfaV8zWZ77AMnMO
J8IcmG8PQp2t17Mf44nxe35p+8VHvS95wFkTd+PO9XvxHfHd+IbOeT8yM7Jz
7+LE7sr179wJOHu+8WAxtGFC5wE3vXF9a4sTuuplDQaTtc86ydyHd+aYdcnY
kH552UJhOh3Q+iPuKy6f8SgOg+fdrWYNeZnS1t7duVOMLvaXbGWwxfP26uUn
h9YpxRAzFubP2NYeOOt+WJhzLQ/69j4+DGzv/GD38H6wc/T/MDyoPG2BRTAo
f1Fy2xmK/bkJ42qvfHDvunXfhDQ+Kr6c5/HgnDkeLitWeVyZrTj9buLaPvYf
iDnTfUz52JhX+lw/52/j+V43NLeHdz7qkG6oH/Ggs7/kVR+yIZJb6978I+Uv
toUxghXqV7xz34BB8MTvE+/47Wue4zhjZZ1U/G1rBeXoX9zWuQZrG+v32Sdc
+8RL39z0r/PW69lFjeng5gNrDa++o3d+3yG/2bnP9yWHsU3elH1nrdlG7m5a
MqYv8R2u2nyzDsXFmxgcNx+KTzw+vXdt9wO/auXXB+SztTzfgvbd4HE8qC7Z
S7d7Rg5zfvnK4mLP/GssYSK+JDvWg7OGuG674+XZq07kofs8/B3v+V57lxP/
9lHns4aas9pzT9Unn08M9BvP8yuGW+ZI90nAefOweyX83Ron++fYpB/mPvqa
593PS3fEcfGb79GHOvMW16UPdldFd/bmJ9P38g/1DkzAfZ6rL47vLLE+0V/6
JP/azm/qy+55Nh+SqfGBfvRa4+G44rXAeWsqMj/3JTzhfO4GePTiNVhmvlgr
4nZ6pDmFu2GJ9qqbMdh8qY/7eeyUZCW5irOGj64/mzgj9xxjeLIv+N3aVr6x
Adx0iNv8y66prLhPmdlCJ7bMYxYeFGfbe9ZesJte6e/sN+afuWz+4jc4Zyyt
D/SFMaXj6i/jDoPmLMWTVnv1A86Hw+QtfVBfwQ3rPHJ+mdKw1/xuT3DW2k84
7g/CnXwju4doH0fFusMYzF1tz11jPLGQ3rTKJ2/7e3jnjNWrjzpgcbY7R9+9
S9LdP6gsz/f7huq33au35B6OwWp1hiWzD3DDkst4UBqWkOn8n+NBcjE+6dcd
9wE7Q7G/n7H7OPJ12d/Bce3dju0DktnidupDfdA5R2uJOa/9+KUnprvoW++S
bXWG7eQfDlnTycdPhs1L3+lb89c6zzoB5pBnPgUT4+rda17AA20udplyxuY1
90eY+9Ym8Jns62OYpG+Ls21OKY8+0j25bH24b85WvfXQ2Re/529jTD339/Zr
wiv9b/7OWD+0OE8d1EV/Stdn/sVN5Ms72T03G9nCBn04/gU3rXPG1h/F3YcH
swZ4aItp99DZ5lO0/Bnko4/hW/Ni4unefkhWyM7s4dx0GB/3m1beufv75kO2
LGWMj/Azlv7q72TBmtJcgeXdz6E/zC19CavIlOdsbvogfQlfmAvZGY0vLmGj
7N47633j7zl5kU6Xk7YWIRN4IV9SWOe5se3ee9/CZ/Ia/+4ljEO7gykbaX4y
5n97i+mVbKHK9dxeNznDz2wb3WVPHvTH1lfrziHc4Jk+hPfZ5udc1MvWj3UY
/Nd31g5sHWSb/MNufTvrrTkrJ4/4vd1vS+/DDZ1p9+18luYM+3Wb3nX34r65
p/3WpQfiKdwoD5kr3rVxzu8lW8HGocczDuZ8fjCzRrp7fSO9EA96Pr6jU353
5nq3szHt7cMImKO95qe2kPGJT3H9mrPmSPd7m7P0CH2gr7oPWp+RF3irXz03
NvqlPRTz5jKl87szjz8UD6an7O8hyp8ERlgfz50wX7LGdX8P77U8OHeJ3H88
R39tnO0PxYPWvdlLrXvVDybveRBuV3/zJB4cP/iPWbiIB1o/4RO6ISwzN9IH
rSHbE9yn9+fr9+n2EPf7g/pHX+VfZO0J/+g28R2+hjXGwvywLjCvpeXRFu9a
z3XHR2eXzAHrATLt+84Y0g31r74i3+pOL9CfuBS2Ff8CZpkXrR/0pecwsb0Y
84CeMuvvGxdG63/lTUzQ1y9ZUmd4bXysa+BYZ/D9NM7SE+Py9Wt8YJKxmftA
7t/OZ02cC5xBJrc4p0t/6wy5b6nHxMh55/EMg/7tHHH+d2wA1jPK8DdrIFig
fbiwO7jJufkwsYieVrzdQ/swxeIgK8r3r7oYK/+q95ytvmM7bzG+N/jZWrGY
BWTPGlRdrX9gkX6J++jl2YbJs2f6DGcU06u41PR/Opd099TjJ7ocufBjHLwj
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
84p/Kb653H3vUC5h9Ldjlo/+ueVrfFodtrnm9pp//SzNkQwhJ9GludFDrT9Z
aO3RFIxDp2xpe1p9GHLD913vmvHHPz6wrHG9CRtXX/Tyc9d/Gg5OrPGfHdhh
La7TmD6UbE+GG5Nx6U9Tl/1ra8/oJmQjGbbXbtEl+T15py+JDV4xIeiFPJna
P6tv6lpzPFndmOJhsvV8Tn8sb4L+WZxM+FicjPvQz9FMefTVbKFL7fr0p2pu
m6e5ZAvxNVb3ofxHWIY38Jtr6IlwZfTOW2tNyCfYRZYZ79jB89Q4fGrVFtg5
tMsmor+SP/W4JDf4Oul95Iq1Jn+MvSuZ5+/5P+nzvgcLynl3hmW/2N3VXJtc
hEenyQOefgfFk+zz//Pk8n//iH+j90zfyFe3HfjayhuYHo6vLPyDRfV7Yyfw
h5ovG2HiVH68awy/tvTfYl6mX8ytQ+clI8qLIJPJmakB+fJRWzsso1PvnjT1
5l5zqV+7963OdrWsdsxNfSKurKP38i7ZgOYe71tTNEkngY3ZfPViYN+xn+Ag
P6nfYYQ4RnKI3WM/yCbYApfG1/12Z0dLzo/deuOqflnkIDqqjmQ5lhd1dk71
bPLeroNLcBxN0QPRBF8jrKEv8Ylc2IwnPG093B9feB5aMG+4tGOg7xQjC9vd
e/dJXDyL9vjnyQt6UXFWE5f/36+1sGZiXei17kEnMB/X73O0tR/4pJp002dl
/BLja3h76X7lMtLHyRn6WLlJQ8+vfRG9Vo9lzsbfXXSDznY9h6upIzy1yy7t
sjmznpwF9un4g24seTO1M24ue7BatGTh9KmZ2kflSJAlxW+hu2zAeubuPMAD
B8udd82sw701TzyE9+Chd8fv5oQG/W8/0J/1N0Z/sC+dGd2FfZd2H8xCj/Q2
/il6k3G5FY3Jkca+2/gSNy/x1HfJw2qtXKcxGVxvoGJFypvINqwOZzhIXxrZ
96f1SD3Zmx2Td4Jp6Akfwyl6DnuFbmlf8OEncTBbz+fOLeBYeUzGzuKn1u+H
K8aGbUZHCgfxkXtMnMa9lUcwudzvHDiIF8xlfC43DpvX+5KT46eZ2nHkfvYd
e8u7169hajr93FGLhm3ouxMX8tl1zzl7/efnevaIe7N2k1twa/ma0Krz6HxG
ZFv1jugP1mq+8/yBfXgFXsH9fK7FQOB7cja91XvCG7bDxOh+cKr3y47jWdfk
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
rW3/6af0hqlH/OhcLQ1yIAx13/Jv8tWj1d0f4oh32n7Yhct4u76GxWtV14Lv
Z/bj5+/MWc77B97Z7/Bu+gv+8pHjgDY6H0TH+ULrl4SW6E7ZgN4Pj9aTF51Y
A3vZWYfv+jzs8133tC743n2KIbQG12nM/q4WpXH9I8sNJMfw5ZwprTywYzx9
y2+uM8Gtqy6aLP8O7U2d3L9Y+k84iAbq+fJfioNiAnzuXnivHr7sQTKB7kbO
sU3ob1sPXjrYxAneXT5CfEmvhw31xg0HqyMKT+mDaH/qE79V7ZOlt8MM9JkP
k+ytHoU1tBboJ9/z9Kb++u5T9trCqP7f9vZp+iPe32fp311+QnOZWtXPLJ2F
bIKj0wvhJ/vs5721V2NLvHMuHxdWW4tyGcan8/pRV6M+tZNj9mxnHks2WEt2
Fd101yhZ55+egTfdGyZMT5Z3F/5M3uPPH3lgl/bck1jyOR+c3t8Pjrof22e6
Y+qnNmi128JA+lUxJmQOHrbG1pqN2pkT+Y/+0AxfBJli/ugQZqARNiAffXV6
do2cj9Vtnvild45a8fYKTbOPyAn6A5mP9vwOA8iQiet8eckWNCH2kg8K3cEL
6+pz52pwyhgWu4/vsunKZXOfydu5eaf3ykdKP+PXdX++EbTsnv4ns7zf0Ppn
9rnnjxbuTI/AD9eY3Ue22T/jcNDYenp/a2iO6M26oftqo/E18+uwCa2FedXH
EL5ZK3MhT8Xcmo/7uM7+FMsBE3c9v4W/aI2fsppU3rV6vNbCnqCrqRmw6Olq
cvreOk2PyOeOWBSyYPfY2fU/H+yagNMHe/z/U9fN8yf/6/3Fa8UM+m44OHbo
00ePQnKzOBk8Vn2HOde+uXNh3j7P2cmtczWwyS7vhebIQ+tFLtsna2If6wuf
vVaNF/sHp8jSyfc9HzjoPcIvstP689X1ORkbPu5+HYtW3bNr8LxxdqW5ZRta
n3Jcr9PYnqAre2SNnDmRZ+i0Xsv1difPqs1CPtW/jRwjP8m1XeN92VBkOf6w
D2iq2DP0Xf7gzvVecTKe0zngnGHfX2cGvu9ze2+M39ki6AcOiiUJB92bDoim
pjbAOju/U+xoPRPxz9RTmphYWFbfpexZ/INu3Rv+8G+6P9ojq8gNzyb/zLez
bu9kDIvxer0H0JRr8SaetCbW17pa/x2rtNba/tBVPA8m1wcej7rnyPo5z8ez
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
99SSHfusbD3/MrYtvKw/zO5lu2SeH89kK8APPoLOBOmF3tk15Kv3LOa4GnDp
3YNRt46zFfOsXxV7AR/Sa/l5YC25Qyeyf9UZZnPQWciGetNU1yofbzHt4bt4
hupruW7q4rx96CLexzzJg+nHcetUXdnJ5X/xsAcv/aLomaymv5DndAF0g7Y9
I0y0T74PE8wXTsE174cewsFy8MkctJ19Z43LQzR2nl4NkM4Zp17nrx41UGCZ
Z01vkM/fmRqdX11jND5naK8sfvK7cXa3ueE/++qe2bnlj6BZmDX5at9a18MJ
e8cv6v093zkhm1ltVDYd3sT/PkO31canU5E92a0wwvoXc+1dq/NDPlWP7zLO
6rJHiT0MB6fe2u2j9hrem5qCtw95tXNUr3b+z+IbtG6e5I93g/P2xY/71Iul
Xsq718uSc/gHjsB37wK/fM8YbfM3hoN0eGudbVhsTLpNOFhdUJ+jk+q9XI7N
nf6fLzTss+aXOIgGLmNE0Zj7G3eGeBkzEw6ibzKTHDKeXjOvLr37Oo3JYhhm
L9lNnaGgVzrV9sUfscPJCbKm2AnyhO6eXjS1lMaHhtfsMzrCO/aCvgoH6ZLF
wFjrzgf5o+1LftFyBhsXL0dO8sFEb52f4R2fVRM1HCQH6j+IN+h5+f3Q2mWf
iMlD/MG6nryHD50duWbzzI6T+eF5ap3cWDRq7dg3eJP+MDJncsbJk9H7H5+n
dtL0rthnYAu7qp/tmeVekg0wgI4xsT5fOs4TrYO9M+dqilY3JuzbceQbu3/2
OM+vrlk6NpyvJmlnvxNX+Y197vrampP3ZTvs+NYdr/7+9k++dqqXbLE1cMn9
yQnvgAfJeVhIHyJH2QP2Va4o+wF/8xvh5bGvn8T7VL9/ZNH7xzv8292LfGrQ
PHWuD519sVd0DBiVDTgxCPfOO/Z+6ULhILq3ZrCg3NJqjlVrtPM187cPxmJZ
s7NgHJmfbeg97LV3r/42ezC8cH3+0jAx2zA7ESb+j7tXre8W18c+hYP4i+0M
e9FpZ22TVzd1APAjLMXjk7v57Iox2vWAjp5i8AxGWCP74z7WgW2IDr2DeF2+
VN9jq9JX7Skaba+LEcWfZEJ5oOwve0MXxN/egz2169ecy4fdccVfrJ6Z/Se/
pvfK9DKuV6W96V3MdXJ/xv8/tZseXBXLgH7wVufT/MNT6/xnV2wCOWJ9XUOH
m77dT+xBfoHitcM772g8cTfvrTXsPMiY3BudY3yb9VEiN+2f79Yb99IX+kkc
rBYovEMPri82ZnoqfzxOJuyD7+bmPpcxope5EmQw/Qp9my8ann6Uf7Lowtpe
p/Hu9bhoDY1XE2tspqvzPlc6cgbJ9DknXnr4wszpef075+r6oSF0Q2bmF/I7
HrGP9aN3XbYe+w49wEd7gN/hoP0rp97YuYvPXe+7cJDcmPOqX1q2Ht4nb6b/
wQ+XX7TzIPsJx8hIdFQOBexjd/kOmWC+6LlaOH7fNTXWORF5aUzukZdkhfcy
di1auoynrqfD9Gj90fIpol386z4+h7G7tsniS8/w/IkBeu+cLYSevav3gsHu
Y26+N/Nd9vqpnoX1fihv0efuCX93vOmpuLudw77iAcrBsK/WHd1YV3ZV/c2r
kUZHn1iEqRHnXrCpmjXFCVnz6kSxL+id5ZeRC84GyUwyaOdgL/lWndTiPzsb
2vh9zt/a+aj3Kf7Hd+p5Yg/I4IllfXCy79Nj9eFpnr/qAZynLve79ba6Uz1y
9ml1OOFgWAOzyCpyFw7aB7ay9ypfD5blV/R5OOj6qUX6+OifcomJ6Nx3w0Q8
Rb6RpcbF+/FzlivBbnWtdxjbbHJRvBdeoUPhs/rz4q30BHi0/anrnKh+nWMn
vbPsIvesxji9lN8N9lW7hxy3v80ZRntHPJWPyJzgpzE9g7/QZ+RKtdrtbzWG
dg2r0/RPW7rOUc+9GlF+x4tojQ5WHeX6tuyafVf1sYdlU+P+9tL/4BHfAx3V
O6FNP+k+5rb7ba7vomP7OXEAv7KwiUxl09GFq20Oy6w7Gxmu2NNsPfcIK6cO
1dTBDvtGTjyxAS/raRcjmg0Y9k0c8wtH/Ce7r3F5EMXwTI32P/rYmC7ATiBj
wsFqLZYncJ3G8J5sRB+7xsGS31NXbPwI4/cb3zo+KO6BDpedOPXypz8e+3p6
E7x5nF+gfzxbbdjiwHc9mzV2D5/bg3ow1Y/JuUN9eMVnw0H05p721LzQlefQ
I9ETfiXrLvvR289qV09M2PRQInOrN4gPrNHEkf9k4RGZNnbzG6fpNf7G+r14
EPecc8iJQ5m+gD+71hP+WGc/3sW84N30Kp3e3VtPXvaa58IafIdHyr1Lhk4t
7c8tW5osghnF6ew8qHX/3Yv3auyx5Utaeis+xmv8wp3FjU91+Y+OeEtycPTq
F3fc3v+6eCEf1a6FttbWmuDPqd/xrYV35mqvL/tLTe3gRwtf2CPm3PkUeTFx
36tv067XffcqWxLeTYzCGztXevLEqgVgf8ur9j1zT+8ng2GCNZm6BF9bOhx6
3LVjl5wp5o98LqeIbVq9PnaQtUZjYkFgDjkKg4oZqnZEMaVozjvS2eiE3p8/
v94G/Kj2ceqa/8YRpwdbp3/YD8/VzSbf8EjnOz4v5oFt2JmO+3dPcyi/gz07
vq5/sd6xWJTym7Ilq7+Ktny3ntfV8c5XAyeda0x/359fufx8feZKn8nfGw7W
k3HskofL9qleTXHFuwfY7j/52mnqWL9/nPdWG4Kdly8Urk9PiXeXvJqzi5Uj
evhIJ6f94VEjtNoN9nj6UzzavvHnVnwS3IdB9snapNsXV4VH6FH+VmxP9Vjo
VGx860Z3qp4nnaqYz/IE83/63N4U67JrnB45Eda4PkrwrhjR6qF13lePYXvX
2R+ZbOw+8C67L+zbZzd3ph7lD1bMG/pBD2Qj/Rs9F2O5/UXXZmyfRld/dOAg
Wtm14Nfn5dSjN/xTn0F8NfXC1vnMnfQqsgz/uRbvowf8hsc7/8W/1teewsF8
BeGgcbU1jMNB+3uJg8XddTYNI/CAPZwep++cho+/fNSTKUfOvPKHTE+AyWvD
29NL5/2VO+H/HZuyYu13/PX6vfhUspPc9P/uy3uuBhq5O/G2t45133m+u9bK
i0smVO/Q2tGLycvO2qspihf99Ll5VcMebZPlnu2aLYtP04v38ao9RU/xfLyS
Ltv54uDdc0fsgfdzfWebZA5sfNLL7tHyBU+MxsRXk+HmwfdF7xTXUg266as6
Noo9yPdJ7uD76Xn+F+ftT1259en45p+P1993XNZ552odPU/r/7btxqMOJHqw
P2x5cs1aexf0WO0jcxk/wOrHsbCP7GS/eFd7Bwt2DdcDB6e+zysLf9zfNZ3B
OQurJxSdECZab3xRPhb8Mr9de+eIq8QjZNT0XvrKzpv/swP7shPrp5MfdXpF
/vriC/Tnu9WxnHrYH553nu0xhlOe5Z7VuCC74SZ9yX3hHV2FnP7Jf/hvl73H
jmEPksvsQe9rL72PdcjOrQ8pXoIL5ebDmurz1PcmG+8y1zWc2nrt4p/q9Ppb
dWPQgfVFX8V9dXZIVw03p4b26p19Kq8Q7pIr1h8twheY7ncyhB6I190/f4L5
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
NdOSTXguGtl9iZZ/Cv9Nz9fXTmNPfGXpmXjF9/1uv+jD1pD8zAan99Zvi3yt
B301Rcl2NqA9roYMfAoH0aJrqqtWTRK0Qe6Q0fC22FHX+t3/5aSNb3B6kdl/
+l+5h/geHXTuXZ/AXUNiyaPhya8eeU67TvaSx3PmcKv6ZKvWk59iUo3dZ85m
n194Zj1nbjfuTA/E5+7sWoxLl2fHjI3y9fPkXv1f5/E7Tb1C/D/5Zq8c/tW+
a27eOVsSXdsHWGkt7ZnnzTnQR+s+1Th3nb0g+/AujOj8z7XuCRfYC+w+fIWn
3dOak2W7vujCvnxZ5T4k/1xDLj3p53zzlE/L79W15Uet35Pr0Vk1b+bMdGxA
a1l9+Ms6WmE12UhOTf2AZ9dauu/2Z+/z2ndP6HT78xbWdP5EtqMJ4+l98d5a
h6mnMvH68gLKK3XOZj3JV3Y1vDAXODi9lZ/UnKlXBZ5wX/YjuUXnYFfyQfou
2xNtogs4G1bCWe+G3ty/a8rxJ8P5tKcfzNMrHoZNSP4Vg00u6quLH9EIXQgv
keWehUbtNT9nMTBoAH2kR+GfyUn6ydL76l86vvC75Z3ufm1PbMDiQKsRP7UT
buTfXnhXbgTamJ7U45tCl2QZ/vTe9te98Xe61NRpenpdb2/zv9e3wo+1Qxeu
K2cB/vFneu9yH6yf9aSr4MWRF19adpznlxto7/EXPrOXY79/7hjXT5APqn67
nRvOecPnj9zAYkQvcyXILHL0Ml60sT3sGvtazEy1K+orkXwuT5AOW74jWRou
o63pPfvRzuu8PuPqLsBE+lJ1qehL9TbPd4pO8PacZ99ceYjp1dmDZArbjryG
pXi/XjB0S37nMLF+9NmD8I7stcf4yxgOkhFwkM6Et/hI7SU6cU29m+lprh3/
1GfuTN7By/WKX9jkbz4jx7I1yW4xJfYZjkyN7m8uO4z8Ks6TnIL1sMkPGYaW
dkzGUaezHCfrOWcYD7Zf/f4R10bekpVkGB7GJ2QJPYwcnbyAN9dc8DP+rxeE
H+tW/Zp6hrqX8dQ4//rS5+FCdb/d316Qd/gaf+EVvGC/rDmbr1jQamv4Dj6s
Jgk/Yf4XPIhH8E9+JnIGfU0M6MMl66x/tWnKEavuzfQI+KndK/zGqTpGuyba
zuN56aBVz5i6aFNnjTycWqpT/63aIPSNbFG0UM+Rya28v2z1+koXL+275uHd
Jt/l+XVuQm6aF7lEB8hOtCfkKVvA+pPF6JAspIOwj6ztjqU+Ymn4Maw3eiif
wrzYhuXaw8HLM756tdcnF7+5J1rMT0sel8dRXVC85vp9BrtrM39r8RTaTy+1
z343n+JL0QOeQm/23TzZC57rczRcj128hJbIT2s5tfimnuDOZ1l1isrh85N/
YPKRpi7a9Dad/Y8epo/m+A12rYSr+iejN8/L12k9du+15YOeftUTT1Ut0Pw8
9a+e3NP7p2psmEs1W6wJPQedkz9wH4/YSzgId+wxHcA1ZEh1Kugf5V8UA1MN
DLp3Z4V0jXrNux4O4v38pdYdDoaJ5GV9JfCgz42tf3VEL8fpqhO/9WSMtsub
MMfq8pW7z0bIlzu1BZ85sOM6jcsXQwPoqHr90+dk4unn3G/FLV/BweKbixkn
K/BMYxgV3+EXfpJqaBRzrF59sS5w8JNngsbVKnTvam5Pn9v7R659PSzymdcL
AH9WKxMv1KMWzdpP8ytf3v19Xm3pfFfG5DC9AK9Mv5M/XPbQ1Bt/PX1+6Q6e
Zc1GD33usPW2H3PVuh6Z/fr2s65aoAuH6YwwzTPEtExP7h8c55beC027H18P
OZWfz7tUL59O4H3IJGsKu6wxGvc/PnPPfB3VFLZevsMeYSPQDfE+PqVTkPPO
kNiS5HBnJ/UjRh/RlJ+wr1rf5uln1uXpczEP6fb1dKv+VfbirlVw2NfZDsWH
+g6anLp5D5fOVv8M98nvQb6Vawb7OstGK8nW8oPqJ+475mFNk6FoptrNZFrx
pWQg2Qqfyclq9MAOe4de8pfSser74Pl0xXRv+FWsC36xJ+4FB5NLl/fBX0Mb
bxw5j7AP/qKH9BbvBqON3ds68TvgYc+1v1Mv493lI80X4np6q+vYrWgBHZlb
OfJkeLXj/M27os3OUtiBu2fb0p/b8523sGNlHp7qk2w8vb7nHLE8p907JPvt
avfMXp+Xy4IOLnFwdNuXd+2If3auT1L6i/2+rB1RnQt0RfawnfFoNWEmNvdX
jjw++iTZgf+sQ3VCYJl4u+q90HM7B0RPU0tusO+yr249I7IN851OLYYX1hzw
MN4OB+myxrASfRY/g6+zAcUkXp4DVleN/o+n+Ro8H71Zv+rNkDXhoLWMry95
/DqM0ds+V1k69uRq3T3tmsrLpzQ9LSdmjw5azBWaZ7Og+WpVoUv4Vi8z9EOH
KpcQzdBZyVu6CB8aHdVe2uvOBPOR5hdlA6IJdKiuRfGlfETVL6Ij7dpmR5yl
9yMvOkuqhg1aQstTi/DR8jNOPvXU0+ZD27lm64xpzlA/Ok+MxGdW7tvg0Jvn
3Qd02T+7R/H2tRV/+r/s+pcPT83JD5mFP+AeW3n8Vn95nn4b95YuC+8m5uJv
rvdHi2h2erVO/ns1Qczf+k7/x58sfdNam7PnTKzENxfOF0dv7dxreoD8+dJP
rJE50UOsKb6lb9QTot5Mc9by/qkzuM5tfF4sZ32f5qx58vS9+47V2/7Tx1fF
tpNR5T5MfvTgoHF2wa4LdxnnsOM+Hqzz2jCxeBufW6fkLx2knovW2F6RmTBp
7I6bi7anztBbK7c6P4h1sc6eTd+z/7t+3p36TpGNo/t89ahH6jvsNXvpOvhC
dqKNcsyz++prD++KL6V7hJWwz/zsQ35X+2psr+G0e+Kt+s4Xt0OGF/dojF+m
XtbU4sa3vju575ODjwbnjOHX7sQDYkrrq4iP2Mj5PHYvy9Psxwc7runGVTFO
0xPz/pI5YZCfdJvh1aMH+HF2PH2k75YT/8V9xrmuYY/RO+yF9eY39/3Obsbu
+/oRN46P8Fh5TWGfd9h9U05ovxpH1ja/v7WCO/YMlk39pB8eeFENtGqu0c/x
WHEv+UXxU/ZgPSbqo5Q+CxON5yz5hcM2/DQcnDiBv32cG5Kv1ReCfZfngHyh
5szfQ5+xfvUwQYfkAjlTf3P4S+cv5ijb/LqM0c3Um3/rVD8vNFodD7Tq83q8
laPqM/u/Y992Dvmbi67oP2hx9zdYtt32xy+awW/4y97gL5hoj3cNmOVrI8fl
y8MEe2PMHkQDzjjstz0VbxO20qnKm4Cd5CD63jkNi9fQ48TDf3/N2Z4PZv5g
4XZ9hMKxyZ2/e54+Vd9c986+zPfGZ8eGKG/QZ+Tm1PV9cZ/pTGxI8Xa7hs+i
PbSNDyYe9MNFp/iUTPJu3jmbcWI8hvbtRfXg4W01w9DrxEU8tdZ3fHF/604+
WfPHE/bIMzvzt3bwmD/Us+xF/XTIvqlH8HDZS/UuTL/wf7U60E3ndZc+h+JC
pwbR6nFwnCNGe8bZAv6Wnrbrox2xtvVZzU60H77v/ar37lmTazb96Sbu4sbK
VZwemvdW3FdYm5z0ftav3CKyyT6aB5lvrc3FPvV9cgn+4C042FrDwXpiwjX7
5zniYepdWA4+OoUvxtte2fbWHy4dcmpSfmfdx76h4fpc2596+dlvNiZ9Da0Y
k4doSP4gmUYO8sEaT/2aqcNWjyc2RdhX7+B6CFbzuXxAsrL9m5iynzroIJ/2
Pqdd+xudTKzM6E7+PrX8Rzeypt2zevHTP/5m/vOr8Zm8fMQ+1X/3sq4aPsLD
eM88Nz2t3pd41LPxeucm00/88ZKNxVhaU/5hNpV1s7/Wrf6AaGLXp1wYR0ch
i4oJDMvch2w0Jp9gpWvIumq4TS3aFxYmZgPC3/w71ajvPCK9mRwhJ8jFxuRr
MTOXY/IifKzP8/TpmR4mnaOkU7m/OUwPz2eO/jLXaVy9jmRatBo9os/dO+iU
H76aYniF3ovH7WHnKeUQhYNT4+vtlcNr/clu+GU/7DV+LHaf7HXW6zvO7unc
dKriRcmC7EHYVa1Fsp8/v3xp+hP6L8e2syg0Z/50Y3RUT/V05PT4sRFeu7AP
3z3P+emr6zprhV/qQTU2zdgm9aTA41OTdN3nNP09Xt5+mOcP2wx/8E+YZzkN
+HRqcj5z+G6tkfe3Tt4VvU7v2ufv1BPR+5kn3ys6tw6+Xw7YnFU9tXjVHO2T
vxfPgN/po3gXPuMNcrI6/85r8lNm+/V/axxmpWtd5orVr61+GMW99Bm6hI+j
Uzxc19RryefFEFb3Bk2ixWRp2Ode1X333fFdPlr7FF347tTnGbsyP+jwyJvn
7JaJZxp/Wr0kzZNc6fvlHnpvMmpqEP38EZ+JLuBIsS6wrBxDekbxXcWLlmuP
PnZd/DtTI2n6FtU/vR706AN/0WnQgO82ZsvT/+Zs6dVl76N9/hbz9h740X7D
uXr+ko/1jjcPdqJr8ab/6ZDeZXSEqUdUDJ71jE7G//nG0SuwfW9fOi/edX7L
6Vp7dGkPWnN8s+OHr+qT7Fpriebxbec1aAQfTb/qdfZ4Hp3p9bWnMLv45OZQ
LL15FmNpbdnUZA7ehH30Ss+sN0QxM/lC6bXW9t+verpfWHgXrsFBexkm2ksY
F97hc/sz+XtPcNA4rGSr+tyYLzTsg9XV2SNf7ZMx+RL2maM9RT/uUR6o75kj
vY3fLX+F507ezuNri4P5kCaH5sZhDya3XFcfy4mreVR9rJWjTSfbOT0LB31u
3aqzAQftFRsEn3amXI8J687mQAfoAW+iv/Ll4aC9g33swcltuL9o0n2qMwyv
0NuOidu1XSbOfuorP7vPn1Y/p4VNcAFvlH838aBvLIzfNvA63/MecAJNTE3m
dz7m96sWMF7Dh/gZFuFDOkR1Tqut7e/k9ej8P1p4Nbrjb+7aJD86V5+NDCVr
+Leq9WKd6JLecfrVn/eZ658tfbA8SH+zjv9m9zqsvyv+rNcBeidzvbt3nP7F
H2y79O2j1wyc6vwGVnQOWu4z2tnnMVvePXvQTDr79PF9ZfuivrvODnefpiM/
OluyGqfh4/jobx39JopZru55Olt1TPc597lnlF9PXndeNLW87h8xNtmJ9TTP
/pw+JNPDafepOE0/jm+F/auvE3nqWaNj/9P1DDJt15NYmNhZHp9kfd7ZjOV3
st0mfvC9hYnkpe/Ao/pb1s8dLbDj7Kt95GOpHib9EE2NL+zXl50y/rKvLPm8
46lWfBg5jqeyE9wHvUx+9eQ9kaXmmX1Eb6xnd71c6BjWeWJRPjo98YF8sPdm
ai35e30DqxMbv9UPpdyX3WvyvGuAnsrhdT44PT9fW34Xa8GfY2+rBWz/7FE2
Xj1DjPHTPO+Noz7bzjc9epXhJeu3Zcmdyb18euEg3KlHfPXT7K+1Le4lHAzv
jOFXvXfDMnvMv5MNaDz78+G6Jky8tAddc4mDrvFddh888136TjGuzvyr044W
qpNYPSGYXr0LMp6MgYP4n/3rHdCcNe384jqNk0k7Nqu4qnWWXb/TasbwFxU3
51o6CtqjA9Il6bbFmVvXy/NBPE53xWcwsj68uw/ROh+0v/lF8R0chIljD/3D
dW5o78TMoFHyga5r38NBeg1Z5fnmsu2Yw1dG3lS/jD4E5+x1ObjeK5mNFyde
6JUD/4p76Zxqaj0/v+//hSNnsBiWeiDtnLdTn/kOfENv6AstW9tte9wZ3XfV
5l739C7TG/lbS99Fy6NPfLDOqdiJsM0ZonHnCcZkBD0Rr5BjeLe6lT7zXGsG
D9nJbN7iLssxmRqNt9Z7P+mB89Q5LJw6C+n1kx9Rr4viEfytmi7ZkMVz1vfS
fcNb2JQ9OHWNbn+sx3A9B+uvlFzdPeZO2X1z1vjKoeebT7Tu8+qbzj4/XazY
QQf2yfpPjM4rRx7HjvtdmIiG9pn7FTreNLD621ajpvxWshstT1/MN9c5kb2g
d8DHaqx1plCdNHqb/SwG29jneMp14ljCL3wRDuIvcpBsZesZT17Zq8t+8f0w
EVZWB9jzzAE9krHmDG/xYLlUUxvh+d3n8d4pGilmbPbp2UNnrKZt/bI6L99x
R+fyKOa8Yc5rJufo0Y4jfWX3l3x0VT6Kv5P7k1v08nn6ps/5w8TEfenor1os
Tbmh5jg9xF/cZ4tfOuID8Uy+k8nHnJyEy3iY+tvao+rDmJdxORHZesV2+i68
CcsucS2fZ3Ev1SQkDxv7LjvANa6HfbA4HbdeJPbf3pkDukALcDBf+Na3Fw6i
P37z6srZZ+9XT656SsV3+bev03j07jcOv2g1b8vnKi6G7s0PVO5qPWrRL/2o
mhLstvKrrWF9eOmlrqOv4bt6DuJTe1+cDHpDM/+f3bnOB/F7+YMwUf4gOnAf
51n5aMLfiR+ZXlETx/nVMO5UncCpAfDDnWf7Tj2VdgzQzQMH/a34GfeBb8Un
4vWRlXePeqDk8PDS1IF2zZzBvnScu+Yj3bFpC7/g+tjAf7V0wN3bavnEpg7G
q0v+FINavlm1H6aW1h8tHRDdTy3PX9o9OSZPCL2Hla7Dj2IbXQ9T8Qm+cv30
Knj5XG+o3YN50cfU5vhg0UV2YPVJqyv3xP6+fxqMfWHJR7q3cTnTO770Kltg
7MDnD9sy28F9LnEwvabPm1tj863nQBiXv8O62wd7ABM7fyqfDJ7B5XTBy5zr
Yqh817tUo3n3el+YuPs7rTGdesdgXE0vpufP+zz0TnbK+J/fWPcl08ieapKj
410vZ/cZ+IOFleiEXBdvUw00tlt9b9mM5NY+HzjsRBhHh5o4iVcWHroGnuIj
dFU+YDWf0Qx+Jkt3f+k1v+qBFuNkHB2UM288/UofHTpjdLL7HS06t//oYveF
Oddb5Eke7qMjdr3YrGoV4DmyA1/YW3O0N3i6Xqv2Do0X017e58Qxv3nYtvkH
PBfukBfZg2QOPRL2lT84uZd/tfxd1eG0/76Lnzyz2hLVNCuXofiWMDG7Lxtw
6g39woGJjfGo+6AbNga8ho/2Dg7aZ/cJ+3wXr6c7lQtinfIlTJ+eH5/H779q
Hqx7ky/8ePSA6Vn94yP387qNdz2FU3Tt8+0rP9WXvJxoMnHHG5zI5WorlT+I
ltADPYzei2etL9+Q9bSPaIM9mMzm2yweBsaR2fau+mn5RdGf62GlM7Fqd0/f
vfeWP7x4aL8/6Zn4c3fyEVZL1k/5T8XSmf/GvGVnWA+4M/yyMH3HOr64eHbX
kN4xL6PrFhuZ/O4czZjs3DL+sLPJyfz05Bb6l69A3llD9It38b/3zZ5Eq+ZN
tno/vrtdE/aoRWPM/mAj2xOyD93TTfACncSzrKm9xDdsBXok+dc64eHJY755
9GCeGPPHRx+AzgfLBcvmg007X26t1WWPJ3+fGss3/locvOwvn1+0M+vsxLFZ
HxxniMVmlIc42P3Sx3Aw32vYN/bCl4/P0c6/3/2Gy8XwuX3BA56ze14WE3Kc
Gxaj5Z7wpNxsa29v3Nsajw15b+3f1AL67eXXtu+uQ+/og53IvkhG8b/hFTLe
mSPaDgeT22EcmQn70JHr+EthInmOHzsHdH3jcsM9gy5ljM7gp3tXUzUbv/xj
PDN7On7zObN99rDt8plM/tDgoL/ZV/x0mV+TzWjvhsemH3115qY23/vV8Fs4
iEftjXVK94JV0w/01rnYPfTS2WJ+meKP8X/51da/eCF8AmPo9PXGsf9kz9SW
WDHLx3kQOQdz6E2dB5JJsKS+k+zv+lvAU7yGp/Gqe3X2X99A2Idnw0f7ZT6u
8Ty4hX/NCQ16rvsYZ/e5T72Fx55+at1v1uaj88zl7XM9J+032YtuPLO4kXTU
6zJ+Uk/h0ZHXTI5c4uCOCVl1Gqdv7HcXHVb32f12Hun6G1m+6wovHOwMCmaR
vzvndflF0Yo1njoWP1k+T/uN9uRKkBFwED7Sk8qvRys+pw/bU3QNV/0//axf
XPKc7OcHRB/5bvEimQcj8kWSh2gZdnfutGMy1t/gobF3wnvTO/f2efrSvrz+
L88Jn8PD+Ll4xPFzPrtkZX4+vEzWFbNsDdjG9Xjg2/RsGD18Mf4/cxg+//K5
nGq2a3q875Kd1qMaumxaa2/d7RG5Jgfa3rgO/7in9cEL5dPjV/xrDcnp9Prd
h+qKz2D6H3101IVMRu6z090v4+qQT9NP4qPy46/ylw7u3TowNH1i554d4zCx
azrjLj6nWJrqsIVrrilWZ3prjo//f1h9zl8656t1/WUfw11z4qraleQ43aG4
RGtH5rkHWi5/Fu3BKGvPpiOH6GriKDoHpJdMH4/vL1uMjMVbxmjCWG5+8kpc
KPlXD0E0bs/tpXmQXcXJwC8Yd/m5PSUbjbMpnFnYY/QDN5Oz/Kj8tmStnBp8
hSZhMTrFc3Cy+mn295/sfmB0iHJeOh98cnY7Z8rTB2nF3u6c5unNmX+9c+Gw
NtvOuPoBOzZnnW/Xr6VastXAM7bWsM/9ihcls6ZmxvRusTf1eOYLtD7pBtlr
nUnQVWBFcVD0jPTw4rH5y/DR5C5981x8BN8ZWTg9b99e50rTH/73ztVUw5ed
AdYPt96dcLP9xZ+eZ272ELahofzi2YPmh/7q/eI+sLG+YOXEmCdfrvt6np7L
xS9ObNHt9XOdxvUgn3iZ20eP2PTtyfN56qjTmEzgy7KX+aesYz0C7EO1j6tH
2fng1Cn5zsIycnVqS//9O/V1ZieS2b5DD7Hf9tr11eJmP/pu/T09jx6WnQhT
XGuv7TG+3HWdzuXeon+8QL+my48cfH/35Lyx3s9neGVykQaL3It8sz67VvHB
Q/l33B8v0TOnFvCDIxags47pK7ry0xb/jr93/KLe37t1vu1/a0BHKy6BnhF2
k5/kqHUQl4Ge0S8cLI4UL8851dvnsQO/d67vCnlOjvL7uCfZju/oCJO3Pfqq
eZGB5B5emly6m7tO5ytHTY5tv52nV8SNczg45zSvHjg3MTar585VMinbwPfs
R+eDxc+np13mU2TD+TzbLh9dZz325KJ+1sewr3MC+kw4uOv9HDXctt9Vj4yd
W/p4xR7Tuew7PJg845WbuOQbXHSWZH3tF9uqviJ8+PaNzKn35e6NcPRjgjn2
nZxlj9SPCQ7Wg4k/MzsCJtajsJ6D9o6uiLfIX+f1xQfC32rgu57MnTjUXz/q
BNFRYTa+qs6e9xBX40zC/eiofK+eXx1acyfb2SFwwHuic3Lh3+zegu1TOfYT
i3Rz5x8+KE7qiElGW9W393s+484MPIPvxBqh+x3fd+Dg1Mh4dckCOnA62a6Z
kv+2GslLD3HmAD/oMNWphkf20bPtu2d7N7gzsSdvLR6zxsawsrnCJc8wdj/z
IE/sQz3J7KfryZzJV/zu+rweubvvwdo3uFs+BH2p+FDfIWvp0/Y93QfN5Ted
mo2fPXqEFTOAbuV9VHPtP/w//3jFTrFJvFOx7NdpjPfsCZlNpk5/3pHj+Uz/
5eoJu2Lhl3++HHy4UL0Oezl93x5coYXiFfBPfWqcWdgDe0+/IOPrKe86vO3z
xuxBPoj6Ek6N+79c8aLkNzuT79R+uS+6RTfta/1cYdfUGLy58IKOiI7RI96w
DmzderBUEzreHH/a8wsD8dnEzDx/6A7VuUy/zR9EN4Al7j+5SveO/l1+fFae
1T7/P0+tkw/Xj3el39kj9kT1CNyXjKseQD5VPEvujj73+4vGYW29eutDgUen
T8z/uXRJ8xsd9WeW/oIP8Akdku5bLC9ZSqaNzvydNceJZ/qrxZf1B7Ae0U49
SnYt86OWVToHe4udlY29824OfawYlpGVTx1nf50/ho/lEuabrW5SMaLZj9l3
xYuGy8XGdF5OFk68zd0VU7qx/QrW/U+7Rye9Ay3gFTpE/RRgXLnzMNE6W3v4
MTWMJzeZTDImc8qvZ/f9291TCZbUuxDelGsPi9CG5zm3sf7lFTZ2TTHwxWyb
Bzy1j+Ske5LL03/67y1/KboSb8MniK7onLCZDoRPfd9ZFnyEefRcGDg1T790
hy7qd3+rRwn/K2zF//y4Uy/p1orpsS5+7P/kbt1fZ6nbB7p072p/ki2XOYbl
bdif+pDZz/w7Ox7w8H/2uf2rJis+hGH1xp48onuLBukPMA9t28dssfqjTr/S
22vN3c+4mnj0xvErv7fwEX7aR2ta7WW6pH3Ab9Pr5feXru1++BzfXtbyrVfJ
5GZNL4h/Mn1Xjhi36vBZ0/qhFU8Q/tYXxrhrPGv6F/7e8m/RfeCe9xGnwVax
FvUkpm9dpzEdwNr5mZoI31prSh6T09bkslYV3i6mxB5Uj9TeoFt4kqxAu3hr
cvTuLZ2zviTZgzCZHwb2VefQ+hvDu84Qyx80X/vCLhk7/zcOf0X9BNF1/cjQ
eX4j/O4ac4Abne0n4/Dg9pvtGO2HGxfvbf30+cVP5CianXref3hRk+nx7qd9
92p/f+mo6A8umxcZNTriN9bnT3IP7p3jd3N2HVqtZsf4fT63zpd8v5pc0+Pm
w13ncc697Rm+MTfPIHuLC50eOs+sdZraO7MH7keW2zu4aI2sr7WzZmiFPgpr
YcXkfb2+rq0mm/ngac8oHqh4y8GVF4+eABOr+cNqhCwchCc77+bwm5ZLXZ3S
3bv3iO/q/KgYxfSQ8Z8+dfg0LnOx6wOFbuuXsnMzDtqud6X7T++C5QP5Ir6Y
eiN3T2hxeg5fLRthdJWvrTgx60v3uxzDjPImqvlgL9mD5VCQP+VtwcF6F5LJ
9jkcnFoj731sXB69PWyc35UctFfuYy89Gz9Wr9KZBayLp6rnNfW6v7T8MvAN
jvGPGfs+PgwTYTu+hnfejz8HBsJ2Oq2x5+Nf1/md3utevoO+zI1sLiY5f3T9
sybna3Qj65WMsi4whDyv3xQcRIvkQOe50V89tewxnhpfzXdPxdL4Pj2hs1Tv
2brxuRjjHzLJmhlXf8Y9nB/g3epc0CNdQ555P/xdjZnp//Hs4RftnBGdwN6R
E7+1e8M8XHLXPer5gkbIFjzvHp3H1w8TX4Wnrvc+/ob26gm2ayOeJ+/o/qm6
icPb/2jtMRr/fwG1Ub2J
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3Xu4v9lZ3/WfLaZjxThirBErTrHWqFixVYxl9ndPK8WIEWMaEVFxQFpr
xTZSbKnWXgOEMOUQhpBACoEO5yEEGgKF4RSmEEJIQxhCCCGEMA0hnGGAcD7U
/Vr38/7OM79O0P+Sa1/PXNee39rPXs961uFen8+673Wve/2Rj/wrT/8Lv+/G
jRt/9Zar/z39I/76n/6Yj/mIv/HnHueXP/8RH/0n/8RH//6r5Mde/Xz21Y/0
Lz78zMsv/qL3vvzOl7/8dJ3Sv/arf+3yRV/xb1/+wOted/q5n/3oyy/6wj9y
+Q9f9arTm3/kf7x87mf+C5df+9KXnr7/tU+/fNYn/v7Lv/sFX3D6qhe/z+XX
vOQlp89/4R8+PfuT/unLv/91/+HpqntuKO8z77nn9A8eeODie1/zwZc/8ba3
nT7xEz7h9GNv+cjLz3jO4y//3ld/9elnfvovXV69d3mV5/SzP/O/rW+pw0+8
7S9cfuG9t63v/vRP/a+X9/7df33lefsv/9Wrb77X5be97GWrzp/z2X9olfOW
f/QRl3/77lsuP+9zP/f0Xa/4wMt/9NBD61sv+Jx/+fL5z3ve6e+84Iknz77m
Je97lX7BxY+++c0n9byq98WvvP3tV3+78/Qbv/7rF5/0rHe7/I1f/7jTZ95z
6+nTP+3dr8q8e7XrU/72P3P5qZ/yKacv/ZI/+qi0dnz6p33a6Svue9JJ32jv
VX+cPvv5/9L67nzviSvt+ed97nteftZzn3u6attJ/3z+C1+48nzli/6dy6+4
777Td778A04v+Xv//urPH3jdM9Txqj+/7vQjb/ofTvd/w398+c3f9E2rrt/w
9e+3+uBX3v6xp2/6xv9k9dnv/PbfPH3rt9y+0h9/112nB77t8vI7vv3bV55v
/wd/euW/Gs/Ty7/jP13Pr/rv9Irv/LOX3/3KV560+erbK60c3/qGr//69S1j
93M/+7OnL/+yLzv90Bs+9PITPv6fWmUZh8/57M9ebf/yL/tj690vvPfelf6e
V7965Zf+3te85qRt0t//2teejNeXfPG/sZ5/5YtetMop/1VZS06MtX64GpPT
9z344Om+L/+3Ln/qJ39yPVdO6Zd+zX9w+Y9/93dPP/j616/80uT2q7/q37v8
tV/91TXm+opcKkt/khP5tPGznvse63d9+Ll/51+5vOcz/vlLfWhsjJs+uRqf
yy/70n/zUr993df+yTU3yNg33v/kK9n745ev/of/xZVs3nHpO/pKPuVJ699v
/qY/tdKv+u7/fOV/8Hv/q/WOckt79zXf81+utPzml3e+49v/zOUbfvC/vXz9
D/w3V3Phgy5/+I0fdjUvn7HKIvPySZsj0t/9yqes9/SFPib/+kpfk3Py9knP
ehbZXfJGBvQhuSLT2mZMPFe/b7z//jWPvv7v/0dr/n3ys5+98pMNMqOfyepP
/eRfXDJc2re/6sUvXnJrfH3r+x582poLX/olX7Lk/Hmf9S8u+b/q79MXfP6/
trBE/r7rW/rPGJIr/fDxd91oPlze/cl/YNX7TT/8368xlH7d9/+5S3NY+up7
C6PIqn7+xE/4fUvuPSfD0vL/zm//9kke/UdGfFsfe9e39Lk5Lw/5J0swUDm/
9Zu/ufpU+eTtCltOr/2+/3qVI23clA+Xmjva+YOv/5Alg577ljzmknTPq5v0
97z6qec0OZHHfPFdz7f+Xc+NX2Xqa3VQT+X7rj78jOc850Ru1NP4/uibP3zJ
C7y9ceOuqz6/89Kck/7d3/l/loypv2+YG3DReF711cW7AmcdPHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8e
PHjw4MGDBw8ePHjw4MGDBw8ePHjw4MGDBw8ePHjw4DviQXxBnszh65bWBzDr
bT/+5xcemAP6kzzAsW/55ve/xCXm1Kd+yh+8/PG3fhTsvRhZeKL0+ytP31/J
6Mkchm9km9ySYbKN+/Dgt37Ltyxegzff9YpXLB6Mf3/yJ/6XM/f90i/+H5fm
DFn9hZ//y5fmknE3jp/87MctvoFD6mae4sl48Efe9KaF2VdjeCGNB6/k54Is
4Icr3jspQ5vw1HM+/Z9b8oK/rnhxcewVzpxgZWncp3xpmCptXj//eU9Y6Sus
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
XFMaZuGmuE+/bj4sZ796Y+l5/g8warOdnzlRH6lz3Jevk/6SNneljac661/8
0bududB3ex3QGiCbGJ6g63lfu+ADnNlz3/45focVnpMHckkmYNfYLF631kul
5SGTZEQ6/xHcZb/APKAnGjN/M19wLRmXxg/qLo86aZN/8Z0xV399Zy8cz6mH
OpJnchyP4SwcBUs9l4aHdAzP4GFp+qn3YHxcZj7Fd9KwUX5zzk9+Mn6U3481
aH6m+BYP+mE79YMP/fzmb/yNs0+QtpBNMgsTjRU5hY36a2xHfMdvXJJNeBJu
mCPwW9r8Mg6tM/UdjCfb9kSNCcxWd2WZG/qJrke+tcWclIYDONG46zdjRdaz
ByorPoInZEC9yZu85NeeCPnGe3hBO+hKuABWbP5rS1bn/NAXnPcx2ze0biKH
+r/9uPxbyPmeB+PKcIw852MDc7271wGzl5oXxjae1UbP1Uf/5Neh3/TJ+A6+
vf2TpRtc9ffieusV+1r0HboNXUGbPdMP8N84wXU8OX6RDyz+zF9dn12nNHmI
76yb8Im1kXHLZo77YC1bur71Hk4xJqMzPnAB9/Ag7sjvy/vsGOnyxgsPGuv8
YcwBPJg+aI56nj4ora7WhDAq/ys8iHtgEhlXJ/sO2fxn7fbk1S62ELhuzGEn
PFZP+yHy+1vv4kRytPk8nte30jfridlFs53ubaTy0E/TB7UjTjT345r0Qf3Y
/poxoH+0P2i89JP1K07sDEWcCEM6+5AOiGvgThwqP2w2DmScPlN674cT9+Ub
nx4KB3xLmfHgdq7yfP7LGMItWKLtxtm7+CT/GXyXT2D+otnkPZeOB5WrXeQv
eyaZs66hW8E3vAY/YatxJnvS8uA1ebwr//Db6IbkRx7lwy74CCetb3AqPUJd
6QT0O/049ovT4kDts4bEDzBa+fLgDHIO15SBr2ATPMM7eIz8+rt/6YXZLv3d
v3jND8yHd/6Of+U3n7zjX7jrX2X1A5f9m47p3bjPfIKlyva7v+FDHCi/Nai5
yE7aHqJ/2U/xJfsJbsi/yjxjS8z3Cj8aT/KIE+FJew3ZlMwj42N+eW4uGGdy
S38hA+QynCeL6pY+qP+sU/c2Us87Vwg3tFddrbHaQ4ERsEL94kEcha/DeW3R
pqt2LDshWcYZ2mVek1lz3hoMvpDvzhLK25q/vUKyivvyfd2n0wfhqfp4Vzne
JTfq3L5kZwONn7lgjtAj9K/vGhs4Ze+7c7vyaxtO0xZ8RrezF8j+SQ/OFwYH
+pux8TtehE3ySMMvnOlvMBgG0jWuU3r2TJ66ztkZE/inzcYKzu3lGScmz941
ztZL+MU6uDPj8CQfjPZtW7f4trE2D+EmfDcXvQ+vjK/n5Nl8zWcmDjXuZMNc
IsfW8/FgdlF1sB6C8caOXNB1cLf1lzlszG/mwew5ex0w35jOU+zPGJYHD+ZL
oI5sIb5NP7357DCZwjXpX/C/M+x0wHw+cUE8GPfhKXY1eYzB3kaqz+HTtq95
3kOE5fobz+Kd/HNgeP7w+cbkq5OdqjXwpj8v7jOmYReZwJVxHH0pHVC65+yG
xmCLI7A4p70/fKdO1gBsFL6N9+Gtdmbz9G1thxVkI5un9b/1+Z4H0wfxHZlW
D31FjqVxFryyH0BfJgfqwY5B3mAo2772G099Am9nL+dJ65k8cBu2qi+s7pwD
/oHX+bPAODyWLmhO4CN54GV2TL/DbXznh07R796RN/5L54v79j/plOmGysDF
e10SpqYnSmdzxYP9Hb7iQD+/+iv/59o/lE851nX6Qb/D3M3/ZdtTHB8bc5A9
A1aELfSv9jTMHXOB/JMxduX0NfXS32TDN/V3ZwnjwWJ9kAdtwW2wQDusTXxf
3yUP1jBwiRxam7eHYk2MG6z/2bmcF6APknXYhkOsn9XROlmd2xew1sI/yszv
Go/rI99tHzAbqbHDZdv5ySXP+dXEa+mP3iUX+dIYE3m22AdLhsk82ZIH73sf
r+MwOgBOp+eOvfPG+hn/p7vPuh5c1O78H/0Op5RBP4SJ8WA2Q+uG65aGedoc
x7F/ep4vZWnyIg+ZJz/6Xjn6MF9oHJQPJxyGBcWiIc/WVZuecLa1xIPG1Fjj
Qev24szAQGlcZV7Eg9ZX6YPakF1UPdMHtdEcIL/aaP9ZG9XT3ILZm91g7XeY
m50HjO+kPd/7lOYjiuM6K5G/XD4A6hP3aWvnJsyjeKdzyrhvf2698wjywNme
d3ZeG3BEnEgnKhbH3o90zoi/cNUZH+X30re8m13U885K+O7erxVv+lZlZufE
j8bKmgBHwKT2DXGUfsHp1uHanP3T9/IRVSdtibPwV+cj8BeswOt7Ttzrg9Ke
aw95qBz6cmcMrSU8l6YDpg96no0UtxpL39YueAt39L/xIwvwig5g3bE/3+e5
dTxOlib3nYUnr/LRv+B4el1nAuGeH2nc17nAfpdO79ufi+jsfNwIb/c8CIvj
QXhaXXBMe4p+cF+/0w3NU/PQ3qG0Z877mrNspfYS+dnQFf2Nf5B+z9eyfQfy
Cz/gp3HOphrO+Bt5y4ag74yDebLnQXUzVztLGA9qp/UJedBOecKNeFDfGGuy
+I540BzebL3LTkiHwoUw4ur326/+djs5Hv3ofZcvjfXztPH9zvvvxouMyau/
cZn5aBw6B5EOmC+odD7w0ubeXn/U/+mPxgDumdvGDO+bS8W8sq6GxTicDki/
7Rzg+L/csXRe65U5E/HwRbi47f0tHrQmgFmeeS99ovPX1jO48jqljU82T/pd
58o9b80m7fmeB63x6HnSeJMu1n4TXGLfwCvmsbEzjuQTzhjruK8zEd6HacVb
kzYv4Q85Ny9wDPyNB5WZv6g24OJsleSjPUFyWprOYZ6SBXYU8hP3tddvbqVX
7nmwMxHFk4nvspHGp/mapg/Kn/8JWdvzIJ0jO2R7gsW/6hwEG2n+n8W1U05x
qHBtad/DX8U08N18YPRrvqztSyq/s/zZRfd6ojx4MHtpecK79EFjrZw4Uf3D
NFih35WFE2Gib+CdfPngaDZM6yiyaH2TPTPbZr4uMM262vfiQfXAcXRJcuW7
1j1kRn3k0ad4jexaP9Nr6IKeay+5IrvW+emDsAiPsT3gh+K/kEP7f3gA79EP
S+NKfh/SnYvHZ6U7wwf7cWB/iwel47d8R/tpz89Peh7ea4+x/cb0zOyk7Cvy
+hvdLm7UptL5o8qP43wD5uJEbfHM74PbH7vy48P9fiIZtZaFGRsuXxgPOJFu
RY7wIJmEB3iwNa21pj7HI/n/Gy/yp270987Rm6udr+/8INzADdY5+ZmQMfJm
rW0OyNu8MJfGxvvw2iPLfjhxOJYOdbs1orT9NfIHDzo33R5H+4+ww9hlz0w3
lE+/dfYQb5JVc8F4F+smX1n4Yqw6Fw8btZ2OMedUX3/azqAtnsJ3uIrPi3p2
BuIRe+/yEb0YP4B7YeGFdm1+MxfwAifK1x7inB+8be2VKQt3+J51w3VKG6ts
nvoeF2zjv+SYnLTfjQcnTtXY/42PdDy4xR9duGT9j2M6m08e2Fvw4Ia/a+/F
/DAncQa5lWf8Cx5c8q9c6594sPM78ArGNnfUW3mdcdjzYPqgtR4bhjmnveqV
nhsPmpvFESULe7to5+Vx3P7c/d5G6vnNe4XSnaPP/2Q7V/SoWFXtD+7jPXou
z2YTWlidr4v57htzruD9Vj8YJ/1kDaONeDA7LX5Uh2LaFPdjXx95Ssuz95OJ
K/OZITfsurhIm/MX3fyG1zzddNHFNcY9/oJL+bG03+d5eh/+2p+VgHXGOh7E
U9b51kvKtJami8IHnNs5xHxvtLEz2uRLn+WTY4xhEC6BZdqEe/CxvodLxQKF
tzDL92Fa8dCkO0MI39hYx1b9jKUXaivOzA8zDvQ8XdD77Rviwnw94Wg2zf1e
4F4HbC9R/riwH3/DdXBUGztHIS1ve5j53Cgve6m64UT5fQ8f4j/fl+6sIv8a
6au10dIXrXNh/4zP+E7RM2Dpdp5h6Rvmt/VhsR3oa/lPwik4r17maue8cIHx
1a50w84VkoF4EIbkZ0Ku2BnUx3xQRmeairMIH/xL56NTjb10fClnn/CuxS/k
np5E5yJr5igOZTMxB7XVt8iYbxhnsk32yI31GNkjB63NyH97AWSqfUN9zufH
HCM/0vpo841evDVnHB5adcNnw+P33q496ulHXrw4vjF3nma/cOm+67nf4dfo
xHdewA5tokNOzJG719pAO2BMfiPXJQ1XcEE6YDyYnmj84U3p/I17F0bqL9i7
6SJnGYDF5jO9y5iaY/LBVmvKYo0Wd9Q6x5zLRhoPFosbV8JPc0SZ5ghZyh8S
vsFjOhpdxL9khGziDek9D3b+BveZT6X3dtFsoXt9sJiinZenD2YX3T9X92Iq
Wvdu68FzfCrzh85hfmcLLZ3eZ71WjA7jQpeBI+aac9H4xtoWzisTvnSuufje
xX4ptpsy8Wk8uE9Xt+qQ7RTHtVfYOVMyhHeMlbGXhjPqOmcDxl8bf+BBbTNe
+avgr3zatQumkA3pOIsstSfo3f15wM5T6APypq76E/fBSWOqvHxW5QmLyIp1
HM5Rln7CB7gI9+KdYmKTYZxGX8cL9Dz22vgRX8qjXPpoXFc8mfjOt2BZcdL4
3/hbe4Z+z3bpd/LvG52Xjwf3Ns/2AXvWv/mW+mk/Ev9ZlypDefnrVLZ/28/M
d0d+9dA3OMX6lU6ojv7FheOz8XHrnD7fGj/S7Zni+M7ckP85i/Bui2/MtWwm
+jGeUudifionHVDd8F0xZzpLmD4IK9QbX5DL4pQWQwzGkMniBuMHMo3/cIQ5
P/bEh27vTCFO2Xjy9i2WMh5Z6YkneN/Kkz8ebuo+AetpbbFGh536j0z5O9mA
C/lZ+ZdMGzNzfmJDfNDidPW2NizG42bHXdxnPTH+LA/c3j4n/h4f0Zd0Nv7M
mXCnc/H5+3tHXygX52mvvMZIP+RPY/7B2nxFrku6vT/6nTSZwP/S+31Aa6b8
aibO9jpPckqvpisZI/lhBCxSbmc/4a+5xE8GRplDZAGvkQ1p6xwyvOdB8lP8
bbySj3R+wmxVeJAtArYVFxQP4qL0wWzn2UW1BQ/CSG3Hd9J4MP8Z4082ybJ0
cUfT+27WDaW1zzwjq9rRvhu9LD0LH5WmW5nTxTSG2/ra2tK7E79gsILeDZf0
CdudfqPzaEe+OtpiDpnj+axWt2L+qFu+MfguLu6cYDGW40RzSN3gTTyYP8zE
m371mp/GfeK63rtsULjM+/DH/PaONHyDEcau88h0QGsU7U9/hJ3y788AZv/E
SXhW+XOe4XWLZ40R+VIfui3sIDPwxO9w03qMbVIZ+AGvjf76IYu/9L10uiFc
otPhNZiG73C1MtXVGBQPZuIRTow1ZXkXD7CZkuf4Lj8a78FqeegBuKk423Gg
fOqZLTR+8/f2C/f20/YM40Pvy4tPYG+8Kn+6pLztX/rJ13R/ll/a/Gw/kf7H
Fto5kM5g8KnZn7/wM+dw574P8k3/gOHpZebqxNx505KfYnJu+9OL14qfWfx/
dTae2U6LLaMu8rMzFNeF/BiP5JOcFFMFTsGDLX7OOjPNt0QaD+IXeNd5uuG9
29K5Fhf5zzzA27BI/+ZHZV2gP/W7/lJXY2L+emZtpM7S1mH6S359wEY09p1b
zJXlt8I+i6s65x73+d364pE4MKMv4jn9C//khQv+zU+mODLbmc/1N1zfuXpp
ebQbN+N+37lO6f2ZCNyXnZOul72AHBWLjGzmGwPDiidTnDHyBNPgtPVfcQ+s
AdMHN9vfWpPDKPogbMeD5px0PDj3ALzqfBeG/J2jxyXkjPzNWdgnLs6il81d
B++z1kObr+Fa96gX7CdT+5gA4w/4N1cbzSG6LE4pjd+tQ9s3NOekO3+RH+ne
f4b+mh1SO0p3hmJvIy3mdnpi9zQpR3/oM2k2KWtHvGfOFCNX/Yutuo9/1b5t
cdK2OIjnmDbaTw+ll+M1z9sHxNFxojzxoLmpT/X1nBsfX9Ds4dqD43Cfehuj
0vSl+BGH7NPxID6JK3FPe3ztP5IzfdLeiLUHLvU7HqLnWe/AEfUmZzATzmqT
dByHl9TPc9yF34yVvsW71gtwSp0mDtzT1nO6cryJQyun+KLK0gdwOHuodPbQ
fGdgpXR3L8WJnsvf3uE+frbye56fTc/jwHgwn1S4bJ4pwzM81nM8g0vNvbgW
Dmc3lddP/jW4ThnmJ07s/D7fGe+Z27iws/l+6MDqiN+7fwwOk4vsihOX/HXL
n0RbYBN50A94YNurXrbQzcd6+S6Ry2LOPBYPworOTaQPFjtx9sGedT47b26P
DvW+iz+2cwfL33J7dvucMx8O9A3zz88+rk++Rv5t7WN8s3Xrb7ZjfeZf/cWm
nF6tz6S9qy+2OGoLkzZf/cXF6gC/YDD9Dl7r1zkv/+TT+MK88qLzH9q04fvK
t/mF1ObT2EofPPvGyA/7unfCvIQB6nKd0tlC9S2+S1fiQ9fZWLpXviX5xsSb
MFU/h//6jDxb1+15EO7frA/Gg+mD3skump9M5+ul48HOxtIx0wdhsrLpccZ/
1mZ/dK2N6A/ta/tG8y5fWel4UJ/EKXEcG2N7hT0vj3Lzq2kPMR5UX+2OB6Wt
G4pZnc/Mfj+uOyk6A6LP4bUxg//mB/yDz/ZTjA0O664o9WSbzUdUOcVG7rs4
13d9a2+b7XzE/r659MTOdGznwRbvqB9eyxaKH/Svcq2FYIPv4Yn8H3yrd3Eo
7mvf0B6dbyinvZLi0mgPnVpedch3XTndH0HOYLVyZ2/wzqXD0e9wkXoYBzZK
9dBPxYDpLolipnX/IL6l/2kzeSXP3TGBL4opir/ky47qG+rlOU7Di4/FifHd
Xh8sT3ZT7/pbsbW9F66aC+0pdo6+8xfKzS4at6Ub6idy5Dk+VOd01M5ZxJmd
6fBvumL6KAxXhuf4z7O40DdwId3QHCe7v/1b//eax2zdY6d5cOlkOIi8tb/W
fXz7s+H4TvnmZPpgz33rZn2Q3KQPwg3j0Z515+jNF/YO+I/rYD9+4Ruzcd77
z77bHYtb1NP3J1bUey09Dm9pFxtD/VecWDKlnp3NnDOAk9+7rRPUvzObuBEn
+tnr1XAC7/rZ9gIXF8OvsYU+uDhLeuKgPenUOXnPYTZeoyPCFc/zG9UuuN+7
c476novxm7mxMJ5uDHfhenbC65gmL52VgCndxWAt5nn30s4+8S3nuwj1LbzF
RXgENpJBfEkucCdsLCYMubU2hT3mQucEvdNZCXJrLdUZbHOw84PF2d7udTjf
JQTX1K17lyZO2L1LHyxN59x8v85cr434a7uz9OwbU3rTNc/xgeWHicXPMSfS
GemA0vqneGXKgb94yrvdWUNHyy5qLuYnoy3jpz97fN2RhxfMBzioreYd+6F+
KLaV73Y3ovLVPy6OB30LJ+C4LabAo/gxv539/mAx+eWfe4Pmzho6Fh1b29Tf
WKh35yzwFE6i21k34Bxcub/XMn2wuGrqUxw27VK3dGTysq0hlpzAJByAi/yd
bOBgNlA8oSwyRx9hj4abnqufdRP8pzOSs7hSucrP5okn4BpdET/Ko/zip8mH
g4ofqj74Cu5mR8Wd8qiHMmBjcbrlh5n50nh3fDqesXjQtzs/gR87XyhvZzDU
pfsp0ivxUzqkfkln7FyH3zvbiHfSP9ubbD8yfVD+zvorF9+Zx8ryDNbL47l1
rvL8yxbob3Cd/OKCuJauT3bMme4XtSbUhnwstcXfyIQ02c83BiaQUfWzHiXr
vpU/qPoX23Pu/Ji9dd/NDxDe7+/Y6z9zhk3Fj3VasWCdX+hs5cSxPy1bgHEy
nsY3Ha84sNYD+krf+Ft6tXL8vTMsnutL31B+vrh+4K354Af/zR7mvbePjrf8
dpauN1x+7+K6/d5fnDhn2x5Y+WF9fqWdccF3c6Zw9kmzm9KH4W58cV3TcZ9+
wn3pONZOncsrruDYEW5dPKLPYEd2UXIRD3aOvrOx5Jm+UdwYdi5yAKOyLUjH
j/Cm+1aKTVrcBus62OFb6uHv7XV2x8RmLzjHlrFvWeyLYupqF6zc+47GQcWK
wWXdLy8PjstGKl3sHW0qToX1Io6SH87Cb/XQpnw+88OE88X8hAOd69cWWIdv
2PrMh+yh46f4pqULmxvZujvPqHw8uLfHGofxF7vtzJX6Oz+ffQwZ+pD1CJnY
xyhOByy2hvVpMda0Jd6c+MX3LnsU3Cn+Z7E49tyX/4/6qf92J9vi4vLAa2NA
nuB08V7wgO/pb7qTduJHnIMb9QHclcff9F9nIuA//tYfMBPOdacSPk2XVFfv
KIfM+T2fmfxh8Je+gdXwMB7svglleuZdvOdb3edrzkjLo97+Zr50NiO9Td3j
LZzo3/YT5cvuGid6lj+NuiujPcPS6ZSdsfDNeDDeTH/tHGNcGSfmXxpXmt/y
tJ9IhqXbU8QLdB/tNgfMCThTjD7tt+9CHpRPvvMRJfvWar5jbK2xfc9zPNq5
e/ig/cUxK54xvLP2hG2dCZy9tjvcN7T2sbtLQr19vxjl/iWr5oZ/jSPO9p32
RulzfIfyIWpftfgH2Z8739J5l86++Dse9JON1M/44L3n+tnONV7Eg7NveNfi
PnyXz8+ciX9gPZ8zK8886310XLy52YOXXjh3TTx0+54Hi8GGa41RvhPXKW2N
sU+352U9lZ9k9sD8J+WH+eSOLU3/wRFYSPe29t14bPGg9Rg5tNYxlnDW3Gh9
X6xR2ErWpD03r7qzvvMU+70AcwQW0P02PfbMTfap4DoZ2Pzsz+d5YTybOh7s
zGA8KJ3PT/zYOSPyV5/4VjrjXndT9/S+fRyzzqqrx14fhLPxYGf34L/+7P53
60LrfW02z2AqPb67JDb/18tiXUmrc+cc81PVFv2DiztLqD7FcLM+xgHW3coy
z42Dd2C9tHZmI/VdeGCd4l2+NNLbWcoz36lvd0bAt2Iz5l+qj/Z1VmYxZ2CQ
NQEsIz94EX/Bes8ntuMHnNPwX5/OPaMTH8baDXft9Uf2y/RHdaL3eY7HpMmt
eneXhDz0wDhOf8Rr6gsLvYubcQfdwPh0V+/cGzn39JKF9iJxqzLx2Njt5r5B
30vn0774Cu52X2FpP+TDu36k40Tl6sPuO8wPpphucaX+SYfFw9lji2mTXrk/
05iPaXZX+K28bLC+0T0Z+3R7leQa1uMLcr2PX2cNQh8kl9qQj0HnJqSVlQ7Y
2flidRbT2JhYg8lfXGrrw+1et/MdK93DqEx1U179o934mjwYy2zPcCidThvy
q83fCJblG6XN+cTs93nz2aULtF+41wfZT+NBuGSt72dixEys7PF9ecnS++h0
7fHteRBOjR/H2D+Lr11M0U3XO6c7a5/OqBxcWKytuOC6pNN9ihu2j51SWv/D
Qn05Pl93L7yFq3QQ/U525fc83xU82B1b1vdkpLUcHoRLcJPskUX6RnfT4y5y
1D09xZnp7ol4cHzQ37hwOz4yhnB37gB8wTmuGlmxH8XuiLvNlfZGtSXbJntZ
fqGl9Q/567n65pO5j62afViZ6h6X6R/r1tIwHuZ336452R2F8WP34ZoL5hXu
hTH6p3tmu6vXHM4H2FrY+kQaTuS/2p0XxsV3t7MsS+fa3z8unS6mfGXB9+4W
9F3ramPf3TTZPK1JlIsHpYsdagy7g8m6Rj8ary1G1Km9IXnggn60PwQr5o6f
Gwuntcc+ojRZssdL3xqb+I2F38q1psMT2kOus3/qQ3iL0+iSnqv3xGWcuyT0
PZ6RVi98op36DEdZBxhbdYOP9El4BiP9DU96NraMD1jcR9bVDb7TfzqL0X2F
2jN7qh9y5ln18XziWX7Yo87s413pOFDZ7fP5PT9TPNxZjPYAfU+bcC3e0Re+
re75DnUXxj5u9z6eab/D+fSm9iXjxe6PyvaqPvKod+f35z6jv7xwn19I8ds8
VzdjhI/Zp8iKcrvHovjS3WsjjQetN8iF9aW+7o4S7Rx71uMWX2nf3DH4l1Yd
tNXv9a1xMN6+3x0d6tz9V97ZxzBPv87PNx9f/a6v2sPdx5NtL9W/ytV+6fTB
vV1UO2DpnPm+cfsj5xlvnPkOl2ULhUH5khYzZ35/hOPgIL2PbvlInJlnrr3F
4ovOHupDa6+wOCHw8Dqls/tpd/tKPd+n07Oev8Uf6+y8tL6EEXgB9lpbwmn4
1vmdeBC/sv3lG7PFTFmYgc/IAoyBodZl5BjOxpWdFYoHyWr3RsG/YiWlD1rf
dG7XGNtPS4dNHyQ7+K59QOna3r2i0nSO0uanudi9Epuf/jlet/4p5mpxM/KT
67weHiyOmfqZo7hYfeAo2+52j+nCD+XBL31oLVF80WK85BfaeHVXVGcD9V93
JU986Il1XL9lv40HjWn7ld1VgSvhfffXSOd7AEdx3NZ3q27yaCNM0jZtUL4y
86cK3/CdOa6N1mfswHBIv8xdg6eFgfTJzlvhRHiO++UhD9pM5uAPOy+Zhd3p
gPC5+yNgHi6a2O4fuPhLHTtX0V4hvWLux/iQMz/OubiJrU3X8q62dpe9+aEt
1gTywMH8S9tznPMfc0bD+/Jrmzy+m+9NZzHm3sinr3R32WuD+pIRbVYva8hw
eO+DSt/Tdt8yT+PCYuCMfeVDH6VL+p7f0zX9dNY/fTTdpnScqa/jYHXwLHtx
vkV7H5/ujcqWqp1+YBPbgfqQB/KkzGIXawvuowNqQ+dD8ZZ26Wu8svcbKuaP
d+vb/G/9rZjneAv+FJO8M5etL/KxvTn2nW/5Nxu09uSj1D5gerF6Kpsd1Hey
HbdH6Dm8Y881X/IXZRfN/xPHFRcN980ZkNk7NLfnPOBLVp70weLIsX/mazp3
8D7xHEut+wf9nk0pG9p1ScOI7Hs3p+PHfX44nz44ezXPWv0bD1qDTDyp1y+s
I9vWX9kxYLSxJOdkNR6E452JwxM4UR7YQ/7JBoyBreTSGp88zDnkN5/P0e/1
wXhQWd2L0X0T7KKw03tkqP04HKrt+/YWi6x7Buuf9u/gd3xXbDfldK6/OIrm
azH2u5O32Gv4sf1Ksmkus//QkcwJc0teeAQHcBK8xDt0tPS77hM0FtLqWTy3
dFj8S/eMKz0vHg5uYMvkM9PdwXTp4n5v8VjP99J1Z2J7gnTY/ELpjPqu+5j0
Bby378NeAE+1Ea/BXBxnrPARmTHu0tY8xhOH4L6JNfN+y96OR9kExkY/90To
d2Upf78/CPv9rfsEcRwMxNnWPt2nJN199J13zl4Kx+C4duv/WUM8fvEHrjNG
MA+myo97+q764KDu8y1P+4+d0aALqgfZttaZOCUftNJ0S+XoR3VSTrFr9GH3
+7bHKI82etcYyoMTZr/3aaudczfXB599XPPfkS/dM31zf1ZDPaTze/XjmX+V
UR79t0/3DVyDy/1bXB5p+borsTMi+sM4yoPf2NX9jXznW27tYP2E77oPsnMj
xa3L76i076fPeafYOcqL7/ybHXi/Z5qOV5zXfGjjwHgwv93Oc7avKt3+KR7M
T1T97Z3mU8rmCv/MSWteexy4DbZ1ZhCesVvCnX2aDofb4j75566guy4mbs6c
my9uzMTmvuui2OPKgQuw03vF6PD365Q25+O7m7kv/5B9fJLufNfHeBCn6B9Y
As89T0eDjcYeJuFB8uV7cLNzE/AxPxmYJm3e4zZ5zHvYKD1nBV7xKL3SvLaX
hJv3PAhb40F1SR9kW8B95AKmdk8Tfu65tnd2Xtvrk/TEdOf4Lv1LOfs7EPFL
d3C0b1icz9LF4ZEuhg/ZMy+13Zw3J8xD42NO4WbrB/NY27Y7os5xvNUzW7c0
fuwOxM4t0pM6U28Nkp+MdOf6i1FTnDc8qJ/xXecs4Hd30xdz2DeMFaxSj+LJ
GGu4WRwzeCftb/u4asVbYyeH5WxB0uqQjUseY4BTlalPvANncfzElxwexLXy
x4+wn/0BZsJjPOUd6fxO4aT9O3IJe+U3zrjSuJIdeeCzMYfV+Zr6bn47MDPd
U91Kw3u8NPeNPfXMudqCs4xP+5JzR/GHLd3J+/DX+gDfkQFj4Nv5spKFOEbf
p/f4vX+NlXnafVHFhPO7ehYrNbvrXk/0TXm80z6ib49fwFPPOpb+9Lt3/Yub
lZn+OveDPeX8Pn7yd/l9Rz71sJaWTzv1ib7S5+wk+gunW2Orp/HxHWUoTzo/
omLxKLuzfsU/x0d7DmsPtrs+/MR9+d+m3+VX276gZ5WXfTTduLOa7S/Kt/cf
dU5ibwtVv2IrzP7dref4137Gx2f8YuiAex6EU+mJnudH2vs4kc4Y98WD+Zfi
UGXTZ/p22BIeXpc0zC/dHbLtA8JXuozn3cHkXXwB881buKhfzT34J785QB/c
1i5nuz1ZLa6aMW9/kH0c9+Euz5Vl/e+5dTd+tGaKB8kMDKO3kHd/z08mDsKd
E2/7zhVPZuKA3rPO7eJndlF6Rm3JT0ZaHfMd6o6q/GfitfZYfUvad8lUZxiz
i0rLA/voRp2bSAfsvGFnVZTvXetAuGe+40FzD/YWYwcnmaf2O9UDFmxrisVx
xWRTB1xGp8MDxdDo3mTpuS/9vrPPavuA0sXDwg+dfei+e2lYxkZqfDuXYdzV
h13TO/DMfp3f4RxuT+/r3gdtZcvEo/kKere76dWJHoHH/E7GcKhzaPBWv+NL
2Gz8pOGrtcPE6X7q4i9jDlvjNdiU/RPe4Bn8r3wcaGxhK77Cp+0z6ks4F1fC
KZyIj2GXPBMzd/YirRlxovz5rObvikvIvHezr8ah6YzmEVzXH75lDKyT2rv0
jc6tpev51/eK/aZt2VG1TzlxYbqhtD5pj2zPoelSvtd3yEX8iae8VwyBdM1i
zeE65fiW/NrZvVXaLx9O9hOH+mZn0dWFfuYbyjUX5Jvz8cPR2hV3+Bfv5JtT
LNV8eYyfOqbXdXYkG6ff82lRVrEL2vP0zv4eD2V39gRGZVNWVmc/i2enDt2l
3H2TdACYt4/DY27qJ/3Ddulsx5wbvPPs21mcmC2G+UX+MMWKw23FO2cDbU9w
iw3wKL8a3FfMmc7md2d4MSRhGry6bun4LjwvxmbcV/54MLtoZ+X0a/oFzCfj
8MyeVOcH6T/Fk6FL4DtYBE+NPQzBg9LxIO4z1ye23uwhdvcEW1R7AZ3Z7ywA
nkof3M6XrjEkD86jt76BiXs/meLqpPPivj0P6gfp+qc7HLufNz7Vh2Nrv+28
56juOIh8wc3tfqRzTG/5YXxrCbqz+a4MdlFpfiDmTvd0dHcnHp317pvOvp24
Ba/7lrw4Mf7t7EacqO+LM6Ns9tvuh8Kh9D74i2f1r3lpDLuT17pG3xUPZNv7
XONOV8c78WAxRa1N8mdg+93fFQhb8btvK0e/KMfaHhfJBx/zk+le3Yk/fDrz
LIwzNvoINmmPd2BPZ+3zKTWens35kxtnrsSjxbeSDyaST7wG4zqfKE++N3Av
vpPfu57DVfKM7+RpvzIdJ90Q9pkn0vL3rXwpfUub8ah24Q/fTpfMZ7W9P/1G
JvA93sBHfofTcVt7jt7RJ/FmHIrjjEXnOyrDd3tGFvRb50T2Nli/+74+l9+a
1twqTo/+0ZZ97HF16o6rvW6rftZNe39X+ffxA/b7o8UOj5PwUToeDpWn/c79
WYliseYvm421OzuUWYwB78Io+au3+hpX/W/+aGdxWv292DPFlvE+PbUz9Oa9
OcNewj428UxvLN8YHFgMcLw1XPfMi+KibbHfzrHUuuuDHgj79nfv4rrRJ+ds
hXeLL7edJTzN+vzu5UuZjnCd0nA4ToQx2QNLb3F8zvgfznsu3f6g+dz+IJnf
YsCc712Cv8bdnC6eTD4w7OKwBfbhQTgA9/DgrHPfsPYH4VixRuEZnWdiFb31
tNltz/6cm8/EkgkyxC6qnmxvxdNOHyQL2lL8nPS4fGO6eyIdsLjcZIO9objc
2p4uidfgWmct1a21hL7Kx6ZzK+wX0t2jqe3WoPLaLzf37Yt5Dl+7lw3m08HM
XRyvXDiS7HY/YDFLW9uxkeb7VHpiDdx2jv9f/DRldm+vuZDtF592x5a/wTB8
ZLxgF47CR9K4xfPuiZA2trjbemZ8R964YtFoK+6TB64aJ+2Bq9LaqY36S5/A
/mynsNzY0PvzL8WbsInssU0oBwbPfXVPWXqh78HTsWW/x8I4HOR3a30ymZ+S
NZ88pcmFd2G778HK9gRhZLZQ+fUjWcMPsN8+aOf6ca5y2q+En+aIb8kTJ8aV
ypdH/vYf8a+y1NnYzNmUZywu0U/KwXU4qdjgnQFRJ3ynD/Gncrtnw/ioP04c
+/cHL26LE7UXzheHZ/aHT6vOc1/l+AqRL3XGjf7W/R3eU2dj72++i6PUs31F
78mT/pXPSb5AeK+zkJ21zB6pz7Qxvs+nRd90jiSbZz9xquftCcaHxdvBW97P
N0jZxltfG184ql/H/jL+WvJ0hjSf4fxx0jHjXBjG15MdKR1uO0O/uGv2CB86
82A+ovxhip2G89oHlO5uqe5UUsbc13THeR8QRk7Mmfdd+DDxml9+5ovup7su
aba2zs53rjCOaB9wz4mdH9Tf7alZc+QHIo/5B8PoXcYV3sA3uN2eIDyPB6Xb
E6QHTZzj1y87qrkI3zwfX7yXn+2i9IVZV71tYf7e7xE3FlPUGHbvUjxYzDRt
lw/f9TxfSjLwe/FgccW7k2JiGj3xrN+R/fTrPQ/G176FE+hbZFc/xYPWA9oG
h/mMwXRrA2sGcimftYTx2/xBF+/QJ2EIrrAuKXaZesAmfVbcUd9l0x4/zYmt
qo+Lv20cfEe983edu86evMZtO4+x9vWsT9RRHeiic0f725ZtE37hGb/DSjoj
ecAh3dOUjdRYw8WxAb9lrXPiwfjUeEpbXxlnXEYe5v6JO876I670rr1IMil/
tlnP+dXgHbzkd9imftYvME/70+OMJXlXN+sx30s3hG+ek2dyoT7KUGZcGcfh
BLwm7bky9aHnc7f6B16O3Lz7wkvfUqb6K7PzIMbSGObzQ0/0PO7Wb7grnxyc
0tl/aXLhu8YJpxqj9DXyk61Sf+qHOcv0wQvj6Zu+iwflS/clR9Lk23pQfXyn
GOadqSTX/jaxoMZe6r3sh75h7uMCfZlN03vpbPov7onfOgcZ12kvjjQG+nUf
r7W7HPNfKUZ5HNrdVp23bE9wHz+g2APeVW9t009kQ79lS1fPbO9kBP6yiXQ+
1TjCN2X6DlkgA3Ao3nNGAu91Fn7D7oW98AXPFQNt9Lm7L7pDyR6ivONDevej
eBAGTSzS+y9gKGxgO+pe6+KTkzt2lX0MyeuULlaMfi1+WjFF02V6Li0/HRB+
dkdDPJhNT7/BKvoVHtSH1vzWbu1tdT5CP8eD3okHYWU8CHNv5sH8ZMg+fMVD
+aXgr3iQ7OBUax1yQjfY7mBfa4Duo48H9cmeB7MDx33FjSlOb3bR0vtzE+S+
M4njx/2sJbudN+x+K7oaOSx2PlnkM2bOwUp8p0+1Q9r7+lPaO2ya5js+winx
oG/AHm3ezvZfbrrXqoO6qfPEGxt/0e5JNBekN3v2eW2jfnDFXh6+M9/1P9tr
MW9wX3t8eM28Lh6a9nhPGv4pJz2udOemtRdW4j7y4FsT233SdEBrJ9+SX/3I
Awz2TjojfvQtuhf9EQ6mD+rj8RV+/MJ5Y5lu6Hnn7tU7f5h9rDa45xvwHHYp
U/8be/LieX418Flf4L7ypC/k5wOv28eUVr60cuJK76qPOrQXaazwQXirbvF4
PquzBnnG+dyEfsZR+aPCZOXmw2Pu6f94UDqdjjyYv+S6mKzVYb9fWQyB/T6m
9mbblEf/ahO7YPd/mO/4Sd7264yhMfINY1sMHen4UJ/hJvnoo/QsbcannWlv
b6/YcOl5eC3d0rf7t3Pz2THVDWYpT/v0lb7Au/rDeBW/SJ/4e3cq6fd8m9VJ
38hj3Vtd7RVN7KX7z3c9TZy3OQ+BG4vx4nd43b7g7O89bZ2pmLsExv7ZOfpi
jY5fzD0X250EizPb87feNc5kmQzr5/Ygisvqm9cpDRvS79jYwnzPNz/EZa8r
1sqcY37mWn9Yx9AP9P3sb3zBykMGN3v2+c4UuEfmYElnJcZP/MEzD7KLkbHx
JR8dsPPV0mQNxirH+preYs6ygeL1YppZ43SOfpONhevq2bkJbe/cRL5DxVPN
F1RbijOw3z9tn7R+28cXhYV7+2f3VmQjlQdOt5+oPvblyKVycATdjM90mIsT
4wD91n235q+ysotqj/rpE+XiL9gr7dvmKTsnnxnl0snYXNj7ig1eTFR+pHhN
38kHx7I9qgs+MY6wRv+bs/jIuNMhYXPnB/OxYV9Vn7gMhsED31BnPEgGYMvY
tV955j55YIbn5msxdeSH+TjB39Qhm6r2pj+SSXnIIrzUZr/DIuNtTnT2kIzj
DnlwFmw13jABdutz+eCyf80D2C0/vrD+J7ftLeprciSP76un/vRNa5R8gM05
OGtdog7y4BxrUv2jHLypbpWpLXErrvCuOkmbD9I4x/O5t+wDF+56rk9mX3/u
1+jMI17RDt/Sz7Bd3YyjeuZ3ZDzkL57qyOVTl91VufmzeF5snO4y7vxJOlh3
OOIB468+8nfGgdwYn84ydn9FMcnza/F9XNY5ifb+8u3cx5jLriqfOlh37+PC
eWd/z0Yxxdtr1E4yBtPYMryb/q7tE+fxcat+44f3uNVO/a1vcf/+PE4x2XHc
xDu7ddlCZx/wjouJX7nuy73onig8CZvmfqU7zvcueQ8PzjnBOTuPNz1jb+rM
fWth35u4869Z89p4kilzzHiQNXM+jPHOdUqbl+F8MUVxQfyYzqi/8sMvFrcx
78ydNQ+9BHcYSziEL8m8b/gbWzqchYl7HiRf5rV3yCJO7Ox8+1t7Hiw+G3sg
edvzYPE84TFc3+Rg2UXJDX2lu6Wsv3FO/kJ4m7zsY2vv0/kOaW/xZzpHmTyp
Q7qzdDog2c8ftbOH0uq+nQtasek6C8lXzNyEp3ypYeh2T9TCEnY//ZAfjDR8
3vxdlm6hruYy3DLGsy8ysXe631AfkfdizNIVulcX7sBpOrj5XvxP2Nh9gvs7
BNnqjI+2WQvj6s44y4+DYQJd1ZgaOzyI+z1XT/wIX/TLFh99rQ2KR9q7MKS9
P3X2Ln6UR1obyKG26Qu4SPb8DkON5dztelryiWu0pefqY1z1KV18zo4+Yekz
5sms7d57fX/iQT9pYYa5MnbPB1f/2Eub+D4TH2Bs4n9o4Sg+yl6qbt5TN9+k
P2ijPO0Pmi94KP6auXTH5ayr5gyj/MrPfksG9YN3cVt6K3nE6eXXbxMj43Hn
NGwvxrs6FDMHbuMcfaceyofnxeQx3sbffhd+8s3208hgfIVHO3uRX6v2+750
fjad3fe7ceyuje6i2sfP0e50uXxn9jFeOssXD7Y3WHyb4sPBnvjP3+hrMMg7
2t050/yK09njRG0gU2wl+t2/5LP7dcm09W22UOM0575uvexeJz4wnW/AhfnA
eLbnPvN28/E83xWI87Z7wRceln/spk86zX2Fa49x+buZ/+bR3D3w62cfMzYm
eNMZ3u5j3e6vuFbpzgKY29kVjWG2wfJL5yOBE8397HvkGK4aBzIMM/nJFO8I
ru71wXgN3+FBuFwMmb0+CAcfSx+ES+0PWqfA+cGVOee++WGsPWDvj+3zBYsH
8fO25jrHF82/pfhyN/Ng+4B7H6H0wfxm8dqsnZ99TseD6YzSZF2aTOI98sqO
YS50BgQPmqP0bL5jsFI/8pkpbrU5ZF+ILtY9xXQ3z2G5NYHnZNiawXxj48dN
5vE+3mmxuOHq/i54ss8nB87hXn1uH6Q7AYtdrC9wNu7z3Xjb+MI2HGHuW2ea
Z8ZEntJ0jeKwwdDSfcs38rHRR+qmfHImD+7zLTqaccWjZAOe4yFl0ovhEQ6A
Sbh7/EvmDjl9hrv84M65E/j+Zd/2rrrKj4t9D77BCeUbJ+/7u9/VV19I43Np
fUhuyIv6Gy9yoU9gqZ+eywN/Jq7TE5Ytc2wTty5u0gbfSo8znvJ7pkyyOjaB
n1x2af2vzmTHu/BYn0wMo1suizmmf5VJh9M+vNB5jX1sHNwTH3SHk77P1yOf
lrHzPRILTlndo6E/yKS0dhfDRh3T++aM7Iee71jMnpl9M3/O4td0Z7GffGk6
05fts/fUm20zbizudfcuiuGC/3Di5rOy9gC125yZeBZ/fPWfeYJDzBuYQv5g
kTllzuVjZs2gL421OW5u0wnGx/CehU2PvvPiwYvO/W336Cx7Jk6c/cLblr63
xdm+/fnbXYHsn9a4m4/edq77lUun5ANHL8SNMMU8IKPmYz5jZKx4TdqMG7SR
/OXjd53S5m7csefB0nPubmyD9On8QPTt+Avcc9YjjLU85hF8p3cV89Y4W1t5
H7bcbBed+23euJ6bW7BpbwPEldaexsu6zVqMzGX3a38wu2j3Llk7WfN0x9me
B2EUniq2QDyYL1B+QfnKwqP8XrJtFk8m/TrdMB0wrmzf0PP8c8iiNuNBcZLk
9zu91ByBKdYXzgvDAPIptgR5xQ04Lh1M33Y3rTmsbcZGnnxpYBqci8v0pTEq
Vna+NNYp0tmkrWFgrL6jexbfDl9Lyy+NQ2Gt/u58hLrRIehDvqcc4+XcRWdD
6Zi+hYvsMXue72j7g+RBOcrEYfoFX/s2fNJe5cJYXBM3mbu+4Vm8Bv9hEz2O
3NFVfYOca69vW7P7vvzkb3zJ7l37mmzG5IY8+o71V34pdAJtJ5/mBJkZf+Zb
z/Zg3/U9fGqNYn2hfb7pd/nmXND43eQz4fncCXbrtu9wY7VDfyvDM2sB7Z12
vvRUfNidre3cJ7jH+JEbnGMtko+ovtM+nGSN2hl/Y+xv6TFkEXfgmLEDfeg5
jln+mLitmKWdx++cYfZSvNm78neebx+bs7Pr+Xbmy7K3fe7tn+3vdTYhXiym
WzFQcZ3545l5B4+8Y/9dv5BBHK+fjA9ZMl7kQ19mKyM79vrNd2NOXuxNdI+l
tZXyzeHuycyXyRq9e37peDjNT3cebfFAll+nM4Sl2UU7O7idL3xUPBk6H+7r
HL3nxYVSb/gKE8iSsSEffjd+cNu6MbsoeWUXiDuuU3rPid0xgfvGvvPcZTfL
D8Tz4obhDvO0M+DwDbbJj5vIwc37g9lFrZXJWH6h0nNW+E2L7+JBaZiYT6nv
wcD9eXxzxfioxz6GZ/ogHvROPNh9E90/mF002+DNZyc9j/f3sXeKM+P5/s7c
zh6mA8aP+/MUrSukzSNnOtg9jAuuYCd1dsg81X62UOtcmMtG2r6aNMzVJnvs
MK2zJHhSOeY5fPVtc9tcNE7m5nan9/kuDPuUcLD9cngXH2mLsvkY6WdzSZnp
a34vJoz3PcdLnsNO8wzX5i+6rVfW2ErjDOWoW3fQw3B8B989V6b+gvHsUROH
+/UrbW+bHLBDzh3nb13t6q7XfEeNZzqgb5jz2jdy9dOnOV95/yl7EbnVN/pJ
n3QnhvFWFh5KX8OHxoNcW+uoe76rZEdd9Lk+Gr+qexZ2ThyjZ63vWq+og/r5
xty7+EVLh4ep3cVIdrb7uRa+PX+7f3Vb9213qT+4MBBepl88Yue+/1TMa+OD
E61rjXPx5cZO/+Hn+y+sqcgTzvI8G2j3CFuP4K30vs6fy9N5PFwpL74rf3pf
XLk/79AdiXHYngc71+f3dEBt6s734pa1H2hd7Xdl4yJzRpqtqXhv+qNzpvqC
vMErY2Y8zCky51/rivZ/jEN6nzlCFuhaxr59Rf3GFup76m/clQN7x7fl3nV/
BB6bewLvfVTc7M5H0AF7hje7C2L488apfLiyuDPdPygv3COL5p5xmn2ax6+2
wxgyUvw69TdOxbrvbtbO312XNI7rfLe+KL6W/jDuY1u89exPWEww/QqjreVx
DOwyxz0n1+SHrrGPiW38YRCsj9eKHZqfTPog7HosfbD7KR6LB83b4pW9I32w
+ybI8N4u2j289Uk+LcVMw4/7uGqlizUXDxZ/tTjk8eA+fqky9XPx38yFLU7g
Wi947nwEPNAmfAcDjBtbjTlNlq0tYRQ+sL60ZjcPjYU272Oe49pZc88dVV+1
3THBbtP9F3B24jvP/fJwoPhp7cfKA/PjJthh3uCRzsLTAdm8pHFZ5z61H7dq
M+5Rz/yz92fn7T8Whw1fq492mY+wBg7lV0NHlYe8ea5v8Zb8ODG9j+1BneGZ
9R5Zte4y1vBAPrrs5qO35oh6wrLuj9J36qf/tIss6id/Vw9yLT8eJrP0BpxG
xnybDG1+DJsv81NWeX6fu4PettaO8it781U6Nd/Ixdwzve7OWZg2cSKetjiv
+8lnP+nBLY7k3LOpP7W3uzXMQzo4GTW/yYb+sk7BEeYtXc7atfMMdKp8V+B4
ulKxXKTjMTjaWXVle6/7M5QVD+7vh/I9P/4W3ymvMw7ZRPf810/6nrrCh+74
c39D+3542HwoHkE+nOYPeYALZA2vmb/beeY1j/SfuTJn0G8srICTnfndbElr
/SMv7tXeWdMN/7aHM7GPHzjFadYnuM+4Gdfujc8Wml+o5+0PFidGfnXtTvrO
T3RmnkzQK+GQ+pInWAtrrAGtecg6PLGO1Tbyb1w8N4etXeCQNTQcKA7VdUub
h/lLmLf2jHDX/i7CvQ+kuW9e4qhZLz/prA8qk+w2p/f6IHmwToLRxVKDIfv9
QXnaH/Q8Htzrg+Q6HjReZNn6+mZ/UeNuXeX9ufv9vn/CLro/R59P7D6+aD4t
xRDYx1zd3zHR3bvFrIv79jFIu0uCfClTGv6af+qmz8auQm/9qKVbwChx1YpB
QE/EicakO3nJp37Wt/oEp8BR34VH7dVa88J6fKZs/Kg91jMwvFgE5rWxsybu
DIU5bnz8DsvMj+1ex6X34TkyoN/JgXHzd/K03zfEoe0zmnfxpne1Hw+pj/K2
O6gWdrTPiMfGHnr7sh8oV7/gTNyknuML9fZl4/UuHiSD+oa8GSP/6jf7Zr4f
d+kPv1u3GYtil8Mav5Mj4zZnLz9uzZuJ6/rK1a9sl+rqd5jomTKMszabO9LG
B/aqg2e+q1/MMeNmvpmHdL540FpmO+u7MA8WToyRiTOS7uCncyH5bBSz5RFf
jBvn8+vWEWSqeGd0qs7VS+OmPffJk38mHE2nG5l6+jlPvJbPp/zkJV8ZclT8
T/zU2UC4S67L45kfZcSByt3fXwsfzJHilFU/6/bWJjhOP1t/jB164kqNLXl8
tslv55j0X/tE5n53lpEr8kOe1HPiUDx+xckutl0xWnFuskJ2rFPofBMT5qHz
XbfwZeycd57viy822v6O+O28+8UjcWLuvtji/p9a96Qrzj7hiqW9cI/8Wc8V
N2n2sU9LTzGvjOVgyUPrXg/yQn7o9/UjTCOPE6vr+qTH7/tz15wzd4rDDKth
u/lnPseD3TFk3Iqt7fnEbXrp4pR40Phbh+UnQz69nz641wFxHLzuriWYlJ8M
TNnrg3seNDcea3/QWHYHfffRk424ZuIrPKIPPn+7x3YfM4c87mPKFYNuw6rz
XRLdQ+F5Mck7U1+6+GzZRZVTrG/v4k3t3+4JW/dNKEv/4DtttgZhV7Guhevi
8ZJR7eheQlxgLLxnTLOh4iCybSzmfOxTVr+ZG91Bb41bbBzvwk4YQT7MZ+tc
+WAcLiomdhxi3y3+at+y++uNx2Y3P9/Jq0z1VAd6ImySxn30RLjlW3O25E2L
u32LbpVvLA6hbxpXf1Nnc1qfkFt1bD9s7iC+f31jYq+ODVS7cb8x0e7i7FhD
bbEUFrZs8eiWfQluaquyfBe3aQt8IYP6e89rs5dw37JbtK+p/trpX33u/eKH
jI5420pv8V0XVptT251za52/xTxa8px+R06LRQ2fixmQHo37rDXoKJ156B7g
Wb+MXVOeuI+uT+7kI1/ZP4tl6nnxRTtT3p0S3pWOZ30vTpRXWZ1/z98mm2g8
WMw1ttliyBRTzQ/MMP+tBa058bw1if6FE+SQjJjLxtGYzR7ZurNozUF9SK6s
qfS1NiiDjORzpTy6J+zyHdxnrlrfwbf8h+AoORp+vXHRXYH4a9YqY8PsPKDx
jeeydXdWAj/T6+h58lsHbf79p/xCtzNeC48228BF2KY86x8yqt3qN/fI3rLG
r711/auN1pDFq7eGxOewhw6pj8mr+XOd0uaKMaPzk4HS2XRwoj5rX6z9QX0+
saCet8Zj9nxfsuZu+4PWQOQ1PxnzrnMTN5+VGJ/r1y6Ou5kHt/3nlSc/md/L
Lgq7xldguO8d8aB60Xviu3gw3S3u62xg8UXjwdYDceLej1SftCdYOk7cp+WH
5Z31MB/ymSkeGp8ycwxfWT+Y93iQ/wzZJcee0wNxVefQ1QnuWAtqm/es7/BR
epz1IY5Wh2ykcGCLm7b4RX5Ypp+NnXXj3JX06rXHZxz0PwyF78qClXAXT3QP
BR6Y+MhvWTwQb5JFe2lkwXP6gnqqn3man2e+N+apsVB3MsfPwHPz1N8m/vqr
Tu3fWsNn28AjxUb1L9sArPCc3LBPkfnOW3XWiu3R37Rn4t+8YumZ+hv3+abv
aTNblfW78vJPmRgNL17v4jt5ja32mmfqo8z85LeYtIsX1W3uwXnawlXcmM2U
TMA4dbAGsH6l8+f/if/ay7MGkTZnjCcZMG/1H6zDfbgUF9HTOv+Oi4yV9zrX
4Hn4T96sq8hf90oUKxsvzl3NH3xOdxdF5wS7k7g9ROnuPvLN9vfIuvWV+mqz
/hr7x9etH/1I9oqrxxZgjaQ/yA/ZNj7kkA48z5a+v3Rk841eDPNnvfXhy35q
nNVL2joS/hRnRz1bA6iLeWNccVXn37NnGlfpOb9w11k+xh/0tlP7eTBl7KK3
LR6c8+4PrH3DdEbyQK6syYojOucLb1trf2s480mfbPrMkhFros5BkA3j352e
xhT3WRekS2u79ulz6e5iI4fXKY0Hu68c/qcbwvbudYWT+dJ0px4enDiLz11j
YD6wAZm/5hys696l9EE2C/h+Mw+SJRxn/U/GlAvH8GP3l/9ePAj7uu+1+NV7
HnxH5yZu5kHpzstvutFp4ovcfbZthq31SXuL6YPpj93f1F1Oe59Ssta73ffh
XdylbuaAuTu2lAcu7NfACn1vf9AaXRlspM1h5ynMTVygn/WVPoAzdM5sOOSf
jqSvYLBvWJu095cvClyBbeZK++kTt+yBJQOwZItDtNY/nZfX135XF9/P5snO
rUx46hlbIn3D2HZnve9Ye5MRXKyc7qXsHL0+0sZwS7nKmLgHX7Jsh7Bh9ruf
s+R3YiS94Oxzsq01lvxvtsXzfTVhUvd1d95q7E3LrrVsnviPrOE33Fj8xi1G
6xpnf4O76ghrxl781QufyRd+Mwat361L527V24pzvHhQ3ok78OCSa3PCHCYD
ndW2RjEHi0tj36G4ZvGgccBRxbbGY50HzMezOKI4ch+XG2+kJ3aPYc/xk/zG
XzlxZXuFvqfMdMP8YbrrwTe8X5xqZeNKdcFJ+tu4GU991j6X5+SaPFmT6V/4
UPxa2K79sMy6UdkTO+nWpVeaI/rK+hzmwBF8S08wvrCr8zDyq698+pYeTcZn
LXhfsnb2R9rOqK/9u+yc5Cl7AiyamKEPr7287gq0fpKWn72UHOA06fLgRXgh
PfJ74xwnjT+X8ouXSF63PaK1RoLFxqYYg8a/u8+KLW+voDOq6YPm4dyn/uh4
U9clbd6k9+W/0Z3m7RuG+bClO/6sazpHbzzMGTik/8m7+QpXu38Q1+Iv347X
9HMxtKWLKXrzOfr/L30wHvT37trr3qXH0gfjwc7Rp+t1jv5mHuxcfHFm0gHz
k9nzYP6l3XGvHHK6P2O4v3+wO3zbi0yv1KZtP+gCdsy96K9bNlI8hzek8SMe
s5awBqcXWUd3j1V7rJ7nw2ks8KE+My/hl/mCj/KBgdf0vvxVYCV7qvbnl9rd
E/A5O2dp9ZPft/ZpXGY89n4vvm2esmeam+al71uracPo1Hcv7lEG/sHl+jaf
SmNi3P3dmPpXH0uTdX1NNsm88YAfZMI6AHaQ7+L0G2tYQweUL7ulOis3P1Ll
wR7lbT7Ky0aV7wt51k/ykrt0ly0WwHrP97VPXSdO3fh54j9jpc3mD+4zd4wr
LINtyqTjFc8TPuMU8mK+mIfd2dedB/q8u5ziwTkfMz6hZCVOlN9z+a1ZcJPy
5O/+Q8+VSVbk7wyEv2W3VJZ5WnyZztZ7Tv9SrvzkGAZr88SWvm+Lj/mS8zjp
v/E3e95pztP+6uof8k2OsoXiJ3IMV+YOz99d60B2Y5xoXzFbn/kCy8w5nAhz
YL49CHW2Xs9+jCfG7/lF7Ref9b7kAWdN3I171u/Fd8R34xs65/3IzMjOSxYn
dleuf+dOwNnzjQeLoQ0TOg+46Y3rW1uc0FUvazCYrH3WSeY+vDPHrEvGhvTz
yxYK0+mA1h9xX3H5jEdxGDzvbjVryOuUtvbuzp1idLG/ZCuDLZ63Vy8/ObRO
KYaYsTB/xrb24EX3w8Kcm3nQt/fxYWB75we7h/exztH//+FB5WkLLIJB+YuS
285Q7M9NGFd75YN7t677JqTxUfHlPI8H58zxcFmxyuPKbMXpdxPX9on/RMyZ
7mPKx8a80uf6OX8bz/e6obk9vPOEU7qhfsSDzv6SV33IhkhurXvzj5S/2BbG
CFaoX/HOfQMGwRO/T7zjN655juOMlXVS8betFZSjf3Fb5xqsbazfZ59w7RMv
fXPTvy5br2cXNaaDmw+uNbz6jt757af8Zuc+3y87jW3yjuw7a802cnfHkjF9
ie9w1eabdSou3sTgeNqp+MTj0/uC7X7gb1r59QH5bC3Pt6B9N3gcD6pL9tLt
npHTnF++sbjYM/8aS5iIL8mO9eCsIW7d7nh5zqoTeeg+D3/He77X3uXEv323
y1lDzVntuafqgy4nBvr7XuZXDLfMke6TgPPmYfdK+Ls1TvbPsUk/wn30Nc+7
n5fuiOPiN9+jD3XmLa5LH+yuiu7szU+m7+Uf6h2YgPs8V18c31lifaK/9En+
tZ3f1Jfd82w+JFPjA/24tcbDccVrgfPWVGR+7kv4gMu5G+Bxi9dgmflirYjb
6ZHmFO6GJdqrbsZg86U+7+exU5KV5CrOGj667WLijNx3juHJvuB3a1v5xgZw
xylu8y+7prLiPmVmC53YMrcsPCjOtvesvWA3vdLf2W/MP3PZ/MVvcM5YWh/o
C2NKx9Vfxh0GzVmKp6726gecD4fJW/qgvoIb1nnk/DqlYa/53Z7grLU/4Lw/
CHfyjeweon0cFesOYzB3tT1vjfHEQnrtKp+87e/hnTNWLzvrgMXZ7hx99y5J
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
28rVHu9J4xHlyIMjShcHQHvbHyQPcWJpcxTv+pb86kce8JR34DnZo4v6Fhwy
l2Fk5wr08fjyPn5h18QPumXhq+fGmQyrN1xrbQLXYDG+8I30LGXqf2NPXjzX
12QNdsZZ5VG+MSoODPyR3zyTVn66hnfVz7vqow7GwprDWOEBephyi4tlvsFW
69TxUXrGsrH6XT/Tb+VTPr5SLg5i3zH39L+/q4e0tiufPJi/5Fpa3aoDrlMu
rvG3zuP3XHt9L19T/atN1ng4iiyY7/Q2eck2njOGxqhzFupvnKRxSOcs2Dfl
s0bjC6PNONTz7KnZV62p9zZT32pfsX/zv0k3VDeYpTzt01f6AifqD+OlPGOh
T/w931T9bt1l/adO+kYe+mZ1tc5jV998l2/vPP7w2QvOfJcfKbwuvjeMG5+b
2xbnWV/TJ+Gdv7OXwqOJ7T2xT+eM/0MX+cexBRlnskyG9bM6w6riKqcTXZe0
8dnOJC2O666E0mH+zXcrwM+JWfvsMw/SB+UJM+mK6Sl0CnJUfOf8P/MFNddg
WjxYrFFzMd1wz4PWJ+0PwmHjp+zsuvGgdQ9+ZRc11rgC38mTv8qeBz3f82B+
QfqqeNpxIp5p37B0+fEdXMyvBnakJ45tbPRW60j6H1nUT3Qp6zXzQttgIluo
+c0W6jwFTJIPD+YDY66SU2uReBCHse3rn3xg9BmetY6fc00Tf0kadxdPG/dN
LOfxCc8X15jOeem5n8Ic0ad0dnXs/gTz23dxIkzGLX7PX5Q8wFz8OPFZPnCt
qY01zNQuOj08I4v4FQ6m30njDeMMT8jDxH274+yjmY8ofZhMFkvKtzpbDkfx
id9hnPrBJdgYj8BXY0neszf6nvU/+bSO9jy/FvVRhjI9187sn9kYpT1Xpj6M
49Rt5ObdFx+kX6i/MnEuXjOWxlDd6Gn2aT3HZWQmvx3jCfuto4xbaXKRTkd3
NUZwW/uzU2pbcVOMvzJxKN71Xese+fz4JjmSLt5pcd3Ug46M0/xOrv0ND+JD
Yznx3ed8hm+Y+7hHXxoXP8WekU//KTP+s8aIE6X1nfbitWLi5CODazqL4RvZ
SdNNlZ8PTnuNvut37+M/9ky/S3u32AH6iWzoN+MFY9Sz9QkZgb/Wc/rPeBlH
+JaNlCzkG4XzNi68vRilxdne7EnLRtp5ibF73ncx9tSHtvisc89K/sQ4tDhs
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
r9+k4TW9iuxZb2r73J32t9acMj75FvLp6r7jza/3cuJcPuW8zumcS3cy+m5x
1NPfpeF+8fSkcShOTB/Ea3AW9+pnvFG8NdgXJ3avxNyf+8cWh37muu/2T53j
pMEW/GXPDkZ050uxaIrdbU1Aj8eJ2TzVwfix88pjDPClMvMzKT4wm6fy8T3+
kp98kEXYhwetpeBovCMN17NhxnHwO96Eufm9yIP78p9Rv/+3vfsHEe247jiu
woQULlSmCialq1Qm4LerV5gQgjEqRDCuVIWUKkJI+YoQXIqAQKRSkcJFAilM
UGUewRghhBBGGJMqZQguXLgKIYTPnPlejR5y2sByi2Vn786dO3/OnN+cM+cP
PPXdbCTwu/Si+lY5W5RkQH3IV51MZ33wXOPHC/HS8sTjueX/QwPWwLf102+0
UL6jZKiwrN/l2zXvyuqEZ8XG9DeeXW7dsMY31cnnQZvllDcWf5dTwt/eLQ+F
NuGYbxub370PO/1ffd9RTz9gmXrlUiyGuPgS5gt+wjr9tD6+U37D4pcWF05b
2iZ3wSBl+khYm18hnmXcvuV3smM60u4Ks0GFm/7WTr6KtWfdPEs/q9w3umck
C+oLHsdHSvz8cDBMN4bJ8zt+8sWJcfeXjpTuq/xhg3+TLwyu5UcPK3sfjjpz
T67DF0unOnG+31/xZ2CittOfpTdLLnhKZbw1GfDV8omJ1S9+Zn5z3Q+OzfXc
D6Jr8qD5s+7uQPBotIqX4LPkO3wpH4ryzOVPAfvUwWeKQYonkRHQG/7pnGIf
5nN34mBxtuGgtuDg5HIevwm0kN/ExH3/Iv5n/n1nDG1yU3klmp8znky5J4o7
l41oz7Mj0o7x7Vgp691kQ3Lz+Jr8+8o3MX5sH68Ya/afuvbF+O9OnGoY5Lxh
/osJrQ/WQlk/fcv48W/PYSX+q//643n2onj0xNL8/pWnkiyJZxeHAj+yDs4Q
ZBrnGn3A++mtzdHcD/3kyo+sbC7wu/Si+JYxTg6n7y6MSk5EM9Y9mxbricfB
H3eCeHc+9XhdNnj4RXgXDqIVPLw7u2xLYBZ+3X1c8cSU0XDYhO+d9u1kEeM2
/2ObNb57dKTWCM9LjstWs/s7OJbtSnXghTkdP6LxLdAPtA0Ts+dUdjbSjnnU
J+0ka5lDfdKuOYEz6hijd8sbeMqMyWzJiMqewx318n/XF+OCDeYvvaUymjRO
P575na6yu72z3DfCar99wxiU1XPWLSaod82HdSzelzOW/6FvdIInOAM427C1
tl+0mS4zP4pk2sq+78zpxzvwqJxP8Cq9JfrRn/oUJhbnJn3piaV+8tvvb++H
f8V9w+fgMjsJ+lD9d/blO0VOFH8G/9t+xuv+YnIbvvuw4xJ/KYbMWS7WaDl+
1S+HxY7B/ThxSJ9fOOh/k+frs9UOvtC9YbjgjP2Uyun6knHwsJ6f5Wwqxtf2
b6840tmLhoNnbGdrhlbou2DAKcfBOzwmHHTexgPzpyi2TLY0nhfP64zdnewJ
P7IX1YcTB2Fy8iDZgxyjz3AHJpY7/vQNbOzkNbw8m5nKsCZbl3JRhZunXjQc
PGOf4nf7Dm3ho/nQv4ntMTkp8E747n3nXnsoOw1zCHvwNnhkns1ZeZNbr7B7
25MuvFPHt7KJVee0s9VP9dWxpvSRzjOwQj/zobC+5kLZ/GoXDsLlPXeX/6Ax
kh+3/8lqX5uwDI4V823sVsffHD+j/8TjzcvIk49XrjTfLd4Ffu9Ms22j1n0d
msNzs9XEj7qPw1eTy/BKmGhuYG7Yp530pXgo3MCL01WS0WCANtFo+syxaf7O
5Yt3xmDBM2Ht2AT9YPFj3yjnnvfL1TDxzt9abc2961sLs3y7uzzzkZ5Tf7un
0q/zfiybSviUftS37NPuEPWhu7fkPpiZbs/f6uTT3n1avnn+d5aL71IMs/rl
mT703PiyUdFfuAAnYIPnxukHb4J3+oMe0JM2YWKxGuhTshkYP6WvLXwpzht8
MUe+bV6Sk73b3Ibx/qcv2a/gP7CIzBY+pg8NH7O9ye40HDQf3Ttm2wNvtY/H
sQfXT22LYeM7zr7s4/yPfOg5fkeGsF/EYZyczR8827mjFm7hHflXzB3fyyX7
2dvFmQkT6UhHJ7p+Pxubhg+u/Jf4ZXmg/PZ390HFn3wq5fzEiyeW/10+cd1h
nbYiyYPZlphLOKa+5/a68z6eaf3ptcJB7+Ph6Lz7wTCO7kudsdH+dN2R5WOI
Tsgw+PKJg869xUh5VR4kb6EHPJtMgwbKNwEHyRynnUy+fnAwu9PK5gef7nmy
VeX0pWeOCX3Xx50f7I2dR+jK7wAH8UtnAVhmfNUhA5CtPHcuxCPw5/IMGhP+
7V06THidn/7EL1k5Iha2bv+GJeuVOyb5Ufmfdu4J5RMHPS8+Jfmne0PfJd9Z
+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
iylqn8K+bD7T4aTnhKOVw8d0oWc5Xag64aPn+pNtdjlt8YdiuZi7Ypcp5z84
tsxfjYP2cnd/Pcdn8Gb8fmP5ZV9aTgqYeOLg5LH7+cKj/CaKvR8Owu7samAf
zPVdfS4HPbzTH2Xjqux5eZScpYuNVh4t82X9w81TNoSn5SUkF5erIh8KY6Mr
Lsc9XMFD8kPEc/XD2E9/w8rmAc07/5HprL138A3jR6/O88ZpbfGcsA9fKvYa
OsS7y0nBXsQa0onBEfXsBTK5dSv+KHwpX24xK/XJbxhavqLTh71cDdlzFrcS
zz/jmCRnnjiYn0SxomEfOxf6TthH/6kd7eOp5sgcz13f2HCVjwZmoJPJhTU+
xeYF9tkv9D373mzZk9sL6CfbEOdV+y5bMmeN7r7NpXVHM9lMwoVixZy6ULRo
npSttfpkxn0mXjrS7Z9x2SSfseLxD9+kI5x48OMrWOx94yqn2Pa5XbSHds1V
8R98yxnKGOCg52Gc8e84hleM03Cte8O5c/7R6n84OPknfrXaP2XDYpJoszhd
9qN1N177znobW36XzgxkArRsH+knHr1tRxcObuz7dn7zMHF8McZPv/yDfpzP
6Ey27fiTKdsXzg/4Mjq01uYTnZtLPJzeOdnKWnWfas3xaeeEYpX4Hx6gndYa
fdpTzrlwcNv6Lj2T75Zj4tSF7rwoX/KtgD3ZVqExOJRtKprGz+zHcNB6w8Fy
T5Bz0/eqg46yiT1tQYu5ZGzFF1XOZka5OHLJkuUwOv3o3TnmN1FuQfNz2mEm
Z2Wjgk6Vwx0YBxOzV8E3zdPWd1x2oZ7nZ4HP2kPKEwd4nZ2XTKS+9jt7Gz9+
bL9rP5uZ4rClv9V/9IAO4I7n5iHdbPHWylFo32VLA5tgLnowlu4vJk7ZZ+s8
nO1ofn/WFE8wP/qprH3053vw0Voqez4+xx+v5+jSePQTT9CWucLH0bL+4J94
DV6HJvEpc4Um8dzy0dsHZDa4pV/w0f+0XZxs7eU7WD5BbU3s8B9c+SbQLawl
j+KNZJXRZ3zvikdTXMrRfz+/craTVb3jd/Y3+dfbM/ax3/ZJPn3K8A7+0Xfy
bSf3dfeX/OeZeUbr+LI1yNYFf80G7IzX57yX3qO4DdlLqw87i8eLHpy74eO2
p1n1i9eHB/gfvpFuvHhoxdi3dmg3P0HP4VExZCrDKfOsPnowr+jBfjOn3nM+
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
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3Xu0/9ld3/WfLcZYaxxrrBG1TrFqVERsFVHmfM+0IiJGjDQiomKoLVbE
FilaqugKECDlOgQCIVw63EO4NFwK4T5ACIFyGSCEEAKkEMIdwv1a6nns/Xl+
5z2nM8g/WSvrt76z1pnfPp+zP/uzL+/9fu33e78vf/Iv/NV3ea8/dOfOnb/2
xJv/vct7/vU/+37v955/488/wS9/6T3f58/86ff5wzfF97/5+cSbH+VfesP7
Xn/WZ77F9be89KWnu6n8G7/+f16/6PP/jevvf8UrTj//c+9z/Zmf8Sev/+63
f/vpR374f7h+7sf909df9qVfevq+732X62d/yB++/luf/umnL/rCt7z+khe/
+PRpn/ovnj7sQ//R67/z5f/e6WZ67mjv4x544PSNDz109d3f9c7XP/n6158+
5IM/+PTjP/YXrj/2Y550/be/+ItPP/sz73198971TZ3Tz/3s/7q+pQ8/+fr3
uv6MB+9d3/2Zn/5frh/8W//yqvOrv/LXbr75J66/4eu/fvX5kz7xj692fuzv
vef133zOE68/5QUvOH3ry97h+u+99rXrW8//pH/u+nmf8AmnT37+U06efcmL
3/qm/PyrH/2RHznp502/r37tV3/15m/PPP3Wb/7m1Yc++82uf+s3P+D0cQ/c
c/roj/qjN20+Z43rI/7mP379kR/xEafP+ew/9aiycXz0R33U6fNf+NSTuTHe
m/k4feLz/tn13f29p6yy55/ygje//vjnPvd0M7aT+fm0T/3UVecLXvRvXn/+
C194+paXvv3pxX/731nz+f2veIY+3sznl59++DX//eklX/kfXH/NV3/16utX
fsXbrDn4tV99/9NXf9V/uObs7//uB56+7mvvW+UPetazTg99w/X1N3/TN606
3/SNf3bVv1nP00u/+T9ez2/m7/Syb/lPrr/t5S8/GfPNt1dZO771lV/xFetb
1u7nf+7nTp/3uZ97+sFXvdv1B3/QP7Lasg6f9ImfuMb+eZ/7r613P+PBB1f5
O7/jO1Z95e/+ru86GZvy933v956s12d/1r+ynn/Bi1602qn+TVuLTqy1ebhZ
k9P3PPzw6YWf969f//RP/dR6rp3KX/ol/+71P/i93zv9wCtfueoro9sv/qJ/
+/o3fv3X15qbK3SpLfOJTtQzxo9/7h9bv5vDF3zyP3/9wMf+U9fm0NpYN3Ny
sz7Xn/s5/+q1efvyL/sza2+gsa96ydve0N5bXX/H3/3Pb2jz/mvfMVfqaU/Z
/H7NV/9Hq/zt3/afrfoPf/d/ud7RbmXvftd3/herrL795Z1v/qY/d/2qH/hv
rl/5/f/1zV54p+sfevW73+zLZ6y20Lx6yvaI8re9/B3Xe+bCHKN/c2Wu0Tl6
+9BnPxvtLnpDA+YQXaFpY7MmnuvfV73kJWsffcXf+ffX/vvwD/uwVR9toBnz
jFZ/+qf+8qLhyr79RV/4hYtura9vfc/DT1974XM++7MXnX/Cx/8zi/5v5vv0
6Z/2Ly1eon7f9S3zZw3RlXn4oGfdaT9cP+fD/7HV79f80H+31lD5Fd/356/t
YeWb7y0ehVbN84d88B9adO85GlZW/+//7u+e1DF/aMS3zbF3fcuc2/PqoH+0
hAdq53d++7fXnGofvd3wltP3fs9/tdpRtm7ax5faO8b5A69810WDnvuWOvaS
cs/rm/J3fsfTzmV0oo794rueH/O7nlu/2jTX+qCf2vddc/ixH/MxJ3Sjn9b3
R3/kPRa94Ld37jzrZs6feW3PKf/e3/9/Fo3pv2/YG/ii9byZq6s3Bcy64OAF
By84eMHBCw5ecPCCgxccvODgBQcvOHjBwQsOXnDwgoMXHLzg4AUHLzh4wcEL
Dl5w8IKDFxy84OAFBy84eMHBCw5ecPCCgxccvODgBQcvOHjBwQsOXnDwgoMX
HLzg4AUHLzh4wcELDl5w8IKDFxy84OAFBy84eMHBCw5ecPCCgxccvODgBQcv
OHjBwQsOXnDwgoMXHLzg4AUHLzh4wcELDl5w8IKDFxy84OAFBy84eMHBCw5e
cPCCgxccvODgBQcvOHjBwQsOXnDwgoMXHLzg4AUHLzh4wcELDl5w8IKDFxy8
4OAFBy84eMHBCw5ecPCCgxccvODgBQcvOHjBwQsOXnDwgoMXHLzg4AUHLzh4
wcELDl5w8PFwEF6gJ3v4biubAzzr9T/xlxY/sAfMJ3rAx772a97uGpbYUx/5
EX/k+ide9xfx3qtNC09RfjvtmfsbGj3Zw/gb2ka3aBhtwz44+HVf+7UL1/Cb
b33ZyxYOhr8/9ZP/8xn7fvmX/vdrewat/uIv/JVre8m6W8cP/7AnLLzBh/TN
PoWT4eAPv+Y1i2ffrOGVMhy8oZ8rtAAfbnDvpA1jglMf89H/5KIX+HWDiwtj
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
0XSDt30nPQ/3Z+yd4sx4PnPm5nuYDBg+Tn+KzhXK9hGfDnoP6wIr6En5Dtmn
xk8X6pyL59KRdq+mjOcakzt2PC1fEjipHfscf/Vte9tetE725pHT+5wLwz0l
Pth9OX4XHhmLttkYmWd7SZvJa34vJoz3PYdLnuOd9hmszV70OK+stVWGGdrR
t3LQ4+HwDn/3XJvmC4+nj9pxuF+5yu620QE95M5x/ro1rnK9ZjtqPZMBfcOe
N75NVz9z2v6VLzmlL0K35sY8mZNyYlhvbcGh5DV4aD3QtbOOvme7inb0xZyb
o21X9cDinTuO0bPXd51X9EH/fGPnXfzMJcPjqeViRDtHfq7F35535F89zn1H
LvWHFw/EL5MvHtFzv+RUzGvrAxOda61z8eW2nv49zvkvnKnQE8zyPB1oeYSd
R+BWcl/+5+rkjwcr1YV31U/uCyunv0M5EsOwiYP59fk9GdCYyvle3LLuA52r
/a5tWGTPKNM1Fe/NfORnai7QG35lzayHPYXm/Otc0f2PdUjus0fQAlnL2nev
aN7oQn1P/627dvDebdvy4MofAcd2nsAHHxU3O/8IMmDP4Ga5IDZ+3jlVD1YW
d6b8g+rie2jR3rNO+57mSWvseAwaKX6d/lunYt2XmzX/u7ulDOPy7zYXxdcy
H9Z96xbvOdsTFhPMvOLRzvIwBu+yxz1H1+iHrDFjYlt/PAivD9eKHZqdTPIg
3vVY8mD5KR4LB+3b4pU9njxYvgk0PPWi5eFtTrJpKWYafJxx1SoXay4cLP5q
ccjDwRm/VJvmufhv9sIRJ3CdFzznH4EfGBO8wwOsG12NPY2WnS3xKHjgfOnM
bh9aC2OeMc9h7T5z7xxVX3TkmKC3Kf8FPrvjO+/88vhA8dO6j1UHzw+b8A77
Bo7kC08GpPNShmX5fRo/bDVm2KOf2WdP33n3j8Vhg9f6Y1z2I16DD2VXQ0ZV
B715bm7hlvowMbmP7kGf8TPnPbTq3GWt8QP1yLKHjd7aI/qJl5U/ytzpn/kz
LrRonvxdP9C1+nAYzZIbYBoa8200dNgxHLbM77ja8/vOHfT6dXZUX9uHrdKp
/YYudp7plTtn8bQdJ+LpC/PKT77vkx4+4kjuPJvm03jLrWEfksHRqP2NNsyX
cwqMsG/Jcs6u+TOQqbJdwceTlYrlohyO4aP5qmvbe+XP0FY4OPND+Z4ffwvv
tJePQzrRiX/9JO/pK/5Qjj/5G7r3g8P2Q/EIsuG0f9ADvoDW4Jr9e/gzr31k
/uyV7YN+Z/EKfDKf30OXtM4/6sJe491nuo2/3eHs2McPncI05xPYZ92sa3nj
04VmF+p594PFiVFfX8tJn/9EPvNoglyJD+kvesJr8RpnQGcetI6fOMcaG/q3
Lp7bw84u+JAzND5QHKq7rWwfZi9h37ozgl0zF+G0gbT37UsYtc/LTz3Lg9pE
u+3pKQ+iB+ckPLpYanjIvB9Up/tBz8PBKQ+i63DQeqFl5+vb9qLW3bnK+zv3
+wv/Ib3o9KPPJnbGF82mpRgCM+bqzDFR7t1i1oV9MwZpuSTQlzaV8V/7T9/M
2darkFv/4pIt8Chx1YpBQE6EidaknLzo0zybW3MCU/BR38WPuqt15sXr4Zm2
4aPxOM/g4cUisK+tnTNxPhT2uPXxO15mfxx5HZfcB+fQgHlHB9bN39HTvDeE
od0z2nfhpneNHw7pj/aOHFSLd3TPCMe2PvS+pT/QrnmBmbBJP7ct1K8uHa93
4SAaNDfozRr517y5N/P9sMt8+N25zVoUuxyv8Ts6sm7b9/ID1r7ZcV1fvuaV
7lJf/Y4neqYN62zM9o6y9cF79cEz3zUv9ph1s9/sQzJfOOgsc/j6Lp6HF+4Y
IzvOSLKDn/xCstkoZssjthh3zv7rzhFoqnhnZKr86pVh08Q+dbLPxEeT6TZN
vcu5TriWzaf66CVbGXRU/E/4lG8gvouuq+OZH22Egdqd+WvxB3ukOGX1z7m9
swmMM8/OH1sPveNKbV3yttlGv/kxmb/uiez9cpahK/SDnvRzx6F40oqTXWy7
YrTC3GgF7TinkPl2TJjXnnPd4i9bz/nMc774YqPNHPGHv/vVI3FinnN1xP0/
de5JVtz3hCuW9uJ76M95rrhJ+x77tOQU+8pabl7y2pXXA72gH/J984inoccd
q+vuKW+77xesPWfvFIcZr8bb7T/7ORwsx5B1K7a25ztu05cuTAkHrb9zWHYy
6NP7yYNTBoRx+HW5lvCk7GTwlCkPThy0Nx7rftBaloO+fPRoI6zZ8RUekQef
d+SxnTFz0OOMKVcMuoNXnXNJlIfC82KS51Nfufhs6UW1U6xv78JN4z/yhK18
E9oyP/DOmJ1B6FWca/F18XjRqHGUlxAWWAvvWdN0qDAIbVuL7R/7jmve7I1y
0DvjFhvHu3gnHoE+7GfnXPXwOFhUTOwwxL1b+NW9ZfnrrcehNz/n5NWmfuoD
ORFvUoZ95ER8y7e2b8lrFnb7Ftkq21gYQt60rv6mz/a0OUG3+th92M5B/JL1
jR17detAjRv2WxPjLs6OM9QRS2HxliMe3dIv4ZvGqi3fhW3Ggr+gQfM9cW3f
Jbxw6S2619R/4/SvOfd+8UO2jHjvKh/xXRevtqeOnHPrnH/EPFr0nHyHTotF
jT8XMyA5GvY5a5BR8nkoD/A+v2y9pjphH1kf3amHvtJ/FsvU8+KL5lNeTgnv
Koezvhcmqqut/N+zt0knGg4Wc41uthgyxVTzg2fY/86Czpxw3pnE/OIT6BCN
2MvW0ZrtO7KVs2jtQXOIrpypzLUxaAONZHOlPbIn3uU7sM9edb7D37IfwkfR
0cbXO1flCoRf+6yydZj5A1rfcC5dd74S8JlcR85T3znosO8/ZRd6+HgtfnTo
Bq7ibdpz/kGjxq1/O4/sE9f6dbdufo3RGbJ49c6Q8BzvIUOaY/Rq/9xNZXvF
mpH50UDldDow0Zx1L9b9oDnfsaA+Ya3HvvN98dq73Q86A6HX7GTsu/wmbvtK
bJvr710YdxsHj/vnVSc7md9PL4p3bVuBjX2Ph4P6Re4J78LBZLewL9/A4ouG
g50HwsRpR2pOuhOsHCbOsvp4eb4e9kM2M8VDY1Nmj8Er5wf7Hg6yn0G76Nhz
ciCsyg9dn/AdZ0Fj857zHTxKjnM+hNH6kI4UHzjipi18UR8vM8/Wzrlx50r6
jnXHZx3MPx6Kv2sLr8R34UR5KODAjo/8YwsHwk206C4NLXhOXtBP/bNPs/PM
9sY+tRb6jubYGXhun/rbjr/+7afub53h023AkWKj+pduAK/wHN3QT6H5/K3y
taJ79Dfj2fFvXrbkTPMN+3zT94yZrsr5XXvZp+wYDV+43oV36lpb47XP9Eeb
2ckfMWkXLurbzoPz9MVXYWM6UzSBx+mDM4DzK5k/+0/4112eM4iyPWM90YB9
a/7wOtgHS2EROS3/d1hkrbyXX4Pn8X/05lyF/sorUaxsuLhzNb/zuVwuivwE
y0ncHaJyuY98s/s9tO58pb/GbL62/uPL1495RHvF1aMLcEYyH+gHbVsfdEgG
3s+WvL9kZPuNXIzn7/PWeyz9qXXWL2XnSPynODv62RlAX+wb6wqr8n9Pn2ld
lbf/wrPO9LHtQe89dZ+Hp2y96L0LB7e/+0Pr3jCZET2gK2ey4ohu/8J719nf
Gc5+MieHPLNoxJkoPwi0Yf3L6WlNYZ9zQbK0sRufOVcuFxs6vJvKcLB85fh/
siHeXl5XfDJbmnLqwcEdZ/G5aw3sBzog+9eew+vKu5Q8SGeBv9/GQbQE45z/
0Zh28TH4WP7y3w8H8b7yvRa/euLg4/lN3MZB5fzlD9notOOLPOes24y3Nifd
LSYPJj+Wv6lcTtOmFK31bvk+vAu79M0esHe3LuWhK/c1eIW5dz/ojK4NOtL2
MH8KexMWmGdzZQ7wGTJnOhz0T0YyV3iwbzibdPeXLQq+grfZK92n77hlDy0a
wEuOOETr/JO/vLn2u774fjpPem5t4qee0SWSN6xtOet9x9kbjcBi7ZSXMj96
c2SM8S3tamPHPfjspTvEG/Z998cs+t0xkp5/tjk5zhqL/g/d4jlfTTypfN35
W21909JrLZ0n/ENr8A02Fr/xiNG61tnf8F19xGu2vviLF39GX/DNGnR+dy7d
uVXvLc7xwkF1d9yBhxdd2xP2MBrIV9sZxR4sLo17h+KahYPWAUYV2xqO5Q+Y
jWdxRGHkjMsNN5ITy2PYc/ikvvXXTljZXaHvaTPZMHuYcj34hveLU61tWKkv
MMl8Wzfrac665/IcXaMnZzLziz8UvxZvN368zLlR2zt20j1LrrRHzJXzOZ6D
j8BbcoL1xbvyh1Fff9Uzt+RoNL7Pgi+M1s72SIeP+rq/S8+JntIn4EU7Zugb
1l1euQKdn5TVpy9FBzBNuTpwEb9Q3vR75xwnjT2X9ouXiF6PO6J1RsKLrU0x
Bq1/uc+KLe+uIB/V5EH7cOdTf3S8qbulbN8k92W/UU7z7g3j+XhLOf6ca/Kj
tx72DD5k/tG7/Yqvln8Q1sIv3w7XzHMxtJWLKXrbj/7/Tx4MB/29XHvlXXos
eTAczI8+WS8/+ts4mF98cWaSAbOTmTiYfWk57rWDTqeP4cw/WA7f7iKTK43p
uA+6wjt2XvRXLB0pnIMbyvARjjlLOIOTi5yjy2PVHavn2XBaC3hozuxL/Mt+
gUfZwODX5L7sVfBK+lTjzy613BP4c3rOyvqnvm/NMiyzHtPuxbftU/pMe9O+
9H1nNWPYMvVzFvZoA/7AcnObTaU1se7+bk39a46V0bq5Rpto3nrgH2jCOQDv
QN/F6bfWeA0ZUL30lvqs3exItYf3aO+wUV46qmxf0LN5UhfdJbscsQDWe75v
fPq649RtO0/4Z62M2f6BffaOdcXL8DZtkvGK54k/wxT0Yr/Yh+XsK+eBOS+X
Uzi4/WO2TShaCRPV91x9ZxbYpD31y3/ouTbRivr5QPhbektt2afFl8m33nPy
l3bVR8d4sDHv2NIvPOJjvvi8TuZv25t9wmn70/76mh/0jY7ShcIndIyv7Bye
v7fOgfTGMNG9Yro++wUvs+dgIp6D57uD0Gfn9fTHcGLbPb+o++Kz3Bc9wKwd
d+OB9XvxHeHdtg3d/n5oZtPOixcmlivXvzsn4L7zDQeLoY0n5A94yI3rW0ec
0NUvZzA82fick+x9/M4ecy7ZOqRfWLpQPJ0M6PwR9hWXz3oUh8Hzcqs5Q95N
ZWfvcu4Uo4v+JV0Z3uJ5d/Xqo0PnlGKIWQv7Z+vWHr4qPyyecxsHfXvGh8Hb
8x8sD+9j+dH/QXBQe8aCF+FB2Yui23wopt+EdXVXvvnePSvfhDI8Kr6c5+Hg
9jneWFas8rAyXXHy3Y5r+5R/KOZM+ZiysbGvzLl5zt7G8ykb2tsbd558SjY0
j3CQ7y96NYd0iOjWuTf7SPWLbWGN8Ar9K965b+BB+Infd7zjV699DuOslXNS
8bedFbRjfmFbfg3ONs7v+55w3RMvefOQv647r6cXtaabbz68zvD6u+XObzpl
N7vz+X7uaesm70+/s85sm+7uXzRmLuEdrDpss07FxdsxOJ5+Kj7xtul9/pEf
+KtXfXOAPjvLsy3o3g0/Dgf1JX3pkWfktP2X7yws9sy/1hJPhJdox3lwnyHu
OXK8fMzqE3oon4e/wz3f6+5yx799s+t9htq+2jtP1Ttd7xjob32dXTG+ZY+U
TwKftw/LK+HvzjjpP7dO+hHsI695Xn5esiOMC998jzyUz1tYlzxYropy9mYn
0/eyD/UOngD7PNdfGJ8vsTkxX+Yk+9r8N81leZ7th2hq20A/YZ3xYFzxWvB5
Zyo0v/MlvP31zg3whIVreJn94qwI28mR9hTsxkuMV9+swWFLfb7Po6dEK9FV
mLXx6N6rHWfkhecYnvQLfne2VW/rAO4/hW3+pdfUVtinzXShO7bMExc/KM62
95y98G5ypb/T39h/9rL9C9/wOWvpfGAurCkZ13xZdzxo+1I8bY3XPMB8fBi9
JQ+aK+vmXOA75c30HB9WLgYRmqX3wOvwXH3CQ3wT78C/neP8rTsZ+9b+ztbZ
HJYb0fxs26F7rjovmJ+9px5cPifefeQ+9f6zDW1nVGXz1j2s9ovLap79Pd9M
5y/nm8Nud621s+n25bxnxdM2t3il85I5tS/EwyxfZD4p9rE5Ml40TgZx1ts5
Fn53nf3VwV/94Kfp3tC2NcBLjrvmlYPEGKybvxVzu1zY7tDQrn1P92I9uuPo
fJtux/N0O/ZvOdfwgcp4hXb9u2N873zg9izaUAd9eZ5Nnr3eu8qdoZV9Gx8p
P5lzmTt/z/XDeT79Uefj7k3pXpwZzBlahr2em1v4CQvwhp3T/s7CAGeXbaP6
7DVX6VjMIyzZuapXDJnTttW+vziziwftOLLPWnZ1vaM+Ocm9P7zYMeHecIX3
22cbW9+w2ivO/UGX9z2i/3vVosH0lfYIrIEhyvmA+teYYR68mM9n/dnObH9+
d/Zn9nP2f45rjnfOw5yfOW9zPuc8z/mf6zLXa67j7fVt3Sc9TDqZ9DPpatLb
bTqMPifd3qbn6HzS/9wXc7/MfTT319x3cz/OfTr379zXc79PPjD5w+Qbk59M
PjP5z+RLk19NPjb52+R7kx9OPjn55+Srk99OPjz58+Tbk5/f5vPx/4kLEy8m
jkx8mbgz8Wji1MSviWu38c7amJeJjxM3J55OnJ34O3F54vXE8YnvE/fneWCe
E+b5YZ4rbp83OofM88k8t8zzzDznzPPPPBfN89I8R83z1Tx3zfPYPKfN89s8
190+73UOnOfDeW6c58l5zpznz3kunefVeY6d59t57p3n4XlOnufnea6e5+15
Dp/n83lun+f5ec6f5/8pF0x5YcoRU76YcseUR6acMuWXKddMeWfKQVM+mnLT
lKemnDXlrymXTXltynFTvpty35QHHy0nPiI/TrlyyptTDp3y6ZRbpzw75dwp
/065eMrLU46e8vWUu6c8PuX0Kb9PuX7K+1MPMPUDU28w9QlTzzD1D1MvMfUV
U48x9RtT7zH1Ibf1JOlPpl5l6lumHmbqZ6beZupzpp5n6n9u64XSF0090tQv
Tb3T1EdNPdXUX0291tR3TT3Ybf1YerOpT3tT0O+9sctTXzr1qFO/OvWuUx87
9bRTfzv1ulPfO/XAUz889cZTnzz1zFP/PPXSU1899dhTvz313lMfPvXkU38+
9epT3z718FM/P/X2U58/9fxT/z/vBeZ9wbxHmPcL895h3kfMe4p5fzHvNeZ9
x7wHmfcjt+9Nwr55zzLvX+a9zLyvmfc4835n3vvM+6B5TzTvj+a90rxvmvdQ
837q0fdWj9xnzXuuef8178Xmfdm8R5v3a/Pebd7HzXu6eX837/Xmfd+8B5z3
g/PecN4nznvGef/4eHeU8x5z3m/Oe895HzrvSef96bxXnfet8x523s/Oe9t5
nzvveef977wXnvfF8x553i/fvncOy+Y99by/nvfa87573oPP+/F5bz7v0+c9
+7x/n/fy875+3uP/QXBw2glM+4FpVzDtDaYdwsTBabcw7RmmncO0f5h2EdNe
YtpRTPuKNwV7jzd2+bb9THY1095m2uFM+5xptzPteaadz7T/mXZBt+2FsiOa
9kXT7mjaI007pWm/NO2apr3TtIOa9lHTbmraU007q2l/Ne2ypr3WtOOa9l3T
7uu2PVh2YtN+bNqVTXuzaYc27dOm3dq0Z5t2btP+bdrFTXu5aUc37eum3d20
x5t2etN+b9r1TXu/aQc47QOn3eC0J5x2htP+cNolTnvFacf4aPvGR+wepz3k
tJOc9pPTrnLaW047zGmfOe02pz3ntPOc9p/TLnTai0470mlfOu1Opz3qtFOd
9qvTrnXau0472GkfO+1mpz3ttLOd9rfTLnfa60473mnfO+1+pz3wtBOe9sNT
Npz2xtMOedonT7vlac88cfC2/XPYOu2lHwsHy9GW3fW0x5522tN+e9p1/0Fx
MLvxaU8+7cyn/fm0S5/26tOOfdq3T7v3aQ8/7eSn/fy0q5/29m8K9v9v7PL0
p5h+FtP/YvplTH+N6ccx/Tum38f0B5l+ItN/ZPqVTH+T6Ycy/VOm38r0Z5l+
LtP/ZfrFTH+Z6Ucz/Wum3830x5l+OtN/Z/r1TH+f6Qc0/YOm39D0J5p+RtP/
aPolTX+l6cc0/Zum39P0h7rtJ5X/1PSrmv5W0w9r+mdNv63pzzX9vKb/1/QL
m/5i049s+pdNv7Ppjzb91Kb/2vRrm/5u0w9u+sdNv7npTzf97Kb/3fTLm/56
049v+vdNv7/pDzj9BKf/4PQrnP6G0w9x+idOv8Xpzzj9HKf/4/SLnP6S049y
+ldOv8vpjzn9NKf/5vTrnP6et/1A8w+dfqPTn3T6mU7/08fzUZ1+rNO/dcqV
0x92+slO/9nbfrX5204cnP65Ux6cODj9fKf/7x9ELzr9i6ff8cTB6ac8/Zen
X/P0d55+0NM/evpNT3/q6Wc9/a/fFPzB39jl6V8//e6nP/7005/++9Ovf/r7
344DUHyAGTdgxhOYcQZm/IEZl+BWvIJzHIMZ32DGPZjxEGachBk/YcZVmPEW
ZhyGGZ9hxm2Y8RxmnIcZ/2HGhZjxImYciRlfYsadmPEoZpyKGb9ixrW4He+i
M8CMjzHjZsx4GjPOxoy/MeNyzHgdM47HjO8x437MeCAzTsiMHzLjisx4IzMO
yYxPMuOWzHgmM87JjH8y46LMeCkzjsqMrzLjrsx4LDNOy4zfMuO6zHgvMw7M
jA8z48bMeDIzzsyMPzPj0sx4NTOOzYxvM+PezHg4M07OjJ8z4+rMeDszDs+M
zzPj9sx4PjPOz4z/M+MCzXhBM47QjC804w7NeEQzTtGMXzTjGt2O4TD1osVH
mnGTZjyl2/EGw8EZl+nxcHDGd5pxn2Y8qImDM37UjCs1403NOFQzPtWMWzXj
Wc04VzP+1YyLNeNlzThaM77WjLs143G9KcQHe2OXZ7y1GYdtxmebcdtmPLcZ
523Gf5tx4Wa8uBlHbsaXm3HnZjy6Gaduxq+bce1mvLsZB2/Gx5tx82Y8vRln
b8bfm3H5Zry+Gcdvxvebcf9mPMAZJ3DGD5xxBWe8wRmHcMYnnHELZzzDGedw
xj+ccRFnvMQZR3HGV5xxF2c8xhmnccZvnHEdZ7zHGQdyxoeccSNnPMkZZ3LG
n5xxKWe8yhnHcsa3nHEvZzzMGSdzxs+ccTUfHW/zkTicMz7njNs543nOOJ8z
/ueMCzrjhc44ojO+6Iw7OuORzjilM37pjGs6453OOKgzPuqMmzrjqc44qzP+
6ozLOuO1zjiuM77rjPs648HOOLEzfuyMKzvjzc44tDM+7YxbO+PZ3o7vN+Pf
pqOa8XJnHN3b8XXDwRmPd8bpnXrRGdd3xvudODjjA08cnPGEZ5zh2/GHi0s8
4xXPOMYzvvGMezzjIc84yTN+8oyrPOMtzzjMMz7zm0q86DdmecbfnnG5Z7zu
Gcd7xveecb8fHQ/8kTjhM374jCt+O954cchnfPIZt3zGM59xzmf88xkXfcZL
n3HUZ3z1GXd9xmOfcdpn/PYZ133Ge59x4Gd8+Bk3fsaTn3HmZ/z5GZd+xqu/
Hce++PYz7v2Mhz/j5M/4+TOu/oy3P+Pwz/j8M27/jOc/4/zP+P8zL8DMFzDz
CMz8AjPvwMxHMPMUzPwFM6/BzHcw8yDM/Agzb8LMpzDzLMz8CzMvw8zXMPM4
zPwOM+/DzAcx80TM/BEzr8TMNzHzUMz8FDNvxcxnMfNczPwXMy/GN458GTOP
xsyvMfNuzHwcM0/HzN8x83rMfB8zD8jMDzLzhsx8IjPPyMw/MvOSzHwlM4/J
zG9yO+9J+VBmnpSZP2XmVZn5Vm7nYSk/y215sHwuM8/LzP8y88JMvejMIzPl
wZl3ZuajmXlqZv6amddm5ruZeXBmfpyZN2fm05l5dmb+nZmXZ+breVPIH/TG
Ls98TDNP08zfNPM6zXxPMw/UzA8180bNfFIzz9TMPzXzUs18VTOP1cxvNfNe
zXxYM0/WzJ8182rNfFszD9fMzzXzds18XjPP18z/NfOCzXxhj5VHpXxj/Tvz
kc08ZTN/2cxr1h0imXHmQZv50WbetJlP7XaetWxDZ162ma9t5nGb+d1m3reZ
D27miZv542ZeuZlvbuahm/npZt66mc9u5rmb+e9mXryZL2/m0Zv59WbevZmP
b+bpm/n7Zl6/me9v5gGc+QFn3sCZT3DmGZz5B2dewpmvcOYxnPkNv3HkPZz5
EG/nSSx/4syrOPMtzjyMMz/jzNs48znOPI8z/+PMCznzRc48kjO/5Mw7OfNR
zjyVM3/lzGs5813OPJgzP+bMmznzac48mzP/5u28nPN+sDye029i5v2c+UBn
ntDHw8Hb8mB5SGd+0pm3dOYznXlOpzw486LOfKkzj+rMrzrzrs58rDNP68zf
+qaQT/aNXZ75eWfe3pnPd+b5nfl/Z17gmS945hGe+YVn3uGZj/gbR57iTx75
i2de45nveOZBnvmRZ97kmU955lme+ZdnXuaZr3nmcZ75nWfe55kPeuaJvp07
7HZe6SkLloe6/NQ/eCtv9cxnXZ7rmf965sXuXes582jP/Noz7/bMxz3zdM/8
3TOv98z3PfOAz/zgM2/4zCc+84zP/OMzL/nMVz7zmM/85jPv+cyHPvOkz/zp
M6/6zLc+87DP/Owzb/vM5z7zvM/87zMv/MwXP/PIz/zyM+/8zEc/89Tfzl9f
XvuZ71478ARmZHuTDEimNe/WzTedKZTtYWXtkE2LEWe8eDcerD5ssL9grLI9
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
dOa5LQ+mm57y4O1c3uHglAfn/SCa3PcOO1beYeu0zgOwWz/R9I4ne2dhXDax
9lhyojvt4suFj+bNHiimwd1aRn/WG0/onrz4AttX/bVLvtsxUx9YPhHWnP5z
x4551pLrzPW2cbl32UgUl/XQpx/2gw8Xk3XhYv7vvkuHY8+S19y1wwO8CO9A
+9YXveILzjzZcMIpZ2J17FO83fjwFvXQHBpDW3SbZLdkQFjj93Ct3+3fdKDp
M9Gg9+1Zf5999Bwt4j3ayMcBBuFlcMbf84PIh7C8nL4JB9G8vuDl6VKLFQp7
8HJ8DAaSb9QxzmTGnntm75gTZXNgXrxvvWGPsr0GL+xZc7V1NO+0+BX803/t
qWesZAbrADv8W5wZf8d79MFaaF8/8Wh9MAbthaH6hieZI9+3Xsr4iLLxFpfG
u9qDm3hv2Kod9dFBddBwciua1jft2/fxWn0wr/qDp1gf39K+NdpxRp646m/b
xCetsecfYs3wiGxmtI0OtYNfw0V4pO/4JX4Pdw493xnLuh9Uzg+dnGbt4SC+
51uV9RdG4HvmAJ4o+5Y2w7Ud82nfFdKRkMWshXa8jx70y16zNu4h4NeMMbVj
Jm17QnPcmdj8kQ09t0bbR+QFS+Ylq9LBoW26JXjg/t38kU+UteV9ZTK58cJE
c2186uoXXHFWy4/Je+n3pi7Umod33Rs6T2cHos/WtfLUhYZ3eL420w1qZ+cW
fssj/u2zlw7UWNkW4X/6vX3OXrXyvBTnUT/TK6IH87/zxb/XdbEc7Pcd2/6l
Z3mQ7OH53mevOOOg85U69q8zkrO4fUauR8Noz3yaS3X1r5g2M98oXmxfKePZ
6DvZ2Rm0cs/DiCMP57qzh+fm5G4tZ5dtnvOjtRecaY68TwvLipO2/Veff+g1
X3vk0XrrI6/nC895h/OjMI/eSWdanOKBhffZ13gXekQP6ULtazzZucYe1G97
3vk/fmu/28Po3T0IvrdtOvZ9Hh6jrE24pl3/2nv+7W5PGTb5N1vP7vsmPnoP
X7Tfi8mCP+Nf5WcJ+/QzXMw30N9gsJ99Znzv1TY8zY8B3uDn+CCMUw/24J3a
xIOMtXhmsEq94nkq25P4vG+bR8/weW1vGeL+Mw6mf7UnYYe5hXHJks6sxm2/
+V7l4vBny6Q/1su3fZfc4n7Iczo764gPWy972Jwlv5tHNID3+G5Yab7wSNin
nC7X3HvunG3utGnvep79jTk3pnSq227gntU339KmNQ3HrYlxa8u3YGYYXewA
/S/GYLajZAXzmQ2r/vgOfLSG2XMpJz+aN+9qR9+Mm2zhW3QYYR+8m/aiZDNr
5Fv4rPXxL+zzbnkezCE8Ou6yFq8lJ2TTSE7Ysc+3b1Hxt2Eiutkxfp64ZIrt
r/ubV9YQL8cj0IHv4pXhIEy0l/Yd7IML77Kl4R+x759fvHSk+mqunHvRN5px
zvB3+qedu+UDT9vm7t6znPX/tXf/oL8mVx3HUwQJIrKIhYVICBZiFVKF5N7f
LhYiIcgiIUhIsYVYiaSwsEhxixAsV0EIkmJtJIWBLSwWEVlkCbLFskhIISKL
hVhJilSSQl5z5v3s3OsmtvLzKX7cuc93nnnmz5nzmXPm/FFO7ht6GbuX7ECK
sw1/0n9WLv72WR9/+igc9K3sc+Ccuey59aMXxf/CQfoy7aRXNCbzg6fCQfTw
k3CwXGzZhYaDxS3Pblg7xT1P7kYPnW2sqbYnNvzYvsI1vDdboM4GycVoMF1x
ZfNj3caW7JNXrPIw8TGWk/XRgDOO9Rz95cTKhm0nDha/sZiMk0fj2RVDe8cM
Xe9tH/iFf8XCDv+KH4JmktPgADkrmw/8E+/AT+FTWAMH7AH8zX7Ew6wtzFEH
r6dLtyfhRrad+Rwk76Xz9B6e2Z/3su0MG2Ef/hnm5e+A34ShaN873k9uLIaM
58mg2ihnAx4CU2CP3+AfXbC6+bGr5xmMyc4FPyB/egYb8nfHq5ST1/BbOFiM
tXLK+G7yo/F4Zk/mT18sGtibDpbsURw23zD3+mwfat+48GV7WJ+1Z9+aI1iq
rJ3ONuoYy9zvvbrqO6erMzGhfnH1xfqmI/UcPllT64wOzL3xaj+sRONhJR5Q
2bf0WX/o/6xR2O3dOdP/wsLWbMb0P3nQGPXdORov7+7PHBZfz7yke0xmJD9q
B6+BGWg7HLTm6VStR7ajynjutlO54tiGp5XhjnesaXWsCT4K27KRwK/NXzZm
5qw8gejJN9nETfyJOSdXLk4XTIOD3WuR2YzROPB8+8b4tIlv5xOIn5tbNjls
ZozZnHhubUav+bMXDipv39+Fd9n1nTiYjjS70OxIi42TDKj803Awu9Nsy8lV
YUR+9OGgd80rnw58cvTZv/UcXuOlaHjsmcdOBk1lL5r/p7GPXmf85dGks4Ez
g/mFo84SJw6iPTKzvel85Uxjf/t9fJA+9fKOD7TGQgbUz2IFpBPOVvbExMon
9qljDpXzuXuM5cmF9MoVExuulc8IfvmDg+k/1R9f+T+54oiO7csnrrzX/Ts4
+Nq+B1z+9iu+yOQ/+o91Fz45tr6+7EL5EqET+kE4lv4SzqClfAPKdYDP+z8+
bU8Xp3rizg62ohf/dr+njTAXJmbPmd+7cnd/+fQl/2hXPfxPHZjdnaFy+Jc8
qf1iq+lnuk28C4bpt/rlVyvWGr5STOvxF3pYvB0vRvOnvAYnYGRnBr+rD5fC
xPAOb+8334GJZ45CuBLOw7xioJbPorbM/8Rv+swan7pwFIbCAPKmseiX75pL
dTzXvrrje/fFCxPDSvwMzs49x6+s+Vbf/ta++niYtVHH/KiTDOxbvjl3Tb9z
6UKTDX1LHe/iW8WW70yFV8IYc+L3iXPy++s3c25c+ZlmYzY5ih4Wz4dHxgqP
wiZ1YZV5w2vgprVIfjx95/OFd+Y375Of9t3LP4J8qM9wIt/8/H/NE5kRVll7
mNOdUTFS7Rttk5GMwze3LciSI/B075Zzx9zAINg0dlLfXnia/QvdEVrI73PO
hRN7zr4wN7DB/vUN79jncMI8k4OUR8f5iUunhw8n353xq+sPrPFOPDw+nzzY
fWI8v7ia8f/isxW7O7lAO+bMu3Bwx69derPiSjnfOAvgcTs20BVfNP3t+DX9
y8JOvMd4nGfwKGNw/oCD6DkcRJ90AsrWQNtwUH13R3iM/WEt7TvrDvMm7vB7
6wwz9/nfvnwqnXfw6PTAxnXGlDt9J7s/PWPQVQ4TH2sZPeUPCPvmnm/Zel65
Ec1jspwyTIRt5rR4Md0Hjtz3w8OH8LVipK1YI5MX4u0neF75ItmM9Wet0Qpa
sHfwIM/gIf5l/dMfwiO/Z5OpfrpLOJj8ldznfWfPdJvFtsYj/d69Xf59fs8m
FM/Tnm/oA8yj10huq+1iucAyfYAfMFS97FroaPUhG5nsRuEGXubPO+kqi3Nm
vtKX4ov6pD3v5V+Id5oX9ZOd/R72+T++5dvqa0dfvO893/Lc+/niKxufOsYV
ho6N4aur/YkP/bvX9857zO4u7Xnnjvw1zGO5nPQn7CtvJrzzHH7CNfXDO+ut
bbjWXWR6YDzEu9ZNfXzUGqtDZjS36dKzK8YDjNGY4IM5SfceVpIPrVX3mOYJ
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
enb+htXkQbzOM/iJD/iuttFl8b6151tsiMyb/WWO4CT+b478Hy6ZU3WLCVdO
RXup2Dr66i+shFH4f7rS/EnCOuXk5+xwu4c9MdGY0lmfsiH8KYYqTCyPRv6J
8Mu6FEMBLyHHZ8fjW7DH+uofuSufjmRYdbrj9W11YEi2rHPvMneOMEcf/D6x
HV+9bE3Tf46uavz66c98f+KOvbSe559oPuBputnsTrWf/Ni5Hh+3B/yLz2sD
LWxZ68I+mIXPwgA0C1OUJ97uh74Pzk7eHf3vuwvv5m77XxcNmVNt4o9ws7Mc
LEabeCW5xBmt/hRjzXzg2ernlxEOonF7qHul8reqO3lmfmvdf8Iq9OqMZA8U
412/T9lN/7uv1IdtD/KcPEjmSu4rJmo+gOXhPeOLar87r/LXe/fFONvJjOXh
LfamuVHf/JkPOGitxqf/jSvv0rYVXLgJa4zRWhgL2sBzzYN9hicYm32IvqyH
fTh31CMbKhdvTRnd2LtozZrlP+iMPX5Tg4Pph51D8FvriR87p+ub+Sl+mjGG
fcaIDxWLm9weRvx/KNNl/Onk0brkPuecwcMfPu23iTnz5tOdr2LN7T4nPe15
75aLnn5052pdWIjHO6P64xcRDmYf6s9aw0iyD3qoDiwgQ9Kn4o3d9+FneGZ5
atEHnuzd6uNB9obzI5kWzf7pynv49hXjdDD8k+s+094zLnWLxYpmRlc4tgcw
Ad1Et2gOLeo/TLRX9HPyC/3tqq8f+Bg86znccS/keXdDcNaZvRxn9i//s86K
5sO4fMt5oPze3aWWD1i5O0LnBXuwO8/0xPn8F2+nuAPmsfhxp82tb6Z3LbbB
mXMjHXS+KPlVlmvDX76f3R+SpcJJ+FgeYXWVs39Vrk6x2L2rz9m4ep7tjT76
TrFuYCbe73fP8Mji8JQrqtisvg178CBtkwfxubASPzZWZyNYZF7ytdcPeIDH
wBd8bsski//hR8WVREtwin8aXHBOc3+oXOwy70z+qncedu7wRSf4O+xFk+lO
YWW8sfzyxtq76Uj1Ab3BOLxaf8gZ+L5v5Weh/9rDT8NBeIDf7pwVSxeafz26
hlP2i7knU/kemkVP5tZ3i0d65swlk2a/6rudCfsuedm8w19l+yIszt+QjvTF
GJIv3n8VM619XR3PlcuvWYxT/My8mgNl66k9fM+eHHvDbz3Nh9E8jO31e0sW
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
u7AvP/0zhlvYVkybYhnkZ5h8ed43ql9OY20UWwGt5QeCN3Rnmo1p+atghHkw
78pjF/jjFdsnebD4MOrgLeT3YoSiYbwGfqFP63jmCiSXRg8wuPwRsNV30oV2
J3hiov51F0A+IntkY+P7aANGFHNmYo6PLah7Ot9HH8rZwyQPeh4O5q/hm2i/
GN3Zjvom3pdtDB5R3l7l7FjgJvwq9osxwnN82DkD5sOV4otq39jDRGeJ9J/F
/UbT+XTAPnpd9J+sCpedq2FC2Jc8mG42PW22OuFdOlL7LzvSUy9afK3y0avj
rJn9DJ2Stdo+lw/FVet+MJv7fEBg0MQdXrbkFw7qk/2V/2B+gubI3oSDaCMc
REvkRM+tjXfZyZj3/OjNhTnHlzaeXTk4dsy+xePCuOxI03nil+Vgire489p7
Y90nlaOq/FaPsZxdCZ2hNbaeysVam7vC95cPYX7y6Q/N9fY7+PzEYfynh82D
d/7Sf38Ym43BtfEB/K+1l9FG+kzndzwE3pW701onA6qTzPii/Ig/Wm/l4jZ4
19lfO75rPxaLw3nKnhq6f7P75IftJ7LGAs+dEci7MK04FXiqc7j+4NvZyeDJ
eCfc1zf6FPSsb/gtOsenT3lQu57j984l+MvEHfvXJQ/Gu/AQe6hYx9GztYqe
Pdev9P/bZ2ONqxhXxqKP+C0+RUaEg9aKfU0+m8UpgIPkr2KSF7/OvixuTX4q
2Zp+lNxX7Jpkw3JdFZ/G+LPR0X5xz/3fd7o31Ib/lxvLN/N5LC5AsdaKrY2H
T5zon1s2pPg+XnXGr/NO8V7wE7KEOSYDoiXYU15d9J0+07ndWSsdJhzsLo9M
dOZRSh7UB7SqjvbtBe/CAnhnvfF/NGCPwJ38IPTRc7Sb7zWMMx50Db/wy3QI
xqa98A5N4HfK2cycMWROP/rsS+EUObHYZWccM/OnjnfNj/nQpnH5FrolL/sW
ugz71If76V2L4XbeD6Ld7geLs90dRz4UcKq7sHSe2b0UK8a+SEfaHeL2v7zy
89pHyluGvuJ1OyefOFi+iX1GXs/gS/Lg5Kv7pStPU/IgHESv6Eef0Db+a03t
H+Mpp5IyvmHvWUu0UZ1wEIZab/vHGb28S2jDGM7YqmitvBj4qL7A7tMnAg8r
9g5+Yu6d//Gnsdv9zlPrpY/ef6xlNG2e5r5pYoruPBMLD2Fhd4jOCWMj+umn
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
2fm5uEDZvZh/ZeuXvtGZ5sREPM1dYfeAeIt3T3nwxEHvpiPVvvrJifWNrKGM
9vBpdLPzuyzMR9PFeEFj+Kvn+obvoi3fbVza0Tf0mW2MPaZ8yoPKeG05mPTZ
/GT3pQ/dlaBPmKUveIK97PvlPy0/OLwr7kd4Zy3LWZO9ARrHT8gC2cOj9/KP
myf8QX2ysu/ib8rWIbsL52zjMc/ZycCr4mhbx/4N44pRWqyY07/PmSG/+O74
kvuUySLaU2fi+nxpYRu80pY/fFfb5evNfhSG+D3bIDgIw8Yu4Qvrd+cI/TBH
6F4/8JR8KPCufAw9c6/i/iu8w//RD/nNcxgH7/CZfAxhQfp530+PChe0h370
pXuH7EWzIx0d3N+sOr5pLdOLoglj8x37OIzLTxDvJH9p58zzjgZgRHx748Tq
c7ErfR92OJeUSyjsQzPJg9p8EQc7Txpv/oPltvC8Mpo8y/nyJxsWe63Ybvrz
UfeDxZNJ55nfBKzsOdpOTlQu7ugpJ9Kf4HP5leM9xkTWwxP9zq5i4rl+ct0b
pXvJTsZ6hYPd8ZPpymEM49CY+XWOhPHmrtz0+Ab/3myevKu+eUn/tmXgdXaC
2d4rpgFam1wIX3vqzD528K+s+G/pltF8erN0ts43+qY/1pXeB62g58datv72
B113PAZ/owfDC8wLnoNuksfJU6cfn7VP5gq/PDe39pQyno4XKaNpZWfjra9Z
5S3PL8wKE9Od4nnWVX/DtfzZtZkNatiqD8mPtdPzdK3qo89to7awDI3BxGJ+
pjtND1+sG7xUf7zrue/iQdoJW/UNzyzmNkzc8aSew8EwFM5ODKq/uu5N4KD9
bj7wBOtQTEXySjwBbaf7St8FB7O1i89kG5+fsn16xljuzgi/sq99F7bqe7ER
jA9Wdi85tjg/c8UChS32bH4Pnpsve64y2rLvzJf5K/ehuS/uy4vyoLpoBa9V
T52Rh35ztUfHZr3wZVikDhxU1icYhh+bZ7KZs4b3yEKT8+oLK+aodsqR57wO
a+f+deJkOufMee4zO7/6jxbewcTREfz6y3MH8/11nil+WvpS9GD+naOsu/qn
PDg2qv+wyt2bWxfyoHVSpre0Tu7yJufBXy+MIHei25F131n0bzzVz95yZIMP
/dbJzc5g5Kh8H9CGNSinvHJ4h8/jl7As2dBzcxz25TufPBgOmqt8KMzJPpOu
/mQPY+zdCZ52MsZV/5N98Hd7ITvJ836w3IinHz25r7jBxZapfOaqQNPhoL1e
vMXTRlR58tmOn5322WmbK/NpvPFMv5HpyjP6UTiYPYx1cuYgM5azvrijaAbf
gNPWF92SB3dOwYXp8Bp26wsbj3IRwuvyWhobflj8/3JhWEv8H19Ac8rhxWMt
wwK8xd7qPgi/UsavzYV1TE73G5qgJ0mOQzfJbtYg3Nm6mAvv8LPsXvDC7vLw
q7CvfHzhYPHWajMc7Ln+40XOQGFf8dn0077Ol1BZf/QThoaDsCHMQoe+RYbt
TnPOVW9dfVMnfMcvtI8vKnvefZ/66YTzK8wuCA0r4/Pm0LeKQ4W2i7uItvMd
hoP2UL7DaNYcO9fZQ9m6W6szRtb22b14izL+k94Mj0L7O47Gc7FHrBv+pr7+
wsLs6j3H1/XHnoIV5Bo8F0bBAH2h5zGPYZ9ymGiulZMX7elyLnVnWCxQ81xM
7Mr6q642YIuyeeyeET+Cm91Hehdu4tHql38w7NMevpNO2Bx7n0yOd8LU8n3A
VP8WfwYtoRXzjN6spTlId2oOlckTMNZcmXd7rLL6c6/z/pLv8DfPsx+0X8xp
uJbfLj42eRPfW/srGxv187lAV9qxh/Du9g5aNVcwV31jzIfdnGQPY15PTEyP
CgfDPueO02YGbnY/qJzfRPiYTalvmc9kwO7Hs5MxJnRenia6yPLLwynrFA5m
L1p80RfjiBp7Ma/Yj51lZx1ylTtBezffc3Suj+VggoNjS/HBpRdF/+EgGvOb
fZTdIL7UnZT1IuuFfelFrXVxZvDb4q2ZO3fx5RVgY2A82rF26CTbp7ENePsp
etRPur7i2hlX91PFLTFHO8/Hhb8wwp5At/o88ebfebTlGwdvHLxx8MbBGwdv
HLxx8MbBGwdvHLxx8MbBGwdvHLxx8MbBGwdvHLxx8MbBGwdvHLxx8MbBGwdv
HLxx8MbBGwdvHLxx8MbBGwdvHPy/gFM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44
eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44
eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44
eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44eOPgjYM3Dt44
eOPgjYM3Dt44eOPgjYM3Dv708n8DIW/8pA==
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3XvUtetV1/fdai090zM92djaNrWtpdqDlfd93thaa61tU2yttbYNVK1t
qVKlnnVExBAw4BYRIyJuETViwICIETFuEWNExIAxIkbcAkJAxIAI4Wifz32v
3/N+9+rOGP2zY2TtMdZ+7vde17ru65rzN39zXvM63D/sw3/eh/7sv/uZZ575
BR9w/78P/bBf9ON+/s//sF/yU36If/ysD/uIH/2jPuIH3V9+1P3nU+4/rv/i
V/20J1/x9lc++R2f8S89eeaZVz/5ge//FU++9E/9Z8f1X33hVU/e8Lv/tSd/
5Wv+pyef+Tv+5Sd/+ku/9M533/3e99796o/+6Lu/8M6f+uRXvfqZJ7/uEz/x
7p1//r998r3f8z13v+lTPuXuz7/jv3ny/d/3fXe/8zM/807df+cHfuDu937W
Z929/c/+V8f93/OGN9x9+Z/5L477v/t3/a67P/NlP/m4/1s+9VPv3vHnfsrD
tXqU2bX76vfc3df+j/5Vf9eT3/bpn360Yb/9yq/4r492/ubXv/547nd953ce
19qjnb/10z7t+O1rfs3f8+T3f97n3f2lr/7pTz7+4/6+J3/0LW85nvUxv/oH
PfkDn//5d3/uKz/0qOcPvfnND21TRj2e+8e/+IuP+n/1R//dx7X7fquM8r/m
Y37wkz/8hV94966/9D88+bjXfsBx/Zff9TOevPZj/97j+qv+wn93yNCz3von
/pN7mb9w99ufe+7uc9/0wU8882Nf85q7T/+t/8LRv/vf3X3yb/jHn2j7H/mi
R/f9+aAnZPwnvuTH3/22T/+hT8j1/vl3dPXZb3zjUf73ftaPePK5b3rT3Te9
++fcfc5n/1sP15/3uf/Okz/4BV9w993v/cV3X/AH/r0nf+z5549n7bn0+1m/
519/Qm/f9p6PPMpr76/9+I+/1+sPP57l/t/+ju84ZPlrPuZj7l7/m/7pJ9/0
7nff/dkv//L7z3/55E2/798+cPPN3/S/PSHHP/W2n/jka//qhx3XcETmZO2a
HOjvT3/pTzq+9/s//sX/0RM4+bI//Z/fP/vHPiFn13/wC/79h2vtVVYdv+9z
fuRxTY7Ku/6SP/4fP/nCP/QfHmX/2POvOH77J9/6E+77+GOO8r7//N//o5/o
670cj/p+1+/8V57cy/ewCTL2+0/9zf/Mk2d/3T/y5M1/8D948hs+6R87dPkH
Pv/fPf7ConphCVbIGd7okgx8/+ff8Y5Dhq7/wjvfeY/7f/WQFbn3fsu3ntbf
57Y9bWfb3361v5VD5VO5Xctzcq78q5fqq3qsfqv34qE4KX6Kq+KtOCw+i9vi
uTgv/msXtZfaUe2rdld7rJ3WfmvXtffyQPmhvFE+ueaZ8U95qXxVHiu/lffK
h+XJ8md5tXxbHi4/l7fL5+X58n/9Qv1F/Uj9S/1O/VH9VP1X/Vr93ce99rWH
Pu9l9fjmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w
5gdvfvDmB29+8OYHb37w5gdvfvDmB29+8OYHb37w/89+UL3f/32//F7v736s
72/5I4+fvO7X/gP38viFBx5/4yf/Ewdmf/2zH3jgwLM+9jU/5Im+uCaTX//s
s3df/Rf/+6Nt5KnN7sPQ9EXm+usazlyvv+u7367vla370+/ksPv0q06y0kdt
+B2f8RkPuoO91bP7ypP/8MAelIExmKGvv/Xt337In03/9W/+5kNHbPPb3vOe
O+2nR+3xW/c9F27VA8N/5Iu+6AF7sPrCX/mfn3zC6/7B4z79DJPw77nuv+1P
/qdPvu5rv/bABjtSNzv6tN/yzx3yZl/0oE/3bbyXxT919IMu2eBFlnef8dt/
2JMLju7gwPV9X+8++43/5qGHv/b1P/MOl7GVv/0dH3WUoSv34UN5/PApv/Gf
PJ573947bccx6tc/GFQnjvp1n/gPH5jQX3rCdd/6N/7PJ1//df/LE7buPnnN
97meTyQv8oMlNkP2sDQuxhuw8kffcneUhRX8rJwy5ITP1Yf/6OuL/9iPO/yV
Ms//0SfHtTbxDXwIOeN/POt3/AIuVOb3f96PevCJfNVv/bR//skX/eEPObiY
DHDpr/34v//QmbKwhJtds9O/+a3fenApzPBlnuEeXeNeZeGB/P/Gt3zLHb33
fsu3ntbf57Y9bWfb3361v5VD5VO5VZ6Vc+VfvVRf1WP1W70XD8XJNX6Gq+Kt
OCw+i9viuTgv/msXtZfaUe2rdld7rJ3WfmvXtffyQPmhvFE+Kc9c8894qXxV
Hiu/lffKh9c8Of4sr5Zvy8Pl5/J2+bw8X/6vX6i/qB+pf6nfqT+qn6r/ql+r
v7v38Y/vyz9+5v6/e108XH/C61536PwvftVXPRYbijPFqJ4Ff/ws3YlhyA2e
6Yis6Ne1fmm/azLXBjEJ3bk++ePs42Q7/76+kOf8KdsXe7AhsYoyZDJ9fc1f
/h+POj2XzZAPOfiterRt+tJmelzb6HcYgxm84rf6/le+5mvufsMnfdId2/9L
X/3Vd7/xkz/5wLP72sZW8Zjnrl/q0Ta89Cff+tZDbrDtmqzoAeZd1w9qM/nQ
m/q1ATeREzsS42sL+xLre75rOtYnsSsb1Ba2/9xv+xefXLB/8MDFJg4b/32f
8zkPNr5YF2/4rXrICbcoz5489298y0cc1/SAa974e/+NA2/6Q876o6/wTL7k
So/7SyYbD/ieLpWlL7IjSzzgmgzIZOMI5V3DsfqGafWyPdyvLh/jEXX7HZ5z
jc/xnO+NUX7PG15+cC2+/+3PvezgVt+L8bWDjOBeO3AfPcHDJ/36f/TAE1/h
nvEJ3wCf/BQfAD9f8fa3H/fx0p/5si87fJZr+uWz1PEnvuRLjjGd8q57v+Vb
z3X9e27b03a2/e1X+1s5VD6VW+VZOVf+1Uv1VT1Wv9V78VCcFD/FVfFWHBaf
xW3xXJwX/7WL2kvtqPZVu6s91k5rv7Xr2nt5oPxQ3iiflGfKP+Wl8lV5rPxW
3isflifLn+XV8m15uPxc3i6fl+fL//UL9Rf1I/Uv9Tv1R/VT9V/1a/V397b1
2FjwV7361cdfn297z0fe+77n+T/3H8kf+O2fetvbHuu7+sn0G7/hZx95F99r
A18MT+TpWpvJxPXG9Rvjsxt9hLn590se4YgNNgafDNnEYpJek4nfru/qvGD6
QV/KqxOO9yzP1Rdtgzd6UV5cJOb9y+9614EZXOR7doSj6Ae2xbj38jiwLe46
Y//POp5FF3hM/TBMF2z/Ez/hHzru38eaL7o+Y/YvOdpPPuSpzr/29V9/xHXa
QJZsmA3CNbvzO210LSdDTmJavOZaTPtbPvWffUKW9/Z3/Nb9e70+2LX7bPZi
E3fkJLa6HxvckYF8AR5Ybo3uv+Gv/ayDg+D027/t/3ryLX/9/zg++uu7d3/j
/3rwGd3QA7vzb/pnm/7tLx7Gv8YrbIQO3BsHsm/XvrseD64s7tUWZXG3+7v2
O7yA3z1fTsp4C/bo2DjI842D5FC0w7gLt3kGGeEmzxD3w42ydId3PAMvfeM3
fMPhy5bD5BvY+5/7yq8kxwc/5T7cwo37yvNr2sTH0XvvX5dvPau/z2172s62
v/1qfyuHyqdyqzwr52v5Ty/X48Hpsfqt3ouH4qT4Ka6Kt+Kw+Cxui+fivPiv
XdReake1r9pd7bF2WvutXdfeywPlh/JG+aQ8U/4pL5WvymPlt/Je+bA8Wf4s
r5Zvy8Pvi6vL5+X58n/9Qv1F/Uj9S/1O/VH9VP1X/Vr93X37Dh/omn88x4fP
PuYf73V13JP7vo8TD78pD6Ht97ZwH2v978ezxBxf97UfftiguELftV+uQb+M
u12LB+fT19/FRRs70/tyv2KVyX9j8OUTXkovjU+UX87ZNTnPRyu/uEIbtHk5
BOXFu5ec/WEjYoh7rjjiRjHmPRYPzoEX+F/+/IK5Qw7zfXALl7uW32i8N7lN
d8v/4wTzCPAgnmQ32sEG2S8bxGXumfugf7iW86ET8mODrpVny2Jg1/ex/WHX
4i+6NRehPE6gp8vfx2JjNkg3y6vLMfi4/js/8CsP3nnvd/2ie5390ifwcG9n
ByeZ33F937YjZvfv+/YcnCfHRQ9kTsebjxpnbi5w81Dk676y7AGXkrMyGye6
h/NgT1mcrj48irfZlFgcN7BHfC4n6L7xDn/gHr6nc3XgT3rSDvKiG79nA/yL
Z8zvqAv27uPMg3PgwRzW8pzw4P5ynvN9rsmZDdF171+Xbz2rv89te9rOtr/9
an8rh2v5TG6VZ+Vc+Vcv1Vf1WP1W78VDcVL8FFfFW3FYfBa3xXNxXvzXLmov
taPaV+2u9lg7rf3Wrmvv5YHyQ3mjfFKeKf+Ul8pX5bHyW3mvfFievObP8er7
yr+Vn8vb5fPyfPm/fuHaX8yP1L/U79Qf1U/Vf9Wv1d/Bwf0zH/OV8qS+u9fF
o694+9vv8fHa45qvvPjQD/ncN33wHb95f++ReFGuW3v4YnkJOhbPkI/+0imc
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
Kp9ruU2elXPlX71UX9Vj9Vu9Fw/XOBl+iqvirTgsPovb4rk4L/5rF7WX2lHt
q3ZXe6yd1n5r17X38kD5obxRPinPlH/elx8sj5Xfynvlw/Jk+bO8Wr4tD5ef
y9vXfD6eL//XL9Rf1I/Uv9Tv1B/VT9V/1a/V35HP1owup6oe8Y7fGk+Kdy7z
juR3zEPyp+f4+liT87AW1W/VZU7ynDf8qOO32nnuO3rnsXZIzkKMKl6Fh+2L
3BqqnYe2sxHIX75iewO3t2UxiTrhYePr5cnhgH1vPyx9itG0V7/EDtoJD5dY
4hEZbHxNbmdu5D36e+QZYAOfiFOWG/dcWGVndIZ/4Hn7fdgvPG+frL5vvbS+
LybUFzkUNud31n2Zw9FXdkQe4lL2xQY/7rUfcHfO537M8PEYN+I4ax7Y8eZB
Thx+1GHrOIx9b6znL07QNjbmu/GK8rvGHWROZ2Ln5afkody7ntPb7zae21zO
5hD3Gc9tf/T2f5EtjnS9e7hk94yN9KXXONx6BNfGMzhM3du/qA8734TM/dYc
mrh34yO5F/Yoh2VcYCwlVucv6AuO7Tngm9zHFedeijcfPghW6Wf+i65xlDgZ
j7m/NS3LZy63ufvX5VdP6+9z2562s+1vv9rfyqHyqdwqz2s5T/7VS/V1rcd9
V70XD8VJ8VNcFW/FYfFZ3BbPxXnxX7uovdSOal+1u9pj7bT2W7uuvZcHyg/X
vDE+Kc+Uf8pL5avyWPmtvFc+LE+WP8ur5dvycPm5vF0+L8+X/+sX6i/qR+pf
6nfqj+qn6r/q1+rvyMFYWV3iBnLiU8ngjB1eddTpeZf8693594WjTvc3F8mv
XtakXvK0z13Wpr7waOuU1g62ZZ5X7AL3rtk721s+me2TIfuFn9k4+3VNzmwM
V5CtHJHcONma14AXMYTzNeQrLng1r3rkk8+8+KuPtp15g3NNEXmKiXxnjZd/
6x/9qNs4+zzH5B0P5+zR6fbAwicsbh/QchqL8dizuoZ/sdfOGDQuoPedBSFu
NE8jniL7yzrpI44546O3H7KGwXPe6S1i1SOeNS+CC6wLkGNQP1t3Teau2Tk7
wgnbC7880vgGt2izf8snud46df1Sdvsm+lF+6xg2Rlye1POXw/Lvrflzb/NK
uHJjCJw7TrUmA3623g+/Gpe4r6z7G8tsz5vrnevlOeqCI+3aGZj0KIeI4/RR
WetCrAmhOzaME2AM9uSOtifaesrtC2O/MEe/fBk8w4DnidvpSbvn77ZXgu56
v+VbT+vvc9uetrPtb7/a38qh8qncKs/KufKvXqqv6rH6rd6Lh+Kk+CmuirXi
sPgsbovn4rz4r13UXmpHta/aXe2xdlr7rV3X3ssD5YfyRvmkPFP+KS+Vr8pj
5bfyXvmwPFn+LK+Wb8vD5efydvm8PF/+r1+ov6gfqX+p33mxP3rqp+q/6tfq
7+S1zzzqyw75eB4ZqdM42nfq8Wz+kjy239Cz1sZzrc6bjnHh8tDkCwfnPOTz
jy7j8qMvYlgxkRiD3dCpGIAt2INKRuQmpiE7NiOu8m/xmTjYujUYNs9vXO3f
xtNy2vCxeVA6PfeFPHfo2l/6veDi0TnH+rJLXPDcI/HTOd5+4ZH8h3L6C490
Tjb4Q3vlt3dOIHywP3qcH+xZMdsTxAbhGWbY32I/fdkZgOofnuWq5DmM7881
zj/4wLH401y+9V6bu8E15v59trf9Pg49rrVTrMu22Q45+rcYmB3iCm3bmobF
4vhi6x78W/ldbx5o5cdnnc/bPM4+y2XNR6rL893bvmltVffmmqzj2NmSbE57
2Ix8HWyMb8fBO+eETRo/jefJVX3GMfKRyuBye/i0a2dEkwXO5qM8S33WUqqP
jxG/Gg/gAXqEDbG88YExFt902cd0lFnudPsjtHF7/fDJ5gR7v+VbT+vvc9ue
trPtb7/a38qh8qncKs9rOU/+1Uv1VT1Wv9d6Hx6Kk2vs7G/xVhwWn8Vt8Vyc
F/+1i9pL7aj2VburPdZOa7+169p7eaD8UN4on5Rnyj/lpfJVeaz8Vt4rH5Yn
y5/l1fJtebj8XN4un5fny//1C/UX9SP1L/U79Uf1U/Vf9Wv1d+Sw9TT6vn2G
l70xx7/FE9uHz5+6x7cq475/z297Hv1vn/7azP+qd/sW9cv3xuHyOXIz1kLJ
PcAj/Irb2Ae7JVvXbExuAm7PM85/5VF+drR5fTwCX8bvk+U57nvDJR/w3OGX
t39EXy/nyT1yLUYw92oeWaxARnC1Mwo8g97ktHeugnhGm+FTvkIbexYEPOMu
uKX3rRNWXhy4M/rw2nk2x7uO+hfXkbe4juz1xd7ovV9g68B92K45f/Hr1q9v
L56/5KcNbGnzfdvLrD1bg6fNm+/BD4vJdzbofKL7fuve+Gl5rs4LbgxYflvu
a1yoPnLYOcybOxQ/bl2GcQbZjlfdV4bud/bXxiPGUbidreF+4ye/w+dyh37r
OTsTbGMl1+oQ/2qnOvkispTzW53WV9Krv2yYL4MTembP5z6Edxx7o/zGOIHe
+b7lOXFX9wDufsu3ntbf57Y9bWfb3361v5VD5VO5VZ6Vc+V/rZfpq3qsfqv3
4qE4KX6Kq+KtOCw+i9viuTgv/msXtZfaUe2rdld7rJ3WfmvXtffyQPmhvFE+
Kc+Uf8pL5avyWPmtvFc+LE+WP8ur5dvycPm5vF0+L8+X/+sX6i/qR+pf6nfq
j+qn6r/q1+rvXCuj35srVOfGj8pd1tkeflcdrtW/9bbLu55zkm87yvveR7/U
6b6+kS25nn35oEM37IbM2IgYi4zEXrAmB+FaDsK8tb/LpbCN2dzmerYurOdP
wAo+8bmcC3Do9pL/fdhfeVl/e8RIF59/zLttzyk829+p38Pb1rXKX4nHrv2g
uG7nzIgLxXVbD7a9OfQv9iMDuQV2cZ5f/I5j3ln8tLyEuJJuyHZjIXyyPcLD
F3slv+07JjvX2sTGt46ATW+upPv7tHH5SvfGK/OJ6prvc19Oabw0/rteJ6Gt
7m+uqOclb/2o++NMNuZ6+t1aDPeVX97N9fJx6sfPe78PPe08TNd8gbL8jXyg
a9yO59mn++bQ1MEPLOfgt9ZR6lt9B15znz3bg2AMxk8Yh8kn2asnfpf7Ei9v
rsPz8BZfxvdsjq/3W771tP4+t+1pO9v+9qv9rRwqn8rtWp6Tc+VfvVRf13qc
fqv34qE4ucbPcFW8FYcvhc9rPBfnxX/tovZSO6p91e5qj7XT2m/tuvZeHig/
lDfKJ9d+cPxTXipflcfKb+W98mF5svxZXi3flofLz+Xt8nl5vvxfv1B/UT9S
/1K/U39UP1X/Vb9Wf2dcufdOGLeT07mW9AMPn8s/bt3NvtNOdfqtZ6hHnnn7
Fd3fb/3uHMO+/fElt3vI1pwo+fo0riIzsvKBye3xofeVOfeY/NIn3/e9v+zA
5/YE7dxC9r01E2zCb1ceNs7zc3+oXM8hy3N/6aH7D9HGc2/kyx6fa0dfdfRL
2e1LJW8xPFzA++IxMfnwaX5H+zseHJ6V147uCd1ZsuJD9893/3zp5hyOmE47
5RLk0MRl+k0e+uVZbJIs1T9bZe9syfXia5hkU4uJZ+9b0744mk3Pp+Gj+cPF
3p653OVySu77zfY7L2e1OSG8OHvx2VnKy5/h1uXWxqsbR4xjx58r41nu+a02
y8/Rj/vGNbhHG3c2pmftHQq+d48f2fv44AOGdrbYzlCx30Dd8pL2Wnk+/8Cn
6Ct/ZpxFLsrzKXvvg7UpW4sullYXzpNz0g54gaXeb/nW0/r73Lan7Wz726/2
t3KofCq3yvNazpP/S/nE6avjwZWp3ouH4qT4Ka6Kt+Kw+Cxui+fivPi/tovZ
S+2o9lW7qz3WTmu/tevae3mg/FDeKJ+UZ8o/5aXyVXms/FbeKx+WJ8uf5dXy
bXm4/FzeLp+X58v/9Qv1F/Uj9S/Xfmf+qH6q/qt+rf6On+RLjY3PPRZn3nhr
gf3b9dbliCU853w/xY95aINnLgfLF2+f/embX3vZx/jCozMn/dwjOmTXPluL
5SO2sHbWPPXWPC8+gzuyhkHY3L5YONz5EWIO9+iIzti6ONdHrKTu7Rlyb2cf
yiEbM/s8k/9O33O+m0rMLq6SXz/zaO/ceUwPZ+t59tZpaZ+chhwFnBv77z2b
5zsNznctObMettn81ly5dzm/9siZq9t+pO7Z8yw4Ije2QEZyEuydjDb3R6bK
+p37ZKXM9jRvrZ3P5mz2jrjF6xuz7f0AWzfvvt/7uzUNe0fOYrytocdr2zeG
B7deHh/6iw/pbesT6UVZtoZz2drOffYs8ffeQ4Gfcbfyfjt+3nmXOwdMjs9v
+As5RO3yTGMkbVgOcD6F79BOYy7zHPrD5xifeb418XjKfeMtexLIw/4H9WsP
H7JzWtSHY/wbR5pHYgP+7p2Pu9/yraf197nX7Vk72/72q/2tHCqfyq3yrJwr
/+ql+qoeq9/qvXgoToqf4qp4Kw6v8TncFs/FefFfu6i91I5qX7W72uOL7fSp
/daua+/lgfJDeaN8Up4p/5SXylflsfJbea98eM2T48/yavm2PFx+Lm+Xz8vz
5f/6hfqL+pH6l/qd+qP6qfqv+rX6u8z7/b/un2dyv3DkkC/j6Qd/KnbQhnON
8Ecec6/n3sTnH1/O8Hq891yc+d7TD55j3ece0bN1VD4bI/uQE/n4LJ+x9dE9
v2v5jeXz/TWXvTnt5fDFHewP5tgUOxcD+7szeZfT2x5u+Sm4k6snlzNHfZ4P
oJ/ih/Pcjbcc8+Lq3TlC2w8rHlOv+QK41265jr0fyn35EM+jc8+EP3u5dhaE
dVXwDIO4zjO3t0lMpb2eB2fsevMas+XliLoujhy3Rn77tcYbm4spP2xN+s58
2V7nzsksVzqOIg+f5cfwz+aDxke4bnE6btXGrdH3PS4lD7/Rfz6AHt3be5Rw
MH7Wpr3vQB3sdOs68O3eAWTMsXWh+NhvPc9fYyd18i/8hz571t49ZA5j46nt
NVCPHKV9CdrLR9Gx57jHf+mfMucalg9/OL+FHGBfftO4y/o4fNj7Ld96Wn+f
2/a0nW3/db/W38qh8qncKs/KufKvXqqv6rH6rd6Lh+Kk+CmuirfisPgsbovn
4rz4r13UXmpHta/aXe2xdlr7rV3X3ssD5YfyRvmkPFP+KS+Vr8pj5bfyXvmw
PFn+LK+Wb8vD5efydvm8PF/+r1+ov6gfqX+59jvzR/VT9V/1a/V3O4ONr93e
w57Dds6RPb3eOaZyysbb556OZ1/UHj53OdhzzvJNjy9terSzT8U+znP3MX5+
qfGgGGL55a2fgE/6WAwIh+RLnztPaWupNw++mITOllPxPXyyXXGs+hc/0iss
iFtwyt5fZm2UPUHWMu38V9d4Qey1tdD2LOO07XUVv6lzsdzWRSvPtuW6XOMk
8eHez7hzrshD2+FvcyDksz3k6u61fixHtHwROZDZ1sxtLQHc7kwPH/y0PBUu
XMw/+ZD91hnMfvaeuXGUPq18x4C7xl/n+VInP7le7G9csffR7f2t6tOGzW3h
6r0Pdueh0aHv/NZ34lq2Szd8yfiZbY/D945Cz9n8FzyoV3v81lhpvsO1+/QC
E+Sz8drOaaFjdfItMKM/cmT8GrnuGjb4v/lT93FZ77d862n9fW7b03Zet3/9
an8rh8qncqs8K+fKv3qpvqrH6rd6v8bDcFL8FFfFW3FYfBa3xXNxXvzXLmov
taPa1/uywdpp7bd2XXsvD5Qfyhvlk/JM+ae8VL4qj5Xfynvlw/Jk+bO8Wr4t
D5efy9vl8/J8+b9+of6ifqT+pX6n/qh+6n35svq78wzWdx++Va5156093Y//
kYcP9Zdv7m93RoH2eO7W9HjWxqq+Xzvlo7c/xXpZa2zlxzsuJuPFCa7pDH7E
EMvJb33X3rfp38udbM3Z4sCtFVtMsve67Gylna/E7tkmu2AfbJ7NKK/s5gzo
2Pf44jyP/occsd7eEYAH7OURa3m2PUFwu3NizVtrz86p9zzXYjzYYSPi/60T
8vzzfSg/95CJNm1f8OLhzY9svmScMDmQTdfewW3PbexZaNvnpZ/s1PjC2AFn
aZt+73k4aGvgxx97x8DmY+b7Ng+0nNa5j+qnP+TIfO8vXlVmPOw57mvL1vYb
U6jLPbLHobiXD/A7Y5/lJNn0ue7ypx527jt6ds/8mz54Dr9AnnhAf/fOBf7G
c7XrPNfwQw8Z0NHyjebj8LW8495VYZ5Njkd7xbh8nH6I5+HDNfzY06dt5zt+
zjK73/Ktp/X3uW3PdTvb/vWr/a0cKp/KrfKsnCv/6qX6qh6r3+q9eChOip/i
qngrDovP4rZ4Ls6L/9pF7aV2VPuq3dUea6e132u7nr2XB8oP5Y3ySXmm/FNe
Kl+Vx8pv5b3yYXmy/FleLd+Wh8vP5e3yeXm+/F+/UH9RP1L/Ur9Tf1Q/9VL+
6zzv5am/O+dQX3iYV9zZMluTcxlD7r0Tx/hxflY95/6LN13W4p453J1bs7nC
tW3rf859fJ952X/8WXfLERsfixeWU6APsYj72xer7ObAF88Mo7C7fdg9o6nn
U2wv0eK2ncG7s3/pb+vTNhcCI/jC73eGBv3N3rTTfdiEqe3b8ltYFbPBybnn
7HxnIqzCsLpwnTVky624t71QbBDPDF/LQ83me97Y7i8O7nXPc9w9XOKjPf7i
Ddcd0+mXPunLOEUbcAoe7Nq/7bffGvW1b2eTsDnP0T/curX3ZOt6azA8H99u
nT8u9azNYeEydW4do/LycPOJuFxeRdv9bu9X2hnR6hz/e654eu9WUDc+xxF+
y6doOy4XU5Px3ssASxtz6at3GPFV6jFfJ9YnM/mrnU0qnufj9B/X2fdOvvBw
vmvw6f2Wbz2tv89te9rOtr/9an8rh8qncqs8K+fKv3qpvqrH6rd6Lx6Kk+Kn
uCreisPis7gtnovz4r92UXu5tqPZV+2u9lg7rf3Wrmvv5YHyQ3mjfFKeKf+U
l8pX5bHyW3mvfFieLH9en303vi0Pl5/L2+Xz8nz5v36h/qJ+5Nq/zO/UH9VP
1X/Vr9Xf7f2D579ffjlP9G2Hnz3PMH314+07lGv1HPc2xlyd1urwpf7t2jpX
9Siza3UYkyrvrBtjdvPFe28m2dCjnLqxMrltXREdLA+/vLN/b71YP9PPziGc
j+xax+Y96h83Z76z6hcHbQ24WIpt7hr2tm6bHWu/sls/zNatW/BcXLX348Cv
ddHwiHvE83t32jgDTtmj57ne+07FeP69tcrLD+/aX3ywvJFrn5WZrW4OZrG3
/mxdg365tzWB7rMj17jD93jT92J5ebPN+bivzN7D6rk7e8Tz/d1ebL81lvBs
15urMlYgl81bGcssj7d3COI6nKxvOA8v6NfKqB83G2tpi+/xC/3rh7ETeS1P
uPez8xF775B1JvooV+l67+njO+Bnz9WezdMp4x5/Rib4TXyLi+Wt7B9T/3km
xLcc4z7zRvbA937Lt57W3+e2PW1n299+tb+VQ+VTuVWelXPlX71UX9Vj9Vu9
Fw/FSfFTXBVvxWHxWdxe43k4L/5rF7WX2lHt633ZYO209lu7rr2XB8oP5Y3y
SXmm/FNeKl+Vx8pv5b3yYXmy/FleLd+Wh8vP5e3yeXm+/F+/UH9RP1L/Ur9T
f1Q/Vf9Vv1Z/Zz8Ff+p325PIf678fO5+u3NJ5/u2bked89dt5+Yzz3rO82+e
5mk/8ChHX9tb2zHy1htZVzu5ktX2Au1sicVk84v+vfz18h3zdVtXtvPtp+u9
82Xz6Xt3zMb3ym3vjPYun7gziDeP75rNwqH4Ct5xj3yIMmzTs/AGPlEHe8QR
6oJrNub3+FFdvmfL7GNx8daQeJ5ybM6/lfe3MaDf4Q59Z4NsY/HwzmbRTr9V
ZmdI7gwtv/XMvXdncbrrxZuzdX9x3NYc4l/P0L/NPakTj9GTWBlvbn5qYxCc
ZpyjL+Nq9eM5a0W0c+MdNrtr/dh6Errc2kh9xTNkTh/GRvyNdsrtmZdQxnwW
DifPrc90rQ1bo6I8LiLfa39kXkfblDV+0xfzeuZ+lOfLzjP3P/ghl6XfckHW
1/d+y7ee1t/ntj1tZ9vffrW/lUPlU7lVnpVz5V+9VF/VY/VbvRcPxUnxU1wV
b8Vh8VncFs/FefFfu6i91I5qX9d2N3usndZ+a9e19/JA+aG8UT4pz5R/ykvl
q/JY+a28Vz4sT5Y/y6vl2/Jw+bm8XT4vz5f/6xfqL+pH6l+u/c78Uf1U/Vf9
Wv2dPbp7Np+4vYpbZ7S9+ZuXXK71PNf7PF/WmHNn9mzP4OYrt7//aY71VQ/7
J6zhNQ/KBugdtns+gzhBjnq55Z2ju/OSNhbfnqO9/2Cx1ua7eg79cvnby9a9
ut3TvRzA4iHfLy8O0zuzcOdgbG58Om2Okb1oA5uBYeU2ttse1K0z0Rd2B/ds
12fvvdm+b7a4ea7tC1nM63fq3h7n2T37Woy8+TX/vuYQbdncwWJpv9f/ccry
VPq1M7dwl/Lq19btL/LvzT3hL/W4FvOzFWX27vKNHZZ/w5/q128+wP2tn1Te
c/D15sKWo1MGh3gWDvdbehvnbx6NzyBbz5kf8b11e/qoT+bIyGT5Q5w1f0FX
nm8sR07idnkr7bQe4fRtrzzGXq7VL963r4zM+Ct74fV/54X2fsu3ntbf57Y9
bWfb3361v5VD5VO5VZ6Vc+VfvVRf13qcfqv34qE4KX6Kq+KtOCw+i9viuTgv
/msXtZfaUe2rdld7rJ3WfmvXtffyQPmhvFE+Kc+Uf8pL5avyWPmtvFc+LE+W
P8ur5dvycPm5vF0+L8+X/+sX6i/qR+pfrv3O/FH9VP3XtV+bv5OH3f6Rnbez
91ac47w3HL9VdnnOvdNwZ6tfzid9ONNm59b47f7u/Rg70/U8t+6ZYw6UzZv3
cAb+9lbKHYshyK1nGLCV7dmGGbEQuxl/wi+Z+p2ydLQ9sptD396L7aFdvnS5
ga4lhpee+bwzNaZ7et+ZSxt7bt5C2c2rd93a5ijEvrObrQlR73KeO7Nx53zg
E9dySzgRf+A33zUXhAO3jn1r1fGXe+MT3LDvxiFsXLvGJ5ujEdPqQ/f3rS7y
93dzQJuLWcyPB/VFuzyXLJVxv2vntB/n4VLXbAPXLzbGmeS9+S/1K49X6UaZ
7S8YD3vW1op41vbZKc/mPGvnOtXH8Svazj9Yl7I1med7QH/2wx52/eJPjNnI
SXk+i1zlteyF2PtwXZPf1r2QG59zjv1+4uH7nBna+y3felp/n9v2tJ1tf/vV
/lYOlU/lVnlWzpV/9VJ9VY/Vb/VePBQnxU9xVbwVh8VncVs8F+fFf+2i9lI7
qn3V7mqPtdPab+269l4eKD+UN8on5ZnyT3mpfFUeK7+V98qH5cnyZ3m1fFse
Lj+Xt8vn5fnyf/1C/UX9SP3Ltd+ZP6qfqv+qX6u/0wZrkezxtOfk3IMvV/qK
h3ypZ/G9frt3dlzW3+xM8sc7w2Zjz61z5Yef+sEXLnOPzz74ar7evn5rfYxx
J3O62Pzt9uBu7RmZwvPGOOxs3AVreETsogyc7x3VW8u1cySWAx8GmhPYZ+uv
u45s48fZ1fIBy0tsD9TmxZdv2DtK3V98tfmEreOGWbbkO7bAvjbO1H/l3MMd
W5uAu9iQez0nZL4PTuFTjMlWyVB9bB+H7D0D7F1/3MOD+ki+nrMzlpVTDy7Z
OZOeQfbaLAbemS140ryPNqvP+GIc6Fo940Bl9AWHs/nNZ20/OP1qC/1aC6f9
7uNnOl0ujuw3V6Ue8jC3pbw8HB+wa8/SZu2Rr6Mj7cHtfuuvMrjRuIqv0n7t
Wk5S263h2zpP/osMjeOcp0Uuy3niPms8zf2px7jNWaKw7Zot9n7Lt57W3+e2
PW1n299+tb+VQ+VTuVWelXPlX71UX9Vj9Vu9Fw/FSfFTXBVvxWHxWdwWz8V5
8V+7qL3UjmpftbvaY+209lu7rr2XB8oP17wxPinPlH+ueWl8VR4rv5X3yofl
yfJnebV8Wx4uP5e3y+fl+fJ//UL9Rf1I/Uv9Tv1R/VT9V/1a/Z011+bhnV24
93yam+AbjRHNW2rfeZbbm19UvzHp5v32LovNS57+9rXHvgz/vuw9f3gHlv5t
z+P6bY0sPJEnzJvL3d6I7XNiI3t3tnkTulnOB36X26EjfRMDkzl9wsny1Z0r
HK6276jrTRd/bd3puy5nRfdcRBiF863/Hwa2xwmfDUN77+jWiC+XAc9yG+rG
W8szwNvyLexfOdharLg9XO75y5aVIw/x9mL25QnJ0T02rm5xNbnhFfJim8vh
sMmON93veZWet+vlizx/a1fGsVuzIc53H3/QIw6jL1xPZsYy+J0cYcD8lOfC
xHgYJ+P0cXK5ems11cmXuA8r21OgT8q471mwoW2epU46JQe2TSf6vTk1vH6+
8+Zc02K9ivabr1sO031rO5fbNL7THs/hs+hQeWtBXRuTsT1ymx/s/ZZvPa2/
z2172s62v/1qfyuHyudabpPntZwn/+ql+qoeq9/qvXgoTq7xM1wVb8Vh8Vnc
Fs/FefFfu6i91I5qX7W72mPttPZbu669lwfKD+WN8kl5pvxzfU7v+Ko8Vn4r
75UPy5Plz/Jq+bY8XH4ub5fPy/Pl//qF+ov6kfqX+p36o/qp+q/6tfo7eIG7
8z1YLz/ix5OL3nr4QucV8KHne7VeOOYizzHfsw/7Fvll85Ibh17eL3iseeVv
l8/dnv2dE7f9/nvXh7Gw557vnXqz2OCIIegUVuCI3MVlWzsnLtu7PHaehjLw
QcbslH0px97owtqlxSMbtw8vXYfdd11vznhnLW3v6PITa6P7bEmcOPzC587C
gGHfu+96eXp2om2eyZbkD/aeAM/07OV3ljO5njfZXubNrbi/syTJxDUZkIvf
L3Z1PR7Y2gb84DkwvPUq6tu+s61L31pB3IJnyquzi80lbb5PfXhZ/eVGz5+v
2TyX/m59iN9unzge8Fscq56t61gZGHafrcG0tqkf1umtuT7twW/041nqpyPt
4m+Ud3975DfOojNjHeO1jd3gUD04kj8zLtF2Zx/jDWM6+R/XeMI6QPJX1nXv
t3zraf19btvTdrb97Vf7WzlUPpVb5Xkt58m/eqm+qsfqt3ovHoqT4qe4Kt6K
w+KzuC2ei/Piv3ZRe6kd1b5qd7XH2mntt3Zdey8PlB/KG+WT8sw1/4yXylfl
sfJbea98WJ4sf5ZXy7fl4fJzebt8Xp4v/9cv1F/Uj9S/1O/UH9VP1X/Vr9Xf
kXP39sIv2zvP5/3y452Jcqbnewo/4Dgv9um7lT7oaKe2+Jz7Nd7+8F6MnU16
vhfjXLOqnTvT5vJexKPcmQc++36eg/OBdxuvw/jWjuzsYvmbnePBVpZ7Yceu
xRyLM+nOffMry6HjFTrfGbows/Pme27S1oZu3+vyFJsLnN/cviLXW7+8eWgy
VmfPFt46050nDC9bK9OzFndmozboN4xuXfvO4liu0j127nn6x953DuTuw6TY
THyNl+hdzAbb5Mbe8AHZas/2iKlffeSuPrieLxOPK6O/+M191+67JoNxI13C
n3hS/a49ixxwj5yePvrt9jho53Kh7G+5R9xsXkEfV6e4VOwPv8por/7gF23R
TtzEj/i3vvAXcKJtymvn9uhpg2s24tn6oozvyMRf7YCxjePInp/hs+hYmfN9
8I8O2zKvRw/u7Wxkvk/53m/51tP6+9y2p+1s+9uv9rdyqHwqt8qzcq78q5fq
q3qsfqv34qE4KX6Kq+KtOCw+i9viuTgv/msXtZdrO5p91e5qj7XT2m/tuvZe
Hig/lDfKJ+WZ8k95qXxVHiu/lffKh+XJ8md5tXxbHi4/l7fL5+X58n/9Qv1F
/Uj9S/1O/VH9VP1X/Vr9HX3Amhhyc+7eBSKe0if2adzovFb5VGPM8z1QLzz4
uPNdF6/wjOP7vctp+zsua3Ne5BM317m1sZsT3fs+zI3COHxuv8zG1Ht/ozPJ
Yfkbv+EbDt6gL/bk3/Qy3W1dHJsUP23/lPik72BfLLTzk3pW0s6FGMZg8nrP
TN+1sHM49/61vVNmZwXvLP3t2d26sc27u2YH+rS12xvrzT6Xv6c37fWM+Vl9
FqvBHBziEb/V//lHuodPvLdclufBCrntGg6UwS3ktnHBzlHxW3pYPo3elFl5
doFXNx7xfDG8a7+lT/1TXhv0W3nxJQ5Q1n39UmY5OvypfnM54jrx55mPe/uR
78CjME7v2gsz9p6L1/kRfC0fwn7Vqc04z7PpAO7Od6PeHWVhS9t2nx61bf7d
X+MdcsOj2sGOzhjzrce6l83lKSMvw7aMSWD5s9/4xhfdb/nW0/r73Lan7Wz7
26/2t3KofCq3yrNyrvyrl+qreqx+q/fioTgpfoqr4q04LD6L2+K5OC/+axe1
l9pR7at2V3usndZ+a9e19/JA+aG8UT4pz5R/ykvlq/JY+a28Vz4sT5Y/y6vl
2/Jw+bm8XT4vz5f/6xfqL+pH6l/qd+qP6qfqv+rX6u/ELtvDCw87v0KZza3r
q/nDy3v0jr0bnun52sKHm+c8z3R72d3e5bR301/ORz3OBDjzv+d53ef7nZ69
vMf33PfRs9DPd7E/e+yrtL7W+iJ5BZg0Dqcb+Vz8weeLQb23zRnq+upcAn0X
q+mHPtIvG9lcv/hLzttZBnAwbOy9ZMPUzufdmd/LMTT+2l+f5ea7d3/rsnou
5/5u//v2Lu2sC/y09333fH42uf2/7Gh7IMU4m4tmb3v3zPawD989A4RdbL06
myUvuN4ZTTDP5l2TozbhGHjHC7gRL8MU7JifgiuY3zuM8Irnwpjf+g4m2cT5
Xpkfe+ANN+knfmZv+kPPPruvTv3H28rgYNj0ngbX8i2u5WfwvWfpD7z73r/5
Gm3G2drMLvgSZxvL1fjd+Q75L7w712ec72A7x8NvPebTycRv2b8+avvypeQE
j7DlOWJQ7Td2Uw85bI+8MuJQ7e79lm89rb/PbXvazra//Wp/K4fKp3KrPCvn
yr96qb5eSo/KVO/FQ3FS/BRXxVtxWHwWt8VzcV781y5qL7Wj2lftrvZYO639
1q5r7+WB8kN5o3xSnin/lJfKV+Wx8lt5r3xYnix/llfLt+Xh8nN5+8V83nde
POX/+oX6i/qR+pdrvzN/VD9V/1W/Vn+nz+I+faQ//dx4Ch5hhhz8ZZPsh2/V
3+1b3LiP79WG7YN0/+newRce6d/5vuOn1/aK7J0Xl1zu0Vcf/nzvhdxc9GTr
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
3BbPxXnxX7uovdSOal+1u9pj7bT2W7uuvZcHyg/ljfJJeab8U14qX5XHym/l
vfJhebL8WV4t35aHy8/l7fJ5eb78X79Qf1E/Uv9Sv1N/VD9V/1W/Vn9nfD85
7vxeNmUMbyzJ1sz1bm5CncbTciHwBu/kL77TVhjX30vsdqzncZ/Pd39zn+d7
nl5/xAo7G5xfXw6EHKx9nVz0fftKyOdS98Xvnu+oEm8a1+8dFpvnpjt5D3kd
MZVYQUy9NQZyTeTGvsXK1qbhnBM3zzwxF+z5+nnmnM84ih2zXb+HF+XU6zfq
MvdhbmLnKO497XIvOyNiuZHlTPbO760r3Rn77u89orO11bezE/VHbodOt+d1
ZxjuTJi9S1V73BfLzfb3Wxi3X2vvTZVfF+tt7fhiYWW2V9s4ZWcDs5fF4bAi
J3LG+c/cXd4ldsRv9EvGbIhd4Fs42vkSxhD4lZ2yST7Av8nbeEj+jr8Yr8rB
ued3y437HXuQm2MjdLh3jS3nBkv0qA1yNThBbImj4Qkm6F1MrA55HmMgPmrf
8wd4H8fg4+Vr5Z9gxXPhSvv5BLh0zxiK/tiW+nq/5VtP6+9z2562s+1vv9rf
yqHyqdwqz8q58q9eqq/qsfqt3ouH4qT4Ka6Kt+Kw+Cxui+fivPivXdReakfX
9jW7qz3WTmu/tevae3mg/FDeKJ+UZ8o/5aXyVXms/FbeKx+WJ8uf5dXybXn4
ip8feLt8Xp4v/9cv1F9c+5H5l/qd+qP6qfqv+rX6O/7cHLUx5GIL9+FCGfIj
q70TbetLYQ4m2MS5p/KrDptjA7Ctr2f+9zz/7ez/y49+sTFj5MUG59qaZw85
6OM5Xn7Z8dvlf9mquIbsxA/n+thXP4yjLzHG4+3HhAs2L+6Rqx6G5Q92fgSM
yR2IAWDOtb6LG8nkjJ9/8hFbin3FlHDGppVlc+weR8k3+W7nXYnRzfeQCR4z
N6NN7om1zBvT28aH9LN3oezs275/ae803Rn3bI09+tCJe7veuffiNNdyMztL
bXj2jK3f3lkUOyfNffM+e+8F7mHPcKDdZOX3bH9zKMYuW48HG7iaLMjFWgR9
hRWct1zY+d6TVx52BMv4EQduHfUZU33aYcvb/0qf55jojQfW8OrWR7CJc93V
Rx54UcZv6Ile5XK0Aa/77bl37/kj5waP23/EXv3ePW2VN9I+baM/7fH3nF98
+XHfc+BVLM3GPJsPIS88w77OmOCNhz9ip+4vztw6z95v+dbT+vvctqftbPvb
r/a3cqh8KrfKs3Ku/KuX6qt6rH6r9+KhOCl+iqvirTgsPovb4rk4L/6v7WL2
UjuqfdXuao+109pv7br2Xh4oP5Q3yiflmfJPeal8VR4rv5X3yoflyfJnebV8
Wx4uP5e3y+fl+fJ//UL9Rf1I/Uv9Tv1R/VT9V/1a/Z3+kbnr7dmZfyST7TEk
d/bgWTu7iZzcJ7fzHUIvHHGp+fb5unNO81UPZ3eTQ98btfWxl7NIjzWx5LNr
ZXY2DjnICS9evcQNd5fc2/ZMPj7PK3/Fw7y5XBBc4AnrpsSH2i7ukr/QZ7mR
rQuHR3GX/oonfY97lDfvoP/iJXLbfJkYQ17KGJtuyNxzYdecCvzBkHwUm18e
2/2tE2E7bBtGd54t/YhX2RSb3jy7di+Xyt43Z7H3H3WPkt/NfpcjWjzseucS
b9248jhha+K2RnD7qtS9s4PHP3BHtjtnCnfs/JDttRVnsnHYg0U5HOs7jGPI
Ax/iyksM9LCXiH6NbXxHdniVXPE1HmD36oH18yzBDzw4eecNGk+IXc89NJ9z
d86Lv+2YD9l7Wzx/76/2b9id7V5ycwdm+Qzfn2PJ1z+s8aA/dZhXk9uDTxyA
x4yTcNF4SFvxL9nwa3jM+G/76He/5VtP6+9z2562s+1vv9rfyqHyqdxeLM+n
cq78q5fqq3qsfqv34qE4KX6Kq+KtOCw+i9viuTgv/msXtZfaUe2rdld7rJ3W
fmvXtffywDU/jDfKJ+WZ8k95qXxVHiu/lffKh+XJ8md5tXxbHi4/l7fL5+X5
a/6fX6i/qB+pf6nfqT+qn6r/ql+79nfs0PXOKVKGnlYGBsQmfCh9G2PuDGHP
kqOBJ7Z77lF98xEvsJGdcTo5bJ3XzkrdWXCTg+tLHvQRGe7dimyeLJQ71x6d
ay7OufjzTDpy2xneZLS89GWN7hG3yCGZz9C+5UvIxRoncpF7gBlzMPouXiMf
+JGn39gZ3uVnYI+c3BOTsVW4wWvidzryl26M2ccVMCVPIdaXV6fbc4x0xkLy
1vRAd+I3NrN39u29Y+xs51ksf7L3QdCl8mJYOXG2vPe5yQWpD1bExurb/XGF
8ltDJ480PlFenXtXzuJq5dm436uXHWmH3yu78xjJAWbFqbgOz8Gc8ZC+ks/W
AeJHOR5zR+Y6Zg/ktRiZvMkQh6hzazJwM8xc9uHeDQ9+L57eOsnl64xjzr2s
r3zY73OZo3/Qj3r9fnObcKhe3K6N+GvrHl37yy+Jfc93unzJ8Vy611ff8zO4
TD+3B3b3W771tP4+t+1pO9v+9qv9rRwqn8qt8nyxnJ/Kv3qpvqrH6rd6Lx6K
k+KnuCreisPis7gtnq9x/lJ2UXupHdW+ane1x9pp7bd2XXsvD5Qfyhvlk/JM
+ae8VL4qj5Xfynvlw/Jk+bO8Wr4tD5efy9vl8/J8+b9+of6ifqT+pX6n/qh+
qv6rfq3+bucwuE8GsLMzheBS3CHOIRvPggWxA/zCB33QjZjCc9RjLMoeloMW
D/D54gR9PMfGH3DYw3zWOTf6/INMyIdMzvU1x1ncd5OReFi5M8Y84/i9H+q0
8Wcv7/l99pJffW62/Oiyf+Pyvqefc3fOjbz+sThIf8nU/hfYhhvrgdkEOcCJ
PUbkJraTOycTsQYZiGN3jgL5+46cYHKxnBjOnDWeg/3t21o8v/V2Z3z92iPf
BafaRk/iNza19T+zeTywvM/eKcr+dyYp257tsmX93d6e2TdMqE9MTbf07rfy
P+WQPWfn+atXnM7uPM99HLVz/80vLIZWj+fszBJcB2/WtZG9+A4/bG6LTOwF
Ikc5MzIRD2/vLL4gO3JSjp+AJzzOd2yvxnj/nK8484G+G/9bH7B5KM9fzHvO
wb/6yC3yD9pjXOZZw9Xye+f49ZXHekd8phwuW96UL4BXfbvkcY7cn2efuclX
vOh+y7ee1t/ntj1tZ9vffrW/lUPlU7lVnpVz5V+9VF/VY/VbvRcPxUnxU1wV
b8Vh8VncFs/FefFfu6i91I5qX7W72mPttPZbu669lweu+WG8UT4pz5R/ykvl
q/JY+a28Vz4sT5Y/y6vl2/LwNT+Pt8vn5fnyf/1C/UX9SP1L/U79Uf1U/Vf9
Wv3dxoN7T6i4wHP23kz3xTmudwYRzMp7iNHEstpkLO6Z4kNxmzjOd2yPPbBb
9r21zmS4dyOSz2WM+Hjxwvyga3tO/PbpfOorHtbQLkbd2tTNw6p/57Kecz+v
f9ibKf4S31zW7R66Fpueezk/8LG+kK05DvESmbKL7/veX/bwvsjtSWHHZKS/
MC4nLdYjK3I0LldGnO2ztf3yHLBNB7hka3K0Qx/ozXfiMuvD9i5s89Swuz2G
9LE5jsW3y+24v9xO3y04v+YaV6jXX/3e+8DZLGwoA1/ub00eW99vXS+Gdu3Z
eGTvJxOXmfN3XzvE88sfLT4+z6r6yiP3IjdGZtuv4D7ZyoVt/EwueJm+jTHw
BxmS1XIs5MiXnO+qfuXhT8612qddwhkO4h/4Cevq9hvld8Yff4GzYQn3szP2
B+vq2zn3F1w+epr/+6oDg4tv2Ahfw4e45gNg11995vP4i95v+dbT+vvctqft
bPvbr/a3cqh8KrfKs3Ku/KuX6qt6vNbv9F48FCfFT3FVvF3jcPgsbq/xPJwX
/7WL2kvtqPZVu6s91k5rv7Xr2nt5oPxQ3iiflGfKP+Wl8lV5rPxW3isflifL
n+XV8m15uPxc3i6fX/P8+L9+of6ifqT+pX6n/qh+qv6rfu3a39ENudzGg7fx
4G08eBsP3saDt/Hg+/N48DY/eJsfvM0P3uYHb/ODt/nB9+f5wdt60dt60dt6
0dt60dt60dt60ffn9aK3/YO3/YO3/YO3/YO3/YO3/YPvz/sHb+fJ3M6TuZ0n
cztP5naezO08mffn82Ru54vezhe9nS96O1/0dr7o7XzR9+fzRW/vm7i9b+L2
vonb+yZu75u4vW/i/fl9E7f3D97eP3h7/+Dt/YO39w/e3j/4/vz+wdv76G/v
o7+9j/72Pvrb++hv76N/f34fPVkYR7M1+hMLivWWV5ITETNqg/zH9ndog7Ho
9tAuj6tvy4Xp7+Y8+Xpltz72PDvgzUc/n8l/ciXiSbEI2d5j/Yh3YJHcyXbx
yfZemQs2ttc/Y/lzzfePfNijy37ZHBsUJ+EXuvre7/mlB1bkG+hPfAUnMAVn
X/e1H37gzHeu4bl+T/n99ZmP8wwxou+UX2znL3zuL1vYvAMbXR5lcxPusWk2
53prXRaXepbvxDtiRc9gd9q7efnNb4uD1W9OBQ+xla0VZ6PkJVe+9Xgwg1dd
k6M24Qzr1+WfzD/Jt8m/wY78mVwJXmMb6sTFngtjfus7HAp7PsrDG07VT7ks
8Zn+0LPP7qtT/9mqMngaNnH5OR/wluN668E9S3/Eu773b3jXZuMBbca/bHh+
xO/Yks/GVmJkbT9915ccvmbrPLfGQP1kTU7wCFueg7u1ny2qhxzIdXk84zbt
7v2Wbz2tv89te9rOtr/9an8rh8qncqs8K+fKv3qpvl5Kj8pU78VDcVL8FFfF
W3FYfBa3xXNxXvzXLmovtaPaV+2u9lg7rf3Wrmvv5YHyQ3mjfFKeKf+Ul8pX
5bHyW3mvfFieLH+WV8u35eHyc3n7xXz+9L/yf/1C/UX9SP3Ltd+ZP6qfqv+q
X6u/02f5X31UBrbgHib1mV0sf6Lv1rJu/OoZ5/rYc9+RdvjenCYfP3+tD+KA
lRcLbG/YxrRnvv888+kcOz//SBy3OW9j7cVn8L3zFOCY3bN5+NXnjWfZGczL
WdCJOGe4FsvSv/E7jMCGeGm5BliHDZh0T/4dxoY5mBm2fPxm/4ZNGB5mYd21
32+9mL9sxl8ftsEe/GVHrrd+m836t/GB+FEZ19qlTnrT3u3dXS4HB8AkW8QT
fqv/YmD92r4qePC9PInn4aStPXANB8oYE5CbZ7ARXLP9p/Sgn/It9KbMyouv
rVFjU9uzg8dc+y196p/y2qDfysOoOFpZ9/VLGW3yLNytfnlCXCyHqJwcIZ7H
ZbiR3rUXZoxTdpYN3OMjvK1ObcbPnk0HcIf3yUxZ2NK23adHbWNX5OAv30Ju
+Fg72JFr+NRHMtAOZS57zY85F1jGI73f8q2n9fe5bU/b2fa3X+1v5VD5VG6V
Z+Vc+Vcv1Vf1WP1W78VDcVL8FFfFW3FYfBa3xXNxXvzXLmovtaPaV+2u9lg7
rf3Wrmvv5YHyQ3mjfFKeKf+Ul8pX5bHyW3mvfFieLH+WV8u35eHyc3m7fF6e
L//XL9Rf1I/Uv9Tv1B/VT9V/1a/V322fBT8opmFDsA4jYk85Bz6ez9XG7TU6
58LP/Uf8rs85p/f2y3evP9b/tC/q4PeNbc99IMc5MUc5MlAmuY27jfthcLEV
fLILGJ8ts199g5vtuSV3NiLHQl/TnTphSmxG/8trw8nWdfqtvzABc+IqmBmu
fNdxYHMWruF4vm/2oE5cMD/le/bgr3+Lw7YmZvMO6mGTy4/o98aorpdv2d6l
rQn3PP2bv6PX3WeLuE9+CF7xqXWJ8EluMA/TZLs4XPnx0jnO+AkHt5C7/rAR
ZfQX1t137b5rMsAf8xf4lC2o37VnjT/ZlT76Ld7TV+3UNmVglY3BMJ4Wk+rj
6sQT1kbArzLaqz/ieG3RTryHV/1bX9g6nGib8tpJH77XBtc40rP1RRnfkYm/
2gFjxm4bx/Ej5lXoWJnL+SGHbclJ0oN75x7GVxx2uX30u9/yraf197ltT9vZ
9rdf7W/lUPlUbpVn5Vz5Vy/VV/VY/VbvxUNxUvwUV8VbcVh8FrfFc3Fe/Ncu
ai/XdjT7qt3VHmuntd/ade29PFB+KG+UT8oz5Z/yUvmqPFZ+K++VD8uT5c/y
avm2PFx+Lm+Xz8vz5f/6hfqL+pH6l/qd+qP6qfqv+rX6u+VF5WXgTlynj9u3
bD6bzz33SL5w+OXzzNRnD7+sncan59kxrz78uvaec6IvO9q2c1m1aeuCznaf
+0r0c/sxPVe+Ra5GfGKel77hAybhW36GXYs/jb+3JorexWjK0B1ss0N9VI7+
6F5uXH5AzLRYaHn2+bX9u7mG5SvMpfv98hZto/vwIZ5Sx9ZFwy48sz/fbx31
9hBuX61nsgt5BG3BK8ul7oxDmMNVsM3mxO/K6OfGjLvvHg4hE9dkQC5+T984
yLX5EbzANsnKGMVz2Dd71371Kaev4ip6gGl/d86M78Xw2kAX6tdO+7S0QR/U
N+7SNjEZGXk+fbnGb671d+eH+K362BcbHTeqR/mNL5SB4Y0LYFrb1I+j6U3f
tYFctYc9049nqZ+OtIu/Ud59vK3vW69PZ+x+a2bUDYfq4Uf4Jzyi7XwWfmBz
5rjm+8ylbX7Qde+3fOtp/X1u29N2tv3tV/tbOVQ+lVvleS3nyb96qb6qx+q3
ei8eipPip7gq3orD4rO4LZ6L8+K/dlF7qR3Vvmp3tcfaae23dl17Lw+UH8ob
5ZPyzDX/jJfKV+Wx8lt5r3xYnix/llfLt+Xh8nN5u3xeni//1y/UX9SP1L/U
79Qf1U/Vf9Wv1d+RszbvbEx5DuNIZe3tsdbHGPNyrtvRtp1vYz3X1m95xnlO
3gdfxqVveBjbbp2rdvrNxrQ7vzW+8BGsbc6cLjamFrPBsNhM+9k0vhCXzi7w
BnmzO/leuD7nzM/5PH11rU54UK+/cOPvcu6uYdLf5Rc231f/6Hd0Clc7kwIP
wPjO4x2GtXM43h4i38GcD7sUq6kbdraOmz2zJ/axHAubZ1/qZEP6uvOl2KBy
O4/RNc7Bb55Nju6xIXXjl50bQV7L3+AHPEO2uGWxsTGAfsujed6ut794c+La
Q1+e7bnibGsb3ZdvoUf2RV84lswWZ5IjDLArzx03khcOw7Gul8sie/fFemSn
Tnbq/tZhkLk+LafqWRtreJY66XS8Sif6rS7Pwsfj7e3Z1v6d3bS1muYayHNr
KLXHc+antp7Ldcdxfque3m/51tP6+9y2p+1s+9uv9rdyqHyu5TZ5Xst58q9e
qq/qsfqt3ouH4uQaP8NV8VYcFp/FbfFcnBf/tYvaS+2o9lW7qz3WTmu/teva
e3mg/FDeKJ+UZ8o/5aXyVXms/FbeKx+WJ8uf5dXybXm4/FzeLp+X58v/9Qv1
F/Uj9S/1O/VH9VP1X/Vr9XfwAnfn2rKPPnKd9lTyocaVO8eGX/Xs1r/zBndG
4fkejVc/nKF9OTPu+N1lL+Xh/3Y26/q/8yW0d+M0ehI7bE4apmCJPdDNMAB3
5MkG6YhN0wt9KwNvcuL0TFdbW7U1zouTlkPwO3raZ7n1zVFvfdhw6Rlb/7z9
R/4Nz37j94vPdkaE+xuDqmNn5bNN+oAn37EfOQVltx9YOfdga/P5sCcudA++
tm8Yj7henMzG4XJnrO2dMp67OFZ/3MMP22e8s2jY9HKwxic7h80zyF6bcZn6
9Yvd4xdtVh/MkxFOcq2e2Ygy+jL+VN54Rhl10K+20O9ypO7jdzqlZzgge/1V
/zh5+TecjId37VnarD3yOHQ0jvVbf5XBU5tb1/6Ns/RR2+X0cNDm8shw516R
izHd9jWwNeM19fAhbBG25wd7v+VbT+vvc9uetrPtb7/a38qh8qncKs/KufKv
Xqqv6rH6rd6Lh+Kk+CmuirfisPgsbovn4rz4r13UXmpHta/aXe2xdlr7rV3X
3ssD5Ydr3hiflGfKP9e8NL4qj5Xfynvlw/Jk+bO8Wr4tD5efy9vl8/J8+b9+
of6ifqT+pX6n/qh+qv6rfq3+jm8/39dxvrvt3Md/nomt/r3PSHt8zj2W5zhU
+e1l3Plv5xznBzyca7+/l/NRL3ngY9/jcT7E+f6jdx9rj853bP3yY33R93z3
Lzly1fII9LDxOhkb52/98c6Y3zm68AyvO88WJiZzevd383vT9+afty5r+95d
L/e+PX2LNTdvjYeUoePl5l0Pr4vD1L8zkrRzORMYYUvarfzer7YzlnDhzgyG
OddsDoew0Y7XYJF9DXu+Vx4G5xNn77hx33kO2+87CuF89oRTdvbh3mexusjf
X+3QP2VxCHtkJ+JqfdEuzyVLZdxX//b7av81B4q32TB9ijvJW3n2pn7l5dro
RhnyUWaxu2d5pvuetVzfxjib9/Fb3LUzeBdT4f6ttfa9GBgOfUfm+rV9WJtz
F0+Sq31J5vX01byKa/Jb7oXc8Af/RRcb3/V+y7ee1t/ntj1tZ9vffrW/lUPl
U7lVnpVz5V+9VF/VY/VbvRcPxUnxU1wVb8Vh8VncFs/FefFfu6i91I5qX7W7
2mPttPZbu669lwfKD+WN8kl5pvxTXipflcfKb+W98mF5svxZXi3flofLz+Xt
8nl5vvxfv1B/UT9S/3Ltd+aP6qfqv+rX6u+0wVjRXCK/uP0XfnvmYY81Og/v
RvTM+WzXnqWtxqTb/7887jnue0/2EL5qZ6Q9uuwDOfrIJva+SOts96FbcpNX
JtudJ0Su9EiHyzPQu++3tmo58Y3xF18NQ34vRlsOYWdbb0/r8vXb1+P7zR+z
JfV5xtYwy3Es7lvdO4MC5rUBlmFSuc2vyxNow+bMt26UXbFvH79ZDmfnQpHX
8i3sR5vU53fbt8Q+yUX5jZ19P9/n37M75dWjLX7vd57lvt9vD7Fr/VNGv8Yh
+ER59Wvrzl7y786bbG4F97GNrVcnx70rR3vGmXtvJl51H//hE+XHw/Stbly6
uaTlgfGW39Kb8nJodKyM8QXZLrezdXH8hD7qE79CJsv5zHcs17d5LnLiT/bu
Gxx/jt9eeXDh3vtpHMdnLbe5s2L8NVfS+y3felp/n9v2tJ1tf/vV/lYOlU/l
VnlWzpV/9VJ9Xetx+q3ei4fi5HoefLgq3orD4rO4LZ6L8+K/dlF7qR3Vvmp3
tcfaae23dl17Lw+UH8ob5ZPyTPmnvFS+Ko+V38p75cPyZPmzvFq+LQ+Xn8vb
5fPyfPm/fqH+on6k/uXa78wf1U/Vf137tfk7Zzuc70b78cf5MOd7iF84xp7n
eaivP/zmedb1q495ya1z3b7F07++/PKu6rc/vN9F/RvbLm97eXfE5T25537I
6ZROfuD7f8WDfMjPPs/3ftcveshXiyk2h7f53eUFfL+1w8bf21MzvXdO0POW
r9weoN1b3f6tntW7cenWXql/67q2jmvvmmUjsAkjMPzd7/3FRxl2sNj4fGfI
qw473fn28L9z8WFKXb6H5c2h+7eYds+bz/Jv5f1VfueR7l3Y+r413LMp1/q5
d4vuzMDxw+x/XMJ+xxmuyyF7/wwO8Uy8tbyT/vk3We+9bvS094KTiT6xicX8
W59DVlvvhyPxp3YuF8fedq0fm7unS8/cWh0cTub0sXUd2jl/ocw4nzzxnzpd
j7f1VXljK/LlK/gtz1V2fkRZOUl92foQ5Y3VzJto1zkWfNsx1lvOs/dbvvW0
/j637Wk72/72q/2tHCqfyq3yrJwr/+ql+qoeq9/qvXgoToqf4qp4Kw6Lz+K2
eC7Oi//aRe2ldlT7ura72WPttPZbu669lwfKD+WN8kl5pvxTXipflcfKb+W9
8mF5svxZXi3flofLz+Xt8nl5vvxfv1B/UT9S/3Ltd+aP6qfqv+rX6u92Duv5
/cvvzvdjvu2hfPOuPRt8vmzjvL03au+ZWjuV2fV5luizlzWlP+3YT7l3Qzh/
gKzsN/k7P/Arn3zf9/6yQ4/OdTV+3vlB1jC5nny7h2+f6WA63zkN3dO+saG6
puON3+lr70SRG/DZWYNsYu8aW+y4XAJMab+y8O33bHbr+cXt1gHuPB/nT8EN
nhH3i512RuDet7S9vK4XIy63urzKcra79pdt7VxD1z4rA29rr+vt/9Ufv2GP
e482W98zF/s2F+R7nIbv2CO7d18ZnIHHPHexsuf7u/jZb8X8nu3avM/WnpOL
a9wgx6SejR3Ugy+3JmdzVfrVd7DK6eETbfH99mLoh7EKeW1dt/6Nq3fu1vZP
bT5razb4AvjZc+eP6FGZ+SMy2do5XLw98urnZ8z9bU2LvUu93/Ktp/X3uW1P
29n2t1/tb+VQ+VRulWflXPlXL9VX9Vj9Vu/FQ3FS/BRXxVtxWHwWt9d4Hs6L
/9pF7aV2VPt6XzZYO6391q5r7+WB8kN5o3xSnin/lJfKV+Wx8lt5r3xYnix/
llfLt9d7qcfP5e3yeXm+/F+/UH9RP1L/Ur9Tf1Q/Vf9Vv1Z/d66Jef5yJuR5
jp9yxptPc5kvHGPNvS9+Z3+qZ/v6z1zr8w+52a1/vbzz4/i3M8HP9wo+98j5
9M4lMB6998VHfOBsA7KQM/6u7/yFh9zED+6TJd0p233vy41OV9PL5oh7Hlr9
nY/4yvM8Q/2bx50NwOvGVHuv2eJOevQs5bRz5yyxV3wAx34rX+XsRrbhnjMU
4Q2vOE9SXfgNzmFFP9wTU2kTPImRN8fNvnZmkjrn0xaLDbeb09719hftvAr3
tnd3uY3mcnGJMpur0JfNxSz/hPu2lg0vdL5i8wm+W55qe6MWr7Pbyda1fqp/
Z/lvDd7WKOgjGRuHqBOnb23D1iioY3vEln9bTk/dyiwXt/fQ4UscpH3LH/JN
8xHazqcYI5HxxjuwtPkvfe2aVfNp9p6TmXGb+Q992vkV+r93opEvPCjT+y3f
elp/n9v2tJ1tf/vV/lYOlU/lVnlWzpV/9VJ9VY/Vb/VePBQnxU9xVbwVh8Vn
cVs8F+fFf+2i9nJtR7Ov2l3tsXZa+61d197LA+WH8kb5pDxT/ikvla/KY+W3
8l75sDxZ/iyvlm/Lw+Xn8nb5vDxf/q9fqL+oH7n2L/M79Uf1U/Vf9Wv1d679
Pf/98sO3qmdl5FiXa9Wu3edPrfFZ27aGR9t6bqrvte18/875PrGdhSsXJL7t
GFmMRJc+runGeerk6t9yy3SwcX7P5tv4fPpaftzfxUPqk6OGQfX50A8bgy1Y
EUNt7kB5ZdWrrBjP9zujyVo49r9cFizCKgx7trV7zuDTVtfmYrUH1zmD3/Nc
0zv8s1fzKfIh+r39+9pAJsu/azPe2BrYndG29T+zg2FzcRxZscGuf23+eGck
6icuwWH4cFyi33se3pidbP5de8YFG5su70Rui733rhnP2X4Tf8X0ytDH1g65
ry17l+nmN92b7zOGwOd+h/+21gLfjodx6uZV3TNHtrmn7Tsb/++drsYpnrt3
GGwujI42j7Zzdaw5E89rG46y1lN7+SjrUvRj6162zpOP07ad8dv7Ld96Wn+f
2/Zct7PtX7/a38qh8qncKs/KufKvXqqv6rH6rd6Lh+Kk+CmuirfisPgsbovn
4rz4r13UXmpHta/aXe2xdlr7vbbr2Xt5oPxQ3iiflGfKP+Wl8lV5rPxW3isf
lifLn+XV8m15uPxc3i6fl+fL//UL9Rf1I/Uv9Tv1R/VTL+W/tp9i/m7v3Dzf
f/j0t2eu9NnM5T37sMd/fnb7Fn1n/nHttNdj85Jb33rZG/nocsbqI/MQbN/H
2HhyIDuyESPQg7jBWHqx2N6LsrldOIS36URsA7c+ZE0fYhB6MPbeflHfs288
wLa3LkuddCWGEc+IocXU1iV4j4gxuzOI5aucledaHC2P5Xxi7Tt94xvu/F48
D7fqhE/X2mA+53Ke8THn45qdivHtaenaOfLQdvjZHlfy2VlJPf/N9ebId3b+
zlFa3kO5+a1xx9aLbf/GYsid1d91a9tv1HMQr98PtfLzg+OyzUng7/GI653F
sTVyO/9f+/b+VG0yn2XMggdwL/ngs+1l7h6uvUN1e8HUIW+mzvHw5qfwx/J4
OxtkeUI6Vca1+xtzkc/2iW9N5vba8zMwoz/m9cTt5Lpr2JCrVIYM3efjer/l
W0/r73Pbnrbzuv3rV/tbOVQ+lVvlWTlX/tVL9VU9Vr/V+zUehpPip7gq3orD
4rO4LZ6L8+K/dlF7qR3Vvt6XDdZOa7+169p7eaD8UN4on5Rnyj/lpfJVeaz8
Vt4rH5Yny5/l1fJtebj8XN4un5fny//1C/UX9SP1L/U79Uf1U+/Ll9XfqXPv
tDjflfuRD+tztlbnPP/m2Yfzsbfff2tQ/abtcX/zmnvX4rmG1V7JZ45xrthW
TsXHeHhyIN/FCXv/5M6KXUwiFtm7t+CVTP2lX7ryl+7gjszZEhumH3bJpv2F
BXr0t2uJrduDTbHWOUf7qsOHG69vvREcOw/BHhT14jA41Bb5K+cVqFc8L8bT
bjG789u1231nHHue9XqeiResiZAbMF/k7B/v/IJPMZ9nLpcgt669ngejWyck
fuu5Sep3Lcbr/tid+7acRuNhZZZD3vniiwN3bmrnEHaG0+LhvT+774raPP7m
XvDgxqu4a3MXfuf7zf34zdas06N7rsfP2ze9dezj8J1hhfc2x4TztpYeJ/rt
5q1wtTpxEx8z37Hc4PYUaKuy81/GFzhGezdP5znu4TL923oSstz6SXKAfX6N
37MHAqf1fsu3ntbf57Y9bWfbf92v9bdyqHwqt8qzcq78q5fqq3qsfqv34qE4
KX6Kq+KtOCw+i9viuTgv/msXtZfaUe2rdld7rJ3WfmvXtffyQPmhvFE+Kc+U
f8pL5avyWPmtvFc+LE+WP8ur5dvycPm5vF0+L8+X/+sX6i/qR+pfrv3O/FH9
VP1X/Vr93c6u2Tvi++7gjR9dn3vin75HWHv2vqflUTdWvbyD55i7XO52ftBH
v+R06N2n4+LGCWTls3VG8CWmEI9s/ZF/wxvduUdH7olL2enWMfuYt1C3etTv
nngWHp2ZvnWzPQud/C7j78diLue1kj1ecH4/PLMZcZjz1D1bzOYdbtq3WA4G
cBL8wQp9w6trMZCz0GHtPM/4Dcd73+DdfLHnqtveluVZ1OdZ5pzJDfbIiP2x
UzLybzZOpsrujKW9iwwed2bE3nM924fhrbHuO9LGPa4XR24d7uYR6hP1aTnr
jg3Z1M5axHU7n3/7E/HtxgvsEC+LT7e+wbNw6d6FajyxPR2L+ZXZHK9nK4Of
t+YQZ2wOi71rw95r7jlbG7l8484b4Te2B9xcmXUL7m+fHXnwL8vNbn2m+jde
82/vZ8BdbGDv3Ov9lm89rb/PvW7P2tn2t1/tb+VQ+VRulWflXPlXL9VX9Vj9
Vu/FQ3FS/BRXxVtxeI3P4bZ4Ls6L/9pF7aV2VPuq3dUeX2ynT+23dl17Lw+U
H8ob5ZPyTPmnvFS+Ko+9+F0PT3mvfHjNk+PP8mr5tjxcfi5vl8/L8+X/+oX6
i/qR+pf6nfqj+qn6r/q163GfMuIF+/r3Dqj5080dKrfvzj345xlue6+wXOva
sPdlbk/HzhO9vKv16BssOI/cxzrayWHriXzgkYzEVOKUlYExMYTxNFtbHpuO
2Nrefwm7sOi3K49TxNfiarHC+a6PZx/29mvjKeOXHfOZ3t+hX8qK5eQcjL/P
/M47j3Pq2AI8O7vOs+jSWa7aD6uwrZ3n+4W+8CivHd7TDee7z07lxd0Xr3vX
FzxbT+/c2BPLH3TsJ8OV+k0e+uVZcEiW6l9Ofu8Ddr05QhjFAZvzXP5jcx87
R2JzLeS48+O65tYzly/a3tm+c2O5lcXi2++0s/R9tudo8z99Xxs+3PtPlV28
TseuV+Zdl7N7l+PamsCtUZCH0kbP2Vk3OHtnS7pnvm3nhOxdUTtT0rPxw9Ze
GjPtXBT+wnycvuIgvmfvXduZ8Gxazst8G27zrlN1ide9e1074AWWer/lW0/r
73Pbnraz7W+/2t/KofKp3CrPazlP/tXLtb6mx+q3ei8eipPip7gq3orD4rO4
LZ6L8+L/2i5mL7Wj2lftrvZYO6391q5r7+WB8kN5o3xSnin/lJfKV+Wx8lt5
r3xYnix/llfLt+Xh8nN5u3xeni//1y/UX9SP1L9c+535o/qp+q/6tfo784rG
g/yieUa/UU/3Hqpbua0L3Vk25Hu+c+n5wxfv3NCtydk+ju1V3PqfjUO1U7tg
eDHexsibTyYn18sr+7t3MS93MXsRY9DB/u4sg717zWfv+9CGyx7Ly3shn897
n152t9hAPKWNw4b5av0+97V+1fEObTgUj8H38OmZbOo8K/p4b+MDnl3LdVgX
7bfnu9HedKyX8A4Q+ZBz/dw76OzufPf4z7ycs/dpx3kHZLvz6HEHW+xaIzZK
fvBJHmQ3O4fVrecSr5HR4uFxyfYALb+BR5bXGHcov/vLLW/t9HJS26u7MeXW
iOOnvVNmMXvPRdzav509t/i/vLr8WLlX/dvjvLM0cLj7W8eorJh35xLsvA/2
7D4fsbktPmX1GHfpG/+Bz1zLBW6d5Paey03Ka9oLbzzmrCYxP17x114lz7Ou
wfvb+DGx+/mu9qf3W771tP4+t+1pO9v+9qv9rRwqn8rtWp6T80v5Pnqpvq71
OP1W78VDcXKNn+GqeCsOXwqf13guzov/2kXtpXZU+6rd1R5rp7Xf2nXtvTxQ
fihvlE/KM+Wf8lL5qjxWfivvlQ/Lk+XP8mr5tjxcfi5vl8/L8+X/+oX6i/qR
+pf6nfqj+qn6r/q1+ru905CPVM/e/WScvPNrxDIZN95tX78y2+e/PYlP38n0
+od37J7vgXrVw75GctavM9/7zGNzF8b+cDAeZ990vfkCscbmYOUgYILsxBbK
D+9sCxbEYfLuYmlyXB7gchbPkXPeea3ba3meP/D8o523I5f+sa95zd3e/wGb
8Esew5scxeIx/HXtBzselNPAdXhAbl+8B+fKy9Xrs/jwfMf2o2PfmPrhWc6D
vL0Leu8rNlfgM7ntsxy+OGtnLu191Ju7WD6fjW99l+8XC/u3Nm8+fLH31oZN
3ou9xznbP9T3hm6N9bty5m/fWdX1Z5tX33zQOHP7pPb+tc3Nsz33x6tbe08/
yuF2fgNHLwe4PB5/4Leec+aTfuqD7xj/G2ft/QB8AVluv4E65Q7p1d9zL+Bb
7853fb358GVnPvQdx1zMuW71nUf8z884Q9R4Twx/ns3/thfdb/nW0/r73Lan
7Wz726/2t3KofCq3yrNyrvyv9TJ9VY/Vb/VePBQnxU9xVbwVh8VncVs8F+fF
f+2i9lI7qn3V7mqPtdPab+269l4eKD+UN8on135w/FNeKl+Vx8pv5b3yYXmy
/FleLd+Wh8vP5e3yeXm+/F+/UH9RP1L/Ur9Tf1Q/Vf9Vv1Z/t3cabs/guf/i
g4/6t/9QDnk5WHHNOaZ82/HOX23wG/709JNvevB94gz9cm9ynkzZLju2lomt
0Tv90fve47j9U+Ip2Da/ce4x/ogjN7NYXdxsra1/WyP1Ca973ZGLUPc55n31
3alX+xZ/+N3pA1/9Ifq7d36c59R95FFGPn154/v45W5n98AVPJMN7lrcBbdw
KB5jQ/Dp+XCiveJ4dgTPy3uI68R+bO18V+pbjnExDoQz9eO98x3OH3jEl8bx
5o3ggI7Ei+bDzTWoB1fgF5j0EXOZw178pZ1s2Nw2fiDHzSFuHdjmuLcHVh/E
yFvzNd+3650fsfI9z2D5q/HOPuO3vfN46xfGiVsD37XpWye/PNpya4vBd2Yj
LLHLrevA59Z1qHtnb23th1zh1vbjdu1SBrbIgr3yAZ6lPr5Ifdu3da59+dpj
PQJs4DNxt3yks0JxF9+jzPkO+B97eV/E8wdf4UC8wvfJofFlvd/yraf197lt
T9vZ9rdf7W/lUPlUbpXntZwn/+ql+qoeq99rvQ8Pxck1dva3eCsOi8/itngu
zov/2kXtpXZU+6rd1R5rp7Xf2nXtvTxQfihvlE/KM+Wf8lL5qjxWfivvlQ/L
k+XP8mr5tjxcfi5vl8/L8+X/+oX6i/qR+pf6nfqj+qn6r/q1+jty2NpRdfKJ
PZPtctbp3Tn3eOw/vOxDfOGo0/2dn7ZzcDzzXFPz3LEmZ3053zf1Yy7nu73y
0KN1cvToWjwjXiQb2CA3MrO+is3BjGu26Fq8xMbkFmAGn+ABuj/Ppzjz8PJH
y0vQ6WW+9UPOcfS5P+U8W+A805V8znMIXv1IXHfBx+PFdeKLc47/xDPbsZcH
PtkWnc4Pnu/qeeuBZ7gkg62LXoxnT5A4kD3hQ7mvc3/dVx/2ZO2U9WJkb3xw
H4sf5ylc5g4PWbMD7VG/3IN8jVwE+xW3imPVz6a3B9O1eeqdFbh3UW9dnPZr
3/Yr7+zC8Y3y+qWs6+1X2Wf7cLuPc+962diw5zUpu325Pdscx+Du5du21mJc
bGxibLHzJHf2iHp2lpbrneexc2DhaDy/daR45Dzn8FUPYyVzaHRnTx/fAmOw
Z/7Ofvdz3++POHyT++fZ+ud5ocZP8AwDnid/RU/abY2f+R0+Cc7prvdbvvW0
/j637fl/2rtfnU2yKorDCIJCILkGFEGR0N0ZTQjhAriIEQjkCILmCghyxJAg
EROCIIRMCCEIBAI5JCgECsU8Ve/6+jdvphMk4ohJ19RXb9U5e6+91j7/W86W
v/VqfWuH2qd2qz1r59q/fqm/6sf6t34vHoqT4qe4KtaKw+KzuC2ei/Piv3HR
eGkcNb4ad43Hxmnjt3HdeC8PlB/KG+WT8kz5p7xUviqPld/Ke+XD8mT5s7xa
vi0Pl5/L2+Xz8nz5v7pQvaiOVF+qO5/Xo7c6Vf2qrlXv7nN6r/MiXt/9yF++
8oN9nz7a62b9qN7pfcp197t+8Hj/PR/nXp/44WXXe738jx5rOr72+h5X+Ovl
d5jjJzkAPMpbjZHCJ5+yrTgSu2wrhtjwlx99dOEHV6zfYHOu5JRyabYVn/hB
+x0n+LscA7+whfKql/a3csoHXBs73pkdbALLOwNr87PkU/o3YND/iyPf1V8x
fOqvWP4GN8vrhuflfvCv7nJ6sasu8A8/fic3kk+p62f5qHJca4LMe5J/bo91
7YHtM4vLcJv2weZi6atgt63LlAPLdbdO1r9ifmMl/jbO8fyu8cb2oscNm2uH
W7a+ZXOlxzvjufZ7bc3L/uuarZ0J031/Xe/e5sy73rh9r7eHhuvtIbm5+a7V
YXuUbA2JcS7xu7UGxszMSbEHvnUI93nyH1/nxfMXHOvPWYzLfzfGp70Eq/wj
9tfPSctwhXh3f3rn+t4n+4+fu//8/N7T9/e7LU/L2fK3Xq1v7VD71G6157Od
Z//6pf569uP+Vr8XD8VJ8VNcFW/FYfFZ3BbPxXnx37hovDSOGl+Nu8Zj47Tx
27huvJcHyg/PvDE+Kc+Uf8pL5avyWPmtvFc+LE+WP8ur5dvycPm5vF0+L8+X
/6sL1YvqSPWlulM9qk5Vv6pr1Tt2WL+rs5m2Pym7bf8a7Xm/9be36/H/9Xp7
tt17ztznKinnAxdXm5qv7jzpB9e+YfIZdjRnVjxqV8OD9rQ+bTHgWr/2jcN/
X3mF+67lVbvmY/ZnT8/DEl94D/t7xv37LLE/XX1Hci7lgQ1/29oadnisV3m1
fXjUZXsUuOe3/C+PwFFyFv0d8CBv942tdTUGwNf3+W9/uOoCz7AKz8vxPO+Z
zQfbeAHu8A55o7nwsCOO/N2/4kvur79b+cTg5gTLKfWDqCPOEnvWNhuvFs/i
XGxvjRP7u8cnG/vGCcq2fQg253njiZtPgL/GL+3LWg6/tYcdJ+z95fw7nxhX
jiddb457949zvXGerV3enIzNl9/Yk2dvW/7wZU9093fWDb0Q5/qucBu/7PxQ
axFgC36sWeYPGsTX+Md9GFufpxh3zd7u8+/0y33XsC1ft+7BfXjQ/6hdIJ/v
/T7f9/T9/W7L81zOlb/1an1rh9rn2W6zZ+1c+9cvz/Ok5sf6t35/3rPri/BT
XBVvxWHxWdwWz8V58d+4aLw0jhpfjbvGY+O08du4bryXB8oP5Y3ySXmm/FNe
Kl+Vx8pv5b3yYXmy/FleLd+Wh8vP5e1nPh/Pl/+rC9WL6kj1pbpTPapOVb+q
a9W7zZnZGYX3momfvTxPT7Wr77UW93kXd/vxF9c3H7nE63vv0i+9rDf3G++C
b3Wk6/oUxKN8BQbFnxyAPT3DVmKFbTcP896b/1cvfQjTQXmyXEJc+K3r5SR+
Kw7dhzd57z8+/fTCxuai69PGH/DMTsaR4WPnerDr236Duz/6XTroW74rny8+
lY0f5W/qcp/F/fuX+WDKsfWwcvXGhVyc/+VayizelBXed0YWTOmvEGu+J+/R
vmdTeQ9f+b28FC60C+T+cCZX9m02k/P6b/sd8Q1f+bv6dG8lf9tcu66R6jjg
1iSPr8Zpm/PQPdzGcdvTY2t6t35s+X7HhTy/s0m9Y+M9sLb57jh6Yzebs7jz
b8ybZAd239nZ95jc917aR9unxTP6DuWo2yMUhuWr9As++VEf0bRJW2h4wHvs
DfM0yHfWF7oxwWpf7/f5vqfv73dbnpaz5W+9Wt/aofap3WrP2rn2r1/qr/qx
/q3fi4fipPjpveKtOCw+i9viuTgv/hsXjZfGUeOrcdd4bJw2fhvXjffyQPmh
vFE+Kc+Uf96lg+Wx8tsT773wYXmy/FleLd+Wh8vP5e3yeXm+/F9dqF5UR6ov
1Z3qUXWq+lVdq97JX/Sn+t3GP7U15QHubf3FzjRkS89sHWPb14/5t9+59zH8
y5sHdh7nl3765h5rvu1wrzH5z1Vfdlv7Wr7BPrMbG2pTL69Yf/IXtR/Fj/a4
a79lQ7+V23qP7977GP7teqe1Vdrc1tj42+bdPubZXnVhQ+1pOQYMynHUFTfo
G99eEBunhm145i9lMwcKhpUNz8hz4KftQe91Hx7kVOLi3nfs71feeJ91/esL
o2ISNpVrOSdfsas+ffeVSz+CmH2s2bjqZQz/7ht5/7Uy6q/Q1pDz4gG+Mv6/
NT7bpwBvyKO3B+/2U9KHsX01Np96c/C+qN3X/XjZZme+bM8P9d/chZ1X1n0K
N6407t3ZMRv74YftC7C9vrZHtHEN7R3cgSvw//PZr36z/Vu0hbSb2FjbCpbw
187Dhe/1Z8rPcQUc4iI6xU+e0Y6afrV9pwyw6hnvFwvjsd3v831P39/vtjwt
Z8vferW+tUPtU7vVnrVz7V+/1F/1Y/1bvxcPxUnxU1wVb8Vh8VncFs/FefHf
uGi8NI4aX427xmPjtPHbuG68lwfKD+WN8kl5pvxTXipflcfKb+W98mF5svxZ
Xi3floef+Xm8XT4vz5f/qwvVi+pI9aW6Uz2qTlW/qmvVO5o4HdQ2ZKudYXGv
e7j36/Zs+1R35oU29PbNlv/Ik7YmVK6yfWK1hed3OQCssuF0xH3PyBNc6x9Y
O5rdxIecefONt4/Q8gr2l1u6v/b4/MX+9x6Nv7vyav0X8jOxDmvKA/vmed2a
8uM393lTH7z6LJ7e3Ovs33u1danyvfWTK78y8DscqqNxXnVXfr+Rzyszmyyv
k+OtTxjHuGY35ed3vOcdysbv+mLEnviS48kzYUpfBb/5vmv+9A4xByNsqT6P
vYhexu7Vf304+tZwG77bHHB9QzsrzH/ibnPGxzlbX9z97jYvZuud3dvchK5P
3Pz2zfmDAc9vrGfXHWv0DvbaeM/aHts7En+bEyKXVRf1Mh9kZyv4f7bEtzt/
yPXOZfCMsRw+oy/W7LGfMTP3tKdcr48RBvgDZ/r+rj3T/FyM8ztukXPDobLA
8/96v+/p+/vdlqflbPlbr9a3dqh9arfas3au/euX+qt+rH/r9+KhOCl+iqvi
rTgsPovb4rk4L/4bF42XxlHjq3HXeGycNn4b14338kD5obxRPinPlH/KS+Wr
8lj5rbxXPixPlj/Lq+Xb8nD5ubxdPi/Pl/+rC9WL6kj1pbpTPapOVb+qa9W7
5QmPPQZe1o+4d7czr/WUrzen6DHeeO19qnzbz1Seo5xbaymfWfuI3bSp2XD7
wOpbgRvrPDfOCytssvkA7IYH1p/s+Wkf+7Bt7T88aI/PF7On7/Lj3i+/E7ty
HrmanPie6/yT69tbcyqn05fAtt6tb0QOIceWk8CA3EbeslxudlBmWMRXvssm
8AxX/Og78tXlgfA/PJh/oGzqgm/Yxpwv8cVm/AYDbKnPfPvT65fxbjEonsWT
vBYu7n3of3r9Vtk3N9m3H/vDXfnq5vttjbB8mR+NpWxewfamnz65Hl9t7eHO
l/H8xmbGj57n3/VV7Rl/gx8ctjWP48OdLbCzvvUh4mN6gZ9x2fYBw23sv71U
4E2ddnahPsedx2Q8fmfUOsNoZ0bge/HPHnJleSpN4V85vTbX5rSsD1NbTLn4
hl3X57mxvGkc/OyMAM9sfUTv9/m+p+/vd1uelrPlb71a39qh9qndas/aufav
X+qv+rH+rd+f8TCcFD/FVfFWHBafxW3xXJwX/42LxkvjqPHVuGs8Nk4bv43r
xnt5oPxQ3iiflGfKP+Wl8lV5rPxW3isflifLn+XV8u0zD4+fy9vl8/J8+b+6
UL2ojlRfqjvVo+pU9evzuvZW7+ZzOc89N/XtusXHGohXb8cCtaO/uTk5r2Bf
G5zd4JTv5CJ8yiZsBZ+wol5iBz7gSc6p/NW1tQHNf2NzeJjdYOYeu/jwxW47
y29767Gb+F4eAhs73wEHKCf8uD9NxD/jHPyhna5c+jpg3r2tsVEnuGKbj68z
Pv98zftSF+/cvjHqyy/KL8fzDmUWV767vo7uEbGxgOqgfAeucJWy+7Z3q6v8
c2PR+mvU27WxCmMaj379a4xezMp97rN97nrJJT3D/94tX1RPMaYe+iXYSt8E
DOo3wiHb4w63bN94uffWTTzz0sZaug/F9iPc3vyuu5YZTnaeDW7XzvDvzl/F
u9vnEo/tfGI+YVv85ll+Mb9B3593sal5Dt69vcV8d5wvv4VpmiG+jA+JPW0i
66Pvcbg3F96Mu8HM1vop066NpXmWr+kBDOMo9+8zBn/zslaCra3ZE0dy797v
88/v2fv73Zan5Wz5W6/Wt3aofWq32rN2rv3rl/qrfqx/6/fioTh5xs9wVbwV
h8VncVs8F+fFf+Oi8dI4anw17hqPjdPGb+O68V4eKD+UN8on5ZnyT3mpfFUe
K7+V98qH5cnyZ3m1fFseLj+Xt8vn5fnyf3WhelEdqb5Ud6pH1anqV3Wterfz
B6eLW6e/9ffu8bc+V7kEn2yPApiCCTnE2unGedWLfZRndXH92Dfnyo3cZ7ft
MctWtJ792fyBrcs+6gsbG0v1/O6zp/uzM/vAtuc94/n1Y69P2/Pbt0EZlPk+
o+uf1/ObEyY/FAswr82tD0neqH8dfmBWX4ccBjb08ysPO8hV1AVuh6vtBbF1
QFs34fnlgcrjPo7ZujC8o+/kzum+fuVH8k/jA/d8n/evNbMwos+DT9hPbLv2
vHg0LuRaH4ixn8ccoitmPf8Y+3+ZAyB+za/gm+XRcmr/bWwF7+hn2pp9vIV/
8JZrOf/6MfHTxvb4gc35eOu0d3b39i28Y/T7L/uYeFbuu3mMnvGsd+28A9jz
LD3ZWjftnO33TEPwPz6iLWtb9jx6PvcOfYT8pBzsxTd+LwbutQrfvnxnzMK7
YI/u0DV4wC/ed68V/uS67xoG3McJrtlZDPF17z8/3/fs/f1uy9NytvytV+tb
OzzbZ3arPWvn2r9+qb/qx/q3fi8eipPip7gq3orD4rO4LZ6L8+K/cdF4aRw1
vhp3jcfGaeO3cd14Lw+UH8ob5ZPyTPmnvFS+Ko+V38p75cPy5DN/jlfLt+Xh
8nN5u3xeni//Vxee9WI6Un2p7lSPqlPVr+pa9W5zRTdGuL24237kG/3knlF3
39LfQovhwN/lDB0/da384sA1rRdTyr/z9dQXHtbWlj+w5+bfike2cn85xvpC
d82GfrvzjLxzawznl+Ub7L9vDYfKBjfizvNycrmsnA2+cY6/69PABQ+tu/Jt
eNRvAkvyKHjwLflM87dpohjcWvted88Z9mHP9c+LH2VgS/mofgy5nhj0O2V0
ba96dnqM31/XYlBcs6U5YPe+uT+/YlmbgD3cFyPsJKdlJ/GLE9hA37vcGMft
/LKdfyz+xkFbg+9v+qP4ffPfzUtc/xge3V7KOAEf6l/bOQI7a4AdjaXsHLqd
KzHO3LPyX2Xx7PZG2/X2/tpZP9opeB/2+Fj+6Pu4vGes33v9v7naTbjNN4yp
wY1n+W76Mt3xDbYzNmcuCV7SP+V5GN799p1uzeC0j997//n5vmfv73dbnpaz
5W+9Wt/aofap3WrP2vnZ/vNL/VU/1r/1e/FQnBQ/xVXxVhwWn8Vt8VycF/+N
i8ZL46jx1bhrPDZOG7+N68Z7eaD8UN4on5Rnyj/lpfJVeaz8Vt4rH5Yny5/l
1fJtefhdXF0+L8+X/6sL1YvqSPWlulM9qk5Vv6pr1TttxvvM3rfrMOim3MFv
773b3rv6VbTB1f2eV/7JVQa+UHc5jDK3vcwv6j5Nh0t1VBfXcgl+2nirPIxf
XGtfr70vT6gN2UQf8sYB2dlv35Wf+O3a8t7v+bUTVza5imt5hbiTe/uturMl
zGwvCPjGB+4rm3jGN767enmPsuGlzY2BYdfN91zjpJ3BpMzsIwf3fmWQT7IT
bItZZYFtPvd917hMnRaDyqJ/ZnHNl/hg62Hlxo9++itvfOQOVw7st97DTmLX
83JG3xVHrvlBrmlsXb+E+rDz5i3gv+2bzI/7dxy4PSC7x8jWqYn9rcXemNTa
fa71rXnfzhv3XvGzfjn/0Qrv3rmwmz9qzZy/b24E3sXr1hLgYX/Hc8rBRnCv
HOZQbA2FsaKtMXTPfhvG76ZT+gHhR/+U+zSOruGirfXDUet38v31c/Z+n+97
nt+/77Y8LWfL33q1vrVD7VO71Z61c+1fv9Rf9WP9W78XD8VJ8VNcFW/FYfFZ
3BbPxXnx37hovDSOGl+Nu8Zj47Tx27huvJcHyg/ljfJJeab8U14qX5XHym/l
vfJhebL8+a7+t/Jw+bm8XT4vz5f/qwvVi+pI9aW6Uz2qTlW/qmvVu60JpIXa
qOZB6TcdlvlDnwL/8bm6wNvyAVrcdXxyrOn79Mt9OKPvrtURnl3Li1zLDdTL
M6791rfYdprYtjN7Ku/8tfXs3rk5qLOtMiwn2Xt2v2127W55kWf4gs1hZnsA
rg9hbfbtjYBDlMdv3ffd9XUXY3De/o2tFaoODtvwrK9b2ewt6d3iSAw+1uVc
4/XqJE7l+541Ro/zHra8Ytw134tx12Icr/GDnBav6WOQ03qGr3YWnuf1+eAN
3xX7yr41reqHWzYuec8t+MrL3pK4dvP2toaCvcZ7rmELntmL/Xb2IdtvX5Pn
9qBnYYUmeM4z7CT2vc98f/6S+9IKz+Bz18pEM/A+O2sH4Sq/0xd4n43z3Wuv
Te/RPjFWZn4Jrr/Hh7569RXipTtuv3VhCb+4Fvt3jv6NCzN0yje2f9r6OeGB
/fEYv/d+n+97+v5+t+VpOVv+1qv1rR1qn9qt9qyda//65bk9OD/Wv/V78VCc
PONnuCreisPis7gtnovz4r9x0XhpHDW+GneNx8Zp47dx3XgvD5Qfyhvlk/LM
M/+Ml8pX5bHyW3mvfPjMk+PP8mr5tjxcfi5vl8/L8+X/6kL1ojpSfanuVI+q
U9Wv6lr1rmczqqNvw8v61eHQNT/BhW/pO6Gz/qa+xjGn77C4HKB2YKvVffXd
+Ck/rs+Zv2arnc+1em0fnr1zOrj7ys8mco/5bvuzKac2+NbCuFYe5WTP4YHN
hz2Y9C05yfqovUfMrGyemb9g1fthzLX76//3/Nr4Wwe0eUFymI2Js6Fv6Ysy
jgB74sg3xZEYfPQrXH0yym7sXk7PxvrCzfljV7HJV8t1cSl8yV1x365xrzjA
D7hUP4Jv7bv8i+8ea1uv55UX11hv5lvu42LlMfcMR2mXGMMSm/hVWYzvsOO0
z/U0ka1drx2w8+nWjoCT7YHJztsjetfK61nvwG2u2XHjjDgYP2880m/xOf73
/M7jm/Z5n7l+61tjY7+X68v96cHOF6AZ/t3+M7AEK+wMb3zJBuvDZEPXclQa
dbfhfvu5+32+7+n7+92Wp+Vs+Vuv1rd2qH1qt2d7zs61f/1Sf9WP9W/9XjwU
J8VPcVW8FYfFZ3FbPBfnxX/jovHSOGp8Ne4aj43Txm/juvFeHig/lDfKJ888
M/4pL5WvymPlt/Je+bA8Wf4sr5Zvy8Pl5/J2+bw8X/6vLlQvqiPVl+pO9ag6
Vf2qrlXv9Jfzpzbh0cGjg0cHjw4eHTw6eHTw6ODRwaODRwePDh4dPDp4dPDo
4NHBo4NHB48OHh08Onh08Ojg0cGjg0cHjw4eHTw6eHTw6ODRwaODRwePDh4d
PDp4dPDo4NHBo4NHB48OHh08Onh08Ojg0cGjg0cHjw4eHTw6eHTw6ODRwaOD
RwePDh4dPDp4dPDo4NHBo4NHB48OHh08Onh08Ojg0cGjg0cHjw4eHTw6eHTw
6ODRwaODRwePDh4dPDp4dPDo4NHBo4NHB48OHh08Onh08Ojg0cGjg0cHjw4e
HTw6eHTw6ODRwaODRwePDh4dPDp4dPD/Xwf/C3hsMH4=
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs/Q2891t61/WdqrXRWhoptbS1OFprp1bbVK1Nm3Pve7RIKU1TijhN0drB
VkvbVFO0FWvb1+EpDCHAgCGEEOIYIISAYYAYxjCEQwhhCHE4hBggDGGAEMLz
8ChPovv9W//Pvr/3JodXXkImM5l9Xq999rp/e/3Wbz1c6/qu61rXw9/7L/wr
P+xf+pteeeWVf/UT7v/3w37kv/5P/Ogf/SP/jX/6b/WPf/FHfsY/+o98xt98
X/zX7n8+7/5H+ce+9trd7/3QO+5+6xs/9O7f/qIvuvtjf/Qz7v7At/2fr7K/
/dTP+Zy7v/Dn//zdb3r/++/+w2/6prs/+2f+tbt/95f+Q3f//ns/+e4/+IZv
uPt5X/iFd//Ou9999+99xVdc9f/khz/z7vN+1n/1+R/7o3/07vd867fevfMn
/Ree/7Zv/Ma7X/81X3P3q77yH3/+uf/Wf+X5T37nJzz/8n/3H37+Uz/n73j+
WT/xP/9S+Wd/3t/1/I/84T989we//dvvvvrXPHuurX/rZ37f5+/5Zf/D55/z
U/6Lz7X3tb/+f/78533h33397fVf+/z55//s/9rzn/7Tvs/zX/f6257/rM/9
fled9/3qT7ne++yf/Le9VP6lv+S///zH/7i/6fl/8lf+yp139Ue7v+Z9rz5/
10//Lz//SZ/1tz7/+t/0v7zaVv6aX/dPPP8pn/23P/+P/tyfux/vp17tePcX
f+lbr/a88xu/7gdd7fy4H/ufe/7eX/U/ud4zZ+//jf+Lh/H+si//Hzz/CT/+
b37+Y1975fmv/5p/8uqnPn/ZL/7vPf+JP+Fvuf625T/0Hd9x98u+/Mvv5/qX
3n3Rz/tvXd//E3/8j9/9zt/xO645/9mf93l3X/Bz/uvPf++HPnT3+3/f77tf
j/dea/fjf9yPu/uP//JfvvuVv+JX3P3ar/7qax2trTXW35/y2Z999wt/wd//
Ulk/rPP9mO5+5s/4O5//jHe961pjc/CzPvdz7375ez7p7ud8/ve/yp7/3C/4
b9zPw8+8X/e33P38L/77nuuPOr/ky/7B57/4S7/07jd87Q+8s16//D3vuaeZ
H35PG//Yc/Txuz/4z92Zn1/9VV919Qc96COa+qp//3/6/Dd87dfe9/3/e2ct
lNGTNUI76lgL9Y0TDXiO3r7uN/xTz9HnX/jzP8a3r7J2fOtXfeVXXt/6LR/4
tIsmf9GXfMn9HH76tVZnfn7Ac3Np7L/oS/6B6130rIy+1Vf+LR/4wJ2xKaNn
a/MLfv5/+3r+S77sy652qo820O+ve/31ax7Qwm994427L/1F/91rXT3XTuVf
8cv/RxdN/fZv/uarvrK9Zl9Yd2tsruwPbZlPNKWeMaJJ/zaHaAJNmkNrY93M
yf36PP+SX/jfufbOV/zKf/SiNXR7v48v2vyG3/y/uvaP75gr9bSnbH5/9Vf9
z66yvaH+G7/lf3O9o93K3v3Af/C/vsrq/7Zv/GHXO+j9d/z2/93zb/4P/5nn
v/nrf8jz3/UtP+L5PV1cbf2+3/sjr3rKf/gP/V+v8m96/w++3jMX5tj+Nlfm
+s/+mT9z0f9P/Ak/Ae1e9IYGzCG6QtPGZk081z97w774yn/vf/zcfP+kz/qs
qz7aQDPmGa3+oe/4URcNV/Zt+w/dWl/fspfM6S/8Bb/gonP7W3/u5/vap/ab
+n3Xt8yfNURX5gEPuO2Hi1fp9wd/1z97raHyN/22f/riA8r337v4AVo1z3gX
uvccDSurb8+rY/7QiG+bY+/6ljm359VB/2gJj9DOX/qLf/GaU+2jt5/z+Z9/
942/9X97taNs3bT/c7/gCx72jnH+9m9++0WDnvuWOvaScs/rmzL+WRmdqGO/
+K7nt/m9nlu/2jTX+qCf2vddc/jTf9pPu0M3+ml9f8+3/vMXvfzmr//6u1de
ee1+zt/x3J5T/iv/8f/vojH99w174ye/853Xet7P1bN7/Ll4IZ6GZ1lDfON+
T1w8z/riR+r7m7W/X68776GVe5q4ftS95yHP7sfybMv3/fX+s/v2n3n3no8/
1Lmni2f3PPcZesS38Dp9w5P8mAO04Mea+Z6+bVk79+88uy8/s0/wcLTnp75Z
N/R/6OQbr2+oh55/9wc/eGGLedc/P/YcPq+e+dUGPv+n/9SfuvqCV/7Gr/u6
qw76gWm+/Wve977rb/ao99A4fo5W9fV+vZ7d4/fVhjrad5643yPP7r/5DBaZ
d3Pu3/ffNH/PtGWN9MM6mb/7vfpsy+bZHNzv/eu5eTW/3rvnwc/Mu28pa/sJ
B59w8AkHn3DwCQcPDuKLf/LDH75+rKWfezq8eFx4h8fdr8tV9ts7cA7Pxpvv
ceD60QZ+q56/48P+jSfff+/Cv3t6ePWev72qjVN+5dmWtY+X+9EmjPOjD2Gr
OjDCO/52/542P8V3Xrn9V5vwd8vaud8LFxbgrdr6Ge/6xGuM5sM3jPt+bFcf
jLH6eP/B8k+/+KbxeUed2zee3fOoq7521bmno+u5sWhbO8p9y/w0xi3DNf/2
DWVtasu3YJc+WyNzrk3roL42+5Z3zlhev8ay5SccfMLBJxx8wsEnHDw4iI/C
D7IEjMF38Vt8FZ75Icfgn/62OBiv1s7ioDreUYf8g//G/z1XJ76tLbxYXT+L
g8kyfhYH8WLf8l3tH37/zmewQZvkI9gDe/34lvfUXxwkH6mv7pa1X9+ODPbu
29wcOUt5cdC4yLz+tjiob9oxT1u2Z8Ix7yYPHpnuQw9ydDhoHtRTZ3GwuT3z
8tarHOZ2/lDPOMyPudf2ff9e9Vw/738/e8LBJxx8wsEnHPx4xkGY4QefPHz2
4N3hkQcf8U91/XvLB5/ec9XxLn4MQ/32HJbh52EiTMWntQ0v/Bvvjj9713MY
4j28KWwNR07/3nL7+5c+YJ931akfsMK3jh72rQ/4CNf0v3cP5rz2UNYOnn5w
9I0HHW8Yne5xy8bhPXPou82rcZlL7cAv+KQvYZo6vtv8qKc+2bVxkEvDf5hl
PsK1xk3ObQ71yZzezgKvHtn5RfmGsQ/PlZ9w8AkHn3DwCQc/nnEQv8db0zfC
CViTLhQ/xiOSU5Iv8N9kQM89iw+rr553k/+SJdOXak8bYYp3k+mq43l6PFiT
jAMD1Tly44dvWP5JFxZ7hueHdzCucu2c77/jasc3Yc2W9bk7x6MzvvSjF754
N73l+f3aNRZ19cG759k7bvP5YoyVzdtNxr3m7YzptVe7O9X/F3rQ11/V57Dv
rMeXXv3xvHEdefK1q34yMnz0LWVtWhf9OPeyZ328Sxbu/SccfMLBJxx8wsGP
NxxMdiFrLA6mDwzXwsGe0zeiA/z0YNr3f5BxFgeT++DJ4mBt+taW1U/nGV7g
/8lQsGFxcLFvy+fe710X1mw5XHMXme60d+FAWLY46Ll6i4Pdzemf/px7vNee
Jacmr3kPHr2QZ9/2Eg6m11Rny2GidWnuPe+cYB4WB8N67T/GQW2Fv5Xhlr5a
L7Jq55snHHzCwSccfMLBjzccTNZIDkp2wEvxXjYnR595yU/PDqZdfPTZ0fMd
vSIcUQff3jIenk0LvhkO4rvJWWtfqk5yHB1j8iY6O3z+9ZfK2oEJ6uhzuABT
js3kW17CwZUTk42ODc9bH3C8550B4IU5yv7n4Nwn3CUDhyHe1Yfu9nwrTO8M
oK/q32TxV2tn7zf1NTlXObk47Et3veXWS5+dJZIbk+uPLvjomdU358misKp7
X/XTtz7h4BMOPuHgEw5+POAgXpaMgBfg1fizNb7JF68ee4yjM8zO5NiLvPUu
Xn18Ct/7gCNh5ZEX3/Eg+2gDPvrusaV8x0vldK3p/fIfyF8jXt393dr66Gf3
leHj7XsP5e7v1D8+Ia/ccOgTHuxtkpvgRbY9R/788MPdaLJg938w5yaLXnXV
8a1k4XTJ+mBM3jtzcuTOI2++KL8y/x297Ws3O1vy5btftS76teeNZGFj6lvp
k+H+ls258SrTi3Y+sY4H20//w9MnHHzCwSccfMLB7604CLOyjcyeBD/293SI
9/2PZ+K/D/Yn1r539/njMh7rW+imsufpH/Hbwc677tvw5+7h0pfCuS3Dr/SS
yWCe55eXbYy/ax8fzx5o7zpX5ko2qhwOhnFh9vn50Kthl7u5ZFzPw5Z9Zg5v
vz8Fxmn/yK6fiO+/ejDu9VfRCv2kvXyz3bnat6/4bRjHlvF4/vT2+blffNur
r1xxEl651i25/vh3nLvLmwx6zc/B9s98kJ1XjlZ+wsEnHHzCwScc/HjAwfwF
8N3FQc+zV9kyPMqvAR0c/HrhQxfeLfal91scXL1c/gu3O7m74y9+6S4fcArP
TRZbHCS7pSt8jIO9uzhIfkyuXByszZ6Hg+PL+FIZ7sATOAXf2GDCHX6Y5gWP
XRzkg48e0eri4Lf+7v/Dc/sBjbz73/57nttX98+vdbzn6/d8/DMu3mSPWe8/
86f/1ed/9I/83693FgdhgP1tjhcH7UO0Y5/CtrBY35I9jTW5Mgw3Hs9vOt1n
Tzj4hINPOPiEg9+bcPDYdrz2oN9LnwYDkxfOneE7HvSc+d/nl+eHzJiPRHFO
vIM+usNa3WnYd/wDfvCFfce29NMf7v7wr2xLxXrT5pHL3nHV9y5aTO8I+5Tz
pwsH4czRAb/76nNyXXd6B/dflG9++Q/yFMwgp+mbvYXO87/XZ/vIvrof37Vf
xYUTU+73/75/4fmHfs//8dr3W4Zd3/4H/sWLL9y3d//Oj7r4Av4hBpy9COOq
g2bwLmtsTf/0n/rRz7/t9/+frmdf+HP/mxdN//E/9v94jg6stfW3H/Ci3sej
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
tVblmLB2xRS1LuqlR/UN/fIcHVjr7wwT9yyUPFid9Kbe7b4426r4Kj7ZnWI+
QflfFCNQnbAt2TB6zDa6mLzFCE5eDO/6nayYPFpeT8/hn2dhoW/AQrIh2Qdv
F3eRzg+vIz/d8m5eGITeul/LBmN9w4ufDMOSB3u+OqW9Z1k7hLXNW9v19efC
++EL25j1fd7YIBsva+NJPo6xXA6CzctzfABP/c1ht3ldN+/5ytXOl/izn9td
4IXFsO7oQt+4MEv5xEF7611+8rd7rAsHyTnw1PPsRo0LvvYuPbVnx27mlUtn
TG76aMC7zRG55c0jubm0NrfIxlffeLMbc29j8W08oo3PsD6q67Ozdstrx7Xl
veNePf/qPfbst3vBns/mCh5my6GN4pmwK3ZfAQuPXdC/fNl7o/9ipClnj5L9
SfJhdjP4TjEh85NQjjfioeYT76SziHfaF/iR9mCQ/msPJm4ZbYSvnvsW/DVX
YZj9Yo19P92afqQLJecUsxn/2HK+FLCg8taBafas7yrrx02efsmPfu8HO0e5
4zl5gw5dOTM4a6F/Y0AL+Et+FnBKP9CR8xjMQUfW1Jx6N3mwuGr6Uxw2+KZv
+kP/iXf6N1o1/+jJnMMif4cJMJgO1Fxpiy+EdS4nsuf6R460f5OVw0rtar8z
g3XIJwUNqKP94qeph7aKHxoNRHfqWAN19EMb1rQ43epbm2xpvNs5JzvgbLSs
Z/6F6uaDUWyGZIdsaJIhzUsyY34d/p1vI/pK/uxusvvI5MFyljnHFau+GIme
4fXqeE5m1J7fdIH+hq/j52g7rCXrox3+hLuvd7/vGXh1RHtvsnYFa2u3Nngn
58c3X7xi/bbWl3ljfWz8q40PuTGTN5by5hfY/Dubk25ztm4e83xYPDeXvqH9
bHH94JH2gx/4d+4w3/3qkfEuu51L1jtY/u4L6/buL0wk83quPn1fdqX5uMC7
41N47knTm5KHP9rwbsubW3nzS27eyc29tblINh77xqfdGH0bs2jLG89hfVrX
x2ftnNfua+++9y5gy6sn2bPi7h00iNfhS+l+0A9ekk14/KH8g/b85pAqfgzM
wWey8exMV74Av/F6vBFPZHPPBlV7/u4ZfldMLbzZ2ZcewbjCJvwlvWX3UeSU
4nXhw1vOVtS7yRTasl/iuXitfYrXq58eL5/7ciX4G5zYsnfMcXGPiyFzbHG+
7prnPS8lAxZbw/m0GGvWNtwsf4axWLPif+avuth3bIxOjDW4dcvJdmFxdawj
+0J6T7RUvBdr6XvOIdbNuqAt44ONaNH+Usff7M18IqydNTXPaBufK6eSuUmW
1FfvaCebpGxmsoexDtlZdc5QJ/rpzONddOVb2T5ZL+X03v5WPN31aS0mQ/ZX
fm8ciPSu0bxn2dPoezlA06Fmo2Ps+Vj4ZjgYbia/5scYVoaJ2Zdufs9ylXVH
odydIlwg++z+3TPt6nz2HmTvR3zH2tI/rE3d2pmvH9b6Jm/sjluMj+tOcONc
bS6bjY28+QIe59Mpx9zmYO1etfgH6Z/zb9nY/Mr+Dgf9pCP1A//Rv5+bX+Oz
cPDcG752YR+8y+bn+MS/fj0/Piuf+SD3kXHh5k0ffMmFJ9fEh15dHCwGG6z9
aMa+LSdDeXdxcPNRLg5ujpItb/z2jWG7Mf0WBzfOw+Lg+sCuH9DaRa9t2N6V
Lw6u/mTLe7bc/VWOXXS4OBj+ZZMXDubfXoyXynhb8ZHjVSd/wqc95CVfHIRH
6VEXB/0dNrLlLQe6fYtmyI7kEeuCJ8MifACe4vOLg9nv2IeLg9mcnrhlJ6e5
NtK74tXpUb1rbnwv2TD9IAxw7sYrjMeak8u8rwzv0pHCO23RczpbG4fyLXfd
A94Zezkj9KkYDtmX4lH2uPM7fYw2izljbc0hXoaW4CL80nfPT2zHH/hQNkbY
dfKMnvgwaNRarvxoPpMf9cnceg7HlNGGfpdLQh1yYBjXXS1c09/smMz/3iOX
q/fkjTx5evHj7iLRkjbR3NHbvf1BJ5DMZ3zhFb5bvsLKfqxxMSKKF1jchmIf
oZHsYIrpFlZG6/qARtLHFtNm85xlk5ONaXpX/LvYvtl5tAe3vOfV1eFs/Lq9
71gbgLWRW7vx9atav+ONxVFcanZiG7dqYzlurOPNBbD5cdI942ebSy672uyN
yj9ufow5m5i9581ml0zYfeHKg/Sn4SCZ2Lnbz4kRc2JlH9uX91xyH5muO77F
Qfrf42N49J/F1y6mqLPAlvO1T2bUDiz8aMa7LZfTEC/bsn2Kl6Crzde8+Ss3
h9fmNNm47hvvfWPebgzAjYP0OD5SvrHrK7T20mtHvbZke7e+9wurb9kz55vt
wXhCOZqKrdZdTXc5MAXNpxPFsz3rHlD9fPS27Dc+DNfwr8r4jN9HL/zJ19nO
Ghc7Tlk7voPX44P2Jxy0LvEovBWGwtRinFhXc2+e01eXF8FcdK9prvIL8Dyb
D8/LjV7OwWQxa+jeEH8vt6A+Wn/3dPnjpPNkh+A84xvKxQ5FU+VgQkcwT/9v
MaIe5H118AVn3jOetz8/OX5euebAXDnbKTtHOGNYF/OpDv6tXec54zYetJv+
k9xtbsy7ufW8OW3OrJk9qKxf2USlZ3YOcEbRN/zR2SV5v3OFZ/g5GoB9MFjf
8HfnpHwxyldoPOdO9e0POJuP6Yn59CNe8tkvJ0sYqO3u+fw7O1O8YWMmdV/Y
HTOaNRe+re/ZDpULY+N2bzzT/o3PJzd1L9n+Kn9UutfOoqur2fuLvd9fm7e1
CV8/qeJLo731Kd6YGxuHauM0buzije2/+W42D87mhtvcqRvDPPk6O99sfM17
MYg3X453ukv1W7vGr5w8uHpR48DP7Qv3ly/8GV95wDtYli4U3mVLmt/3+fcL
jCMDkvvIli/izBxfueKLnjvUD113hR8reIfPwZrHZd/KjtR64BP40eZ03vLm
u9ycX5sDZePAb1zcxb6NGbhxkzaOxPrSrm/R2levvdmW9y5+7yNWP7Nn1N2z
4WDxG8179neV82vQ9+5q8rtPx5WPtX2WPz0MMf9khZOL74dc/JCs5zmeatz4
JH2euyp8yDzb5/CNDFXceGuCHux1em/Pu786eZP+rovG0FMxA7Tl73DA2uB1
zhBoFI/vftMZtJg19mT5MY6d0Mm7VK4Kfhb4ffZUytke6D+aojtVH12oQ++K
xulX4RB+pk18rjyD1kef0Y3vGz+bT/NmHCfX4N01N+TJ/K1gIn5u7OrgXfSq
6B4NmG8YiXcnA1rf8kegT1jkzIH3mTt9zK+iu0JnoZMf4+0P+Hj84k5sbfPl
XWMtl7313btgdJZ9aXeOx//j7Q869/xH1fHdbG/yxTh5I0/OlHLZZ++1ev/i
ypvXtUFFs8buW85mYWExcMx3NJ8smV9rsmYx54utu/toz5are9n7iL2vXxu2
tW1be+/1h1of4Y2hsXGlNu7ixiLeGMUbt3/z2myut82FuvnBN2/4xvd5HPuu
3KTpoI0nG6XuAZOL9VPb9KC+k26rO0LP8VC6Pfsle9FiO4dxxUWDfccH5Nwd
wrXjD/ieq07yYDFS6D+zNT05eL//Qyy18g/698cK3qlTHuctaxNdwLL6qf7i
nfUOBzcH9ObB3PyYmyNsc6Zs3PiNo7uxBDe20saX2LgT63u7vkhrj732aXtH
v3cWj8vpc/ZMu3u8uN3mrPO2vdW+wX+K2YKnbDl7FrzPnGR3iqfgbWQNfAt/
xm+9ix93P+g3rCKfWGvza+7QbnRtftB0v+2BzoF+8Gg8GO/wHTyB3A5nnIXp
oPF0ZxEYDFthLttNOKOcLhfG6gs8z2ew+KXWioxlH3QniKayC0UvcLB8TM7t
+D2aJ8ubV/QG18yPb9MRwCP9xPeU0Z4+mR/Yd2LN/OMXbaM582ys5YkwXm1p
f+8H8X5/K58gjMMDYbZzRHeyyuWjz985fWmxE4wbXmkPX7aOsM4co5/uZO2F
vqs/3cemd80Xw5zmo+FMpR/OVGTBE6fkh1xlZyntmEd90k42Xuaw/L7dMapj
jN61hmv35VvZhKHJbFyz31Ev2TN5c301OiuuLsWzYibtvcOW11Zt7bfXv2l9
fjcmhjr4WP7RxY/Cu+wv56eNObxx+DdPzeZu29ymxc55nAc8vrF3pptnJj+V
4rvms5LsvDGBuldV7v4Ub8pOVP/d7WRTSucKG9mx4Zn4IWyjw8xnEO+kt2QX
umUyHGwL+9Q/POO1ZyduzvGbL27Mic392kPsFO3Qw+ErtzhsH9PYt+X0n2TD
xUHlxoIO8vXLB+cxDm7ezMXBzaWy5Y0zv7F2N/bg4uDGo1gcXF/d9Vda++21
YXt8px8Orp5ncfDxGTg+YA8XQ1Kb6U86n+M7i4PFmIFLWy6fHf7ofVhEhtG2
+YJPi4PmD91Zr8XB7Kbzp618i3MhF9YV//yWF+6KreY+xO/FQWW/8dvFQeuP
ZvD24nJbP3iXn4Vxlpu+mMN0U/pvXd3HFE8mmiyOmXlT9reNq1a8NffA5tQ8
KOtDOi51YJ+9pM3kXGtkLCe+5MFBWKt++Git6CzxTPvFOnhHObtTa2+9YBbe
q777GVhJdjQ36pg784MesjX13ex20E+yp75VTlegDtoIc40FZjm/dC95chT/
iIeYCOi2WELo0hr4dras6SKKGbjnt35bK1hXvqhiwvn30vmeA1c3ok7xBPce
Ye/W1/ZsbbPXX8nv3l/fXt9RTz82HtTGSNwYwhtjf/POFOfX9zdHW75+xT8v
r3cY1h1suiI/YV/2t8l32dV2L+hZ7aUfTTbOV7P7RfXWfhRPW11oeXNu/Pvy
HSz+tZ9j43PsYsiAi4OwLDnR8+xIex+vwHfDvnAw+1IYqm26m779sYh35eR6
XLYOZABl69K4inNe/BbtOPejqeI0btleNb6NvUyXuXk2N9fY5l7Z+PMbj3fL
G6tw4zVt/Ir14V2fprXrXnvvtXlbG4C9B1m90J6Nl1d0llbOD175d97yzOfj
YK8Xj8sexeOSEbpvwmvToZlHfHbLeBkeTjYjZx+73Q/epbvIZ4h+48SJeMtF
y/bC7f7g1YmXWH6lh/LJL/aDW4c7uIRW4KUzKJ0nHaV1J1eW7x72GR8dKew7
9gZffNED3uQd9GMe6Bb82/yhq+S+8j7g8ejc2LIV9G656dEZOUK//BufhaHu
ia0FGQ7tWiO6XmXrQ144cbo/9ZpLZz7zH65Zl/Sf+A2cMe/aty7Ga93gFTzt
ntF6oJWwEg3ARHhs7dTBq7uLtL4wMTtj/czeFb3ALu+mXw1DkxnRazbG+avm
H5pOPr+1ZD2/fS8dvrGlRy2mX3S79LxnvMXQvRfYe/O1JVtb6/U/Wr+k9dXd
WBYb32njH25M4I2Zv3lkNr/M5lzbnKSP83RbP31Mrst3JB1n9yLFeSp2QXee
3tk8HtrO9wSudZ7O/6l70XTH5VIu36QzO562Z35nIPNkfpxz+XacM+87Hmw7
ixNzi2H+LHuYYsXBtngqHtGd4C02wEt2NecO8MScyTefHjb/kY91vNuydWJT
UJyibGbQBFnAXZ39Ub7Uzv+wzd6l24RtvnOLJ3rhHb4I7zb39JY3L+fmJttc
LRuvfuP3bgzDjW248Z023sX6/K4P1NqBr13c2gaszcDem6weac/Sy1uK65J9
pjLs27K6+FY+DuSw7P89Ixv6XveG3dXhs+aTPASTnCnQOizbsrPckQFfu8p0
zuQ4fkPW4Zbf6sK+W+7wCztX7+pvZPOTD/MbL/uVk6v3w5efoDUrJy9Z1bey
77VvzA/61E+4Ew4WU5ReNHsG9jGbKxBvpaN11tIOOtOOuYJF6lm37GTKq3vi
D9894Ky1gmPmzPrCN++gg3ztsyklG3qmvr0RVsLR4luphyeiT7hm7+efqE62
N9YxvFPfu56jL9gF79TpvjIZJ9kQ3cFyZfX7VraUvmXM9qJxwQ/fTpbMZrW7
P/OGHtH00uee2VansXr+vQe3FtlMr83Y2lGvn9HqYDc2xcZr2jhOxrKxx4v9
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
7CNb5Z/hnLLloz/5xKvs3ZMT4Juvtbev/C4vGjoxtvwHySvK3ul+wVqbW/wA
frWn4K95OL6A73/APnXwDM/tV3MNB9U3JzDB38xJOlXrkPxontUxt9aCjtO/
8SJ73Dzne4hOYYc69oS5tQfwBLzb/KuHL/ttDfBu9a0ZGiFjdbeYXK+O7+un
NfVNa4Te7CU4jU7P/vk+L637noVWV7D6871fVoannamyxVr75PXfWZ/Wjfmw
cZA2PlKypPobU3fjzG8els1Ntrk7k8HK4bh5roszX1xx65Mddz7ExSTPrsX3
O++q191ftp2P9zk+oJ4+OIOv37F3Ns9GMcW7azRONGb/4fveTX439vyU9M98
Kxun+e5Mu/44xWRv39lv5IRzD/i2S195y5f7rDxRcJI8ePIrve0h75L34ODx
Ezy+83DTs3LLnu+88+7k2f2EuxN3/gOX/sd6oil7zHqgNWfIjzfs23JxP/C3
Ldtn6rDDsB+6d7LmeK872MVBvDleuThIDwr7nIm2XPwG5fKYFL/oxOj9jJdw
cPOKLg4+zrnW2W7j8G8s4o3N+BgHi9exOLi+zOvPtfbti4Nr87A4uHqwLa+M
sHxS35xL8PHFQfRCtlN/cdB+ue2Tl8rW0zqeGElHd+odtmn204nj8wIH/fu2
717CwXLXWFNnYTJgPs7OOfaOudE3GGfscBBdeI6/wkf8BVaoTybx9+KR9i4e
0t0f+ca78FEdZXIlnoK+yVnW1Fz5Nx5qX5/4tncXNtl7eG7P9ceawDx6ITSN
T9hf9q93yH++f+JBv/XiGWfOv+8l19rL1tk5r/gAcA2mogF4lL60ddxzzsr+
5gre2ZerJ8dX1c+HMduqtTdef5z1V90YDsU4wqs33tHGANwYuRs3fvOqlDvF
+m8OsvYeug6v4Gi+F9m1llNMufv4/Jn82zqWa6NcVBs/x7iT5bKd2Rgv+fLt
eTe9D/5SfDiYGP75Gx6U/sm48zPNrjiZPUw0BjRFf2Le/Uaf5ddF08736UKt
04v4UK8VP/vV/BtgYTYwni322X83G8+HXIEwz/70N7rP6h+96VvvTr7C647x
uv+wr+0j6+/cmY2ZOw98Kx/ejwe8syfIBjBuy9YZH9Lmxt2yn9SBbScPyRdd
8iD+Qe+lzS3rL33aLd75dU+1PvJ0oHwjyj+CRtBheT/RJxmw2OzpJqLh4lEU
QyZM3Dykj3OxtS82Pv/G7d/YxRvLceNZbXyP9XFen68trz382gSujcTeE63e
bGWH5aVb9m18+/hYHdkLr+7eTPtoAe3nh2E/4P/kN9ioHlwkb9kP1h+mkgHR
YnKh8+UtLtNdZ86Do5944az9h7fBCHvfuPQJLpuzymSN4rDhoZVPPLgTozsb
G/IdrLRf9Ecd2Gcc5t444Sgeaz7gkDbdE+JHMABPohs+9iUnh5zx25d+8hVG
s7DLu/qqPiz2PXsBn9A+fZf3/T0/JOeA4lUo77oky9s3e4ZZGX/13nsvvLZS
a0u8/jXWTJ/pqdcXdWM1bPyije+3MW83JvzGxkFv4cHmFNs8mx+cPNTtJ22V
R8N8wABl4+68qY/Jff6WfVvxa/p3/n6bf3jvNbKlyScq3Wfv6Tf+EQ8o7nV5
F9mmZ6t+s1m57gCN+9zDf59rnvK5tSfdH9gb6I89If5pH9k/ZC9nBnNprfE8
dqHO8yem5LsuO4mXc1688Sy/P3sKljlrwsRzX/iWS967xdl+tVyB9J94fXf5
nqvvb3R59q29CYvsAzRqP2YzhsaK12TMzn3G+PGGd1suZysM2zKeXY6ecpe7
Y7WHtZnNDN5KJ3ds5b/m4m/ooVy4+Y/62bI9VSyj4vjBO3PeWS0bZrSqjr8X
6z5c3Bzej/N0l7M0e7N8aMtls/H8N77xxnjc2I8b/2rjgaxP9PqIrZ382g0+
tiHMpmLvlR7r2ZI1lvd6n74T/9Se97LRqYxXqo9e4aH1CZ+sKVkOjvrOLefL
hZv+jQadJ088/2N7g24q06eTIcrRjFfbW+if7hSmqXt8VA7Gep7taPeDsEo7
+gXD9Nu46HDwJ2PWrnmGNWFTsek8C9fwf7zJmNCz8fmGOTJm33Zm9/2T6/kb
bn4n736wxzVma+I71jG7FDSNT1oH2LXzv2eSldlXj733vGv7tDZR2jp29K+8
5EezvqUbe2HjEW28vo1hu7FtN9775kPZHGGbQ3PzSucTUA5N64HG80vKHz8/
w/SlcLN322vqb2zOfNez7cyWZXWfq//sfi/fhHCxmG7FQIV1eIlnsCnbc3yn
vJ4w3jxZH7RkvdCHuUQbdF9oh/807LHm6AWfLI+ls5X26bTKk5ktE/msPL9k
PJjmp5xH5QJkA0NPU5leNN/Bm3/hS/FkyHywLz96z4sLpd9w3NkHLVkb9OHf
1g+uOzemF0WvH894h0d9Z2VzWPxJZ8face685Rx4qWxf4b14IvpM9+AHbaA7
ZXSpXMx2uJb+cvNLpN9IJux89/hn77r37Li5vDef6eY53Vxvm/tm4/9vPOSN
Cbkxsra88UPWh3p9ytaufu0M19Zi7562vHq5lU2WV+PRaALPdh5EY/g/OyY0
dYt/fvFPfLRYu8fv/uTptt+KWaHuyQXyQx9yvpAPtfVbbzm97fPsRZ2N9Bff
VtYfcp/9Ug56PBze4e+em198B83ZR8UVV3ZGtU/N38lx/m1Xnp1yvWY7at6S
AX3DnsfPYCtct6e0n77IPNg3ztBwvZwY7r+1BYeS15rPPWOsDK4v7gPIkKuv
tudPvLr33q2N09r9rl/M+oo+jqVAZ3Z0Yi/iDuGXyRcbq3bjt29+k835tTkx
7T80D7M2f3R5hJ1H7KXkvvzP1ckfz35R1x6qfnJfWLn+DtmyhWGLg/n1+Xcy
oDGV8724Zd0Hkrv8W9v4Dd6iXKwN82A+8jM1F+jN/rFm1sPZHs3dzvjXvXW2
7sl99lDxCq1994rmjS7U9/TfumvHXjm2Le++8kfYVydP4LtfipudfwQZsGdw
s1wQBz9fuaserCzuTPkH1cVTDj/4wOXDi36du4wdv0Ajxa87Z94f/BDr/gn7
Thn/Ll/5lmGcNu1R5yX7WX3nTucOZ+jFQXeAzkb0n4uD4Z2f7qvRUeXHOBjt
d+e9+Je99ZbbL+lNOicWx7D79XBw858uDm5OnC1vvoCNmbwxJBcHN67I4uD6
XK/f2drhry3i2mYsDq6+bnFwZZnl5+Q/9HhiuL3AwXJ62k+Lg8Wtt/+2nC+v
82k8GA7qD4yCPeYo++z1nSdLF4fNWRpuoi3zqp/4UPf1ZFl18CvPjQXNq28u
k/vMOzzFz8wXukWb5Fv8QL1i2Nmr5C79tM/LH4Xn7fzs+WFlajiMz1iv1T/v
nezaLK1N7/q5rB/oxka45c65eNrGEdrYeht7dmOzb76S4tA6O21uL3vRXkH3
mw/aXsl2pRwt2XxWDsfw0XzVte29zovaCgf3/t33/LS/kgnzcUgnuvjXT/tY
X52vsw9nb9e9nz2CF3c3nw0nfoQenOfRGlyDcdZD2RnD/OGjxwf9lQefaPoY
vNEdj/OsvaYu/lK+s/DXuJy90Kp7oTDN3rCXrJt1LW98utDsQj3vfrA4Merr
aznp85/IZx5NOIOy39df9ISXwDhnQGcetA4b8SpjQ//WxXOY6OziTESefcK7
U3bGtYbGsmW8++jTfsxFVzffsot+nH3pC/C38nzxhegesFiyfAftP/8uzm7y
Ir1FPhFbTgeSfqTy4mTPiz8abqYr7Q59c6xV7g6QDmfzg2++1M0Z9ziHTj7G
m19gYyxvzMmNu7VxSNYXe33THtvnZ7e/totry7H3WavfWxlnef6W0Z019Nt9
wy0/9WUzYw9rK1z0d3RwbIo//+Ld+Alah3vwLZ8+fUND+AW+Y584F5CTYKUz
Ot4Bq8y3/h996MlTCW/wcm3CJrwIJmmXTONdY8evTmzgb7lkM7/ta/dmvh92
oVX/3vEaG17j33s2WNl59cl737o2SGuju34r68+yPp4bA+FRXKCHuHkbS3Zj
rW/+kc1Lsrm6Npfl5ndGb/nVK6P7xT510qfgo8l03Y9XJ1zL5lN9WJmtjH1S
/E+8s72H78KM6nR3oY0wULubvzYbguKU1T8039kExplntH700Cdu5i2/+OVL
AKOsMzo2f+qjcWea/MXQFfpBT/rpG+Qp/CtfqWK0wtxoBe04p5D5TkyYDz3k
unVGOnrOdzzkiy822uaIv/m7P3sRJ+adl21M94JHN3NkxXNPeMXSvmLCoD/7
ubhJR1d0d/ES+8paokd0aBzoBf04PzePT3j3+ktjvNkNPpSdMcold2zJv+Di
g90h2dfdKaBnsp07QHfR2bb4yfYTxm25+7twrt+Vw7Lu+ooN//inu8GwsnLv
Z1OTbJisV1w1+xLebQ7xLW9+1c0xtzl3Nu/AxmHeWJQbo3LjdG3ckvXdXl+2
tedf+8a18Vjbj73/Wn3gykSLEfmGwk3rbR/a61tmm21PHv7yynWmxcvzA8bv
7fF8fNEe3mSvwj79xLfwU/2EeeYYPyNbOUvZI2iLHguGntzS/+C1p435Re6U
cx+mv+i1e+x0oMZbrMDGtVi/svDqh/f+dG2K1tZo7W/XP2V9Njemwcb52Th4
JxbhP3fN7caM3Tjqm2dkc29tbsrN17x5nMsDTAeRXlOdsK/znnrOLOk/i2Xq
efFF8ykvp4R3s722nr4XJqqrrfzfs7dJJxoOFnMtPVHyXe3aB/ZH+g04j7bN
L7xis4JG8CHraM3OHdmVs+iKkWUO0ZUzlbk2hmKIZXOlPfwCv/Md2Nc9A16V
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
E7vo8y59M5o2VmMxdjimD2hZf3xry+qcPJavXXeaxqif6vQu/HZPbX2N68jL
n3mNt3FV1rdyQyvbH8r48JbLIU4m27Kx43vOQls+cVjP2WvLxyb36P237Bzj
fHPTJTyUj23a5z74X1R21ikO85adU9nb0JVu2d678ezvUhne3/bHS2X7Dbbc
znQPZXuymGtbPnEs/rHrTPCEd//Z8A4mKeMlW4Z93Vvks5sdZniEz+eH62/5
KG25PA/dwXXPqA9hnt/FSyuPtO9lG6Ot8s7jo1uGocr4WXlL7Ve401la/fWJ
0Cd7tBxM5jv/QWubTz2elC8h3ZQ+JQ/6XthXfA8Y5t1isnk3rEw2hGGbb33z
z24Ovs1JtHkZNk71ljeG58Yx27gu69u+vn7r77D2n1teLFtZb/WfKzMuhr5Z
m+t/sT6J67O/cWw2ztvGPt3Y4FvePBqbW2pzL24+YucHfbFX6a/VtQdhKJw0
LnMeJoYv5sDaqQN79BMfwDdgqO/ioXDzZnN6YYS9r45zUvEPww7PtVOeyfAR
DhpLOWXgaWW2Obf8IS+V1T92xZ98tYk3whfjyg/HWqAdfUNLcPDmf3nVgYmL
p1s2n+GmOUcn3kX73YeZW8/1P2zV5y0/4eNfPz4+4d1fP95tOf+g4rSsz0J6
HhiVnkX9dD7l01UnHSSswCvsn+7rPS83buXyZ3qfHJkdTD4RdADFf4JF6tYf
dco3v3qeLftW9njZ0LmHNu5w03fsT+tpvOk/s2333NwU+8P3tVP+euXkRGtM
BjR35aTQn2JDbU72zUu7+Wo3Z9/mMNo8DhvXemN7bqyzLW8cmPWFX2xa2c3e
8Xfv7n3flvc+cXWqK2Mu5u53tz8bt23LG+N0435vXozNFbW5FDe/8OYdLnew
+vZJsaqseTLjye9+7r3wdjzfuNGz/tirx/fgA9c8hAVwQX19x1uOL98b17ue
q4OHGFcYRzYs7tPGgNry4iA6UoYXsBJ/gzt4VDjrDAdnq28+yIxhH/625eRf
62pPGK++oR9j0X5lvDSMO/7tn/yAd+gwTFQffWhzMfEJH//G4uMT9v2Nxb4t
55cA7xYHvdu9/+JgulL7Hk51F589muf2hbWx78uTCY8WB8lN6WEXB1c3m103
PDHGbMq77/MdWJp/8eJgduXudbasTj4RvlX87crFmQkHfStf+8VBuGZMeO6W
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
J7z7yOPdlvNX8K0tk0HwC/Oln9lSFssaX8kP3flbHedU/Eg7dJMwxZiLQ7Fl
fKz7HXvEe3ijb1vXct3i/2RD3yQT4FHw1Tm587PneJTn+Qfg5/YRujEmNIfn
WrfuB8UHSD5l44pPoZ18Ik7MiLc/5Iy2rp4fvd4L3ruyyerr9j7rzew91h5y
/QXWh259zM25vmh/45JtrM6N4blxrTfvw+ZC2jwXG/d7Y59ueePCbWycjRWw
vpPrP7L2tG9mX/T4vjX988rgeybZddn1cv7Bp5wtYIRvwgznK5hlzhYT9cE4
8EfPk/uyxTVHvqtf+pBNDj6rvrJ30a1x5/dhPq0jXtodorNX8T2dN9A4vrdl
2Id2rNXxfT3+j97Vd2ee/CXJ+vik9beu2Z2SJe33E7/2S14qLyY+4eP3LD4+
4d33LN7h5/Zwd4WVzRHeUaxgGGENyUf2XrkmK/u2tYdtxdi0buaCr7kzt3Jy
H/qPn5SPDB2n9ysmSWVnWnzaXkXDyQXmiGyiDpo8d2tfcdkSoCX7giyp7Vv+
u4vO7S/189E2vvihO1BjfcxLV9ZYXdzj+6lsNtaWY+0b1/5/feLWZ3xjqmx5
Y45tTM6NU715HDa30eb+2/LmQNzc8ZsXY+OEb6zUjaG68XO2vLEF1tdy/U3W
/nZtkNY2ae9nV0e9MvueYXYdd33pOPBe9OCscuxh33e1c2KRvu/CtWJ4o1vf
NN7W0VwpW3dt2Su+D4eyI3pcRm/JgGjKM7iQXSvss/dODuQvuGjSN61NsWLw
f+clOEgPsGV7Vd/xT3Ki57dYCTcb569+qfyEjx89+PiEfR892JcvnnPolovV
qawv5SSCTfgVPrM4iD/E5xcHs52wdunEsp+0N+3/laHskcqLg9r3HC/esj4U
J1F/nfmd59NNobnFQbIP3CgeSHxyZYctr55t76HWNuMxDsbbFwfX9239wTde
ysYTUzZ/tziiDzGoNy/D5i3a8uLgy3lvX+SF37zAmxtxc0UtDm4ejcXBja26
8eU23s7GH1gfzMXB9U9ZHFybpb23XT32yvVb3vXddX+Mg8l9+GQ4eGJ3fsdV
TvYvFlzlxUF8yBok72dTCpvCQefHje1mT8C+xcETM+KvxkHtZ2OPf6KLbG+0
g1bJjM5NzkRbfsLEj05MfMK7jx68Q8/6RX56XD4xnv7ua37xQTJg+saTW/qT
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
MO658nKwvfPN98VB+yLw834mwW9d170H5MuTffeUg+rqKQftSc9HkH6ovQmL
d/SvNhb72Hf6ZnbicrDxTLbYctD1zojMTx6u7bnJe47kysvBPWdkObi+Z9f/
3vojWv8MKy8Hd//OcnDXdK3d9yIO7hjItv/tF9Kq/ec7IibKX/toVj5MfD2Y
eHj3avOOjCUry/OeDdTamO3j+96740IvWkuw13f9+cq7V2v3L69/j/V/tT4h
11fki84U2DN39ky6Pad1zzHHAXnV/qUt/5C3/nbxQ9tUJ9Kp7OSRjtA27HHA
Msyz94EsHt/sRvZdc4LGUP0v7fTgyjgpLexY43b0szWZ0oxX2pC04Al7Cmvo
0/vewX9yjTVitXYujPaGWdIpHjYXfYcv7m3c0vygdyC6Vvzy1hyi/qLecDbe
YZ80CSe8clRm9IMw2sues7xnTe7ZWy86i2R90q6v2vXXt/6L1ofD7ml9usdn
x95b67VrwHYe/Om8wK6x6V1x+8v2I9xsvfHKh4+vBx8P715d3mnP9ceVt5/u
O+3TcZ7mQXZtQH2HzbXr6Had+e692r3J669j/Vm9yN/j+kN+el5A45Z7xtzT
M1g9SxrUM/3nuSuLx73CWKdR23rzKz98tVft0poVZUJPYYD8yB9dwF40d7Cy
NaI4KE7rzFxTVtJ0v/abl/6SDzpLGfu+z3V918UlH/3Oc9hNKxufNN5Jd7uu
Pthu2X3ZWa1dMZ5Dj+OlMNqN9opZ8qM941HMoiswCDeF0S7p6Xw1qHNzi53j
hXf6l7hWxk3y03OZ92zKPatrzytZ/+0v8me7/v3W39H6fNg9sLsPaNdFe1a2
3q4TezpvHnN3LOXd9rXDx1eXj4d3rwfvXtQHd15j5/p3DcCui9t147uXavca
ry+Olddn4/pyfDv/xvYi7Jk4e2bc0zNVk/fMceHNMea3rXPi9twcdVQabv9f
bY5tsbL2gA/W/Kt/PljuNsmzztK5zpK42XLPbul8ZszT+jKcJbMJpV+57DlK
yWw2dYE7nmec0nMwBTe0LTaa9phv2NZh5i+9/RHqXni8094b/9RWxNU6Fs8g
7z4++cQs/Vd4OhWb6Ij73oXvudbu+A0f9UH9iq7Tf/U9fU382oL+pXwxVdrc
K/49r3nlPctyz/ba803W3/v6vF1fuOsHaeX1EbF7Znff0K6j3rVku8Zs59k/
6L55+Pjy8PGw7/Vj34v613Jw14EvB3fv8MrrZ2P9UK1vxuXg+vNfDu7ZN3se
3J6XuueJi0c/1keWg+LMt9VyUBj8saaFTaPNqWdrobWz+7v/Jy/dTb+q6/yG
eRa9bq6t8yOsE10Omie8lcFDZwrGQWVk7vHRv+jVpu7vAt9+cYwdp6/kA2Hl
5aBxmT1rOA66jnXC4JQyEg5rsgfJ2YkrLwfz046Vy0HlZFxU22E/suukHU/d
85SDrncu2HKQrWpPvnvJ6ZM933nPu9wzv5aDex7KcnB95K6fwPWbtH4kVl4O
7j6j5eDL1mcPEz8cJh7evX68eyd9Z/dA7R7h9ZuxfqXW1+JTH4ydU7O++vcs
mz3rbc8/3fPB5bGz3qSHHRdPW99CjoPyLp7OvIin0k/GWbaSdqueWwumPbEH
s00w0ZhIe9u0EXUj73f/g99y07Wf+o77541nGMhfqDWk0sHntrFR83n0ev4/
1UvtzW8+2r86yKZj9xmX1f7z5UJWN/jYOkwMXRnX2rMgH/kuk989f5nc/KC8
ahf6jvrzbKzEFXlfWTzSgYvGSD1DP+fT1XX9ozFP5Y2b4sXjGFo8+jDOYn3j
TsK+3XnQeybmnhG256QIowzu64/f8p27PnWf+hVMXl8Tu/f2de3jh4/vnI+H
d683717UF9YPxvqJWj+KK6+f4fXDv2fT7Nlte57pnvedjxfxsCuwT9uWHmnB
FNelkaysyMLEO+9vmMX2bFxUXnEp2yW/YXQlncc2zCaiz3FCe072W2dYGcPM
Nyfdat+DfROPn2e3+r99vvfym+1cJWtltAv9TtuQBvNjeKiPqFecwhN1xs6h
z+WN7alfmJek6zFEfrRhdpaykxY2lvaHHfpX54+43h6H1rTs+pbWecYs9+oP
0tFZz/FLP3SP8NKkD2OZvk/GRHnTP1oDow/JS2Ue74Rng2Owe/joEK/y8Dxl
491AOpT33Zb77ud83DOj9wzNPVNsz1VZP/NPfe0mrx/C9cV0dMLh4+Hdadvr
I3H9Bq9fffUmvs6XyWbc80n33NI9y3vn7Br/JPcsvKNDGxd1bxx0bxxcJso7
bpvDw7vWQNK72Kdu6Wd6vnX7nVnsXa9xPBykc42x5YtaPabX6WG2362+Hu5n
Kd33FfqfHaIMjdHpM3R7vHPv/V3gOy+9TtdLZ2tB9R15Y/NIl/x0XpJ+Q6fj
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
2Gc5WFrwLvb5VpZPOYiBTzmorHFLW17fa8LLj3poPlPYlQ8TDxPfL0a8Tnk5
vPvwedf4546FkrUNfrPtm4iDd/m/XJ98VCtLDBTW+bU/++lPX+c2dJ5tc1/0
RzqQzqCvsvuyhVxbefe1rf+T9pLjU3YGvhWGTltfLp7fuQyd0eR6Oipfna3z
b66PXsOt5j3be9dalWRsIvs0X5et1/xedlzMy1bzG2b4bk3nru8sTPN98hgH
swWxD+vwj80mfGOjxd/YaJxurYtntA6nOcjsSzK2CisOMi5mq/tuLDRW9+5C
VqbeYXpnUHcrHz4ePr5fTHmZ03Z49/LzrjWf5StZf8E2Y57OcNAe+JC0ztIe
fGcr8F+tj+hX8sevmjaAK+rYHNzKdCB9t/u18/HV3u/CxBD6i87NRux8BHEY
60y/YRxdTZfTR/QmnapO9my+1pCyCXdtZ2tbyNmdfhOGrA7z2dk+d/G21gVL
sEOa8aozi2Liyj7Y4tN8XnNw2BSv4lTxtV4z+y3W4dPK0iJs9p142vOHmWTX
/Z/tKD7PWll8rRt1D1vQOpls9da1yrPv2IcrwmNY/tnI2YnJh4+Hj+8Xgw7v
Du/eL96trA2w8/hJ46dafX3pi1/8Olkb0Q98qx/3Srd99pjo/9aD+GQbpTt3
LeSu20iOje0zzzb0yc9Ma//bW+GexuuUe3sYG7tzH9bRP8qzfYKFbx8HXZ8e
zi917GvfXWtZ6HC/tSbUNRzJ7sMR4fEIhxqv9H+8+vKXfujr1p+srCzay9ec
4bIPnxrLFE+ME8Y16zxd90xca+zUt9/infRkX/o0H/jmV374eq7fhMnek6f2
NSorcYm385q0ITpgmXj4ePj4QTDrsO+w74NgnzJT79qDPqNd80391TffvJhn
XLTzw7/w+c9fzONT9Jd+8RevNmP9iTpZDmbPNFbaJ3uwdYyN/cWa7L/st5WX
g3S2uNlvy8FsszinDfGl1npVfaj9+435JS8Hs1WfclAes7tcj0H5pJau5WDz
dXFjOSj8l774r577gnGP5wjj3vbvCZ+d9tU3f+TrOOi6/8WzHPQs9lysFLcP
BooD7zzjL/78X3/ir772b79OXg4qi+Ynl4PmXOkW/Xk5eJh4mPhBM/Hw7vDu
vfBuZXaR+nEmhXJw5p5xUHqA7zFjodqVs8S1V2njo8x1fYmNqKzd5wxA7Ywu
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
3lN+V14mHj4ePr7qfPw7uebJgQ==
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3Q3Ytlte1/Wdmk1mRmZlbzb2Or2TllE8z31vzYzKjNCMzGpjaVakpJaY
1bFFxFERR0QcEXGrqCOijm84IuIWERERR0SEcdDtGyoqjoqKgNT9Oc/rdz/f
53I/HBiCM7PvfRzXvtdzXue1znWu9V//3/q/f9cf8iM/6Id9q+eee+5Hv+7u
fx/0IT/2e/6oH/UhP+77f1v/+KEf8qHf/bt96Le+a/6Yu8/H3320f8KLL978
0VdeuPl9b//Am1/wSZ908+f/3Ife/Mk/8T8cbd/99I/+6Ju//tVfffO7Pvdz
b/7AF33RzV/5qh9z8ys/9V+9+U1ve7+b3/P5n3/z8z/xE29+4Usv3fyGX//r
j/v/4rs+7Objf/Y/fPvn/9yfu/kjf/gP37zxJ/89t7//C7/w5rd/1mfd/MZP
+x63H/ez/qHbn/LG193+ql/5r93+9I/+9rcf9ZP+7qfaP+fj/5HbP/sVX3Hz
p778y28+87c8vtXXz/rY73j71l/9b9x+9E/7+27199m//d+//fmf+E8e3738
W29v3/xz/tHbn/Ex3+H2t738/O3P/rjvdNzzGb/5/Y/f/dSf8vc+1f7UX/Gv
3P7Ej/hWt//v13/9jd8aj35/y2c8un3Tz/gHbn/yR33b28/7Xf/R0bf2Z/22
73n7037qt7v9a3/1r9697/c9+vHbX/6WNxz9+c3v/Jzvc/TzET/h77p922/8
d47fmbPP/Z3/4f37/upf9a/ffuRP/Na3P+HF525/+2d9r2Ocxvwpv/xfuv1J
H/ltju/a/jN/+k/f/Opf9avu5vpTbz7p5/9Tx/P/wld+5c2XfsmXHHP+cz7+
428+4ef+Y7d/9JVXbv74H/tjd+vxtmPtfuJHfMTN3/i6r7v5db/219781s/8
zGMdra01bvuXfPI/d9d+++O7/h7fjcX6Pv5tL798tF37mW960+O7d3j8y9/y
lsd39z++G8/ju/V1z6O7tfK8x3dr/fgXvvT6G79zv+vad/Tw+O45/j66W5NH
P/fNb378a976vsdvn3vuxdu/8XX/1x19fOjtV/3lH3375X/yh95+8R/4L461
s6Yf89P//ttf+2v+zWOevcev/3Xf/aAN7/4Hv/gH3v66X/vdbu+eefvpv+nf
vf3En/dPHPe//ff+Z7e/+dP/veN3f/pP/Y+3f/jL/pvbL/mD/+XtHR3fzc8L
x7/f8aX/1e2XvfMH3/6hd/ygp9r+/rE/+iHH589+xf98jOsvfOWPuP2tn3lz
0AQa+XN/9n+5W48ffvw1f7/js7/38fE+d3Py/nfb6Dnz8Gve+tbjPdv+yR/1
UTc/803vc8zX3XvfmCNzbdw/7xM+4W7f/Fuu3VpP+8pz/9A73nGscdvGjG7t
uS/9kg8+2r/78z7vbu1/yEGfX/bOd9688kf+u4P2/+AXf/GNd9bv7/2CLziu
a9vD2p79Oz77s+/25397XP+dn/M5N97fPkAzu/+3fMZn3Jgfff7mT//0p9rm
Fy3b921/zu/4Dw6axBPavpuLWzRqPtpG2+jyru+n2vaN975bg6faP/fN3/n2
l3zyJx/z3/Yv+KTvcntHqxc+9qT9yb/4n721h/TZ9q/4lH/59m6Nbu7W9Znt
3t8++9yOrePvO3YeOledz3f+of/64BPaX/T7v//BB7TvnnfwA+uCzq07Xuo6
fqPtfnvFPb//Cz/o4D2e/Qe+6Accv/UstI5fuQf94LV4hH6+9mu+5qAx/eMz
d/v15gt/339+9KNtf+ofvfqt53pP+xEvdN2z3IOOtXd9Y9PGP9f+gt/znx73
/LJf+kuP57p+md/j+q/4lE+579NcG4Nx6t9zzeHP+JiPucGrjRPfQ8/WzL7A
Z+z9t/yyf/FW++v/xv998HXj94xf/Iv+mbv5fuOxnvamfYkn2rt3zz3WEJ+8
40vHvrS+8M39vrP2d+t17Ge0ckcTx8e99je+2fbdeP0eb3jst3js7sEv8c/f
+GmfdoNHwFhju8OY42MO0IKPNfM8Y2tbP3e/OXi1PX/X30F7PhubdbvjWRc6
+cLjGe5Dz/gHbDHv428w6Gd97Mce95lffdzR9c1f/kt/6RgLfoJ3uAf9wDTP
xjd895M+8iOP36Fx/AatGitcueP1Rx/u0b/zxN0eOXDGmcO8m3P/xkfv5u+x
vqyRcVgn84fPtm2ezcGwybya3+KdZ2nr2xrCLPfj066bR9f1dzemR20b94lx
r39sHGjnbqzH+wwrvZ+/d/0d/P+O5o71gVn4AhpFk3/5L/2o2z/xx//7W3sB
zrn+i37hd7119jGvv/vz/uP7cwi6hX34EKz0Fx/HN5wznDtgF56CB8AFfNy+
0cbf3evf7oEn9hGccB32feWf/19v3/UXfuSBoT5f8Wf+p+MeH79rG3+xfnjL
c/nP+lpHc2Jtzak1cE7CS+CdNh5gHZzxnCv9u218Et2jGbwLH0Nbf+rLf9iB
TejV3OFp8M47wS/3eB/tYeV5Rvuco09nLrRYvHNOGCa6Pj6Jf6z93op3zt6v
1n7AwdcmDuJ/f/Fd7zo+1tLnd33uBxz8dngHA+7W5Wj76zen/PD8wZvJED76
wG935sWHJ1uQD05++Yoz9CN9nO3nHretf7zZR58nb34jTLjHVvfAiJNXvxEG
HOdyzxlfWp/4dtv6wc9hAdzVF57luvnwjBMjnj/G4B13P9w7sfyDD5z2fhc8
uLk84zF+5379uocs5PpkLv1o71nmZ+/YNlzzb8/Q1qe+PAu2GbM1Muf6tA7u
12flu+LdNfadctz73Mt95Jtz3Mf55ZF+3HOZu5uNzzt65s45l3Ed76lv99MH
kFOdP8h9ZCl7He6R4+xDew6fuZwHDp4AC3/vF3y/W7IuHET/v/SX/PMHT3cP
XoOPwzg0bW/BLTRvf8BAOAHnfD9ZEP8Z9rU9edBfsim5Dz58/u/+T26Ng6wP
K40fFp1094L3fYTevLs5NCZnK2vTNn2Ccxa+sTZ+6NmT6YzT3odHno1fOa8V
+4zXdecs+90z/BZ/O3UhLx8y491YDuxzvza+t3vw1cmP7vcs/U82xHtdNza8
zv3OGtYRv3pvwju6A+fvv/7VH/6Agw84eOCf/Wxv42v4rr2Nr8IzH3xy+q7i
4Hi1foqD7vEb95AX8N/xf9fdM76tL/zCvT7FwckyPsVBMoZnee7kFPwZb9fn
RYY5sNfHs/zO/cVB53L3u7dt/W9spwz20mVuTjlLuzjovci8visOGpt+zFPb
9sxwzG8nD54y3Sv3+DIcNA/uc09xcHN7zssbjvYwd+ePynrFu+Lgea44ZMqn
cFCf/m0M69O67Fzk3a9w8NCDOocUB8lbaBQdtv0n/8SfOHgDnkMX/rM/7uMO
uiQPwkF7uDhIRwlH/bs4CPtgmX+3vX/jAfY1HmRv+Qwbi4P2rGv25TUO0pXa
Vy/9gn/62EN08fjlaMX7kgP9m9xKVsNbioOwCR+DZW3DX9h0t073OKhtXHDK
vi4Oan/sz/wHD7wrDppX16/b+oSb2uZt8qB+xmOLg3fn4Fs2DXypOIi3w473
Bux7wMEHHCwOnnaMtx588uSzJ97N5jN9l3tnM1r7xKe33tuP8GM80V/X8Ux8
cpgIU0/d0cuPL3aRg3ePP/ut63is3+HDw9bhyEU3d/n+LffY57fu2ThghWed
etg33OPjdHr77cnzX7xvX2xZNyeOvv1exzuMnu6xbe/hd+bQczev3uu0lb39
wC9YYizDNPd47ubHfe6HJ3sP+DL8h1nmY7i29ybn1pZXfeYwbu1hXLHvxOSX
DnuetmcP78yz+7YW7vO+J6a/+FSbPE/Wh4P03HiM90aP9icbHn5i7+ML6JVN
0zPJfvgPesY30DN+3Ta+rR96RPIZbMLXp/PEY6bzRO/armvbj/661/f2zOyD
sBIukiN98CTPhQFshHSl9g5shBNs4Hd72nnk4CvG7N1g30/7qT/14G/4j/0+
vINZZE14R9Zre3hXvaX7jRHGDafWdo9zwXSYa5Mfh3ewVZ/DRLyFvdl41nbe
sA7XbXpovBOfYZfHL/Fzcrx3ek/Fu0/7Df/2MR/e5QEHH3CwOHjqst51r2+E
E7BmZ/5T//WGezll8gX+OxnQddfGh90/fjr5b7Lk9KX608cwxW8n0+0e16fH
G7+Fv3ize0658V2P55Mw/o3nD+/w57XXz/n8F45+PBPWtG3MszmeOuNDP3rg
i99Ob3n+ffF4F/cag9+e1164zOeTd1zbvF1k3GPeznd68dFsp6dcNT3o6Zcy
7Js+0njqr1I/ltryqtusfFe8Iws/+f3zN1tj9uLJ/84DG+t8Y4aDp074BWt2
8E58AN2idb5Rd7897FBkvrbJSTDF+pA50OV8RdDpyfdvDt8m/lP4/ORJ2OXf
k+XQvE/bxrDP/GPsAzxH2x4lK8EM+GDvwzrP9Az7ExbS63oeHoa/GRfc5n9F
DvzFv+gXHfvX3tRmr5zvy/CO/W6yGN6l7R5tfesT7xre4YHewVy57j21h3d4
mnuMXZttWp94CP7Wtv1Pt4p3eR++N3gRHqFvawDv8H82anhHNocF5HL2AGsK
b/FLbTpX6+088O6Md89qP+DgAw4WBye7TD82HJw+cLg2HNx1+kZ0gGeemPad
72Wc4uDkPnhSHFyfntW2+6fzHF7g/5OhYENxsNjX9mn3e9OBNW0P18gu053u
t/j6sKw46Lr7ioOzzRmf8Zx2vEMmusf0U7f6gQcePZFnn38KB6fXdE/bw0Tr
srl3fecE81AcvPZdKQ5On3mt25ysV+zT9l76Lw7Cyq1dcdD3l/PL8bz5T+L/
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
ggbbxtuXT4y8M37N1oPX2ovNOda8K83H0pj0xuU1TqF+m/VdqS2v+szqOSvr
PY19x3o+uvjDHPKceTNm/J0viXc1J/g3XEJ3cqO1jZb5JaIb/pTm9WIXvs+l
5l2N27xNJsRLZgMc/s3fpW1/zas9bf6NzbubA3sBf9Kn+VrMhY/v3O/vbIh+
e+omf8DxXvwo/Ya9k20P9pFfh4/m29qwj+JdeNqZv+8zDl7dtjMM3nDuy7cf
GHXq+T/xmFt0aw38Nef4t31vvvz+iYz/kTfz62obH4Rx9p/1tE/sh+U5Mv94
D0ywP05/2I86xuE94SZMZLdEM/Y6mRQe23/uQT/2Bx3psAMP0rZ3vznwDp14
7oM8+ICD31QcHEbBuMk8eNzaJw6cvpBnzq4nbXvvlBHedO8bg1fqczat6dbo
DYe79eWYze3y3MQ4vOuwZw2j7V04tXwpi3uc/OiZi4mYbDj/mfk/nvrblx8n
3uHR5f0OPeI59ucf0SNZ662BfWFd8GN8Gea0bY7N9fXHd2Q4NqzlKSEz0Xc5
K+MlZBX70z5rXs3m22zOseZgaRx64/Iam1Bfzfqr1I+ltrzqNivfFe+cW+Zj
3LZ3RmN0mjDcOOxbbfRoXu0FMi5/Szh35pd73ZHvbvl90DneAUva1s/0oIuX
b5zEbIHLGWPv24ee6Zq29/Hv4aD+952/y8NmrswPG6XnLr7ec6wZWZLMa+/p
gw3TfMFD9/gNLCVL/tW/8r8fulXnBDTj3/DYecHcmn/v5Nl47JnL9vOPPW7/
G2/bpTE64+UAoDP4a3/1/zjozhnI/KML7wzP0Rx6no8u3jG/t7bhw2RJ67Iz
Lt6KDi65pg67of2Hb5ETtcmMl71y6GnxKr/Hd1yHO98UvHtW+wEHH3Dwm4KD
F/+X42zf69OBXXIn3rcXa9HYvdM+9vZLXy8/OuPwT7li/piuzw44WWy5aC7x
e8dn/jinrfCtjxerToabLnLyKfyaDHvmjnn7ve1u8f6edZFhHp22vPPjt/Rb
sMin7a/72h9/z2eKcfjL1/z1H3fwGjzt//36/+e4Fy/i2/HVf+3HHngH+2bX
Gq9u22d6ObwQLlnL5pRujs3mHGvelcaeNya98QiNU6ivZn1XasurPrMyXWW9
4h26Q5P6NT94ir0H830P+/TJZ9Hea9sz6fXQv3czRrwUVhuLeYAZcAKN69Mc
Tt6bHnn+oMO0tf1F93iDfWTM5tV72J/402ILfbf77Bc+q7AKnuBdvrNf3Wc/
L6YCxujT/b53H+yEicbi+TDS/Bk7XcAd3t/TERpyL9xEM2gHnpljMr970JW/
o0O0Zl5c93sffrWw1rX5165trT1T384/aFof7vFc64xHmm/yrHe2zvg63Ljk
Bjh4l3eFqXAaD8av0AoawbPoYPER2IdW2X/RJVrG/8iff6t4h4bwaWemth9w
8AEH/zbi4Ku2PY8upTEQp6/FRx/2iMlgk/vQBP3hxQ51j4MXmfOQs4qDi0u4
6Bzv25d8Jwc2T+b07OUDm15uOAjvzhi4lx8VB6fPfCLznW3z64zrAyPYQnzw
kfGZ4iC+jYf5FAfxZrzE77TxF/yLDIC3uNdv4R9s1LYG1rw42BoKbTe/dPNt
NudYcbBx6MXBxia0Xb/N+rHUllccrHxXHCz2mSM8Eg/A28mz9gz+j+7sbe+O
VsmExUHPti9hfHFwOlH7Cd+GhcY4GXC5YPaBjcshUxz0sbfthbaXVwaOre7E
8qp5F2tQHKS3Jpv6FAdhpu+ne12bXO33+Jx75+M6f9f5uA4HjR9dobPioOto
yD37Cwvn7zrsI3+iSXNA9rzGQZ/RcHHQ9z76xDO0/Xb7wG+Kg36zWJbiIF3H
8s61DRPxTjjlrHfqcz/wbxn7HnDwAQe/OXCw19vub80JG/+Zs+n5Q3eHf6Ep
mAjXyDTLq982GltdIHO3HF7oefUW6FnIc3ATDfrdGcvxrsULvD+d2Rmz8D6P
2z79TeZbc+TnfDR/j0vumfv8AJ6Np7yarIcf4OP2P1477MM38Ho4h//Y+3iF
+3e2N//+vRyUi12bf/9kE3SAF5pTsp891/pBrafQnNLNsfmsnGONPW9MeuPy
GqdQX836rjzLllfdZmW94p3zw+ykZCI8Alajc3K2c4c+7HG07rnw13Xv5jls
ZX6Hzo3JnDpLTP83eW++LKuh5LP4+Mlii6EYjvlYA/SsTb9pDa0VTLO22q77
PZ4P99o2z9bNmsEDvNX7wjy/s0+so33kva0dXrD4w+UCn41zOQGGiY2L1EZz
cHHYD5v83nqgSfPiGpwyTvfCP32jXf923bXRqjn1b334Hp2vzoa+yJf2hr/T
c/i0bYz6cE2/9pD74et+O/u2+aaLcPZBq9Z/NPksjIOdbO3sxm0/4OADDn5z
4GDvuW6vH7Rtj59+cj/goGdj9lw06rn2I16Gzuxn1+nKXHc/OvDuq4+2+Cl6
lLbtQ216Ms8y5+63d+0h/dzh5L0c4Z3wUc/CQ8kTdDLo3BjQVtuT+5ybJ8P5
4O0+0196d3vdnI/X+vfO4ui2ObkW4z1fjeU3mY++7yabtF5e6we13TzSzS/d
HJvNOda8K41Db1xe2/XPrN9mfVdqy6s+s/JdMa7YZ92sIb8PdGHdrC+5j06N
H5E9SnZl57RX7UX7i06OvyzeM78VH3O8tRkODguHfcO/yYTm3h4i33kfeNe2
79CZOYYb+rYG03XinZ6JL0xXah7MuTH5nXWcDW/2x7WHwdO/Tjbc2GZf9Hc6
A++52k/oy7gWEzncRgfOZ6O74d3OY36Lhvxm9Oe33mX3u9dz4Jlr6HnX/Vs/
rq0ulWeh/eHy6lTNVm4/eQactM/aNl79ut9cTL9tTsyP+S7eOVfI9YavPeDg
Aw5+S+Ngf7t2+y8O+t46epfioOt4IRpanRe+cfaUdfRe9p/79Wl/6IfvdXFQ
Wz94aXHQ+dU6epa9Rn7CT9GSZ+Hb9pV1d336TfyxOGhf7+zatn0+W43xL/+y
+Vuu5uLg5L3p5YaDw0jftd1asa2d1/pBxcHmlC4ONt9mc441B0tj0huXVxys
r2ZxsH4scNiaWLvqNouDxbviIN5FPtVf2+jX/f7CRvvVvuYPZI/6d3FwuIcG
i4OzE9ZmODnLPrRe04XCQB/0TuYuDg5TfV8c9I72rTn0O3IhnxN6P3pTvHP3
w8nZEF0rDk43cI2Do53JibOFak/PXhx0DZ349zUO7izXtrm4PrOhtdVnRIPF
Qc/fPcXBxaIYw2RW3+ljuv/pSXxW1xg+FgfN52T64uBwHX094OADDn5L4+Cr
4V3bfdb1c80JXzF7wdpZa3MOv1a70/XlCrbW9HHo3T3mHw1YL/0sP7B5tg+9
uznR9lxt+8lzl7NR/67bO/aJecNT0Kt/43HzP5m9ydxP3zn/z9oEXSsPWdya
d9i5fm0fc+ie6UT3d/aq1kZvfdjWjW3tvNYPaj2F5pdujs3mHGveleZjaUx6
4/Iap1C/zfqu1JZXfWbblfWKd2gZH/MMay722/14gH2HJpxd7Et8ioyL9vCV
tjfvcGrzvtj3Yd7u8W6zx04X6i9d5uRDZ4nZAif3mXtzQlacv6h959/edb5N
bLiTKeEiGdLvtNGhf/vOPdp4oTHY/z7DxJ2dRgvGjI4mgy4fXNvzu/JZXoHF
i6Dd2U61R7ujC3/dj95Hh8VEbWMZPa1P14d981sa3a0/z2p7+Di5c/5j5sRa
4Uc70/jr/czN6nMNE69lxuU5r361Nsf65NRPtXEcjW1szKN73L8YkOXJae64
5lZtvvHW42iNqtauWt1JckHrHVs/7+D6MAvGmRfv6Tq6wv/ho3nCDz3DdXsK
fqNl9o9LXoP7fET68Vw8eTjot/YCXmpswx3xMMM+7+b+5ZA3NvfrE/26Bw8f
/g4Hd31t8zKMG+YO77T1afzDd+uxsVkz+8QY/La4o40WhsWT0arDrF2vfi/1
Bf3G4F3xt+2OzfoOj5Znw5yjd+O0dtZr182btdC/ceKH8BFt6NM863PnAftr
64XPWVNYuZqhO8OMHmAfHox+jAdNozN7cf6B26vDqbXRpPvgh7/mdOdb+h9/
dzZeHPd8GMerqp/beX/t1kavjaj18lo/6NViA4a7+3ftSs051hwsjUNvXF5j
E8iJ1kE8RP1V6sdSW151m5Xvinfo2Ac+tu18f9Z0fevN6vzoHybac/49Haj9
PXwj19o7i4NYTUHX2p5tym/NiTVH143VXFwFHNw9dNZ+5y9+5vnoyT34z3IZ
kP/IybDadf8mIxqT+2EmHui6f082XJ3Dtc3/7JfNhTosXw2pybuTE63l4i1G
J8O9tkdjs59+2aXm4uI7pmtFP2jb/cPF9T+a21kORg5nF4M5WlvMiPZyl48e
0dx0x/6uDuTk5bWLj5Ufq1OtzbF+OPVTbexGYzqu4xyXB6C5cZo7rvlU8db5
mDX3eGtztF5V6zm2xrH3GA6u3tZqbOFV9CLmxB7SRpPDUHRs/xnTmR/wDx/4
spx79pFzmevGZL6dTS9xnvfYal7Hk4dr3s0828f2J3ox5uUSNAbPXQ5AexUd
4+HwaLKb9bB++jG2YcfuGbbuvcyXNp5ifoojxZfKXNVJ1k5XP5b6dtbnczF7
9GDfGLyrTNr2tdw67O674CuT8e1z182n3xq/eUD7zgbu0dbnZMldN8/myvta
C2PGP09fuK+6z0+FPxuDcz/eba2d6bXdA9fwe74ddKD28mQI44PVzvH42mRG
fjHzOdAmQ163nXNhS8/J4zc+42PX9dBbH7Y18lo7r3UTWk+hONkcm8051rwr
jT1vTHrj8hqnUF/N+q7Ultd2ZbrKesU76+N72El2pJs4Y6vPvJj4DEyGM3hS
28MDuGKtzJk2Gl4cBHqb7OeaNcSH/HZymnf2HflCf1tzPN37LrbCXiI3uHeY
CAvJgvabZ9Ov0aXRh7Jb482u7/7Ji75bjprJs13z6W2HJz7ey73G3LY1tJ6L
G9w66m96Vp9h3WyTo8PRpXut9XKVrz16mf61eXqm3xgdbSxoZfLjdKyjIXts
+lcf77Gzjbmezrn4WJlxsZ175vSrs0c2L4U5rJ9q4zga59jY/+Gds1/z5ND3
O1+73tyqzTfeehytV9Uajt7TORGNt96xOVrdSW32HW3zvbb3XS1ma2xfua5P
ewkuoD17b/l5LnFRxxjgqvMAfmgujBUN4NXkQf07s7pvcg0+Od47O8hw0Pjx
cDzWmrh/ssnkx7aLifrRpznds1wfLnhu8aIyVHWMtbvVHuddrDnsrw9n4xoa
99dY+G8K9rVdebbtYn3fd7IeHlq8sz9glnXpde+4GPK2l4d/OgeYqO361rQ4
qE/0anzFQfvUfkQv0+P4i4eal8Wi+zc+51680rsWB2cTIUsWB12fnWW6r+U7
2Tm4ONh6ecXB1lBou/mlm2+zOceuc7BM/i0ONjah7fpt1o+ltrziYOW74mCx
z9qy89iz9oY8d/SxZy66Mx/R7Kf4YnHQv80H7CsOLo/2eGlx0G+tW3HQ3FkD
9xcH/ZYuhazQNrmOn4x3x3PMA56KFvBfeFccXJyhfxcHh7/X7d3jmRvnYv6N
ETYXB1dXeHLwcHDnLjQwPYO123Vt/Tfmf5/i4PQc88e9xsHqQHbP4oWucXB7
ozjYtrGNZis/Vqdam2P9cOqnOnuQa43poAddLp3mAWhunOaOu86tunzj+C48
cW5rbY7Wq2o9x9Y4Nl+z9813wn6pPDgd6WpTattb5tf9MHH2O/sNbfkdXCbn
XmJTDqz3fDlFnOcuNsl73el4pvFMNsQXZ0/EP/FY7dnyKg8WH/Uz3Fw/7re2
u+5dhiPl/5WPXk1naN1qX6vPSX0yG6fQOL7GuTf3y2+61GOHlf9/8G563bZr
66y+t/JvzwCdk7bNM30amjHPa/stLMNPh3fTnfotWXvX1+fyN7aNn9HVu59M
iAbPXFGff/S3WgnT5diH9pmYAOcuH1jJV8e+5DOOH9KP+et7/BC/nD/dMHV2
k+HjeMdi4NpurdjWy2v9oNZTaE7p5th8Vs6x6lnrX9K4vMYp1Fezvivz1Zie
ara86jYr6xXv0IKzNl09fxr4uHM1+rFXjQsGmFNj8Uznmsl+5hk+mCfX8Ye1
Fxvv+8kKi51fezbEyYPmGa7CS3IczFteHbzE8/gaeUfPMS7rrj8YRdfQ9lnD
/vlDR7q6vmhk+e70a5yw2hjM7XLZ8Bt2pufHgW71B1ub/206+V0zX/7O36bn
PLihPTpYPeP6N4+Wdn6rTnRy5uhudDM/MddW03G6+rUnJ9oD9eEpPlZmvNap
zs5Y+2N9cuqz2jiOxjk29r+5cZovrnnkmlu1ucdbj6P1qlrDsbUdTxn+nQft
my88E09bXWYYZv5Wf9naaVcedJa0Bp5xySl74KD3Qaf2jzMnPueZYqnP8+fr
jxxB5Mi9F9z03XCKXGm/mit9eq5n4aveAf1PRzr95HLIwy/vPBlwOeeHBdf8
nC5X/5Vxqhusvaz+JPWxbAxC4/LOmqpH/rGncrk0x0vznjUv6DcV79au/0/b
tY1e64cnL/fM0Dk052S9Yuh1u/bB2U/1j8bM2/x29l58yZbTGO2g/Ute75uz
/uFLjxaDeOYXPWtAuOZceepNvsvBy9iJ8KftQ3/Hj7wf3oaf2Qf4obPOePby
dE2Heh2H0fqwrZf3DdUPWh7p6/zSy7HZnGPNu9I49MYivFq7n/k2zHeltrzq
MyvfFeOKfWh7djTzBFNh0OQzGDH5yPu6x8eeHib77eL2rMtkJL+djtQzrM10
oZOX0Kz2dK3ut8b4WdvkPed+9Apr5zOzvHTO495/8qCx+w6mGf9owDi9hzEb
12yKu+435nD4N1/S6U595mOzeZ/efP7Msw1OP6CPYdbsbaOD9Tm782jwWZ/a
wZfDbphs76Fl/a/uB0yjD3F2LCZOH3EtP1a/Wpvjq/nh7P6dOxvbuDw85MPm
AWienOaOa27V5htvPY7WqGrtqtZzbL1j60lewZeMczjoHc6Y7FOn5xnz5yRz
0rWYX/fAcPOwuDM0CZv8Fg56B3hsb8FBPA1uk33wMf2KnyYH2YNnrvaPPGwQ
xgZHpouDreYZxsGs8Vv801qPx85Pw1wM14aV49uVZa51fbN/1T+kPpP1pWx8
QePvGpPenC3NY1a9aHNfNyf23y68q09s2/UXqs30Wfrkytc9Y1zP+dqT37Un
97kfnaBR19t2jp8dnA8jWiY3o3V45/yw2u+XvKP3NY+0zxrCb7qvLYHG7AH7
41Kz8TjjWF/nUNhoP2svzn76O7LE9GT4bNvzjXGttWJbL6/1g1pDoTmlm2Pz
uj27VHOwXMehNy5v1+qrWX+V+rFUh1ndZuW74p13Mv7pft2znKjw3P2eM7vd
cG1xCsNEfz3HGWU2t8VELH6kbfPpPs+bjck4fD/fUO+sD3ZA40BD9qffF/sW
U9+2cXoPfW2NYJvr3ku/+wvv6oM6/Fycqd/Yc/M1Xq646VEXpz8/zOlbJ+ev
DuPWaTa36RRmB6xNcLLc7ttn8SieM3+e5cWxlpPf1h49z0699rXMOJ1qbY71
w/GZbbO2+MZxNM6xsf/NjdPccc2nSsZY/Y7mHm89jtaraj3H1jhG03gAXSX9
AnkQXzJ2fdGRmB+yHizzLnBX2zzCRDho3uAg+W36QH0Nj+CCPbb6y+6FIXQu
zpeX2j6PvMelpsIj8h/8p/u1/+CSsc2OObshuQ8Omv/Z46bfg7nlw9dyynR3
89/w22v7184D9Y1svEDj6Rpj3hwsZ67p9z2wvvnKVmNh9daX47p1H1oX6ZsD
+xoz0nb9aSsPPgsHr+Xu4uDOJF2X2XznZ+se64K/oCP0WhwkA15ybr9/23Tr
qxFob+z8YM4ueW8eFQf7X3GQ7Wj2+rbtdfOO7tD/9GXDQXywOPhHUx+2ONja
efOfWY7L1lMYTjXHZnGweVeeFZN+HZc3nW1xsL4rxcHqM9uurFfsMw7fL3Zv
ODgeX/kODi5ufTiy9uL4FidoLt0//6RrHNQn7IE7xUH3eCbdt9/gcXzR/AYG
0hMYi+9hn+cvrrA4OFl54x/+mcvV+J3e1Pj9G57rtzg4OX62w+Hg2p7R9s4u
3nM1qxa3Mf+a4uDobHr6+p9OTzo9aO3X8/EcfUy/AZeKiZUZZx9vTtj6zF77
5NRPtXEcjW1szKP7Z69vnpzmjmtu1eYbbz0OujeYBhNbu2o1H2FK6x2jEbwA
dlozvht40fg8u56xTR40p+Sd6khdX1whTPS+xkoOMs/4IRwk3xrfcBAvhNfj
897lrFnw3H3OLpjhvfi+4oewE62RDfHPxRK6t3y1ckd1cWtf263qy1Ffx8YC
ND7uzA14+kA2ltx8knnd3/xjzcnZnNWt6dA6R9P/nbk4n9QE/ObCu8ZXrt0Y
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
+XJBt1ZC6wedMQ6v/E219lqLtvXZzXXkm+P6pcb8RSZ+4ajP7p1OG9b73Jx6
1Nc//pbEu7abx7Xt5rhrnp/mPWjsZ2Nh6g9c/6i2azuu/rz6hJ6pSmP44PDu
nZc8gehj2GdN7Tdr6sy2tvHZc854MM7e42cxu/Cut20vzD/bfLq+HDvk3jOn
9ZPa6PMJ2Tl8dS2M89XqBzWP9Gw1ftscm8051rwrjUNfLGP1pfM5GSbXb7O+
K7XlVZ85fg+ninHFPn3BdpgyzLRfZ1+dPGh/ug9Oua6ftvHOxQeupoTfeg5c
cy62d/Gb+T04T5IBfH/mY/j6g4bJj+TGtmGTMZITzcnqS2p7b/pyWELW8Cxj
QXPefXls6OXM895Ln96L7tWaGat3tw6uw3LrZW79Xnt2T/O83DeeZS7MMTxa
HKP1Xy7UtT1nMarTNwzviomVGatHrX61Nsf65FTn2TiOxjY25rF5AJonp7nj
mlu1+cZbjwP9t0bVale1nmPrHa8GmPUhD7J1OHOfvOfbHHjjvOScSz9nL42H
nDkNz5yf+pkMaGzwbjlnFks4eRD9GTd+AgfLf8qXelavLqv2nfo/1CewPvON
I2t8WWOum5Okebqax7K5nZvzuXUQWifounbedW1Z+H36iL51sfH3mAm3FxcP
B/F5vzEX+oV53te9s4vNn+bvFN41t3nbzft6nftuuYDabp6Exoo2dqb+w/Wn
KvZVx9529Q89g5Umi32LjXW/vde8EPbGaJstXhvNw0S6kZ0J7Sc8Hw4uf+Bq
RCxWyhy03Zqwn5Fasa2X1/pBraHQnNLNsdl2c600B0vj0BuX19iE+mrWX6V+
LLXlVbdZ+a54NxyAReP37plfjXcf70cjszeaC7+FHfBpWO23cMga0U2gDTGO
5L62T5/htx/7Di5at53H/N48e9bsht7LGOXiMjbP8R2cYE+Ej9bB2YYM4d2N
Vxt+eI8zx/kPPObB+M2994LjWx+/31ljsfbL+4aGrZX5QkvONcuJqh+YaE3N
v99MRvYez2pPn6yP4mNlxupUa3OsH87iFYtv802ebNg4x+YBaG6c5o5rPlX3
Lsd9c483ll979apaz3G+2YvB4FPT+Asf+9LHXiV/kT/wnMllbIfWDe04384n
cPsd31j+TLhAnjJmODjd6XhI+UzP3tVN1V5TfwbnNjIQHljfv/rDN16sMdTN
MdK8W83HZb6M1Zo0h3PrGrTuT2vhtVYsrFqce+uqnzVklwfm/e7rwJtf8p17
yX3+zk9meWQuMZ/Hd7BhcfXa7mkc/d9J7Gvtj7a/NHnRmxu2ufKKg82fUBxs
bGnja+pvXOyrDbo4WL1E2z2zlW7R+bCvOIjm6TlnCxgOekd+Yugfv/Duy9uA
H+Kx9io6Wv7mxUkUB1sftjjY2nmtH9R6CtXFNcdmcbB5V9puTPr0bKtpO0ws
DtZ3pThYfWbblfWKfZ5nnK+Gg3Bh+tLhoOdsXsy/Zy8fvbWm3zKOzdtwD88o
Di5XOFosDs6PFNYY12okGCe/KHRQHDQu2HjqDp7goLl5tbb+8RG/mW1RX+bK
uK1xcdDe1IZ3xcHFifhN24tbMS5rZ9x+p8/V0bjGx8mMW2u/eTU742hjtsP6
qTaOo3GOjf0fDs6fenlymjuuuVWbb7z1OGYrXL2W2Q3n52qftd7x6o7CwsXm
+6AlY7Q+eAdejA+Tf6ZXXP56vM674G/2u3mAA2TA+YvideUbPVdf4yAetbiJ
yYPwF1887WBPfPnq3/50/NeT+OjmDPEM+8CneX2ac7I5mVunoHV8zBed8uTq
1bybX/slj9p9nXRYCIuNAT7CcPIdOc68nvHy73dz+sJ87uPZu7wTrNN2zyVO
ZO98c+pK337vG+N+8s/qTrw74d2wYO3WCmm+9OZRby7Z5tZrfqHmW2jMaWNw
2q5fVtu1WVdvXz1Gz3LXtL32YkKHiWQFdI4Xm0Njc3Y3Hvegm/l3Nx/k5Dd9
4Ovmev6Yq40+2xd+2Hp5rR/UGgrmYbUVml+6OTabc6w5WBqH3ri8xia0Xb/N
+rHUllfdZuW74p3vh1ttT//pt4vJGPYZm3db23eztVo/ZwXnHLzGPj1zUhyf
g0+ceQpP/zT7CY07m6MtY6AfgovzIx0+mnO8yruYv9M//vsceiT0ZO7oVNGK
eXKWMRbzD89hKrxxnY7JdeP2PLxl79g2GsEr52+DtozD+m6t3b96GdMT22eL
fbluFx9fDRN7Fpo8uHvqpzp78fTS46uNc2wegObGae645lNtntXlZViO4MmL
rVfVeo6tcawP1+Gfa8NCz4CFZEOyD94u76L1QAfkJ+djMgkMOs9hp31tPhiN
DV/+ZHQxeXDXq1OqnaV+CPXNq+9647nQKXzhG9PY5+YGab6s5pO8zrG8GgSt
y3PGAJ73t4Zd67q27nnlajov/NnnYgs89hisO3Whbz/2mPaZB+0NN4uTv9ix
jv1JzrEnXZ/fqPeCr/stPbVrp9/Mc4fOmNz07oB3q7e1GNK1W0eytbRaW6T5
1Ztvtjn3mouv+Yian6Exqo3Zqd9y/bjaro27ev7qPXr2616w5+dzBQ8v+WsP
eib72jv8itkrYOHpF/QjDn9v9L8cadrzR2k99NaHbY285i1p/aDWU2hO6ebY
fFbOscaeNya9cXmNU6ivZn1XnmXLq0xXWe8a7zxXez6z+P6w1Xvau+bJWPG1
nQP0C3+cC/VL9iKrX+wl73/xMz/O0vam8749aL3wLWczOlX4h8b05dm+mwxo
LvVprswznat5ZUs8z1Xf5/BBPXNKfr9DB0x30Lb5g//u8x7mDP/yvp7nOjzR
pvvtusBoa+jZ1QO0vZxAsyl7xuyAw8drmXE61doZa3+sT059VhvH0TjHxv5f
58ZZvrjmkWtu1eYebz2O1quar+l0qov1X6765Uh0Db24x3Uyo/78pQv0Hb6O
n6PtYS2bF94pnrD7uvu9Z+DqiGo3qV9Bfe3qg3fagL/44BWN22osc3N9NP9V
80M2Z3JzKbe+QOvvtCZda7a2jvliWFw3l56h//ni+uCRzoM+5xnzlUdnLq+X
H1/8dg5Z78Tylw6sq+1vmEjmdd399H3zK12MC7w7YwpPO+n0puThdze8a7u1
lVtfsnUnW3urtUiaj735aZujrzmL2m4+h8a0Nsanfs71+6rtu7aAtqsn6Vmx
ewcN4ltsQ9P9oB+8ZD7h4w/XcdX1ZZhfymoJTa/VenmtH9QaCs0j3fzSzbHZ
nGPNu9I49MbltV3/zPpt1neltrzqMyvfFe/ado939ntzhj7goz3qWfa++7wL
GoXl3s964yOXfFo3py/dcxe90euP/XfG377f5Z4XD50UO/RiQtEJPMKj8Do8
zrjOfM3f/qm2dzcGfmDmb+MxRmM6eeX3OrDOPdYFlrnP+m/NtIeDbaOJzZX5
XOz/1s6czE4LU9EPOjH2a0zcOaPyY3WqtTnWJ6d+qo3jaGzjcAutNg9Ac+M0
d1xzqzbf+NqTKRdj4ZnDwdZzbI3jYeUwcf6lw0r7cLXKZqPQnk0RLpB9un97
pq3Op3aQ2kc8B/3wkahPXf3MG4fV2OTm7rjk+Dhsgs1z1Vo2zY3cegHX9XRW
Y641WGdXXf6D6Z8X39Lc/Nq+h4M+05H62Bvo0ecS1/h4OHjaDV88sA/ezefn
jIl/+bh+xqx82L3cR8aFmxd98CEXnrUmXnlUHFwONlj77ox9bU+G8tviYOtR
Fgdbo6Tt5m9/Z3LYNqdfcbB5HoqDjYFtHFD9ousbVlt5cbD6k7Z7tuz+Wo1d
dFgcHP7NJ2842HrobbdWbGvntX5QcbA5pYuD1/k2l3OsOVgak964vOJgfTWL
g/VjqS2vus3KesW74qCz6fK5tG38k39hv/c4fb4fHf5r/hYHYR/f+OU3HA7y
ISAfrsbG2ugLDaMnz7PXPcfeMQfmqjho7MbjLFUc1N7cmitnDLZFa2xu9WU+
6D7nY2MOyJ/FwdkWnSuKg+gIHfhuuGY+i4+VGatTdc1a48e1P6JFNHfq7Z74
rDaOo3GO13kAliNgOSKWL3B5G5b7yDs193hzSrReVWs4LqdN8+nMJ2c+ptO7
4t/L7Ts/j+3BtnterQ6n/k61d9QHoD5y9RtvXFXjjpuLY3mp0WvzVjWXY3Md
txZA6+O03khryc2vdv5Gqz9ufrzzfGJq553Prr02e2HlQfrT4SD6tid8zhwx
Z67s0/flrce5k0w3G19xkP73jDE89Z/Lr72cos4Cbc+WMZlRP7Dw3Rnv2v59
l5qGdAht26fOReiq9ZqHd7CvNbxa06R53ZvvvTlvmwOweZCu8yMtNraxQvWX
rh91fclqW699ofqWnjmftQfHE1ajabnVZquZLWc1HVoftvXynlU/qPUUml+6
OTabc6x5V5qPpTHpjctrnEL9Nuu7Ulte9ZnXes7JesU766XtXe3JxfCT4/lK
ySGFd3sX2HGJsTp0WW3TvcBGZ2/r55q1hIXntc8+zmFnXbUvPOyF/rJte1f4
s/hBzzFfbVsjZza6D9frawoT3WPeKutNHpw/6mR574Om0IX1gK/W3vxam9Pv
/3sc5xsYBQ+dUYqJxUrnCtfw8+pXa3OsT079VBvH0djGxjxO97k69bMjNndc
c6s2Z1LrcbRGVWtXtZ5j83Y3n+n+jc9Pbppdsjl1ZqfsWbS6mtovat+vz1t9
whsntfzS/B8aU9ycG81D1TyNzV3c3P6td9M6OK0N19qpzWE++Xp+vvPxXa72
2XCbT3a2VH/16/21Jw9WL+o98HP7fOfNy9nzHu9mo7/oee/j3Rb3ff77CcaR
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
jDXvSmPPG5PeuLzGKdRXs74rteW1XZmusl7xbnXR0Mny95961a9erO6BwTAM
/rW93P7uXV5E40WDfK/8tSeNcTGUaBV9nzGEn3fgJF6Plpa/dPUAzNsw0VrQ
ccKR4mNlxupUa2fEu82/++qTUz/VxnE0zrGx/9bUM61R8+Sg03P/fIen1r1n
oeoKqj+vfVkbnu5MNV+s+ic3fqcxrc350DxIzY80WXJ555ZTt3nmW4eltcla
u3My2PKTt8718swvr7j1mR/3YoiXk3x+LZ6/8677Zvubb+f1PscH3GcMzuCN
O/ab1tlYTvHZGr2nvW7/4ft+O/nduy9OyfjMt7b3NN870zYeZznZt+/sIfvm
tAM+f+grL/VyH69OFJwkD17Omfd1l/zOXjrjBM/Yebjp2mrLns95481ZZ/d1
N2d+3i84dC/WE02R96wHWnMefq1hX9t+C/vwt7btM/fww7AfZney5ngvG2xx
EE8arywO0oPCPmeitpe/QXt1TJa/6MzR+6FP4WDrihYHr2uu7WzXPPzNRdzc
jNc4uHwdxcHGMjeeq/7txcH6PBQHqwdruzJC+WRzjhUHG4deHGxsQtv126wf
S215xcHKd8XBYp/vzvz2z99sD7oPDU6Om1/37BLDwdS+uWn7jJf42CMn1uJJ
7AH7zznNebY4iN+4RvYtDrZNZoBN9l7lx+pUa3OsH079VOESnnHO+ZOYDuvs
nOf83zwAzY3Tdew5p7I/OoF39mX15K1XVd+q+hs3Hqfxqs3hsBxHeHXzHTUH
YHPkNm9866qsdgpZqDXItvfQ9fAKji72Yn6tqymmPXv84pn8295crY3Vomr+
HO89WW6+M83xsli+nnen98Fflh8OJg7/fIcHTf/kvelwzNv8iiezDxO9A5qi
PzHv/qLF1dfFC53vpwu1Tk/yQ724/NmPFt9gb8wHxrVin3118fG8rxVov9lX
vrPPdv+pN33DzVmv8LAxHvvRvqYnsP70StaJ7oEvGr7l/fh3vBbw7syT9ZYD
49q2zvRR+rSm+Cbss5/cA9vOOiSfdPA0/AOf02fbxkufdsl3ftipGiNPByo2
YvVH0Ag6XN1P9EkGXG726SZGw8tHsRwyw8TWIb2uxbZ90fz8zdvf3MXN5dh8
Vs3v0Rjnxny1XX/4+gTWR6J2ourNKjs8K+dYc7A0Jr1xeY1TqK9mfTjrx1Jb
XnWblfWKdzARztp/s0XCqrX1d+aK/cBLLu633dvzYZ5+0dX06/QLcAbdwDlj
Mm5jnNznvNq2OZit8Mwb/q5Dr1t8rMxYnWrtjLU/ut8ZAw7XZ7VxHI1zbOx/
12WyvH3TM0xl/Oq9axeur1R9iRtfY36Mma9fY1Gbq6H5i5rfrzlvmxO+uXHQ
2/CgNcVaZ/OdqUO9/aSv1dEwHzBA23vvvGmMk/t8N/+25a/Zvxfv1/rDtWvM
l2YxUdN97nfGjX+MByzv9eou8k2fr/rFZ+WwAXrv0w7/HY55WsytPcl+YG+Q
+fkT4p9oFL2TvZwZzKW1xvP4hTrPnz5nbzr8JJ6uefH2x4v7s6dgmX0DE097
4esPee+SZ/vRagU6O+L1s+W77n7f0eXZX/YmLLIP0Cgeht68DxrDe9CQd3bu
846vNbxr2z6zvjCsbTwbryALOBfii2ys9rA+5zODt9Jx4QXmG46ih9XCXfyo
T9v21HIZLY8fvDPnO6vNhxmtusf3y3U/XGwN7+s63atZOn+zxdCulk3z+Te/
cXM8Nvdj8181H0hjohsjVj/5Z9UPqk9F7UrXerbJGuW9jUNvXF7bjVOo32Z9
V2rLqz6z8l0xrthHRwDT0Nji+tHn/LsXG3yp/XbwAuda9kG0r380N/pC394T
RsMrfB6ewyT7yNnVXJnj5aa7xkS8yTtVfqx+tTbH+uTUT7VxHI1tbMxj579n
ksrs1WPXzlvfp/pEtXZV42gaW9rcC81H1Hx9zWHb3LbN9956KK0R1hqarSu9
mIDV0ET3aHxxSYvHX5zh9KVwc7/dXnN/c3Mudn2+nfNlqe6z+s/Z9xabMFxc
TrflQIV1eIlrsGm+5/jO6nrCePNkfdCS9UIf5hJtoGu0Q4ePnq05esEn4Z7f
olX902mZs/kQ4bXks9X5JePBNJ/VPFotwMt+uW/Tiy528BJf+FQ+GTIf7Fsc
veswCf0aNxx39kFL1gZ9+Lf1g+vOjdOLotfXMt7h06/WNofGzE/G2XH9OHc6
28C+tu0rvJeOCH1O9+CDNtCdNrrUXs52uDb9ZetLTL8xmXDnu+tPbd09O7aW
d+uZts5pa7219k3z/zcfcnNCNkdW280f0hjqxpTVr75+hvW1qO2p7erlKpuU
Vzcur7EJ9dWsv8rTfixPdJjVbVa+exrvzpre9vnOuWdOpxcPzPNszz1tzm8+
7Mf69Cz7x571F+8mF6I5+H/mdnrHoXscrrVN77xar8XHyozVqdbmWD8c+8bY
4Hp9VvXlWZPXNp89Y1QGb+646qvtec/y3Po41e+3cTGNFb3OpUBndurEnuQd
wi83781V2/ztrW/Sml+tiWn/oXmY1frRqyNMXrKXJvct/tw9i8ezX9xrD+3+
yX3DysY7zJdtGFYcXFyff08G9E6r+b68ZbMHkrv8W9/4Dd6ivVwb5sF8mAd7
yFzAOfvHmlkP5zC6g8sZ//DZmq/75D60vHyF1n52RfNGF+p5xm/d9WOvnL4t
Lx31I+yrs07gS0/lzV58BBlw1+DmakGc+HnY4I/7YOXyzqz+oHvxlJMffMHh
S4Z+nbu8O36BRpa/7jzzfsDtad967vYB+842/m0vW+u2YZw+7VHnJfvZ/XiX
c4czdHGQDdDZiP6zODi885m9Gh2tfY2Do/3ZvIt/87due/tlepOdE5fHcPb1
4WDrnxYHWxOn7dYLaM7k5pAsDjavSHGwMdeNO6sffn0R65tRHKy+rjhYWab8
vHEKxcH6rhQHq89su7Jese/Mkfiux6dt+AkOrua1/ouDi79ZnSa4azxP8uD+
sSNHHEyDfd4FzaPFYmJlRvOFbtFm9au1OdYnp36qnZ+eHypTky/xGetV/XNt
svVZqk9v41waB9rcCJfaOQdPax6h5tZr7tnmZm+9kuWhdXZqbS970V5B960H
ba/Md2U1WubzufZwDB9drLq+/W7nRX0NB2t/9zyf7a/JhItxmE60+LfP9rGx
Ol/PP5y/3ex+9ghePNv8fDjxI/TgPE9eR5MwznpoO2OYP3z0jEF/7j4m+szd
8NbDxuM8iy5PH7AX7uudDX+9FzpFs/T7wzR7w16ybtZ1deOnC51fqOuzDy5P
jPuNdTXpFz+xmHk04QzKvmC86AkvgXHOgM48aB024lXeDf1bF9dhorOLMxF5
9gHvzrYzrjX0Lm3j3ac+7cMPujpjvL7vQT/OvvQFdIWr8yUWYnbA5ZIVO2j/
+ffy7E5epLdYTETb04FMP7J2cXLXl390uDld6WzorbG29myAdDitD956qa0Z
d11DZzHGrS/QHMvNOdm8W81D0ljsxqZd++fPb7++i/XlqD2r+r3KOM+KU6jf
Zn1XasurbrPyXfGObsX5mt2h7cVF4fXOx/qCmcZk/6IxdKTv0bB3IW/hP3DI
e7ZdfKz8WJ1qbY71w+n7eje8xr97NqjsXH1y7a31QaqPbuNWGs/SGM/mQLjK
C3SfN6+5ZJtrvfVHWpektbpay7L1ndHb4uq10X2xzz3Tp+Cjk+lmH989w7X5
fLofVs5Xxj5Z/k+8c3sP34UZu2e2C30MA/Xb+rXzIVieso0Pze9sAuPMM1o/
9dBn3sxLffEjlgBGWWd0bP7cj8adaRYvhq7QD3oyTs8gT+Ffi5VajlaYO1pB
O84pZL4zJ8wr97VunZFOPecL9/XilxutNeIv8e6Pn+SJeePhGzO74KmbOWXF
00545NI+csKgP/t5eZNOXdHNwUvsJWuJHtGh90Av6Mf5efP4gHcvP/WOF7/B
+7Yzhj2P352+5J9w8MHZkOzr2RTQM9mODZAter4tPvP9hHFtz343nNvftYdl
s/UtN/z1Z7bBYeXa+/18aiYbTtZbXjX7Et61hnjbra/aGnOtudO6A83D3FyU
zVHZPF3NW9LY7cay1Z+//o318ajvR+1f1QdWJipG1Heltry2K9NV1ive2eOL
8fW70x/uAw++rw9jwPvxC7yobXNn7M619FjO7mdt6Sf4WJmxOtXaGWt/7HsV
65+O43iiH679tD5F9TWq/23jUxqz2ZwGzfPTPHhnLsIffMxLc8Y2j3rrjLT2
VmtTtl5z6zivDjAdxPSa7hn27bznPjLO9J/LZer68osupnw1Jfx2vtfw0fOG
ie7V1+Lf528znehwcDnXpieafLd+7QP7Y/oNOI8+zC+84rOCRvAh62jNThvZ
UbPoyJFlDp3Rnc3MtXdYDjHvQV+iP/wCv/Mc2Dc7A141/yF7CR1d6P/xagXC
r/Os8vzFt+yMB7S+w7npuhcrAZ/JdeQ89zsHwc35ysBXdEl2dH05oRa3rT97
H416b+NDI/aI9YOHeIH59Y7OkObeXDpDwnP8yV57wLu/Ge/a1ic9HDqjbzjr
Rhx6hNvp1WGDs6h9uZzsqz9Jd1B5cLH0q0c2THTea3u+LtOdFBOnK+lntoP5
h+3e6WBqo9f2m+lIZwdZPZfl4EYn9jq8a83x1l1tPdb63bVGT+sUNG9zc1c2
l9d1PpPlOWmsd2Pf6v9ff8j6hNRG1nb1h5Whiim15VWfWfmueNf2mcvtSw67
IvnRGQp2LC+7PcKG59qJG9/x2Avou5h4yoSfemBU5cfqVDvOYndl2/m+LtZq
emDvC8uMpb5D9adtvEljMJuj4ImO5DOeyuczP3nPbw7Y5kVv3ZDW1Wqtyfl/
wr/WZdZGW+gVTeL15g8No93VQ3GuWvw7GkKX04GgXdfH/+0T+2BnwulY7Q97
BW76u/by8C5OcOfF2RC1V/vIM2ffs5/sCeP1zuZreY58zCP+aw7QJl2APWE+
YKA9aX3wVjLwee2Q94994wxoj+P5fm+u/MY6G5e2MyE96/LsGOfOAMbiLHXW
TX3948W/T59pXbXP+IUX7+ljOpTZ89D7qRd9/YGDZ7z7y49Oe/wpM6IHdOVM
tjyiZ3zh6w+50hmOHuf0KTv8FA8awXsXB4E2rD88dDazpniPc8Fkae/u/cy5
9gP2fcPY1zZ68S7LtzYcRO+TwYqD6Gq51tuGNauP4jeLnZgN8RoH8f/JhMXB
+Z0tb8xs7POL2bjWx35j317j4GqtFQfdY+/bv/OpQ3fay6dRHGyd1uJga/e0
3boGze18netyONj8J8XBxsS13XiB+kzWh6Q4WL1icbAyV3Gnus3KesW74qCz
uXtgRdtkO3ihv/EtdtDiY2XGPre4XFn1olu8r1cznlRbZ32B6ivb+JHlbzT+
xlriu8aI1zyde/xJzrrmdH065/mTOiB0evoxx62Z1ZqSrbNs/yyv2XAQ/0On
y22NBhYPOB/P5X9Ao83LDTcmJ66O4a7DJ/fDwdVzHv2v/tPqOc924LvVepht
fXmE9Q0rjeW0BXzuvX3YnM3O5Trswb/oK8wvGy26hQF4u/d37qMP0bc9hHbw
D3oVc4UP2S/OUPgCudL62uOzr7vfeN1nbu0x+9xz8boLrd37I11i1A/73fSc
6Gn6BHLdmTP0XYctb7UCnZ+03U9fuhxN2rsHLjonaS8H8PKk2U/6R8toA72e
9sjnDx4Ax62N96Yrtf6ue9/llnfOXYzq5EG8RfsB775hvGsbPe2M2/ZiEVbT
dna45cC1HxYLSN5brLzP8savfsRiC2FY9Z1kPFi5PLnDueHg2qujsr06/8/F
5M4uqN/F5w4HXZ89xbv4nX28mjXLt9+cim0vHhmfaR3z1nVtbbvW+mm9g2fV
D2puzOYHa76Uxow3hq5xBI0vqI9lfU5qd6sesrJYsckewsuWh2iyXvHOvvGd
ftEZvgcjpmOHP8XE9tP+i7mVSaunrR2zvj31fW08SONEGjvZ3ALNt9N8dM3R
2hzmrevReh+tgdUaka2bjM6WzxN/tt6wxp5BW6vZt5oHaGDnruEgupl921lt
mOh+192P/mCT/ty//BCu65Ouwf2LgRj9z69m50r8eLH1rqNV/a7mMx7snc/c
0m+55Md86/06re4NejEP6NP80Afg+dOFwic0ipc7iy8nmH2DZvGW6frwC3we
r8JX7C80z7fTmJ07pz/G59Ae3nixF9/LfaMHmAWn0JB/nz5RZ27Q0zf0jPdD
MyftvPXAxNXK9fesCXjafIeDy6ENXxcPeJEbj2dd8oQe48LP7V/v55yE78A+
e9a5ZDm88DJ7237Hh4d9y8tnPZaHYX5oD3j3jcM7e9JZg/zQ9vw+F1c0e/fs
E/62vRhaf9Ht9KeTDeHiagcu9+1qedWfrPET82GbjDhc2197sjFNy0kIF4t9
y4HkjDj7hj2+/bI8Udp08LOlrCYOWjTHxkGHZK+11nnb13Vgl7+3tYFaH6H5
opsz8zqH2NrNr9IY88bcNe6gfpj1RamPSu101VtWdiuWFe/QER4Rnc6hB2y7
9xdDK2NW71q7JIzyPfquD0/9Whv30VjI61wBy5/TvDp4AZ7o3ZqLtfnJW7+j
Na1a87F1kFsfGf3Zt/Y0W8JkMHtj9STQAHpeXQnfkxen/3S92If+XV99XrIj
2hu+eR5aX8zbsG7y4GpV7Jw7P5k9b/6hfmMfoqfV6ERD+OwpN7/xmK/mPJr9
2lziI6dfxlvvZUCyH15/1sP8dvf5WvB5sg58POslfO+Dft1rn6J1fB5fwmfJ
kXzY7XG46H2NzRoY02krPu159JRoZXQ1zDrx6PUH/ZxnqjOHJ/2CfzsTuu/U
ATx/M2zzl15TX8M+fU4XeuaWOeuiLc+23zl7wRJype/pOu1ZNk78Bb7Zm9bS
+cBcWFN73XxZdzzkjKX4vsf7mgd8yx5Gb5MHzdU3Bu+ehX3PwrtnYd+z8O5Z
2PcsvHsW9j0L756Ffc/Cu2dhH9o27+bgWe35hdlP8+1abbHloi8OtpaEvQab
VvcEHTsLLz/8ZEK4uPwQi6Hf5xoHh29oZLG/82EbPs6PbnH0qzdqbIsZ1PYe
++1w0Hjdj7+4Z7zGM/EkdLY8M2jBb5d70BinF2192OJga+fpe3khWk+hOaWb
Y9P7Oov7TfOutN2YdO+Jx9A7NU6hOFjfldryqs9su7IevDntcs8f+kD0CC+K
j5UZp/e86MhqZ8Rrjjjj+uTUT7VxHI1zbOy/PQAv+Rc2T05zxzW36tO5x5/U
42i9qtZwxLPNlbVpvWPXza05mLwEL9D69Izo275yVlrdO2csNOA6utCeLKft
fGVt0ex8SdHSzl3Le+RZ01ugudUlHIauBtN0pPOTsSdmW5xcOZ3Jmbfhh9+f
H+3n1bJHy+bjMldHzSHY4Jo5xEvRE74H+06a+9RD7sP/zZ2zA1pHT/g53m1u
0dhi5dzzdV/74+/r25L75sO2vITzWTpj2N/nIne9dGDfWaf9hUMOPPPhvvm4
B80t37V1nt/LdAUXDL2PcXCmmx/MeUZ66XjG5EI46PrpO3r2v5q5frvYGPsG
3Tn/4cPe1970Lmj8UvPlsAHaI9bB2cr5FR8wB+ZqsczmDL04m5tX162NeXmQ
Bx/kwQd58EEefJAHH+TB17I8+GAffLAPPtgHH+yDD/bBB/vga9k++OAv+uAv
+uAv+uAv+uAv+uAv+lr2F32IH3yIH3yIH3yIH3yIH3yIH3wtxw8+5JN5yCfz
kE/mIZ/MQz6Zh3wyr+V8Mg/5RR/yiz7kF33IL/qQX/Qhv+hrOb/oQ72Jh3oT
D/UmHupNPNSbeKg38VquN/FQf/Ch/uBD/cGH+oMP9Qcf6g++lusPPtSjf6hH
/1CP/qEe/UM9+od69K/levTWyvfOBsXE1xo+kvvwSbYK+9M9+IJ19lxyAV0L
fqHPto0XXVz034cuQZ9ow+dr/vqPO/SksxsuRnC6f7iINv31cX2yIPwb7sFB
ODU74Xxf9AGzXHOPfTc74fbFbA/Duelt8IbtM/i4v677a0/PPmLPsD971nJz
tL28MXiwPY8WzZNn4UN4KEw1v3Q3aHL+8MarjUY9yzrhtW17tr3qPFLeW9mk
+rras+rjUd+P+kM2XqAxdNcx5su7UkwsVlZ+rE61Nsf6rtSWV31m5bu2r7Fv
uXGaK6Cxk40fqT9tfYrqa1R7a/XPlcF7Jum6wCBrbt9Ya3vMZ9fdQ39g307e
xIt80JF38Cy4gY7Ib+53TZ/mx5idcZwTzJ0xwzW/RUPmBN6ii/mX4nH6RJPe
z55YrET9nOcP4rl4+vxb7Et7A67ZU8uTsf2kr9nZzcfyNXnv6UeNcXbG5dKY
bDjdqH/PF6A6Hs+p3cM9869brNR+N/3ReID28k/hEXz4YKQztr7JRbDLe9ub
5ss8LceBPem8Zm84I/K9wT8nJ8IdZwVzaa3xvLszyiGn0n3TDzgDPpf/ztwx
b7vXkS5uYj4yZMPFI8LN2QlhJ16/3A2LN/Qd3Yb9ZW/CIvsAjeJhy0OFxvAe
NOSdnbe9I9rAS9xfTHwt4KPfwj5r2raz5GK27F3809nfXremzkinPP3icb7H
b5Z/in7otBE9dwP32AvRXNvTg2rDN21nqWEf+pn9j45jZ0bXhnH28ezvu47m
YaK5nb7VPX47e2B90bY/9THfGX1oW2fPtcftE306V+EJ1nrxxu7Dp+wbv5+N
wu+Gg+iQTsaZv219mGtnUe9gD9mDxobn0eGUl1bWqP6t9qm268tR/8b6/zcm
rjHjzaPS/CrNOVZ8rPxYnWp1rfXDabt+LLXlVbdZ+a5415w5beNp9ri919wC
ja9svEn9b+uDBBtgzTnnT/TS1hkWsgVUZu+5petobJ6JB8EA97iOTuCZfbnY
Lr8hn7kfPRiz+/W/OBp0szhouDZ/KnOD1+1++GYsePna5tU908kv/4M5Rs/m
zjj0D9PcN10pjIWJi5nf3puPjP1EF4Gvek9tfxeXoe0ea6JPn9kQZ7OYP9ty
Xyzfxc619uJ0P/OFG+aNP8A877WztHuNezYbfMJ3eJCzs98M/83b8hxad++J
3803CU05d5l3f9Gi9Vu+GzrSydXW6YkP04uPTh2pHDJnHI29cfpTv/0+tuKy
B4995Tp5Ep8lQ86P1Hf22e5fPOz0rNP/29fOWtbfec86OUs55y3O4hoHX2uY
aL3xGdhn7+Gbpy3nO98uL4i9eMZDP39z8umPOfopDtqrxsL+UxxcbgNyCwz0
Yd9GI+Q/9IIW0aR/X7eHg2h4dsLi4DAQzU82dM/a+zs7QtvXOOhe61kc9B3+
MF2oPbB4ZDSkXRy075x/+ccUB/WBL+GxcM3+QX/jn2iifLKyQ3GwerbiYH0z
6rtYf/7Gu7VdHGy+lOJgc2wWEyszVqfadnHw6TiFJ36b9V2pLa/6zOJgZb1i
X3OrXueaW74dvN099kRjMOGC+Xdf41Pqo1ufpdptr/XYnmmNKuP3nNN1x3P0
s3x669O7zF6MPv3WmLTxVm382XXj9C5ozPXh6fy1ltsBP/EenoWmzaOx0Zsa
pzPIcMz9i71Ax66jS/0uf8xofjZy77i8gdNvLg8hnFtc4XxyZq+3PpMTraf7
F9M0e7/n2/Pzd6vOdPrS7nN8wH3GAPv0OZ88v8Fnhoez8/mdcXhPe33Y57c7
u3r35TgwPvOt7T3Nt7mdTGzep8e1ttFhkw+PfbEYCnIhvPMdOXG+psPEy9n2
2G/nmfKlQ17cWdS1xcReYv2P53jeaY/5gkOXbj3RlLPd9KJ0LObbtWHf2u+t
+Oi9/Q5vs65nvpAffMzV/IfNk/v5yeANeKnrJ58+9VnOFItjsX/YkK2Ja+QF
62W/+g1dFFpcDD15j65UjAX6owclD3pfdLnz2XJqo+/FU5ir+Yy1bX8MG2eD
X56Z2QynV9k50XrMTrE824uZQMdt443ml35zPtTLs+3vcjP63nzry9kSP7Ev
8I/xLvzN/JUHVkao3qx2pfpa1Bex/vn1228sW2O9m/+k+cGaM/PpnNJP2sXH
yo/Vqdbm+LQfzhP/nGfFcdSPpba86jYr3xXvmm+87eZibT665udpjoLGbDZu
5TqeZT699XGqnbd678r+PQuVHkonizNd7gVymH6XF8u5FY3R2+K3aN25379h
Bnp0n/7hlX7RG90dGoX7vjcObe+uf7wRz0fD2sa2Mezsh/6XT6lnQu/refM1
Nb/eyX6375wX7G08wL3br/aWNVqchfFbJ+3tTXPmXOw+cpvzsXe2/ssVPH8b
z8YvqjP1rNkV93d+A5MNjW02Ge9nrswFTDQf1kt/y4nh+/mmmnd0SD9gTObG
PeTNjZXcCCsu+o5Hi8c/8ezN93g3P1L8dPm97bPT5+b1B+axNZAn7S/f25/2
5Znb+8x9esb4v/LYc/EHvMM6o2U0bJ6NGf82x8Y+LFv7vRUf7R86a3zJ/jc/
2tZTGx80T/Bu+dPwz/nGzN8dHyIbXmS/I5aGbGEuyJRnDv5Pvve5EoNDN0rW
815kQ/vDu8NA/24bbqFH9NyaFNN37uw3vYy5na1c/37rr36mC217ubntY2e5
8RBzSG+Oxq3v7IN+A+/Qtz7gI92Y57ofz8IP56viunM2HWl5Ws/81YPVTlTf
ifpU1M+wfviNTWvsdvOZNN9X282N2XzRradQfKzMWFmydsa265NTn9XGKdRX
s74rtd/VrlfdZmW9a7xbPY7mJ2+OVmtkXuFX8/Zc5/PZGjTGs3Eu9fut7xM+
M4yrXbi68eoKenYq/bi+XOvz2yEHol+6XXx6bbQ4mY7sCjfxbe8/PaV3W94U
OKhP9IdGPZes6L7FvOIT2st3urxuxtH8uvbLasrMhuB3i8/wDOdhe89cLuZp
uWfml6bP4Z89NUycvd774gPLidP8GIvFmP/cbIx4wXJRrX6Nz+wmfr+c/uMf
y5Hs3cwT2jBvy4dvnDufoBE0iFbN33RBsHU6UrQw3yiYd8HCR8tRujzbpxzx
rkNHuniJU+/5lsenPvWVS37WM1fF/Ilh6PKw0ZFe8pI+PnMXfu+Dh9vn9rHz
JnpBd3RH5na5Bd6bMZGMgO+g9dW0wQvYfPG4touDzuT4FGwrDpqDxdrQL5Md
8WMyC72X+Uej5hpNtF0c1IZ9zk3zgYaV5gH9zMdrsbSze4/Gh4Oj48mJw0Hz
UB9y2GU+XN+/Z6+Ac8M914uDeMjwsjhonHgZnlV+1TN8dVxtFwfrI1EcrF99
484ai91cJW0XB5vrsrmgWx+h9YOKicXByo/Fwdoc64dTP9XGcbRdHKzfZnGw
trzqNivfFe/ado81gVOt39Ec5tc5XZfjrnl+8FFnJevTHAiNA21czLVv8Hyl
YBO+OfvgeOZ8jPVf3ULPV6W3+bDg06tHsToU6Imctrh52IGW0ex8RyfH7Szo
O/3g4/pfrgjzuLh8OG0/GLN5mX/NZFV7yHfmf/H8xgwXfee51tI4vddqZrhn
OprpNSfDwaudbxfftPiL5fIfRg7rzM10P9P77DPd6eKLJzfOB3V132ZvcZ++
rbe5tr6T962/9fXMYTT6XL6p5c1afZz5tm+fnrlIP+zxcPFi2ztkusVJ+H65
uC/1Ki71m07/MxioXRxcju5LfP6hL6V/tVfxafsUtp/1Oj6bL8iBU3CkmPie
jo/u91znbesDqy6+7odvNtsRWlyed/i4HFSegxeaP+dw5wm6Z/wNf7J+bZsn
8smZI+qdx7nDuumb3MGvxp6z//AlZ0LxE/PZuuPHhw+XMcNAuAjzfE9/Oj2+
79DS9KTeffg4evaxr5YrZn7d5hsde2e8xv2ri+g79+IF5gefwRPmJ7O8iWjb
e5T/XPOindWrv6p9pz4P9Qmsn3zjyNpuzPVVHpL7PF3NXfl0bucn9Q5aB6G1
gVo7r/hYmfHpnNJP7Iz1w6lvan1WG8fRuLzGKdRXs74rbdeuV91mZb3iXWs4
tqaV3+LzeHjrfTTneXPANg9e8wI1N0JjRdHGq8XR1Je4vlW1L1ffXp1Dz2Bo
DD02b7Z/L2fnfFHQtt+stqC537lutQuXP3B9eO6uoc/xdhjZc6N/T950P2y0
Nsv5bX6WO80+Wu2XxeS7z/O2F5ezYnqb+cQMu+DKcklpz6Zn3tHFYvxh7WyI
kzWnM53P+eIUG3eF1+hzmOW3O69v3MZrXVfrw3viR4sPmZ7Vb9ge/R6u8iH1
wdPsBbaDM07mzBt05qJ54WI3fPnR4o/g2nxpLnGGN0/yzrzuZrH1Zy6AU1+K
58LTU8f6nY97TnnyyPO+PDaH3sY+9/7zhy4mvqfjI1rZe7nHGFxHG/rhm4fu
8Cp8rW18xfuRB+lvzAGfBpgIM50ltGEm7CMzLm8yf4f5ycBJ63WeVZ600QLb
IBoRR+EDB0fbq0lBHqRPXV4Z90/3vxhZdOs+Z8+dBXfmWw3D4ePyY8z+YP+v
hpo9BP+GidqLIdYub+nZu/qo2mvqw1Afv7brD98YsesY6uUVad6t5qJsrua2
W9egtX5aC6/1YYuJxcrKj9Wp1uZYn5z6qTaOo7GNjcVrjF7jFOq3Wd+V2vKq
z3xWvapiX+sdt+Zja2C1Dkjzojc3bHPGNm9e8wg1l0JjSxtfg14Xv1Cfq9rd
ao+ufr46ip7ZSrelZ/O22NhrXYf+PW/PgX/bE8svuvrUOzO6b/rP2Q7c7z3N
7XSw7oPby0Fh/3mmfWtMxgI35n8Dg9ynj+1Z7+Xv8mHY187Q063iCeZ1/i6r
ebF4xfrW+ffyK65O2+qmzsY433V9zNY4/4X6sq6mqnv9zhhWM2c1U1dnZ3Fk
Pmhz9YIv8YGXvEEvPD4/rzwa1p0609NOuJxsyzsznopHaE+2xKNX2xcmnvbF
w/f0Pt7QPsWrLzrT+xz9xcT3RHyEF+wPeJR1Ycdwv/behYzuHrKwtV2f2uQA
OHjqF95x8EFnHryZDuvUg7zt4INt68OZwhx7V/wSJtLF7rxy1qk4c7OjEfvf
2Esb5D3+pGRFtIR2/Hv5Q/0bndk/aKs6fes4v9LFHM0+OP/s0S/aX9yT/bic
gTtPjlf0LF39Uu0vbddXof579W9vzFdjopsnpHm02m7OyeZhbp2C1u5pbbvW
e20d2Kva6Pf4WPmxOtXqWuuHU/+c+qw2jqNxjo1Db1xeYxPqq9l2/ViubXnT
bVa+K9619vF1HeT5vbRGZOtktW5I86g3l+x8USYDLr/QZDrja+6Fxp82Hqf+
yfXRWr2jyVDDsurzq9PoGa90vjjZxb8vps89i3nQ52rKexf/nm7Ev/12dSj0
uRgj7+bvfm/f+N79nuM+47Cn3bdaisshTj9kvuAnrDNO6+M5q2+4/KXLC6cv
fa+em/b87BZXuFway7M/2XE60tkK54NaX7ydp9efdXNt+lntPWM8ybl9eiw8
jX/EeN0w/cK/bxYnvzwxbH/TkTr7rn7YiX9vuFmOw8XR47H7PV6B7561Dl88
dKpnnu83H77aMFHfy8N6xi8+wcH3dEzcON1fHLSOT/I2/pCDf5AHtXdPcdD6
r10cRLvO9Ww4zuD4Hhx0bl5NTbIEORL/4ydBd2d9ioN+R0ZorL0PGXFt4xkW
ok9t9GSNln/muj0cHF17v+Kg+bFmiw1s7eDxkeqO2i4O1vegvnn1V288V2Oc
i4PNB1IcbA7J5lhu3YHW5WmtuuJg67oWB1cb1ViKiZUZq1NtuzhYn5ziYOM4
mnOssf/XOLiY9OJg4xTqt1nfldryqs8sDlbWK/a5Xv92a+2+1k32XH2uPsjk
uMn+s9+tzkhzrTf3bPPvNR+R/rUXf7pcDY1XbfxOfZjr01VdZfX8kxG1qwPp
ObD7YnpL7dXkXI5Bf6ernG2v7T1jWO2vZ3gHbfctz/7y/poP67h8X2jFd9Yc
reBd9hc6EWdlX68+2sY9DF8shrbnL7ej38wPfT7n01uOb2xM4x2LWZ6+tFjq
s7j9/Xu1wpfnar4NeBOdFh2Y8dN9fd3X/vj7GgQXHdfBM/HDs7bhmw4+ae83
h0zbyzW6Gr/uXw2LSw7umzMP6fP3OOi7U1/09qMfcsvshtbNHrW/235PwUfP
Qj/O5tbutJ98ziEbDvvaLj4av72O56AP1+GjNcQfh5V4p3dHU8apjRad7fFC
dAcr4SMefOYj+fAjBp9Nko+N784azO/7+Kzj9dKh21u80M6Va3sWXHSOQm8w
kF69cUDTg9hb0//vzOe7nfm2r9vuGbh6odpN6ktQX7v6n1/7pS9Wq7HMze/R
/FfNCdmcya0j0PoCrbnTmnSt09o65vbf6qc6T6xmatvFx8qP1anW5lg/nPqp
No6j7cY5Ng9Ac7A0Dr1xeY1NaMxC/Tbrx1JbXnWble+Kd9NPzl68NvogSxnH
9Jn6aZ3l5mBp7a3WH2ldkuZmb67a5utr/qLmcGhMa+1jjfe59nmeDbF28NoF
rnUjOyvOnrbYvO2jtadrWQ6zjcs1Y9j15amfn8vqjcIG172nj3MPvDMea4hn
6hNPc/b2LmiTzsI7OHf4Dr4szxt8mf+3edm51m83t9v/vjOW+a+QN5fjcfg4
ndLwsTVPh4XTNY3vzLcH3i73FV9A49Q3u4/nLF7Md+RD1/FQcgQ9pRoS57nz
pUeX2lEHbuGdi6/YuRnOwbXlmRkm0pGeOtHj7yN61GHlbC6rA+Wvf5uXM9/G
m2/afk/BR3sFf4FlaHq+MdYF/8B/pi/lr4AW0Bv+a/xnXpPPOe7HezzL2jtf
w0HrWnz0XvovJrruucZ/5uV8x/I5HzR+8T88YhXxUZg8n0fXzvwiL1mXY/7J
BfSezlBkQ3TmGasXjU7Rb9vzGZ1tfHu2Z9rqeWoHqW9Afefarp95Y68am9x8
Hc1n1RyPzf3YfMitF9AaOq0x17qrrUturtCu57uOPjzH9dkyrdfO5sXHyoyV
JZ9lc6xPTn1WG8fROMfG/jcnwLNyxzUmvXF5jVOor2Z9V2q/q12vus3KesU7
PBZ20XOgHVgEU5ZrxXcwyTXyZOsvty5za1Ne1+pavZLmb28O2+a2bX6/5jtq
zofGwDYOqH7R9Q2rz1jt5rUjVJfSs2X3l7+zpS1H02h5+Vt8D/NgFD0n+8b2
qbGhf2vtHIZe9Dt/dHsdXTpDeYa2c5U9CxPxT3ONpvC07TU6EWdi7/f/tXf/
LLtl533HVahIkUKlihBUpHCpKgg0z2FeQIp5AS6mShmGvAIRQhCppkihIoVK
k0qlAsYMLoJxNQ5OkGEc5NZFmCJVmoTPXvt3n++5OSfIkUceJ8/AzVxnP/ve
995rr3X91vXvdxk3v+cePKt/b2y9B+/b768Hjnte33DfaW+41SDXHzo+q9mO
q+1y774zX9b6kXt+svHwqY/Uc9Dn1vli/nf8/80dJ3mHl3u5o2RrcVg5jGP3
LVYIV3d89RRsSbi52l7/Nm9gkPGv/G3GR++TD8segi6Tu2cuedenZ+l/uHJm
Th3wn74jDx/lZHh39Czc8S7pXpg4OxH2eeewcnHGyfDRs8Bfa8YezfP6rXGZ
WC/rR0p3s3XM57MP/vN7PL+8cm0OJ+Vbuf0ntofiUyj2dQ12j1pfTeMalZsD
0Ly45o23lqq1xuXfKC9HuarK5Vh+4/L/tydOe8a1j2r7q7bn+DBx+avLXTM2
fm962/MMK4eJlWs/1r/amGNzcpqn2vzV1jZWLg9AeXLKOVbeldahtxavNXqt
U2jeZnNXGsurP7P2XTGu2DfeaeO5nrSzH1cr55zVkjvmXcPH9ms2F9cHt70s
28+r/U3K917O2+VPrpauNt1snHJENN+ydUPNo24u2fIp1+th8YXhHv1e38uH
9qKrRWfr0PX8fvR/c2Lhsj0zveEZ6EnzxL1752TXMl+OT+GfX/qKTLeYI3SL
d0LvOZ/u5HMwX+ksPkayvdH6orqme1tuuY/n9s7NDe9ydfX0GRsOjo3vcTwe
65Wz2n3PvL3MxnI2tPu11tiB9p7WtXExPnyjw0Hz25rw0Zfi5uT+aHUS8E6c
qXkvw8fV0d89ux724In7fX75SCsXK11zPS3cN3yxp/02Y+LZ3/z1hS/FQXP6
9ED79+/g4O7f73p39lpsCu/Z/orsPdFTd7/Kh1wcpKNOHfB/egcHyYfH8Y8u
HHRN92ye7bi5MJuxcnHQPhU+862Z194DHWt+wh1rp+ure87iYP0zxcHG9Jvz
1jzw1km1drg4WJ6N4mC5GctdXD7/9rupXBxsv9TiIF1J764WY/noMK49f/2N
jqlcHCw+1masT7Uxx+bhFAebs1ocbJ1ja//LjVPuuMrFwXKwFAdbl9c6heZq
NnelcnGwvs3iYPHO/DFP1p/de/A3OGFM5//b/BlurnbMuJoj5t32WO3vvJjV
nz31/FqMzlxtP5Rywpcjt1xi5U2a/MwpMTuvsTCf5lo/554t/t54hHMW/6qv
pvvVrl96hQ/JGvf89JK9seuba/Sbe7LHWfzF/BFT8XuO02nzR03f8pecfij/
5NI3hyP3F2+WH3lyTeSaffyR34C9dFRrKFx/PeDMI2vX/73H8fEvfw+WwVPY
6P+rcV7N47itxuvdfsJkf589yB86HLQ2zEefU1v/nbtX0xfj2b7wa3kzxcHV
RKzGcLw0h7/t88vHyjZcDqrvrUfwuGv4V40Fm9Q6LiZ+2/DRephtNd+jei/v
7LbDrho935MHdOLlX17nuI575ke1tsiL/bET2Wnek9+d/+1wPh370XH+B8fh
43ynk7eXM9ec77vmo+Ou7/4dP/z3v3jYtuKI5trhM/6Di8/ttmXfdO10b1l/
S+MRjdE3h6153c33bl5Ba4TLm1FeqXItlou4cmNG7WXTXm/tf9r+4OPsp4et
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
PtUPxRybk9Oc1dZxtM6xtf/lBPgQd1y5VZ+5x9dPoZzS5dgsz1j5x8rB0pr0
1uW1TqG5ms1dafyucb1n3+ZsveLd+q0vbui7nmMxPX9brop/r8ZhMbphoeOL
1833ufyXfdojqHg5HhPvcJyZ4/ea3N6d7WXWfi7P/Pbj+C33b/kPywdVTozW
CLdOqvVTzSFvTl3zChpnqa+pe+/qn+olesHvwApzdRxkdNniYvOZwTt/Xw8k
uODYHQ9/c3Dx5/Doyj+FPfzvcivYGZ6FzrUGjJ955+/mBj+/+7ZO15vJO1u/
XvMR7rtvMU15HOvzOQyGj3CsmMiOpaOPnXfF/677si9lfx/f5584750Y4urq
Pe+pN/zhZSMvd3T+amNX+XeJj44v98lxmAgLjLPrmDPWjO8u32nyyRv571ds
xppkx9FXjpmb3r+5Nfv5+Iy/d2Hiai39e3UojsmLX++P7evgZ+dY92D1S9Rv
31h2Y9zN+2pedGuFWktbfonyL1UuV2H5e8tv354v7Yn23Cd0NfOVl9sAQ435
ck/H2zuujdWGOX+xv+Xv0MOLB60/znJGXZsOp5/d37DN32HibMPVMxYTi5W1
H+tTbcyxOTnNU23+amsbK5cHoDw5z73Rx61avvHykLeHQuXyS9dHXc6x8q60
Dr21eK3Ra51C8zabu9JYXv2Zte8qF/tmIxqPYeY4pbcfWqzPXJsPrVwk6wc0
G3D1ass/XH03eR9/46OzrxweTh7nZvtZL37oO+31+VX6nbX/S/nwywlsfVuL
8Ks8UeWPKodGa4pbV9U88+baea7mpS8PobGY+qa6V6++Yp/eOHfp/8Oz8uDj
vfDl6MXV6/1kvRt+jHd3ft3D+/Onj3xX899veM98vPSruQXf2bPmwak9+sM3
1hVdTDafYCB9bsxhOr1t/pCN0elP+KMHtg0TYZoxvm3VB/+ac09v0D+5MPHU
y196/c3Jnfn5wy/q+zDUM41nxjXYwHTR+3Dwm8bEYdnyVYaD5onjq78rDjoH
t7G1sz42vmvM+Q1OT5Q/uvAIbriGWGBxkK/AmGS8Lhxczw5j0vnTPVV9DpWL
g41ZFweb59w6oNbGFgfLI1EcLPdguXnLV99+Lu1xVhxsP9DioLk9/+T2/K35
Gq+h67lO5eIgfehv7qc4SHbP44dsTHCYt1zCcdpMLg4WH4uD9amuP5s9QPNw
ioPNWS0Ots6xtf/lxil3XPlUi4PlHi8Otn9Q+ymUU7ocm5WLg+VgKQ62Lq91
Cs3VbO5K5ffF9ci19Yp34/YyB+YTmF9if1vPn9Uo1N+5z/yjs+FmBy7/fvn4
w8HlfMK49Uowx4eb8G6yfd9iguy99r+2vhzz7/ZEW04jn1/7xZQzvxzC5VQs
rxT9AEfYPOXcaN1x67Cai97cvOEgX1PjNdYBbKR768vqfr76jR3EBylnBqcZ
GdbwW8EM+ME3Qfew0ZZbyF/m3fldOtmYL/fVuNFvntl8gX10tfe9GrdxV9KH
3pVn5xOjizw7HWo90J+uKe//1AZ+7+6f9MWFicsDPXkg//Dy9d11g9d7gJ+e
a3HA4arzTtz0u2/Wm2l+V+vEvdm7FBN/F/joOLyYDTVeBdhhDI357s06nZ1o
bdiHbC45HyZaezgbzc3DVXH6fHsP48Q6fsZfPezizYfK3TvVn1B/e2PQzdFq
3nLreiq3Bra8EOVNKpdguXbLP19e+tYOf5VeZu3v2f7Xy82ju4zb6ijmw5yu
c3y/u5qM6rrWNdPH5gc97DMcXA7r8WG/lYehdPjuffeweN4wa/0Fhom1GetT
rdyYY3NymqfaOo7WNrb2v3w45ckpd1y5Vcs33n4cH+pX1V5C7adQfulybJZz
rLwrz3Xok1uj1zqF5m02d6WxvPoz6+esrdf5sBje8lx23nBwOTCTnzm7xmO5
69Q2fPadmpPti7B8l+XqL95HhnPL8YB9ZMesM5i32r/2y27P0PZQo1+Wi9/+
MuXYL+dweRfLQ1UujtYme05zDMa1bqu5683laz5D4zv1cXXPT9fddXofVR/6
LpvvPOM/va5Nl3lfdJRzjTddTQ97D/Sz48Z/vVon09tnX/E/LjtxfX/GmUN2
He9ATiB/q3dGn8Jdz33s7U+277h8tkcff3o9yzhEHXvLG/P1lRfqudjm9gPj
ZcOXOD7u5czAWPPYe4G/xcRvAh9XF2+snM8/4Phix+aJsbKvWExw+Og4fHCO
850z+5ptBe+WbzM7HVeWuWFfb37xafdddy9U/0D9540pN+eqcvOTW7PTmtby
PJQHqdyA5Qwsj2555tt7pb3Jllu+PKzt41eHDDfpTsfW29o1XHvciuXoGMfi
dNbq86e/fFb7PHm24rhrlme/+rH1vnHOMLP27Goblusym25y8fHZfpxPtTHH
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
t2P7HY9fwD5jnJ2rc1+O0uzz2ezjU2l/2MqrH/Bp/6D2UyindDk2yzP2Pt4V
cmvSW5fXOoX6PRqze18ey+IM823W1iveeT5jQ8cs73N7x9WOrneHeWTdwzj4
ZW6t5hre0bUwC67RDXwNdBzsY9Ox8+kkc11er7nnuHOc75qwkkyHmn93TsQb
vAl3DuCVP0MPwU1YedfPXTXC7C046P2LYc0POSzzjoaD838OmxznFzUuwyzz
CnbACONEH/qN9iVvv/L2bG0PO+O9Pj7ta1Bu5/FeerbyfZUHrFworQ1vfVzr
BZozad01t2T5JI2p1cdYm6u4QzYXVo/gfXh2tov9B900HqnVlMj7XZ+Jt70Z
jy/d3Csmfggf+1vF4tqntVvry22ss/k/zY9tzUhrKsszUP6BcvJ8Fc668riW
57y9P9obq3L7SLa3snc0XGp+5/IEptOWd7DcT3+r7F62r1/8yzxaHdTql/2W
uewZPf9qmp3rvRrz9Ulzv87zd8+4WIpnWY2AvaIcj/WuENPAE3B6B/3+nVf9
ncu3I48KhonfOYfd453MT2I+eE/mMP+RcT/c37++uDfNU+d7d8XEyrUf4ac1
au035ticnOapNm+1ft7nOsfl95cn55k7bpxyy42dv2485O3N0X5V7efYfser
W3SsvNTDvtXdLZdlc6c99cyt2X3P/WHbL689g5p/Urn80uXYLOdYeVdah95a
vNbotU6heZvNXWksr/7M2nfFuGIf3c6mMs9gn32UeWr+0IXmpb0ZPWQe80/D
B1gob/euyb7wCN7Zt3uXdAZscj4cgI9yLehg9p13Odlvz2YUD/ZbsM/+2joQ
g+IjdT9i2rDy9v89ftdv2QOZ5/MZWmN3rO7Se+vFZj84f+B8g+bS4onGjf60
RoYX6y0Oa5wzPPLb/yV9zIety0ddj9f2uWvfn/Y+eOaCHjdm+cGeOcR2vPXj
radrTUFzLJt7+Rx3WzyuPslnu2w49Yxlwzj37zfsj/jLvU824TMOvg8Ti63F
wdqhxcHGLpvb03zX1oNULg6WT6A4WA66crSWt7x9PSoXB9sXsn2T5zOyJrdn
X5xtfcie6xymj4qDy7Ebp+/iQN47n9vqwuwX5QZWLg7S0XAIhhUH6Vz2kv2p
3/GO2Cz0sb2p8fJ/e1Hzv3Jx0DE+pOMjeIuDftu7sK/w3PJDrB/jYx5Zq8VB
OEEv2LsUB4uPtRnrU22csXk4xcHmrBYHP1T7X26ccsdVLg6We7w42H5V7eG4
fFXvcfX78/lNLg5uLjzj4OpCl+M0DGo/9OJge8U+4+D6B7WfQjmly7FZnrFn
/rFxsBQHW5fXOoXmajZ3pXJxsL7NZ1tvePeKg684+LvEwR6v3O/WrqzftbHI
5upUbl5raz1aC1l+gPLnlFOunKuVy0/+3LNjPa3a57H1tOPR9bFG2Zlyrq19
8rgH5z+1hmG8XJLte51v/Kd/lpsyv+ZsgHFY0o3GFK5Zc3ALPrFpja31dnjn
f3T5Ao25ObAe5daUd+14ZfrZezP2/EJsLnPM3Jnv6NTsfXL5PK0J/mm5xu5h
a4e+ch32WmXPZ07dPFLX/ZA9n5wja0NtCf3Cz1RMLFa6hjVurten2phjc3Ka
p9o6jmJgcxWfeQCGN+WOK7dq+cbLQ+777+tX1X6O7Xc8vk/rxHtcHWP5z1bb
PruvseHlUzbOSzbnhjt/dfdGb3/Y9stzn+sZ5NrtJbR+CuWXLsdmOcfKu9I6
9Mqt0WudQvM2m7vSWF79mcW1ysW+Vxx8xcFvGgc/JNeP2thiY47Nw2meams3
WtvYev/y4VQud1z5VMs33h4c7+tR5W/ta1zZ+MIIH/pXrazP7EQf+ryxwmEi
PBwfL51BB/geebbl/FjOXf74fEaLV5n/437xTteTrrJzydYfHSsGD1PoY7L5
7d/WrDlgr+H93XymD15E82XcF5Vh5WL97gkesdXMJfrFeqNv6Qu47Jnoe8eN
i7kECz0nPeJ+jBFsoAOKj7Uf61NtzLF5OM3Pac5q6zha51gegHLjlDPnmU91
crnH25uj/araz/EP0+O4vY/ho7+Px2cyTJwN6NzF4Ip942GBQe7fvDLPYI25
Bnccny+ivdGXkzk/+Prl/WX6B7WHQjmly6tZvs1yjpWDpXXorctrbUJzNSs3
j6WxvGJZ5Q/h4ysOvuLgN4SDF+bAlx5vDLE42LzT1mW0VrE42Lr+4mC54MqV
Wv7w9tdoz6niYPszFgfho2v7rRs7L06YfXyX7men+FQuDtZmLA7S+fa8zp2f
ib6ik5YPMB/r8hpaOz8c5ANkw3mXbMTlq9A3sArWOc964WekT2CF91Qc9O75
Ntm8xUFY7xz6wZ6c//jOq774T6xj84pO8Rt0rHszf4qDnpded7/FQfPOnHTd
YmJtxvpUKxcHm5NTHGwdx3Ivlpu7WGC5cSoXB8utWr7x9uNov6r2cCwOLva3
usDhoPPH7coWnk166pT/xTV+q2WHMZtH5lBx0NyxnzLGxcHxovi0N3r7w7Zf
XuXiYPspFAfLsVnOsfKuFAdbk14cbJ1C8zabu1LMqvw3xcRXHHzFwb8tHBzX
Go42mHHzdX80+dhSb+ssKrcmsXX6tRPL7Vbu0/KBlye8vTPaW6r9FtuPeD5R
v+l85/o4x72xI13rYOWX13k3n3ZsxYtH9KPZrdaad713YF3c+dbXHnv5pZOL
lf34G92zfPHxldgny7OAuXxp1qd1Zm3yOftddgR7in6BC3BC/sj4A7xDcTVr
y5r1fWvKemO3+R49RO+NA8B8cy246/g4S9zfeMHoTffo3+NRoW/8Bh+qcVRT
YeztjSoXH2s/1qfamGPzcJqn2jqOyq1zLA/Ac01Jub5WFzFOzMXvVpve3hz+
vzze9nNsj2O/453Zm4zPyzVgnfGyh2htOvtsPQ1goTnj3zAW1hhb47/6BDrW
O4Yz1q31v3jj5M6x9kZvr9j2y2v/oPZQKKd05fJtlnOsHCytQ29dXmsTWrPQ
vM3iVOW/KT6+4uArDv5t4eDNvXr3MTz21LHHvr7wgn6b/QUr13/vnPuWl6Zc
beVwK69peb/bC6O9ov4i/RP/Kv2F5TSv9t/x9Ss2F92r+7EOT++pP3nRc2Rc
q/Ssaw5nHZ9N6u/DyMn6cr3t0fydB+e2e7O2zPOD79+7ntc6WlxMHAP+yANZ
Prs5WLl1v3BnfKCrabMW6cydY86wFb1j75QuZSs4Jk5lTi9v1Lv2/q0HunDf
hyN+x3E62Brg47ZXp3PNQfNqdrxnV69rPjrH8fqljQe5+Fibsbbkh2KOzclp
zmrrOFrn2Nr/Z26c93HHlVu13OPP/Tjar2p5Oe3t2H7Hrue5+KZ9h40ttgn/
lofr3oy3d2OfQXfRaWJj8qbp6spionTDWZdfXvFxe0e6ydiat96B/xtz+tu6
N17th97+sJXbO6/9g9pPoZzS5dgsz1j5x8rB0pr057q81SkUg4pNlX8bfHzF
wVcc/G1wkD6HKdbSeuXdfsZrHdkfOr7+HZWtE9/zMQ/W77E83u1t0d5P7YfY
PontHeweYNN6Dbume6MbnOs4jLOOZwPa064H8XDQ2t533f/pQ/XFCx6v05/y
y2scds6uuePuc/axj/1AZXblvV9Yr6YLI+D74Qj7vQtH7l5OH7HrTn7PL6/n
9nswdX4+c0S+pHXFdvIe7fXZlqvh9r7hDkz1HbpUjNA6p/Os7zsm+PK2r+LP
L6yzTmH78M69jVfcs67v8OlP9tm1L3B8vvJ3MfGtXPux/tXGHJuT0zzV5q+2
trFyeQDKk1PuuHKrPvONj4e8vTlWn2Yttp/juF/oMDad9WyPYg2evOmDdzCD
nnH98S+7NtlatvbpHJghh8azW9dwdZy39PC438dl4Dr2EHQGfVv5cCR/9+LZ
v7kmrzna3ujtD9t+ee0Z1B4KlcsvXY7Nco6Vd6V16K3Fa41ecad49E3g4ysO
vuLgb4OD9DWZfi8O2v/BiNN37+MLO5zn3e+7Pf4sDwfb97A4uLjhiQn+8MbT
Ty8ss46dY90uHlm5OHgw/Ptv5i8tDk6nFwfphdnAxcFh8uTh4OzIxSDPR7zx
00cM9PTsPZi3fKAeM4brbQg7ioPrbeE65gqdc3xYP3v0frKubn3zpnJx0PUX
8y0O2iO8tR2++2b2/sml/fy6z/mx4WTl4mDxsTZjfaqNOTYPpzjYnNXiYOsc
W/tfbpxyx5VPtThY7vHiYPtVtYdjexzzY9Ip7MHKxcHxXYxbeDjoWnBrXMRw
xfN6Bnqzumt8gJOLg/znMIz+tB+iq+yt2GL0B1tO/bRxs6drP/TiYHvFFgfb
P6j9FMop/cyxObk4WA6W4mDxpbjzTWPiKw6+4uDfFAft/06NwmcXDt76/qO7
l96VQ2P9LH+FzjoY8vl1/okNff6OzzOYdmHNfKp03OnZ/r3rd4cnldl0MM55
9DbM8t2738mb47/84cOOWyzx+JH+0Zvl1vjd+Xgrw9xTc/H5heOz+869ndih
ezAmszGHg4tlHsw4vtj5k08c8rMHVjrHb52Yy9fv+Jw902Kyfm84Wrm9fRdr
9fG3xTPd13KY/O7sOM+03/L7s68rG/N7b3PtGYbZ3qNn2f27V/9+xsT9Vv2o
9a825ticnOapto6jtY2t/S8fTnlyyh1XbtXyjbcfx/+pX9X6Of5V+h1bM+v3
xO52nfXKtU7HMUWP0W++xzZ8ll0fntM5rgFDx6MFe8YhTwfSv+Oqcv7hvzt8
IMcn++eXDhl3Fpzlh4Sf9DkdMJ7W9kZvf9j2y2vPoPYSaj+F8kuXY7OcY+Vd
KY5ULtb8LvHxFQdfcfA3wcHZCPQZ/Xbicr++sI/+mx2xWoTF0ulwGHHqHH7y
0vqKyscm++HtZ/vBQ9/CptlJdO+J6V39bx9xS3oYhjhuni1uWHkY5xz3vFzW
Y2O9a9e4j+XhrD/j8llh+sHcXzyOewbHh5Weffc5TD6Y8b03iy+6B+fPNh12
Lk/2tqmuezAmu85tmz38xrN3ybVV5/d1f5X3vpqD5N/0oO8fbvXfu+5neOd3
Xb9+aefPN165+Fj7sT7Vxhybh9P8nOasto6jdY7lASg3TrnjWmdXntVysrYf
R/tVtZ9jexwv52a9GlfzV9kz0Xf0FIy0ZukZ9yWmSde5J9g3LkRYQqe5TrGP
zbg+pGKM9DJZHG7XdA7dtb4qdIW4MX1I14kpsxlhIpxeP1b2tOvxdbY3envF
tl9e+we1h0I5pSuXb7OcY8WOyn9X+PiKg684+Jvg4Gw4mLV686Nzv/8OFsAz
enDHYYd5cOy9X1/HhyPOd9y/rbHZRK0d3DX9VuX5PN0XnB1GkMcJB2eOffbZ
y8k5PbZJ5WJf5fl6YfqxKT95fBc2Omf+2lOz8fVilS+LvZzc1h887Lz5ZW9e
sjcHJ3/6cnzGn1xYDKduP/HjuWYjnzH5wTuyc2+MfdnYO25ch6fGdbg/fHd9
v3Xw8QcP29Y5lU+vru+8ObWXl19s+6E3y699jtvu3dWWrH+1Mcfm5DRntXUc
re9o7X85AcqTU+64cquWe7z9ONqnoz0cn+X1Ox4nNB0wDrbZg6t9lwMEM+S7
ihfyR8Mg2ETP0CeVXW+2oXtdPx33Okx0beeMxwD+G6P5V9drhs6k08j0JD3m
mrMfK9MzcrXcW/uhtz9se+S1d177B7WfQjmly7FZXCheVP424OMrDr7i4Idw
8PjTvn74voaDsyOOXfEWBxtTmw/T8dlGw83h4MkBPT7Gd2vof31dYzGpYcf0
/M5fTs58ejdHzAMHZzfBlOJg7b63tRifPWorbvv24e+t/IyDs3uKgzv/rr94
5NP67mpDzni+fcbJxcHZZHyew77jb/zi9qN+8dFsdr83O28+zz3XcNz5zzg4
G997ma279+O7MO7t999iYnGw9mNxsDHH5uE0T7V1HJWLg+UBKA6WO658quUb
b+1E5eJg+zm2x3G58YZ9ftNvrG9ucZB+G89zcdDaGhexfCb4cfsTL+yXD7u+
q+v33R5zw0G/u36sxUHPOdvQc9Npzhnmyj0dRz39Vrk42N7oxcH2y2v/oPZQ
KA6WX7q48G3GxFccfMXBD+Hg6vCmY+dnWwywNen+XXm+QOec+odjp/i/47fd
9YivHf/qW7vPv2GLvx9b82fX8btX+Zv58eDDW3vq0u9vZnfNl+i7ztl98Kku
V2f5P8uZ+Y93/0XfnV938vyBiz/OZ+vjvlbXX9lznDzTnz7ij37r1JD8/JFH
dPzIv/dmtu1thz/GZ/HG2aend9bHL/PFsrlmg87e9LuL2W0fYkzPezl2ceWb
r+dxnDyuO3HH4mNtxvpUPxRzbE5Oc1Zbx9E6x9b+lxPgQ9xx5VYt93j7cbRf
VXs4trfj8mZmN46TZnzqdNJ6+spV4Te1dk5v+S8u3KD/5QHRK+7Zs8ndvGvO
H32616dGjvAwkd1bGcatD9367zh/mLhePJOdA5PI86kOHw/34RcXProm2Xf/
190Dvf3Q2x+2cnvntX9Q+ylU5xcLKn+b8fEVB19xsDi4HJNjx/3BXWP3swsv
6DifxQ1no9HDdPPiYPNhDrOaY3lybP7BpVuXc7LY2XJNYUex5th5n13HV5dB
Jw8PYNN8p7N9Gl+79f7NMfPJo87x4NPJ83E/q9FwbuXVj6xG8vhxT+zy5Af9
wYULp77/PPvB0s8fNSOeY9htnCpbMwd7fnBhot889th3Hnb3xtZvGIdhJ1zx
b9/f2K5ekuz783+6n9l2xmdYyWZ0/I6vvhQTi5W1H599qos5NienearNX21t
Y+XyAJQnp9xx5VYt33h5yNujqvL+vf5M61Xrs15368W3WvTVy8M88TY5KWKT
446VHzKuMPpyc8XzinWeuqKPL0ykW8Qg2b30xjCRT7UyzIKJagfZp/QVefho
XTvf8X1XDiqs9GzwcXjn+LPsmsPH2aT0YXujtz9s++W1Z1B7CVXPV///fcTH
Vxx8xUE68vj+vr7yT3zkZt+cERcOTu+Ri4N3LOHS0cXB5ZOslmF8MvP5nbzH
Lx98LpWLg66ZOr0HDq526uSZ/HR17z/2O8vZ2DXZSpWLg+MvgQmOj4dtea23
P/RxPv+QuS+XozjonPs33sFB55w82INNrr39wH5rdSqz7yYXB8lv/aRvcXAx
yhM3PfuK8e2sD/PyYJc7NLk4WHwsDtanurzi1bDMP/uEgw+/dHGwdY6t/S83
TrnjyqdaHCz3eHGw/araw7E81qufGNfM5OIgPBrvzzMOun/21pl3n1551Cdn
6NSSuCcxNe+mcnFwMn24PnTWrPu09teXnL5iJy73hk+zOGi9+w3fLQ56Tv5K
+Oh8Mr23c+jV9UEbPs4OLQ62V2xxsPq8ev7vOya+4uArDsIs65WeEw/yDuWA
0bf2tqe24CfX+f62+oVT03DlUl+f5nxWpifvPP2XgyG/epxz4lSfvyyvDS65
N/jhYwzMBR/vzO+5t8qus1ieGAz9Y+757N68N+v7zJP/fP2G88znU2P8q2vc
3Z8PThiY5zzje2oSf3hxQbsXuoiucY75Ixfeb4vR+Bu7wPfMcTpmvB3whg3n
GodP7PTbmD0oNmPcjfnqRewNVtN8bNPD1XP4Bd7Kx5b89Oa++8GdK/vzh019
7PYfXbJrP2PibMb6VCs35vickzN/bOs4WtvY2v/y4ZQnp9xx5VYt33j7cbRH
VXs4tq9x+x3Pd7r+H8NBGLe+QusjtJ5HPr5XmX7x/uiW1rZ4v8fn//HF5WJM
vQP4vd4rZDrAe+DbXR1EZXrSvDdn6C56zNwqJho7Oo3N6ZlgonM8D1n9inHz
e8bTNeFg/a7WAhw0ljs+Pdn+sNXblavb/1/Cx1cc/P8TB/83/xdcrA==
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3X+4fm1a1/UntZrKbCorM7OxrMjKSMsovt+9H4uIyGxCIyKywdLMTFFJ
8efxiIgDAg6IiIg6KiIi4oCII+I4IuKAiI84jogMDoiIiDggP4aftl9r7fd+
Ps99jBz+9+w/7u9x3N993eu+1lrXutZ5np/rPK/zx4/5mb/gfX72D3rmmWd+
8cvu/nufD/ylP/kX/aIP/GU/7Z/w5Wd94M/7iT/h5/3gu+YH330+4e6j/Ve/
4v1uP/TX/GO3v/N3/I6ba/vxtP/aV77/0f69n/IpN1/91v/t9td+6A+6/QOf
/uk3f/2rf8bth/3aH3z7Bz/jM150/Kv+2v96++s+7Ifc/p7f/btvvuKv/M/H
ub/tkz7p5i1/+X+6/TXPPXP7Wz7hE45rav/WT/zEm7f99f/9ONe9/sbX/syj
/bte+9qjz/d97/feuO8b/sTT27/xtV974zq//ZN/1O2feuMbbz76oz7q5mu/
5gNvv+zP//e3X/CnfvLt1//Nn3X7jX/7/z7+/ukv+C+P48//hf/h9pv/7v97
+x3f/v/d/t1v+nm3f+cbf+7t3//WX3T8/Zq3ver2b3/Dz7l1T/fy3TO99as+
4NaY+lvbdT2nvn/r63/2rTn6S1/+Psc9/vjn/Re3n/1Z//Ht5/2x//z2k3/b
v3b7MR/9z96N8dm7Z/rRR1vfP/zZP+H4/he+7KfeftJv/Vdvf/2H/xO3f+z1
73b76l//T95d7+tv/s43fuPNb/74j7/5i8+/8uZvft3X3ZiDu/HdOEefr3nb
226M0T3dz3x6xj/6uT/pmK/f+DEfc3M3zrvzXvH01zz33LvfsdQzd+/h5iNe
/eqnH/ualz/9rZ/4I24+9jWvefotb/+gp3/wM/6Dm9//aZ/21Pff+yk/9u4+
3/DUd8/wD77/+2/+ylvecvO6P/QfHe2//OY333zmH/wPb7/zO77jxhjc78N/
3T9++13veMfNH/mc/+T2I179sqPf6//of3b7mz7uXzi+mwfP+Jrf+M/d/onP
f3JHC//m3bv+Ebd/5gvf4/azXveut5/6e//t2y/80//V7ef84Z94++m//9+7
/bNf9J7HXPyhz/zxt1/65/67Y+7cx1zp53raX/Rn/uvj2bW/5Iv/26O/+XeO
69Z2rrnR1t+cOQddoElz9+e+5L2Pd/mX3/zTj2uhJf200ZH2F7/pvY7zzMWn
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
H8kg7y57Zrqhfuat2EP8iFat473vct3kK0tn9K6Ki2dv8uzsGGec6lsOX1O2
MDgF72AVnxfjLAbiBXvv4SMK54/3QO/zXPd+M0/pCjBRv/YQz/jBVxx+RK61
ufiu7cfT3txQmx9jY4Q3Tmp9xddfbn0Gdt9kbUe7fl4ZQgZp0/fa+0nfQ9PV
c6geH5nXMTIvu5nv2c22biB8INPhBdzre3gHJ8jW9qjy3/S9mLN0xvwY84eB
R9qubV7Jd3jI5qkvecZ3BGaSOWzM7g8/YB8eD69dC37Sm8rfRr8j0/JDdU02
yjO/4Xs/7D/WPnOvvoCJ+sNjfcjJcNBxmHzGbd4ca2n2MfJBzhjy0znFo8Hq
YrTJLvtEjhsf/YIM8m6M2RjMm2ci072fbMrlpnN/77l8aNqtRcox4HhxluXR
yf4QBhZ3WcxJ+4beVb6e5jib5u4Frg7YXmJ1RMLA7AvolBwtP23t6HbXcmvf
WJv/7oOvb9j6S28M0cbVbq6Jzb+0OQk3T282Q3J+67lsjbOt+7m1sMNBmJef
CT8WNFXu33IesguSF3CCLugvnY9OddpLT1/Kc5/wuQNf7HnSk+hcaK18ifin
vMHuhcbcw3u2ZkN76MZ6DO2hg9ZmaB8mlheufUNzzqfBeg/9aJuje9/oA7fO
GIe3HWODZyeOv/aJ5zFOH33h4ukb86qbc7/w0H2P477D9lMnftVTerJnokOy
a5921Fc83fy01/bjaW++xM0ZtXkzNnZ446cufcjzo1tfgt1PWZvSrqtXtsCu
cDBflzDRObsP6Pza+T5UP6L9neIlyKP8XOiH5mBj5NsPhIPpK8nefEbL4wXT
XA8fwqT8IV2TLIJ91hdktrUETNTX3zMG+uUHj+eTRsaQS65Fp4Iz2RHhVnZE
Ol35M42D/lj+0/LHaKczGqfj+ckYw8YDVpsQhhsPmqDDwT7jISPpEPQSz6RP
ssj4rLPNlWt5Tu/ZWOGuOS8ndvlQm7f8eMJH42uN4V2EdeWTCe82L2u5QP3W
2sf3bJfZy8udkO/npc0zOulYf/MtjXai0aXPXbOtHWNt+7vffekDll/0xgpt
/OzmlNg8S5t7cPPxbo76rduytcy2vufWvE4fRIvGDS/gYHlKyyFGlyIj0Ib7
wAd2XPgHI+iHpz3xbU+KKYQp9zh52BthomPaMJEO5rv75V+CV9CmPUTPUh55
84em/I426MP5WfmLpr0zfHbmhnjvA9ONm22DrpxvX9hnPXH6s7zxSfuc8Pv0
EX1dsfEPmAm3i4snN2Gnc8yF68I8z6uvd2Qe8qfZnO3X9uNpbw7hzaO4uaQ2
n8bGFF/GVV36lm/uz3wYWnOvrWnX25cyB9/qlyyrT/iKF/IPTa7lH1Pura2d
+1X3NeRhBdlKHtNp3plvDGwrpxcZXvxfeZ7JajLftYorxHd0Net0x+EaXvUX
H1tbkxvkGDsXfnrm/p81u7UIfEyHw//eB/yiBxRnAfNqG1/7hp6lXGTGDwfz
JYWd2T89j+tZV5/xDG8+YqzINxhIXqATsoOO4Ll8Jze9M9d1jepswFLvKx+g
amLQDb37/F03z5tr9pzFSjbPrula7ZOaS7QT3mUXd17vtHrH5XUNA1sXZQsN
34qnSTfMftqeYXi4dHi5NkuXXBv+7muvr9f6P29M0MbJbu6Izae0OQY37+7m
ot/6LFuzbOt4bm1rY/Y+s52WW8ZY9GcXLa8LfeqslfIVx/XRSTlV+BnQee7z
58DLw7dEGw7CF/hQPN2Je69I53oS/VufwW3yyPzmR5WfgXk3X8bqncDEamEb
szY+Nl/ZlvAlm5Z5g3f8VthnYVVx7mGf7/jyhTwwp74I58zvfY7/Q+/zNz+Z
8sjcx3wev8H64uq19fHcW8fk2n487c2rv7mFN7/i5pja+OJtb7zV+pyv392u
w3f/5dIGlZxaWVQ7PHUN7Wxb5UrOFrq1G5KF5KPxJhNhBWwoV0n1dp3rGFnt
vOyo7mXdyXZYDQSY5zpkP8xyLzZP+qD7syf6zi+P7TCbI/nEhoPH8Iu1Y3/J
DLZU8ortsvxk3lP7jGQcuVl+N+8nXcx7gOXpg8Wnn3rjmw6MM9b2RtyLHuC7
c6yNjJMcoYPS/cw1OcvfUzuMaz3gOOwyZ9bq5YGD/+YzvTU7NXtpuOmZuk75
Rcvn0z4pzNTOHprvjOcvN1B7juFm+8bZzMuf7fodz8+m42Hg0tuuwdYusbb6
3b9en671c97Yn8t42HJEbN6kzSW4+XU35/zWYdnaZFuvc2tY5y9Kv9SunnU5
Z94ZDqLB4ibSB+GvPZRzH+zDHmLn6T6nDvWuT0/aPuIODn/L+2NPzjjzEwPd
w3rMZ/P65GtUTezeb7Zu8832ZM78NV9syunV5ky7PZL7PGqHT66xwkJYbAzw
EYbT7+hx5vWMl3+3m9MX5k1Pi//wTLBOW5/7OJGe+ea0lT7/4BujP72yuhNb
2+vafjztrTWz+fY35/DmXdzcU5t/Y2OQ1x9vfdHXH299EnZfZm1Tuz5fGdW9
ii2IzsO+ckgWK9g+YnpEubar+1PONPKYfHbf7KX6wRB44HxyHuaRs/bfYJw+
8IPPp3vBxuyi7Q/CV3gCf/iRmPv7HFjHmvE+T+8hG1qXnvkp3vi0fUP6ACwh
x6oJyP7DN8W7CWO8q2y41RCGQ8ZHFrJF5btu7V39CNfxXsJMc2zcnte1zQ+M
o1+yHfABCmOrJVFunfY2PW85bzy/8VRjAj2UU9Q71S87av5Ljpfv551h4ubk
SR+sT3ZT55abrhzmydX8q6rFtbTXWmvtD2uTv9ynTkddf+aN8dm4180FsfmR
Nmfg5tHd3PJbb2VrkG1dzq1VXWw4vHN9GJY+2HH3utQH0Wj6IJuA9wGv4HBx
9PCBzZD8h3VkP3zhG3OPee9+7rs9e2CLcbr/mafjRx+yBG55Lmu25q+chmiq
2GNrhjMG8Ozv3M053N4NbISJPqtX84mAuz73e4EHv8G60xb6/IFZ2mcetHe5
KU7ecZiHH+mI8NTx/EY9F3ztXHZqx06/mWcOmzHdeOtdXtuPp73117YGzebh
31zEm49xc1JtXo53FpucjSocW8xbX4Xdr1mb1a7bV3blQ19emPCt3xzvb3GC
1Vhynfwx/EaXIuu3foQ+8FDbmpz8Js/LFcZWqL/5xNeOwwF5ysmN9O38SOEH
GUYvsw+XD3b8Z/2MH+/3Tt6dPLHncp9r5PDddX+4RUekx5++Ak8e8p2SA+Ue
9W7zRWH/JDvtL3nH+pNJ5sSz+N28wlfP5Tx6Hkx3LfRCbjoOG+G79+HZ2X7D
Std1/Wye3k85TltvuH750/Tzjssfmk9QNbL0gZ36GIdroJ3iXvTPzp3/6enT
8dNf5OPku/cdbei79LNrqrUzrO1996PXR2v9ljeWZ+NbN+fD5kHa3ICbL3dz
yG9dld1v2PqbW5PaM+Rj6Vn8BuO0rV/yjUEvcND40Cmbp3vlD2r85fY8a368
5cBZ96UHok3yfmvs9c/eGVuhj3VYuWDFLxRb6bgPXdN78j6933S88sBaD5gr
c+O39GrX8Xs+eI6bS/dw/XxxfWA7vvE515tvO/TSU8c7/HYOXe/E8qO+24v2
/sLE+9jpoz+f3fxKi3GBd2dM4blPmt2UPrw1oK/tx9PemqRbl21r01zm5482
L/M0lqtq83W8s5jldMM+67+3ttPdx1lb1q7nV6Ylj5J11V1ItnmW4iDwnjae
g3PuXW6y8mbT91wH75L15sOaGw65bnlRyFr4BC8chx3hhePpRHSp/F/ohHxg
2LSsM8mu+zXlwUPW1PjPOvL0sXvmsCext9jn99f94Q/8tbfIj0VMsueHU/CG
nKg+k/kwXnZPcrp8L94VfdZ1zA0dFz6iCdhI/yR39fGbaxUTYa7YbWGfd2iu
qqkET9MlYZ1zXKf9ynxm8ocx/72L/Hv0Kc95eXjak3Wv6vmW86d8O35Ds8Vm
pLc1D9HJrp3WnrA29t13Xl+s9U/emJ2NY93cDpvv6DIHYP6lmyv+sn5KNcW2
zubWnqajsbXnbyl2036b65P9+YiyK7CXuo93y9/U/U57w6c/xN3T+zx/eczO
fEBvuI+9et2BgcUEnnttz6o3dPhbVUvCuN2/HOX+Wg+xFfjrPWbLaW/UOs5e
TD5E7asmS7I/F9+SbanYF7/DQZ9spD7wH/373Mc1Pg0Hz33D5w7sg3f5/Jwx
8W88jp8xKx/0oPfRceHmvT340AvPWhNve7I4WA42WGuc5A4avbYfT/uyTnf+
51uvbWvWbN7+zV28+Rs3h9Xm8dhY5v2sT/ulX19Yufs7a+Padf7KuuSTZ2gv
Xf98MMhV51ijwjt9ijl372LSNyeY++qLj+gncOOsT/Pehw5I1rg3uQRH9Hec
Hct14Z8PLCSjyCB7LfIWkDPWnKfe99zR5htvnX/Wr/qAw7/m3hf9+G4viF2M
fRXGGA/csRcEE9lOPSesqzY9fRZ+eZfGdeZ2fI+HtvlxjbPO6Jkfhp4Au1Z/
NCfpj2Quvc9xOKZt7t27WhL6wOUwrhxxcM08lz8VNm9tx2r1kpnV6fUu2ov0
3K5ZjGX1Bt2v9ZHnW3rYNdLaDdaWvvvL63O1fsgbm7PxqpvDYfMaba6/zX+7
OeG3TsrWDtv21pgm6+EF/FhaRW/0QZjkGdi80VhxE9qulQ5Y7Hy5OtkZ6JLe
Cd1P//JSW4fx5eRnVx3hYqxc09haD6c3V8vTu2ytC8fS6TxDfrX5FcDNfKM8
c3y8+7z57JJH7ReuPsh+Gg7SidlQfM4cMWeu7NP35XXHupNO1x7f4iD77xlj
eNo/y69dTlFrgW1n50lndB1YWC7HZO+1/Tja5S8hhza/x9Yw3Tpu6/+2+fw3
p/HmddzcVpf5PZIHG+e1vu7r77c+D7vvs7avXf+vDKy2bTEO7UM5zzFyP1ld
rH0xCGRI2GdeYJx1s3vbYzvz9b/nQ05p8wcv6GeuD5v0J/fx4Zln8V2O88gO
+3N0QnImPS//P1inzQ7jeDUJ7D3AxDNv4Xvd3MdbH3EvMJA8g2n43V4IeQYz
jZPc01fbuGAlfcu4rPuNGU7DdzjhuYw1+yed1nzCNPjqePEe+bE2n9rmMztz
/rT0SnNnntEUfbJcrPn2OEaee1fm35waG/lu/orFqF6h5/Gba4az+953LbT2
gbWZ7z7y+latv/HG4Gxc6uZq2PxFm9Nv85lu7veth7I1wrZu5taSNu72Ks56
Rj//kPv8Qsrf5rixeUdoFV3Q9Vy3Ohbll+bv4h7acBAvoQs6nbmuRkk+WjAS
Xnm+s8bgzz3G4Fl9b269h+p5Fl9lzK2jnbN+5unX8X3r4Py828PdfLLtpebP
5/m10wfXLuo5+GzbN82+cm9recC79uXv7bwP+eLKmXN+fwHj6ID0PrrlC3lm
PujYWyy/6LmH+rZjrzB7m3m5th9Pu3i0clqWr2Prem9t063vtjVuNs//5jq+
zPcYDm7ej4193viv9YFfP8D1hdj9oLWJrV6wsrHc1Xi6uvF0ivxhyglDDsOw
bKHWuvrTp+yLuSccgzna1sRw0PjP2lQ/7BjLWU/uhx7jgKWwST/6oD5k01kj
9MsPPRDW8d3EU/YM2bhgHT4ku/L3Pu00R86Oe1/10++0vuJgXJc/lH1IuirM
IQPFwxdvBRONjR0Mjpon9l26hPdhPmCkd5QO6N1UP4LMg0We3zyYN1hZXEV7
hfQK89waI9tpubWbc3NXLXvztfnJvff8S9tzPOM/3vehJta+313zrB1gbeO7
X7w+VOtXvLS38aebk2HzFG3uvst8tuV437onWwts62NmTwmDjcGx7MX5Fq2P
T35r2VI9p481j7WQ8aA7GOea1ktsEp4F9lkzeYbiQ/F4eYvgyvoNFWvk3Oa2
fXy/JQfgFowqt0Z2n3h9bT6b+678wdmgPU8+Su0Dphcbp2uzg7pPtuP2CB1n
I2bPxXP5i7KL5v+Jf8qLdvqvveymvUO4dsYDvu7okz5YHjn2z3xN489yqVV/
0Pf2c8zntf142skBcqQacB0vXm7rfW/N0637trVvdr22OZA3D+Tu9W0+kI2J
3riw9Y2/9A/MR2L3idZWdqkvJDPbt6LL6JsMt6aFd2yFxhgm5h8CF/TPFmq+
8ts0Nu0zh+8rj/U4GeT+ZLwPXIJ71qdir+hz9lXg3Gmj+vrDN906vbzJ2uV2
1J//3pnH8I1Hbid4SXd0XddhD4NxvrueMcEQ2MfORXazc7GpwmtjrE4EGQgv
zffuD5qH9RGCcea9tUG5UrWrR1+8c/ZS87N53lyPXCZ7YZ11Apm3OQG6r/F4
h9Xzrc++x13brL6/NvDdF15fqfUf3piajTPd3Aubj2hz9G3e2s3lnh0m+jcO
7a2D6Vi1oeuTb1jt7pGNxt94WFu/9uzbVzcf3qM+8E3chN/QMnzEs9YO7Pbw
LllQ3Ei8mu2ltvunzzmn3DmuF975mx1490zT8crzmi9AGBgOrq9AtibyRbv9
UziYn6jx2zvNp5TN9b5G22HLZWeBbWyY+WaLnWC3tPbcNh0OtoV9+p+xTc89
PfPmnHHz5Y05c3M/97Tc464jngKfOs+7LbfStf142q3dzhy67//gb7/Hi6Oo
Tm11wLcW6taD25o4WxdgcyNvfsjNkbV5Qi5jpddPvvb6Da7vxO4frQ1t9YiV
peXKhnfa60OSHuQ8x8I4uhJbp7G2d2Zc9D0Y5zlcj6xJH3Q++yMfT/3gmz0X
/u72BOlzfNrphGQVbOX7AAud80Leu88/8JB9VBu/nbU+P+TYP7SvyD9QrKA1
sLU+OZeNy1zDPnqp9xGOmytjPvNLnjjoufQPH80tmyWZaR5aJ2jnd2oezD/M
Mvf6mytYSXeEx/p4P7DPu8jX1H3z2/H+0z2Nrfa+r13DrF6/tu7d/12fqPUT
3tiZjSfdHAubd2hz8W1+2s3ZvnVMtrbX1rvcGtCeJR2r+svO9Rc2u2b6q2fz
t/PRZ7nh3Uc/48CD+nnO1nXmnB3VfMF0+ppxej/u4xqup51NJpuPa+czXv5z
vL8Y1jo6u5JP2Jf/bfpd/gDtCxa7vPbRdONiNdtD0W/9R8VJrC3U+LIrnft3
L3/If+1z+vicfjF0wMVBWJae6Hh+pJ0PE8uFAfvCwfxLYahri9Ht3r3zaOba
fhxttIrfyI74dO2KeATdlasr33b8svXBt0bq1onbWjlbL2BzJm/eyM2dtflD
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
pWzM+MbNbezA+k+uD8nuo60tcfWpxRTvgJw3h65Hr7IGNi/lzZYzhsz3l20U
35Ln1bw+azd94oER1q2wjRyyxjCX7mvOzZX7s/tZh5h/xz0z3CKPzF/jtIbw
nsmzHedi9+qza+Pdfc/1BVr/2I0Z2TjKzS2w+XY2B93mZd1c5Vu/Y2tabZ3H
rX1cffJzP+n5+zySzxxjgvGet/WU94YWrQ+9Y+/afKETGFEdF3tmxTNYm+W7
Uj6JfD5rh2NovVh113Ze9TNcKxzc+lDu5+O38M71inHIJrr41yd9z1jZMavx
p35D+35wGO+1958PJx5AD/ag6etwDcZ5H9rWGOaPjfOMQX/mFg3bf7NOtL6T
H9eatDUz7PW81sThr+fCJ2jVGjFMsz6Bfd6b91rd+Gyh+YU63v5geWL0N9Zq
0hc/Ucw8mqBXsskYL3oib8gnssyaB62TcWSdZ0P/3ovjMJE8IWPwMtljjWB9
d20/njY8QotkHT2RLCeT0J/jaBkm1nYc3ZNT7TG1r3T6U7z5wD4ykU5AbsBV
shj/oAvyme512gk+/8b6kczED9aB6FzbOhq/wWA4aHzlroFrsIWMqE761ord
enlbM2jrJmzu6M2fuTnENo/KxpJvPN3GFKxf5fqW7P7a2hhXz1qscb4+MIL8
tZbW31/79PRB8j99x5qYLICXxUiR+3i/+Cdz5dqnPfTJsWbxHj2T9+NdkEWe
yXuypvBMaGPHsxi9euvacnd/c31+1g92Y0M2XnJzCGxenc01t/lXNyf51unY
2lVbz3FrHJ85Rs48I+kOPq1r8tkoZ8sLvhjPPMSvW0eU7whdlAcJ3lWPc7FP
n/wzydF0umpD1ydcy+dTf1iZrwxMLP9n8bPVE4UZ9Smvr2uEga679WvZMq35
ylPW+NhZWpvgbfNs/XHaoc+8mact+QOOWAK86z3Tsc2f/mz5aJ7dgE6OrtAP
ejJO98Dj8mSX264crXg1WkE71il0vjMnzNseat1aI512zlc91IsvN9rWiL+P
d3/6Qp6YVx++Me0Lnn5np6547hMeubSPnDDoz3quvZL2jPAvvvIu0SM69Bzo
Bf2QCc2jdTcZc9a1urYfS5t8JsvyG/Q+0bs+ftfG52Sh9TwaCAfJ0jOO58zb
HA7iVdcMK12bnIWhsCA/QDL2tGX9uIN20Jk1FP6wXoSBp6/xFx320mIZ8K1r
WZehsY1Hqz7C1pC9rKNXXPbWU9ic0ptXc3OLbX6VjTHfOLuNNVh/y/U52X23
tT2u/rUYZEzkvnPIFXxOnsBEsoF+RdaTF/d1w29O37hXHrKpWqN41hhhLZ0Z
vsAQOA+f/eZdoAH0sfddLF79dG22u4956duTv+vGgGxc5OYK2Pw5m1Nu86xu
7vGtx7E1qrZu49Yyvq85d6zz8yki/9LvrHnyC/O+0/vTo2EfWqSjFPNQbZPy
NZHl5ZrYnL35P2f/LJep4+UXLaa8mhLO1Q5n3S9M1Lf8Smg4f5tsouFgOdfY
ZsshU041Hzxk7VdMKxq2JjG/+JHPChqxvvAevbPyFenrd3OIrvC6uW4NjEai
f9ezFsW77gP7yicBf/Mfot+jo3tbx9NqBcKvc61y2jCLB/R+w7ls3cVKnDzw
xif0PP2tg+BmvjKnv/WPPfYlHa+OS/U+XY/cQaOe2/jSI7y/9tbNr2ckH8pX
j3/JAbLlrPPxkw55YF6u7cfThoPknveLbr3DZLLfrfv0aZ1Of3xhj+Tdjrb1
P74vbzR7jes7V7vj1kthIvpxT2v6My/SNxz8Qv6Tf9rwyV88ZgynrfQbbtoj
L38yHqpGOV4mv7euOvqstuzW19saQ1tnYXNNX+bbLOfY5l3Z2PPL+LtiENYP
c31Rdj9ubZKrly02+e53GEK/gSmwBp6R8f6y/dmPgx1nXaavOHxIPYv36Br4
2HXgF33acc+517/E3PTQtc3ufuX68Kxf68Z6bPzj5gTYPDmbO27zqW6O8a27
sbWotj7j1iw+6+C88pCrsDGbqTURGjAG8+z9VpujeJ/28qz7qtfpPcMhdGj+
ykMPS6txXfw7LEK/1cdEF44n/2EZusQH1ZUoVzZcLAdU7WpRFCdYrFF7iNrV
PnLP9vfwAf4yXs9svsrP7mMe0U80bh1mjWQ+YCAe837QqLXxeezQ9+/3z990
xHKS+ed662ccfOk9G5c2nYidtTw7xtkawFispbxXWFX8e/ZM71X7jF947oE+
8hVrPw+WnXbRVxw4eMa7v/HJGWt06ozoAV3hn/KInvGFrzj0Sms4PGxO0Jzx
oRFrouIg0Ib3X01P75QMIQfSpU/Z91OOOddGH/CU3Li2H08b75+y+c2HPmhd
A7O893RDa+PTL+ZLDvrXB/bp3/4TGYsu8BY+hoPkP96rjW/LN1S7c13fueQP
/UOfM4fymw8eZaeCvXiwfUzXtR7Pz9O6txwUZBTfFbJ9661vzdnLunvlJNn6
C5uDevNwbi6yzceyMekbl7exCeufuT4qu0+3tsrV1xazXBfWkUXso/ifPmbd
QPbDCroi3YiMIZeN07nJLc+y11lsXX1zbbC7L/liX50X/Fc3pmPjHDf2f/Ph
bI64zZu6ucS3vsbWnNo6jC+uTfzsgYP6oiPXodfCAjIKnRSrbf69r2iAD2R5
zcJB8s/7LY61PLvV7YKDxauiv83L7d2mJ1bHsON4pJhY1wkr2yt0P9dMN8wf
ploP7uH88lSXs95Y8IX59t68T3PWPpfj6AIv43nza4+2/X+y3fPjHWtI124P
gl6Zzze92HoCD8PbfODYhIuH0d949TO3+BYfuy+evqe1B3+k+xj1Y/8uOyd6
yp5Arztzhr792MurVqD1k7b+7KXl19WuD1y0TtKuXll50qwfXR8tow30eu5H
PnuskeC4d9OeiPfvuOfNr4CMKEY1fRAPa7MRZGe7th9X+9T133DTHlZ2y2ye
jqNxPFJOkuyc5Edy3rmwCm2gBdfPdkr+73G8DWddv7g2x13z1LfeeHPWGn/L
IfvY2vGLPQk05f54x9q7fUDxS1uLJxy0Hi+v0dZh94zF0209vq1JtHUZNjf1
5ufcHGWbp2Vj1Tdeb2MW1m9zfVd2/25tmKvHLZaZd/LenLBdkXVwIYwk78o7
A3+2/2Lo6pVra939x/XJWT/Vjd3YeMaN8d+8N5sLbvOjbs7wraOxtaW23uLW
IM7PE/55x54ZhsI+uEcHIcvINtc0z+XzJJ/LWwRTit9Jv4NZ1jDlZg8Hi711
HrtomKh/+ZrQZbmO9K/+oeOuyVaifzEQfstu6VrVnUZrxdaXg8J19Uf3aO/0
w37ysF9mDntP5s87t1YyD2jc/KB7Mj9bKLpDz2Q5HkL/nsv6DA/YV8zWR+/E
k+gcJrJloGO+ne1bZD8+c91/4bEXfL9f/KD3RQ8wC06hId9Pn6gzN+jpG3rG
+6GZk3Zed2BitXL9PWsCnnu+4WA5tOFr8YD3euNxr/s8oce4rMGyQVknkW/4
ncwiu6xjyalsTXjb+iPsKy+f91EeBsetC8wl2r62H1d7Me6Mcf/CB5seftCH
TNHHce9fm22zuq6LiegEXZBL+p97a1/0oD86N98q+EgGbHv9cNIZzxymbzr4
l9zC2+x/eFFfspK8wqdo134/fiTf2tfzDMaWHWPrs3/W1KjdOn1bq2jrNWzO
6s3bubnLNn/LxrBvHN/GMqw/5/q07L7e2jZXv1uMu7fjHLY/dh3yYuw7x/HF
ytUf16a6+4zre7P+qBujsXGLG8u/+W0uc76VB3Vzg2+9jK0htXUVt9aw8fjd
+3W/9i69W3NjXV+sNpqGIWSUd25/Kh0M9lVPgpwn46or4Xf0m/3T8cW+ciNZ
W5XPr3x95awoX6D7hnXpg9WqqGZvfjJb9zMMpmfBPseNF8afsbTPH3NivsxJ
/rXFb5pLPIZG8E86IN2PrDd/MK58LWjOehA+nvUS3uPY09MXrvE7I+fFNcB2
9C2+D3bDRc9rbPe+3zfnXvG5n8dOiVaiqzDrxKNXHPRzrqnOHJ7sC76zV+h3
2gCevQnb/GXXdK2wzzWzhZ65ZV52rJPKs+08ay92DXql38ke6y0yh9zD4+lx
eNlceKdkgvny3mH7GUtx5gwxD2QOmYXe0gfNlfdmXeA+1c103DpHuxxEaJZc
IuvIAGOii7sn+UCuWcf5De/hB3yLv/N1NofVRjQ/p+/Qy5+2XjA/J0+99og5
ce4L+6nPPvjQtkbVNm/tw7p+eVnNs9+LzbT+sr6599s93rW16RnL+fKnnsXc
0hesl8od/b3f8yse6kUWk4KPzZHnRePF55kr80hO63PuJ33GISfTpdC2d0CW
3O81HzVIPIP35jd4By+qhW2fGu3i+83tGY+vbcfxbDv4t5pr5SzVJiuq8+C5
qweOZ9FGuT3Lk12+7s7Vbg2tXdxg9clggr3CcnRbz2c/an185qr68sP2AqfM
GVpmV3Xc3NIbt2771q7d+n0XNYwe6jhsLuvN57k5zTavy8a2b3zfxjisn+f6
uux+39o8V+9b7PPMMA9e7PHtv9fZ6+99dzw7zh3/Ptc+787Dzs/O287nzvPO
/76XfV/7Hi/fb+996WHpZOln6Wrp7ZIOo8+l20t6js6X/pcvll+Wj5a/lu+W
H5dPl3+Xr5ffVw6sfFi5sfJk5czKn5VLK69Wjq18W7m38nDl5MrPlasrb1cO
r3xeub3y/FLOJ/8XFxYvFkcWXxZ3Fo8Wpxa/Ftcu8c67MS+Lj4ubi6eLs4u/
i8uL14vji++L+7se2HXCrh92XXG53mgdsuuTXbfsembXObv+2XXRrpd2HbXr
q1137Xps12m7ftt13eV6r3Xgrg933bjryV1n7vpz16W7Xt117K5vd9276+Fd
J+/6edfVu97edfiuz3fdvuv5Xefv+n/1gtUXVo9Y/WL1jtVHVk9Z/WX1mtV3
Vg9a/Wj1ptWnVs9a/evC//NBX1s9bvW7fxR9cPXH1StX31w9dPXT1VtXn109
d/Xf1YtXX149evXr1btXH189ffX31etX3187wNoH1m6w9oS1M6z9Ye0Sa69Y
O8baN9busfaQtZOs/WTtKmtvubTDZJ9Zu83acx6Lfena/oe31166dtS1r67d
de2xa6dd++3addfeu3bgtQ+v3XjtyWtnXvvz2qXXXr127LVvr9177eFrJ1/7
+drV196+dvi1z6/dfu35a+df+//uC+x+we4j7P7C7jvsfsTuU+z+xe5r7H7H
7oPs/sjlvknYt/ssu/+y+zK7X7P7OLu/s/s+ux+0+0S7f7T7SrvftPtQuz/1
4n2rF/azdp9r9792X2z3y3Yf7cV5YF7Yd9v9uN2n2/273dfb/b7FuNX7Fiu3
/+4z7v7j7kvufuXuY+7+5u577n7o7pPu/unuq+5+6+7DXu7Ptm+7+7m7z7v7
v7svvPvFu4+8+8u777z70btPvfvXu6+9+93/KPvju5++mLj777svf7lf3z7+
7u8/Fn+Da/sf3r70n8mvZv1t1g9n/XPWb2f9edbPZ/1/1i/o0l8oP6L1L1q/
o/VHWj+l9V9av6b1d1o/qPWPWr+p9adaP6v1v1q/rPXXWj+u9e9av69Lf7D8
xNZ/bP3K1t9s/dDWP2391tafbf3c1v9t/eLWX2796Na/bv3u1h9v/fTWf2/9
+tbfb/0A1z9w/QbXn3D9DNf/cP0S119x/Rhf7N/4gt/j+kOun+T6T65f5fpb
rh/m+meu3+b6c66f52LZ6ndr81z9cTF0r7P+qOunuv6r69e6/q7rB7v+ses3
e1njKT/b9b9dv9z1110/3vXvXb/f9QdeP+H1H16/4vU3Xj/k9U9ev+X1Z14/
5/V/Xr/o9ZdeP+r1r16/6/XHXj/t9d9ev+71934M/ufX9g/c3niKjbPY+IuN
y9h4jY3j2PiOjfvYeJCNE9n4kY0r2XiTjUPZ+JSNW9l4lo1z2fiXjYvZeJmN
o9n4mo272XicjdPZ+J2N69l4n40D2vigjRvaeKKNM9r4o41L2niljWPa+KaN
e9p4qMs4qeKnNq5q4602DmvjszZua+O5Ns5r4782LmzjxTaObOPLNu5s49E2
Tm3j1zaubePdNg5u4+M2bm7j6TbObuPvNi5v4/U2jm/j+xazVo9b2+bFft+D
TXX1ysXWvf7GLW4842XuteIfNy5y4yU3jnLjKzfucuMxN05z4zc3rnPjPTcO
dONDN25040k3znTjTzcudeNVN45141s37nXjYTdOduNnN6524203Dnfjczdu
d+N5N853438fQzzytf0Dtze+fuPuNx5/4/Q3fn/j+jfe/zIPQPkBNm/A5hPY
PAObf2DzElzkK3jIY7D5DTbvweZD2DwJmz9h8ypsvoXNw7D5GTZvw+Zz2DwP
m/9h80JsvojNI7H5JTbvxOaj2DwVm79i81pc5rtoDbD5MTZvxubT2Dwbm39j
83Jsvo7N47H5PTbvx+YD2Twhmz9k84psvpHNQ7L5STZvyeYz2Twnm/9k86Js
vpTNo7L5VTbvyuZj2Twtm79l87osNq2+tjbM3ddbX5fdZ1xb6+qbi7l7381v
s3lvNh/O5snZ/DmbV2fz7Wwens3Ps3l7Np/P5vnZ/D+bF2jzBW0eoc0vtHmH
Nh/R5ina/EWb12jzHW0epM2PtHmTNp/S5lna/Eubl2nzNW0ep83vtHmfNh/U
Y8hPdW3/wO3Nt7Z52DY/2+Zt23xum+dt879tXrjNF7d55Da/3Oad23x0m6du
89dtXrvNd7d58DY/3ubN23x6m2dv8+9tXr7N17d5/Da/3+b923yAmydw8wdu
XsHNN7h5CDc/4eYt3HyGm+dw8x9uXsTNl7h5FDe/4uZd3HyMm6dx8zduXsfN
97h5IDc/5OaN3HySm2dy809uXsrNV7l5LDe/5ea93HyYmydz82duXs0X59t8
IQ/n5ufcvJ2bz3MxaPWytVXu/t36tKyf5/re7P7jpQ02PXSxeMezeVA3P+pl
babyqW6e1c2/unlZN1/r5nHd/K6b93XzwW6e2M0fu3llN9/s5qHd/LSbt3bz
2W6e281/u3lxN1/u5tHd/Lqbd3fz8W6e3s3fe5nXt/bmAd78wI8hX/G1/QO3
N//25uXefN2bx3vze2/e7xfnA38hT/jmD9+84pf5xstDvvnJN2/55jPfPOeb
/3zzom++9M2jvvnVN+/65mPfPO2bv33zum++980Dv/nhN2/85pPfPPObf37z
0m+++ss89uW337z3mw9/8+Rv/vzNq7/59jcP/+bn37z9m89/8/xv/v+tC7D1
AraOwNYX2LoDW49g6xRs/YKta7D1DrYOwtZH2LoJW09h6yxs/QWysLoMW69h
6zgs1qz+tTbJ3adb35X159wYhxfH/b3gk7P7kmubXf10MXrHufUyto7G1tfY
uhtbj2PrdGz9jq3rsfU+tg7I1gfZuiFbT2TrjGz9ka1LsvVKto7J1jfZuidb
D2XrpGz9lK2rsvVWtg7L1mfZui1bz2XrvGz9l60Ls/ViHkP9mmv7B25vPaat
07T1m7au09Z72jpQWx9q60ZtPamvmTpTW3/qu6Yu1dar2jpWW99q615tPayt
k7X1s7au1tbb2jpcW59r63ZtPa+t87X1v7Yu2NYLe2d1VKo31t+tR7Z1yrZ+
2dY123pnWwdt66Nt3bStp3ZZZy3f0K3LtvXato7b1nfbum9bD27rxG39uK0r
t/Xmtg7d1qfbunVbz27r3LVnRU5uXbytl7d19La+3tbd23p8W6dv6/ctpqye
dZmLu/249VFZv82NZdj4vo3RWD/V9dXZ/cq12a7euti949+6iltvceswbn3G
rdu49Ry3zuPWf9y6kFsvcutIbn3JrTu59Si3TuXWr9y6llvvcutgbn3MrZu5
9TS3zubW39y6nFuvc+t4bn3Prfu59UC3TujWD30M9Uyv7R+4vfV5t27v1vPd
Or9b/3frAm+94K0jvPWFt+7w1iPeOsVbv3jrGm+9462DvPWRt27y1lPeOstb
f3nrMm+95q3jvPWdt+7z1oPeOtGXtcMu60qvLlgd6upTX9at3nrW1bne+tdb
F3vrZW8d7a2vvXW3tx731une+t1b13vrfW8d8K0PvnXDt5741hnf+uNbl3zr
lX/N1DHf+ubFtNFrth761knf+ulbV33rrW8d9q3PvnXbFztWn1ob4+67rS/K
+mduzMLG8W1s+4vr1G/sxgv+q+vDs/uYa8tdfXYxfZ+L7MfPPmglfTA/FvNv
DmEqvEPj5sIcokf0AA/aKzE/aNXcWz/pk59n6yvvxnrKfKG3fKza74Ml5WZH
c3S9bKGwD12bO7iCjs2p61gPRsfWeMXvwMd0xny9y63nGc1TOJ7vkOPWK2SB
8RbT4T7WNHjJs5OV6C2a1XbcdfAqmjM/ro9ujM01PYv5ubYfb7u4HjTWei+7
EhuT9SkeZJcqHhD2sWkV29x+IGzLFobP85GhA+pb3MSZO+D1B14+M//YyKz/
rX9h053MPfQwdAj/YGJ6H1mG3/mqsHWiUWvk01f+xz/EbEe3eJz+hefx8fd8
9y8/MI9dE3bgH3wP0+CceCa86Tdt2LK4p39/fcI498CjftM/ndBfONZf+NS+
Hp7LDlrtM8fIBTJWO1+X9D738hsZQyd1D7xovPnb5DdEHrk+OQF/YHMxFOSH
+bL2zv/TGggfa5tHYyITrJ3IFnoIWUEWop1qI8I5uOmaZJv7ojHn+o28JHt9
9EdvMM1zWmOzU3ge79mn467p+ckrfcgdtAkHznpjb3jINUeuu5fnsZb3u+/w
1JjJP2OGSWRkuLYYsXrTZa3e9tfW52T9MDc2YeP1NoZ987psLP/GM25Mx/q1
rm/P7m+ujXf13MX6fV6y2tyy3+Evz+l9wCDv2XygYbLc/GujE3I/W6jnp/d5
V2gBjcEp38mTsC/7pblHmzAJTuEDbde1TkMf7qdP+9DtUUdX5hQN5lvtOvgV
j9D58Jf1nrWcOc/W6rs58t7LGeK4+xa3aJzoBsaZB7iWn4/7eN6eCx26vjE6
bj7dw9y5jjE7p/F7rmv7cbbz+yIv0CAsQSfxEUyxP09Po/vBwjN+4Yy/gn9+
Z7Oh46Unwjnr2/rT+YoNy5Z61pc+18WnLfSNT/BYPhlsoekzaKu8LeiUHCpX
JL5Pn0WbZE282ZqtdSncY/fE0/CC3pdNE5bARHjimD00PBXWwbcw0sc5fYdJ
eDoMJA+0nZ8fqL8wzF8fvIh3/YVJ2sU14HffyRR8qo+2cbmm92a8xdhn+yRr
yCiYQVY41/PjZ89VPGB2G2tX98PH1TbVRgf60APMm3tYS5Bp5af1Hjyn9ZT3
pk/9ySEyJv3C/ckZbed6n55Pf2Pw3O2nkD/6VmNXH2NyL3LU9ck7+GMNrx/b
JPyC8TDaezdeNEOPK5cNOyBMh6fJrrBg9aO1Ge4+2vqWXPpbFoOwcXkbq775
Wzan2ea32Rj/jXO8jPXI33V9fnbfc22/q//uGmDnwdrDvJL56MT7wkvoxzx6
TjROrqMBfbJhuo53ZH7IlvYK8W26nnnTbj1mDdRxuOb9eO/m6PRre/+HPGbF
wpIL+hTHiu+2bqB7o388ad4dJz/KkeRayRZ0UrwPGquWu/G0j9n+pmfz7PCa
TMmPrL1RY67GU/uh+NNx+GputWH9tf1422iW7MAP1rBsOPiG/obHqlV2+iic
61L86HPu6T1//9snHn5vi32uYV3LLnrWkTryxBz98LU+2dj0zb6IptKB0Bu5
iv/wGtmFf8lqcrWYbbxAJp9xRe/2gImuidbxG9xrfxEv59fpXH9hJL6hx8HE
cNBvqweurVMb/4R94ZZr4plwyu9kqr++WzPmE1OtZ9fBY+bAGDx3Oqp29tJq
nxXj4H6eL7zzXjuO/8l6PAp/yGg8TSaYN/gJ08xtepz+4depD73nIQ/Mu+fB
9/p4XhjouLbj2uYA3oUX5A754/ra7hWuwRrP6FyyybMap7HpA9Py1YdNdC7P
2DWtO3atbryeJ3uXcZKlsM73lfmrB61tcPfL1odk/So31mDj7zYmffO0bO6y
zee5Od82783G/m/848aArB/s+gLtfujahFcv3rXBzo/1XDELrXPMs3Z2P7RK
9zG37eW5NkxED9Yz0azfvKN0wGyGrovOy+uH18p55N0ZH2zCK3jC/cpXpL25
PbXLG4iW2u+wlkUr3pvx5Evm+Txvtcthr2fBf9lzs9+iS9fPNts+A11CH/09
l2t7jnxZnYvnyLFyll7bj7PtnaEFMqG4ZfsK+OuMVX/bwZ9nztTXHDERcI1d
5swd89yh18G908flFcd6tbyseDS/UNcrHhAuFv9+5vh7w2Groa/xS0GP+AON
k7/WnuWmQH/5cOZrrQ/+wYtkF5rVD6/BNnt/bJvWkOmAeND3cK3v+CUbaPZM
+w/Oxw9+3zE6js/wk2sU4wCD8C3e9ntxEMUQVpfTPeEg+297/9lSyxWKr/B1
a2kyQh/Pmc7Y8fjVnGibA/PifO8b9mizB8AL/GuuyBb3gZ/knfG7XnYq62Tv
AXb4W56Z7GbGkO3LOMk/Y/AMrheGGhsbhDnKBqWd773nLSeJc/OrJ3PCVtdJ
3taneDRr+fZrXJ+cX9m++s7aAHdfbH1F1n9yYwo2zu6y5m/5WDZH2ebtvMwB
Xh7UzQW3+XA2J8DGRW5syPrHro/Q7pOurXj15V0z7LyFd+njrnXmyn6fh/nE
D9lC9YEh5hbtoTtziDaSNzARr6Ch9qzLWY320bHrly8bv6APmNKeYHvA2U7T
AV0L35aju7xMzne8tSgadh3jRr/GiZbCZHSmrz6unw0Gb7hesime7lnCa7yj
3Z61scDoa/txtsszZN0JA+2/82Vjk7mv+3RgWXnS8G5+gTDyrKP1rvd1PT/t
oe5wcRRw0znZTIuVGix8gubwJFqEC9lC2zfAm9kxyBG8kLxF99lkPA/+PX06
zv089KjtmvjAdf3Fc/62t6cNm/zN17P9vsVH55GLeLOcLHg2O4h22Gec4WKx
gX6DwT7wh87p2viqOAa8g8e9I7ymH74lF1wTTnjW8pmRCfqVz1MbRmTXMo+O
ee+uDZ/Kr2O+sr/iXzLC3OL9dMn2ccgE96tdHv58mYyn/aNsStbzjrfeJhu8
LzLWnKW/m0c0QBa5b1jZHk37Vtlyk8nks7lzTRjqeP43lzI8vWZtfbv/dekT
kp/kxg5sPN3GmG/elc1Ftvk5L3JWP9Rx2Nzgmx91c8RtnpzNFbDxkhszsn6z
6zu0+6drQ149etcSO5/NPz60lij2wXx6v9YNaCP/FtdxLjpEw+6NTrLPo7Ny
PKDJ8kn4jm+cY4610T4cjfbKleT5yv2uj3PxsHNdK99q7fyo0bu1cLhoLGE0
DMz26775qrYPXz7ecNlxc6ddDC4ecA/jDAc9Rzaca/vxta036W/4r32I0355
5sqGbYuD8Wb792cdjececmjf5ww9zruPgT/wr1zY4V/5Q+BtehocoGfl84F+
yQ40hmbDGrSGT8k3NIoX8Ta61QftsYfAN3yQb2cxB+l72Tydh4/6OC/fzrAR
vaPzMK94BzI7DMUfznF+emM5ZBxPB3WNajbEL3jZb2QHXs624/n1cwx/5edC
zpABjpFN7fmSR9rpa9519hnXW5tA+qPncQxmxMvloiFbohl6TnnYWkcZMzni
+p6r9bUxux55a47IFm3XaW2jj2c59/de+SIfe9fwfo3F+81G6jh88k7bxzH3
xWuvrF79ZW16u8+1vh/rD7kxAhs3t7Hkl/lVyjm2eTg3N/XWa9gaRlsvY3OG
b97UzR23+XM2h8DGUW4syfrTrk/R7quubXn1611j7Dxrt95K94d35if7jD7l
Zs+fxNy5puuceQpfWNdlI83+X8xOeZXKLW+unRMG4R984y9azZ8ajeqPL/Xz
rsupxL6Dhnxvjey8bEinn9T7PNB/+/BoHW+bUzzifHSsj/v44CVj9yzeA3rW
B51d24+zfdZCevYhnwVcq54R/PKBg9k/9T9j5V/9kEf09H152UPd6/6eOPiq
+33AI97+yC9y1j/6hmPf46yx9SsPv9Dv/q5fduzdsQ/CseyXaBTdFhtQrQN8
lU0eX5WnGv2GrXjI3/b3XCPMRcP5cxb3rt3eXzF9rUFdVz80rg/Mbs9QO/xL
n3T9cqsZZ7ZN/ImPjFv/6quVaw3P5wsAA7TJdrKMXFl9jTyAka0Z/K4/XAoT
wzt82W/ZkLZGITkZzsO8cqBWz6Jrxfdnvv/3PfrifXKEPCMTPYtxFdulj+Pr
k2D8YWJYWf2dYtDMd3HWrq8/vcO70cf8rExePWVtd7uftT4e6/e4sQAbH7cx
45tHZXOLbb7NzUG9dRm2VtHW79saUltHY3OJbz7VzSm3eXU2t8DGV26MyfrZ
rq/R7reuzXn17l177PwXF29u0UN9sp/DlPVVxgPeo/nNltgeXzTc3l975a4V
lrXnXh6kYmnjnWKJssm4N9pvHep78kBfsqV1crYc79M7R5PG3F48mm5Pwzhb
z+KHfOH0cf/08Hzeru3H27a+LB4Q9p37fIev50NtRFiXLqcNE2Ebe2f5YtoP
PPW+t08M4avKkXbkGrmv/fgEfVUvUnxEH3gCz+wTok8yyDF0ilfRdfZDeOT3
fDL1z3YJB6P79D7n44Fsm+W2Rst+b9+u+D6/5xOKB13PPYwB5rFpprd17XK5
4CVjwFcwVL94yfrTGPKRyW8U/5BNPu1d5BtAHpiv1rn41JjiTddunWxe9E93
9nvY53trV/1dx1ic7zz3ctz5xeJr52vgucJQ8k5/1zfWctr5vvuY7V2SfdYd
xWvkO9F6Juyrbia8czyfdv3Du5W9q4+sjW73rS59ObKlr8//xsFtbPjmS9kc
YptXc3NNb/2FrUm0dfq2du3WVdzaUltfY3OMb57VzTW3+XY258DGXW7syfrf
rg/S7sNe2qLTx3dNsu/FPG/eGO1soe3reb+Ow5fsiOa3vUJ0iwfhC1pf7NMu
zqj9evfZeNv6ul/+a+iYnSlbT3Ya52vDVMetv/stHiq2yLt0TTRcPnrPng0n
3i/WyThgafIWX1/bj7PN9/qsQ/y2w7YJ0879v5fd1wR87vCHKc6hOPpTb3yX
+z2O54/jxdFnC20f8b52xH2d3DM+OOxA+9//fb/qAQfhmvj2d3znL33Y16Mj
toeXX0t2Sb+XlyU6T0crz1l7gu6XvbLYu451bd9dp+uml+ZD6vrttecXWq1Z
fAEb8yH7rnd8yNEHj6TjnLWqXnXwZXUf4Et8BYtcy+9kEzngd9/xV/cLs3zX
31/9y0daLWzP3vuOT7U9Z7V7y9FaPu1wNAxEJ2Fm9NP36j7BuXz8YJh7eD7f
zXV1EL2n6oLnM29NlC6Zf05xZ/nwwK2Vsat3rC1u96fWZ2P9GNe3f+PdNgZ8
86JsrrDNn7k5pS/rLOTns/X4Pmtq1G7d9q01vPUWt+bU1t3Y3OObf3Vz0G0e
ns1FsPGYlzEp+eWub9Luz66NevX0Xavs+yo20DqnOIj28trvKC7ee0KDxuc4
XswfJezze/qcdnbN/LQ9j7FH4+VZ6nt5fb2fcj6179Ea25ob71u3+q5v61DP
gkbxkeOeofVsuXzbP9jj+b7jkWv7cbbPOjjP3+/hvfwB+9oHpANWGyIsS8+r
VmD1dsNBfWqfuURfc+9T+n5H3FS1IeSHgXHiBP/B9//q2+/9nl9x4I582eyk
cAxN8vXUDhc3hq9POFbsevlaNqY93dC1wsjsrrCuGkjWgz7xnLlCz7XLTe3a
ZLnxt6fufPIuf34yprre7GZkFh7B9/QE+qWxbL2lYt+10yGzrbb+zWZb21/v
tbyk2j71wbeNV7t4fM+TvPFc6XzdM51zbbB+Jw/IO5iM77MFJS/cN93V/f3V
xzHn5kugTccoFsS8FEdGD1lZuvrF2tx2H2p9M9ZfcX34N65tY703/8nmBNs8
mZs7euspbI2hrbsHK4qd3/rs4mDZPuEl/Y1NlL/N1iDeOoxbi2rrcWxO8s3L
urnpNj/P5ijYOM2NVVl/3fVZ2n3btV2v/r5rmH2P0bffvFPj8C7xTTVO/M1u
n3+A95B/i/u3v1674+l2ftv8hNl+sgP1G1nS3knr3vJllB+fTMgmhcaNrfos
+egYZ/vlyQDzl/0k+u/4tf042+WBhH/lvq/WA9tn9eLL/Qk3yxtz7i2+8aG+
fHERjqcnqkVx1hV87RP8aw1sT+Pbv+2DDz1QThdYaG/wO7/jlxw4SB90HG3C
Jn037j3baFgXDra223xoi3c+9DX3cw/Xzy8Hb7SGS6ciW52f/gPv3Es/4yyP
Gdlbjl/nWuOzXZG3jpFV5Cd5zNblWmQPfITxnsMxa1Rjwot0pnx1yIjyurlm
mJZOnB03/9TaxTc6p2PF8GdLXlsuOZRfgWfyLO39ZQclx5I/5FT7ouap/Vi/
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
+xpsr5/n/nf1hHX/+qQ7Xn6i9YCn2WaLO3X99Ef/l89g7+Q9FEdh31ZeLPyo
LlB1c8V6wiX4g3fqT8H/cHJyT17u9j7e/o/bA6v6sbBta6FvPditibd1gcyv
2gibH7o5MhsnvLFS6y9em/naDXbvtPSzPr/8+NFemJa9Ih0x30j20WLMw7vt
G9PesD0g7AsHfZNHrrE5zcbOM9d8CvkdfZNL3nE13qwnurnHrznmcyD3Tz+k
o/eJmTl4+KP3/e3UnPnexVf1j2erCRMd77f1osePj16tFxaS8fwiPvIiwsHi
Q33QDoyk+6CzzkF3dEj2VDSZvy+fNf7GY+QwWvTbzieD7HnxNZ0WVp++h99/
q3H66PN2+TPV6fdczqWjsYWyBx9b4edX/AH+gV/i99zr2I3+xyXfYCKMM8/T
X+gvr/PNQ0w7Puo4HuIvdfzUIP7bC2fZw9i/DiZ/5co/I0M9t/XwXO5lP2At
XT9fav2Ajdsj40s8ns8zO3E5/+URV3fAOlY/bmNu3TO7a7UNtudG+/KVXbuf
XxvX+n02FmLjAzdmfvPINrd6641sDa6tS+le1X7c/gXPPX2qzere9X7dfuhh
JZ3Ks5L/MNK6lGtfX3K2b741ex/+OtdiX2C3NJ98TN5p8fbeWbWk4Wpxm65L
72Q7RSf0M/aF/PKPz7uz7/z0p3oib1/I7Y21/UGea6Rv7mT1dsy5ekFbM2Hz
Rjd3ZuOHN4Zq/chrS197wu6plq7S3bKPZu8M66Lr4uKK/Wyflz4YBoZ/qyfm
O3et4tZco5wKsqgcZ88TrmYPrS6HZ7LG9hrioryDe/yaY3YWGICPNnce1tlv
FhdaDTV4cHrBnL4v1Q0t1tSn/qGPXKgLX4o7hafwlpyMzrORFicCD43zE/rO
911t0ORqdNl3+7V6x/nU18kcYNufP/r81svmYV+qp9tV36rax7BLnIvnpluq
ncz3gk/og3ArHHRPPHNqRV99G9/wzpgckzfht3xCZKI1kOvMXkp28wmJpTm9
zf/jtb5w17uxtvbkZAgZAwM31ghfWr/419olF+wZirelMxYX3r7X78vRzP6M
l7NTV4fH+R3Ptpx9amXU7tvXlrX+nY152DjA59j4xcHk5GLi1tra+pNbk3n7
FGzvHrKrfnbb47Xr0Pc82/a5I9cdh93l5sMN9k58BVfEbNLx4Y1v/ZXcr9xB
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
iCuBG6ef/F9dfeS9L3RsD9nejCxn4/Du6Dxo1fuBA9k/YaI9m/2e4+GgOVbn
rbm43mJi9YrgRTojPCq30jn5SV2b/ugacNM1YDbsc318iD7yM8JmOCz2hw+r
OFI4ur2YXbP+JtuTqzyIar9Um33r026Nvq1TtLUaNl91c3ae45azj6//em34
a8fYvdzSc7Gf1ZLyfzxQDLpxtY198r/jJ/dC+65vXfAy/qdji+kmZ/yf7DGG
jacv5Lcu+wAaYce5x685VrOiOtrkf/XR2ONgor/9pM7Mj95Xc/TUnDl9lU5v
tEseX/ZGmJBNAG3Rj+CT/AVyho0IHbJr8oWRV8b8cEdu//O1x3bcmF7UGAah
SbjpfHQOR1wH7zjHcfKAvIEVdC/zOfHmf/Kon/PVKx/kkd/4rjpynqWaOY75
LdqmN59auj+4fKtkOFniHuXO4wm86/nJPc9C5sBKvJhu6Hzn0MnxVf5Bst41
6IP2/fYC+MjffcNBugifofmRueW60C3Zcz0juQJTyTJ2HHyMv/F6uYjW3zHv
pBgjmLiyYvfPa1NaP8vaPDce78ti1J9r3z3X92i8dSA37mb7BWwPne0rt71W
t76H49kT4Vr2RNjgvcjhtM+xj0db6Ac+eB8wzru2z3EcjWXztEcxtt6Oe7/h
oOPGaJs+SP47jh7KNYe95ffX47Wc9PTXej56jvopO8f5+Un9vz2Nc6uVKubT
WsBv8tv10YV9Vjjo2eCRY+R7tbKrl17fk+1Tub26tl/J1mzfurVbu2/rF20N
h81j3VyejWfemK71a69t/9m+0R5v6TybKN2PjpedM387PvEc2R/Ysr032EZ2
0hnwHVoRT+7/aMff1S+w1vbvbFLWj8wTd3CPX3MMB0/OxB+/4SC9jx3w5Bae
fkqn3+B3Lgx86FDvT03uT97yzf3GtfAh3rd/RmfkCT0K3ZE3aAWNOwfGoXlY
Vhzmqc3/vTebYThoX01nxAt+a5xu6Lfko+NwhPyQiwyzil3nQyS34AWc9/yw
7tQF+NGFgbC82uP8nf8eDrqX++KPxUFzg/v0Os8iPo99rHhR8yjvnk6xOEiW
2C/Qbc0ZzpkrOWXPSacla/EW/HM/+q2YnsOfhzf9nv5o/0KvoevYf9jPurc1
oyP6iK1ZmbD75LUdrT9lYww27u7LYtHL098abmHb1rbaeo9bA3n7Ajz3ytn+
cekL22e8+Cn0Lr7TOlh342IvyeX0werDOIeMhwnVCEXD7Bhsk+jTe6QLhX3k
ffRArltvNA9b3cd+Ce6gZ/RQ7Tf7HXOEO8eu/5uXrQ3G5YMLE2FL/Zrr7+O5
rQGs8W6sk2eyTumWxf6weToezuKReiq5p72B53Tc+XDROjTOllyeYDUNNjZm
+5hsLfetZ7v0snWNtrbD5rdujs/GOW+s1/q71+a/do/d+y39w0Bj9P/oPXCt
BRn5yBW+sA++2TuzKduP4zdxu+xO+NAaPWxXH07P7L+44oTtQfCyvew9fs1x
cSVshnQJctS4WmvHV/h3Vw5hefLZD9HEI+/ga6cO4z98eMjgR//S//PhxGwc
XDs5gP96yWw0nD3T3pAMgXd4gKxAT+mAzklnfNYf8T1bk7Hf4mO/xZuu475k
F/xy3P4X3drD+Vt5II88ketZ4Dl7MH0XpqF5z0qe8BOZD74tToZMJjvhvrnh
E7LO3Mhb/ISHVx90Xcfxrj0lHDy1pf73pQ9aT3wEB8lUGG5e6YbelXXl+3Tc
vPAc7HvkbFzPRec/Nt5vvjdHtju6yfL+7ofXRrR+ky+LJShPpT35l+l91a5J
N9waVlvXcWsdb/3/7YmzfeK2d+r2E883RZaR3+SZPQoZXV2UrQnmN9V7gTn2
9NaYDoiW7Evqq4u+Xd/7ou/DC3RY3Iv35Bw6Tji4+qA5oFXnpE/BteJ34Esx
pGyG6X0wq3o79UAv3jVMdJ/qD/pNeFB/MPfC91ufvFqsbJ7spmJnjs/7N66/
2xOYA50v+63rWLvnns71tdzeXtUsq79JNd63xtnW+tt6R1vzYfNeN/dn4583
Bmz94OsLWHvI7gmXL8jF7C3eE/loLJYBD/o/Gnrsta99JnlgX00HZMeCiXRm
PG3P6l2SNXD0Hr/mmA2QzD/+plNT9NFn4sJDWJgPUWzMiRH96vvqZlfXsNxw
Okr1pdFEcp6+hpbJgXDEcefgV2N2pOyiMAufsiPBPuPqmKU/wj784jisQv/h
IHnMpyOOBU+yJ6JxshAWmQ/at3c7mPKtD6ff1GfvrMvJs//6u/Lo6V/5H83f
HMg3OOgZ8YlnN3+/sf83Z2tSzAzdMJsw2Wxs3czf+yCzXMPc4CBbJ2wjU+mk
9EHYztbrvbm/MZ3eNarBbC09z6PW3VuMzfL47nvXFrT+keeYgY2j23p3xcVs
DvJzXY5qVW39xq1pvHX+19e4/eC2R+r2DYcT9GfP4rnQN90ne6O1XFth8ZB8
OM6ppjT5L2bE+pHrjtEHjbORogHvg8x0/8bOSR80J1jqvcM3Ngh0aC7o2fFw
EKZUR8ZzVJMM7sC61QfzrVnD6qhmM/ZsYYnnKM/CHItphLeOtSfwO+N6PtKb
yXjY2Ho6x3yyxxrDvmJFYff2et5+l9vza/uebC2/rX+7NQC3DtLWgth82Oec
oOKiNzZs/ePrI1g7ye4Vl19O/t9/vfaZ9D57TrLQXolMIDdOfY4/u3gQPRWT
YE0fdfSveKrk7T1+zTG5WT7dqUnx9Ude+amrLfblES9z1cr2zqu7TX+Bd/Qg
Moq+k35EbrAfos/qU+NRclxMVXEmZD2aL64A3ZIb+QedH/aRTzBxcTA8YiMN
K+EUXnFf8qfr05PIBbohXQsNn5yE37vuXe68fR+bKKx3bTZG+vCpk/gPl48S
b9PH0vVaB3MmP8lD97Um5B4+honuQ99JHyQD2g+QU+bmWcghayP2DK9aM/xo
j2AtT+/W07/CntO1YSWcg7d4G88uL+/+dm0+6wfZ2ICNl9sY8s2r2vzirb+x
Nam2TuPWLt56/tvjZvu+PfdCrT84fIF3sLz6aelH5aejN89U70IyvH5MZLaY
ovrM1jMCfto/WQ+2A/YLct77pavTDYt1yeZJNzQv78a65gf0rhf70E89SsI4
v0ufMobL2Ukdr/aN8/3NuP7L5R6WM5kuVkxscZzlG3jPxuUB+r852ScUf8qe
V00d61OfeThQLyzrmS4IT4uLMZ/tAb19MLcX2PZDea4Jnx1+awM+10eqRsTm
yW6u0MZLb8zY+s3Xd7D2k91DLh+dnlR/dO0/4ScehH32DXiQPphuCEftreCg
sd9mL73Hrzk+OQ4nz718euOf+AI/+xo95BEj+o7sYYODI+QU+WsPhY5hEzog
J8lospv8ac+F/8iTxbV0QHF3MAv/hoPonJyxxwo36+VXbU9yj9xyTbwFm+rv
QIaZJ95xPEykB5JFZBR5xh5rXu33HCu30DPhF2tDZrB1ief0LK5Z3RjPCwfN
n67nGuYMh9w3G6nnreYMOVmsbDhI58BXZLO5u7dre1Z8V6wQvvXcxvacp4/c
ty8cXJ7dfezadtbfsTEAGxe3seKbP7U5xYuDq78912OsRvHW7V//zvZ3256n
2we8uqFkWf2J04nKMfBeyLvqfVlTcs+1k+/uGybCETQN88hrssweDn7wmx3/
34eL3vgH0Uw5gObUGF6UswfD0DBMdJxO+cgfumivurLVOM2fZn7FjphfNUf9
Du4VD1ptOvfP5+a35ZrAoXTGYlSKv7He+MS10hfZZl3PeqO76mbT9cyveqfp
pvWOr865+1TPx3XqW+L69Ybe/pjbI2z7pGyt+K2XuzUDt27S1o7Y/NnNIdo4
6o0lW3/6+hTWrrJ7y+UvY3yHf9iSySR7Uftq18WbdGlj+1X3JsPu8euOq0VI
D6p+jGPeNx8gnYj8rqYKGYYO6C3ZA8V7oGtymXwN+4zxiONo0HHyxL3zD9IZ
yUyY9ZDpFy7AU/KtWBrndxxuOu461XVBc853jvPzG8L7rmMO6afmbL9NRjmf
rHzk813YgebZgO3rHnmxlwwkz/AM2QMH+QDMxzrQhT0LHISzjYsXDftaN3Ky
+myOk4Xlo5HjdPajm37l2n/iNb6ME+/zzSuP217D/nV5c/era8NZv8b6+jf+
bWPCN09qc4e3nsbWmNq6i1uLeOvzb8+a7eO2vU2333d948oNLH/AtZLDaM+5
xWxUU7R4RbI8uyA5nm65/ei9c9dg2/KezMN6eTd+jwdOjsSvXu+O79u10B58
hCXowf7H9WAienDcGA04Dh+Ny5Vwjfot+H+5dOXltT6OWRfzMq4eXPl11ZTL
J5ieCI+sW/mW+WitEUxsD9G+Ah9Y83pabV038/B3e4nNkS9H8OwTj65an1M8
nw+wntHbN3N7h23/lK0hv3V0t5bgframxObVbm7RxldvjNn62dfXsPaW3XMu
36lLDgfJBHspsgQPsq8bk7H4l9zCd/f4Ncdooh4Taxclo+n0fIJokmxlF0Jv
6MDf6UH549C5MSxBi8Z0H3yBhuqvR66Q89kw0RD6LQ8Cz8BEx9MBs4U2xkt+
Wz8j1yzHMHxM3/Sc3ct9i6XBI2SO8/EHHQNvoG+yy9/ZJMmCB9ZdegF8Y2ck
x+3t4a970SfTZ8sfhIMwpVz7HW/NGetjPfNjwj9zsJb2o/aZdFD85XfmaLw8
uPvStdWs/2J9+hvntrHfmw+1OcJbN2NrSW19xa05vHX4tzfN9mvbHqbb17te
PPWVCAs6l7ytFlm10RpXY60+TXAA/qA975ju5/7wjD5YL/vTC+TDpQ/aa7gH
WYZunOvdwUH3CAfdw9qd+IpfuXCQ7dn5aLjjazt1Pv1x67xVI956V08OrtSX
Cd5VozwcDMud4zeu5Vg9bou/9KzlKWwMJwwrzmjrnLv+9o/Y3o7F19APzbW8
wmoYWL/0VnNYHNwa29tL+rmfZj3Ftq/K1pbf+rpbY3DrLG2tic233Zyjjbve
2LP1v68PYu0wuxddfiQX7evrdUVW4SN86rhr3uPXHJf/R+/zbmHfqRn69YvG
2PqqG0u2wz4yHwahXzI8bCovHp2mA+IpOAUHje3V4ErxLfQTPGHM9pe90fwW
E/EQGs0PiHb9dvXBxUG/zUbq+s5PT2xuZIAx3RBfoXW/9ewwH31X4wUOkReO
mxt+JBfdt+dyHXMjJ4uNwSfGqw8a46V6MJmz9SELXd8c6IPWCebCLHPBX8tr
u/9cm8z6KZ5998WzbYz35j1tLvDWx9iaUVtHcWsLb7397UHz3JctPWfz+8jE
8uLz8aX3Vc8r/1d6EBkLr1zLB+aUS0dvKX6UXczfiw2CDTCMPCfD/d0+wjys
Ebo3D7atcij4isoxdEztGH7A8A5OoB92c8fpffAOVpRjCPOyz9OT65Xh2eF1
z2tO6XeeITtj2Icmwz5/M26vEaa2xsbWLdtlva6sW/Vczcs7xEue1b3NwfVd
o32L9fE7awvz6IX2Cs3LfqPeSt6Ra6W7Vtuu/oTZC7bH9PbZ3Pyc7beyNee3
7u7WHtz6S1uDYvNwNxdp47E3Jm398uubWPvM7lGXTx13vjE6euz37/GLju1x
2MP5CZMx5Bt6RM9kLd4h98hT8o4+tXl8aCKdK/xynJzFB8ZkOn4wpu8Y2xs/
bOjX2G/dC72GidlOyTwyxHzDtfLZXbMY1LDVHNIfu07Hs7U6H63bMzoHlsFH
sqGan9lOPTser9YN2WA+fuu4+5J1rhO2mhuZWc1tmOi4vcTiYBhKTvFVmJu9
uGvDweWp3Weu7WX9Eeuj37i1jeXe/KbN+d06GFsbauslbg3hrau/vWa2/9r2
JH3u0229rF/1M+s9Vz201Qedi1ZgjvPqhUCuup48Ce+L3geL6vtTb/RiHa0z
3cZew++qSeYcuOU65daJmyH7j3/oZy7MsM85+7lfvmgJ/hnDxGMj+MWLZuCj
ezjmXWcvRQ/sKsWTeA57C/eDRTCv/sKeNzyqLqrnqtdUeRHhZLnqW4fny+qy
Vqe0PPn0+FND9+Ry1m+92gPVpkv3q753OZroy3oWK+Mc9/B8nsE18w+yfdZ7
m9+Zn297T2//ze1Btn1Ythb91uPdmoRbl2lrU2x+7uYobZz2xqqtv359Fmu3
2b3r8m91S+7x647RJB4h//IH4Rdj8tr7J6PQEH3Q38h/Noj0ODSQ7ganwh04
EsaRrXiiuBeyMF8evg376scXDlZvrWuGgx03f7IIrod91WczT/bBcgmNzcc8
8Uw4iHbDLPLKvewX82m6jvVqbs4J38k01ycXjR3P3+f8bMLlFRYXRKc2Juet
oXuRZfyDcG7f0e5bVpdf+/b6fDcOamODN19mc0i3rsLWGtr6e1uTduu0b++S
7ee1PS637/PpifVbb5hYnZT0RXK3nkv5DMvfTm7T+xqbr3NdA7ZXyys/Y/0R
8kf6LdyEg84v9iPscz3yL5uwNfZ7e326OEzNFgdTfVd/Bi2hFeuM3rxLa5Dt
1Boa01esYfVpyXnyPr0eXcFR9sBszNk5zdf6ZDfe3uf5Cq3N1mgtTsZ1wknY
ZU2Kw6mWD1x23/ptlJfvudFwdmnXr+6r/3t+H+8s+7f5ua/5Vp+Wb7z+amyh
m8tp/20/iMa2J/X25dzeZNufZWvUb53erVW49Zq2ZsXm7W7u0sZvbwzb+vHX
l7H2nN3TLl/f49cc3zh44+CNgx8fB71zugs7DLpkq2PX817LY/Ic5mMebIf8
ytvX0XNYh+yi1ePJD9d5Hav3bXqiT/EurlN8Tjl7xrDK2LtL16YD5fvrd67j
765t3b03PuNiQul/5gEf8J31gvnWE++gLTqq9UPTrlEN4e1Vvf06t2fZ9m2p
DpXfbv3erd20461lsfm8m9O0cd0b27b+/fVxrJ1nefwev+b4xsEbB28c/Pg4
6NuaeUf8XvTBs/7HbsemJ7aGjnL6aX76FmcbxjX2Qe/VL99c9b7rx1DOQpjo
k57YO6q3Q306fNLrik/K7mmdYU32a/N0DevrGHuvdYN/1s06GFs3tOXe1s1z
mhs/bP060Xqx1vWz3h7W28dze5ltP5etab91fbe24dZ32hoXm+e7uU4b770x
b+v3X9/H8vs9fs3xjYM3Dt44+PFxsJ6Eci5Ovup3PpwavcfXxI7HXyUuw7uG
J9YSLVRfbPu1F5fUJ90wDNxxWFiskXVKT7SO/p/PMbtrPeKrb17vCGvmWDGu
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
Y1Y=
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3Q3crmta1/WdmpGZTS8WldVYVqOZkVpRrPWsbZmRmZFaUZkNpGZlikqK
r58tIo4IuEHAAUG3ijggIiriiDBuEXBAHEcEHBFxC4iIiAPyMrza872u+/+s
37rduw8m6MA8+/O597qe677u8zrP4/gf/+M4347zh777z/8pP/v7PPXUU7/o
7W7/91Pe7Zf8uF/4C9/tl/7U7++Pn/VuP/fH/Oif+31vL9/z9vNhtx/Xf+FN
7/roz77xXR79zt/xrz966qlnHn3Ht//KR5/z2f/lcf1XXnjlo9f87n/70V/+
kp/x6KN/57/x6E99zufc+O6b3/KWm1/z3u998+e/8L9/9KufeerRb/zAD7z5
wi/47x5967d8y81v/rAPu/mCz/9pj779277t5nd99EffKPvvfMd33Pyej/u4
mzf+mf/muP+xr3nNzRv+9H993P/dH/MxN3/6c3/Scf+3fMRH3Hz+n/upd9fK
8cyu3Ve+9+6++r/3r/5HHv223/pbv1dd/8Uv+p+OazL8kr/0vzz6Ne/9fR6R
IV28z6/5vo9+78d//BP3v/gv/s+Pfu37fL9bPf6Omzf9+f/h+C350AsdkZsy
XX/4q19988Jf/l+P33rXl33pux/Xv/25545nprvXfdrDR1/2pV96yPmjPvKH
PPrjzz9/8wHv//43X/pX3u0R/X36H/9xj77ir/6sR1/11/+P498/8en/6XGf
nr/mb/7fj77xG/6fR3/zq3/uo7/xVf/no7/9db/w+Bem/vpX/pxH3uld/tam
v/TFP/2ROu3fXStXOz37177iZz8ioz/3eT/leMcf/ZT/5NEf+P3//qNP+SP/
8aOP/C3/8qMP/IB/8raOT9+26V89rj37B//Ajz7+/jNv+MmPPuLD/8VHv+59
v/+jP/Lad3z0ql/3j92W9xU3f+OrvurmQz/kQ+D05q9++ZffkMFt/W78xjN/
5YUXbtTRO72PPLXxD3/yf3jIC/Zv63n7u5c//NXPPPNOtyb11K0ebn79q171
8IOefdnDD3/129980LPPPvzaN7/Hw9/78T8S9h/6+3d99A+7fc9XPvR37/f5
ltPy+97Wp/Vs/duutrdyqHwqt8qzcq78q5fqq3qsfqv34qE4KX6Kq+KtOCw+
i9viuTgv/msXtZfaUe3rO2OPtd+3Bj757rguD5efy9vl8/J8+b9+of6ifqT+
pX6n/qh+qv6rfq3+7ta2Lnbw2offm/ygOuy339OvtYts2R3u0EZy6zVbmwy/
6C/8j4de2LhrvyV/9ovbZqe79oxylE/m3/D1X3+DBz7jT/xnB3fS6cd97A8/
dP4b3u/9bvX4Rnq6rdebHv7pz/3cQ7eewUl4ECd99uvf+RHdqDvu8rfy3vy3
fv7BaV/3tb/g4Luv/Gv/+6O/+uU/8+BD2Bpvapv64ij3/O05OPS33/kXP+FH
3+Nev3n9n/wvHr32D/9HB1f/jt/+Qx/d+o7D3/3Wj/pXHr3/b/gnDv/1Mb/r
33z07G/8p27b9BMPzsdf5PH7P/ETDzxr6225t37oZTff9I3feENO3/yW97r9
90ce3M+HaMPah7+9/4+97ubWb/yBg4P9/tZ3PHzq8t+tTg6fdivTB/waH8en
8X1f++Y3P2SDvd/nW07L73tbn9az9W+7nmzvYzlUPpVb5Vk5V/7VS/VVPVa/
1XvxUJwUP8VV8VYcFp/FbfFcnBf/tYvaS+2o9lW7eynbrP2+NfDJdyUv3fvB
7zl+8PP+7H971BPmvydery3szvVsENdoO9kujmWzdEX+tzo94l7c9pmf8RmH
jYtjXZM/fsSDn/kZP/7oB3zUR37kjb7En3nDG25+7fu8zw3+ox+ccttfue1L
/MyDr2/7Ikef5bYOD3D0+PnPfd7n3erjC48Pfv7Wb/llj77tW3/5wdE+YnW6
1t+ABVx3y/NH3A9XX/5l/9vxwT/+9sE54071X39Ru/CfZ13jWbLBjdoPF+7D
BEw9/8cePfqkP/hjDn7H7eP8z/rM//zAM57/fZ/wo27t4e2O/oMP2+Cjbvn0
tt3vcaN/9hve7wccvgOvkiG/8Bs/8AcdfM2X8Atf/Tf+r+Od3oOfyZBd8GXp
xx0+7lZnD/i7Wz1f+nqP7/f5ltPy+97Wp/Vs/duutrdyqHwqt8rzWs6Tf/VS
fVWP1W/1XjwUJ8VPcVW8FYfFZ3FbPBfnxX/tovZSO6p91e5qj7XT2u9bA598
V3DRvR/8nu0Hh/PvSddrr3hSe12v30fmv+8TPuFu7OUPfdInHeM82stmyeRv
f93X3fyJT//0m8/9U//VI+Nif/iTP/lGbP8Xv+iLjn4Cjvtjr3vd0ccwNoY7
8SSe+P2f+A444fB9xuXwsnE8HOP65JuXP7z8/WC+UV/EuJlxtK//27/o4Ldv
+Pr3fPTJf+g/OHjVvzClrhsH06/4W1/z8w6+xKU+2ouPcCedjlO1y33XysCj
63f4ne+Va8zMb/gOZbvnOX0XY2b49eN/z7/z6Dd/2D9/XMM+P/JhH/qDD54l
Zzx7W95t+9/uhrxx562PuvE7MtQ/8w59jw/5Tf/s4SOMIfpbu9XR3/QB++sn
/vHnnz+4W7/lVhaHbHu/z7eclt/3tj6tZ+vfdrW9lUPlU7lVnpVz5V+9VF/V
Y/VbvRcPxUnxU1wVb8Vh8VncFs/FefFfu6i91I5qX7W72mPttPb71sAnf6/X
937we7cfVB/1FAe+NV9ri3aRD7sTo7K7jeGwYfwiXv20T/3UQw5/62u+5uaz
X//6I85n12JXPOdZ8vnQD/nnjtj4g559Vqx88+3f9itun3/nQy54+ZYv4AGf
HuNxuAXvuP6A9/+BR/x98sxTR+yNx3G43+Fx1/o2xvhwLH4Zr4rp/ev+p33q
g6PPYTzMB8dvTkj/QFvWbxBvj0vp1N+wMC4mm/Gte+Nhz/l+Y2j+Vb4y8au6
bDzWuJu6GkPDt/pH9ADX5GGckb0Yv+RT6MRcG1yRKa5Uh1t5HfNt2mT8kO3g
yT/5WT/h+M5vcLJ+4K28Dv4m297v8y2n5fe9rU/r2fq3XW1v5VD5VG6VZ+Vc
+Vcv1Vf1WP1W78XDNU6Gn+KqeCsOi8/itnguzov/2kXtpXZU+6rd1R5rp7Xf
twY++c5c3/vBt00/6Lfv+2v/0WNu5631enEp+2J32q697otdcR8ZWrMg9nWN
88Sh+gZs13oKMbBxn5Mjnrr5de/7vnjj4JfbmPrCIU89cI03XH/sa15BXgfn
uG/sDnfrY7g+fd/zDz2Dd05uOsf04OszP+PHHx/8sP6c+vvQFT42vofr9Tlw
oHmi9R38S+9+i19hY75OGb4fJ7ffAbc+m2t0rQzcvvG48bzxNv4AT+NouDFm
RobGDvGb8TNjjLd8efN+v/4ff/SbPviDD7+Fp2EMT7IRfso6Ce+0fkQ/Rr/G
WN+tLI924lm6xL/6KMZFe7/Pt5yW3/e2Pq1n6992tb2VQ+VTuVWelXPlX71U
X9Vj9Vu9Fw/FSfFTXBVvxWHxeY3b4bk4L/5rF7WX2lHtq3ZXe6ydXtvvWwuf
XF/f+8F7P1g8sEGcsrjuH/a19uI8sSX5mN8nN/Mlf+mLv/gG95nr8T271U8w
HsSe/d6aCPGzdRK39w/eEDOfnPDMO5k7wcHu4wO84W99CfG18SbPi509c67r
ONdv4J9zLO/pg1vwuefg6VzX+NTdvI3/8PUf/ZRPuVFX/Cvex7n4BOfr/9A7
7qQr33lmPhEn48fNPZFTOZPe9+maDM+O032H45XrvrLnC+AcX8O8sTrX6mTs
7Dd98D9zy+2ff/gX7eZbjFlq66t/879w6Ir81Y0N4VF1eu63/WsHV+J/61fo
Uvnwp1z2xHb0N3q/z7eclt/3tj6tZ+vfdrW9lcO1fCa3yrNyrvyrl+qreqx+
q/fioTi5ws8droq34rD4LG6L5+K8+K9d1F5qR7Wv2l3tsXZa+31r4JNe3/vB
ez/4nfGD3mXcA4b/YV2TiXEvMjQv9Je/5EsOW7OeXR1xn3UN5jfE/2LVxcTu
GWPbmNtlPOnBH/qkHyu2PtZknDHzG4+1Gp/2qQ+OWBhP3NbhBi/gCe+4jDc9
NIbk+rNf//qHYmn8cK51fJ87rrjFy/Esbjr3AJzrQHDSZQz1AV6HNVyOAzdH
ZAxK/8AYWdfO4NCtxfc3foWRraeh8/X3xt30ujUbrnEzPPjXOz3LDxiX2/yi
+Sn9JHzst7hZ2WQPU+L6b/j69zzkjP9OrnzqkT0IZEdf1lQaN1NfdoMT1Z8/
cm1c8BN+77976Fi/D4feyuZR7/f5ltPy+97Wp/Vs/duutrdyqHwqt8qzcq78
q5fqq3qsfqv34qE4KX6Kq+KtOCw+i9viuTgv/msXtZfaUe2rdld7rJ3Wft8a
+OTeD977wb8fP2jtwMag/kFeb+yFrMTN+g24zxqCyxqNG+sEzfuzc7GnvgDb
Jg/X5kLMCZn3+KiP/CE3rsmPPYtv6Y0t9/q2rOMZ8bXxOLLEE9bTu/4jr33H
45os3fcMuxcn712u/+ZXf/UxnrTx2MsaTGNVR5/F+j1zRPShrTBGT7iS7twz
R7R18u5trb1n9C18+JL1Q+gN584frr/iPeu34OVdb9zPPX5h/K5c6xeN4ynb
eCS56ItZb8LP6Gf4Wxv1S6zvMC4J8973uz/m3zqwxc+wLeNl6mOfG/1Y+2jM
U9+v9/t8y2n5fW/r03q2/m1X21s5VD6VW+VZOVf+1Uv1VT1Wv9V78VCcFD/F
VfFWHBafxW3x/FKYr13UXmpHta/aXe2xdlr7/YfFIfd+8N4Pfnf4wdXNM9/d
18aNzOXjBtwhzlRnnKJPIBY2Z+FZPPipf/SdHtlDxQZd40ey2v4pusBZxtFc
K4fNrsxdi9eV47fWKBhrI0+xrrX45Kwc19aE79p9z1inqBx1c40v8LN6wgy5
4pmT997hWLdonYH+Ea7FreNPe8g2P+UeH4FD6Z9e6Gxjqv4mp+1jo0Ncv3Ub
+yhr+zHW1/GO9Te7P1G/Zutw9GesuycPPGx+j1/SPtyrjdq7fWTsRf8N9n7L
R/xLx54G83PWeGqvtlmfgad7v8+3nJbf97Y+rWfr33a1vZVD5XMtt8mzcq78
q5fqq3qsfqv34qE4KX6Kq+KtOCw+i9vi+aUwX7uovdSOal+1u9pj7bT2+w+S
N+794L0f/AfpB5XjvdZUf3dck4/3Gucic/ExGeIV8b7rtVH91dm136qna7H2
cmLQnfaKa12L+V3bo6bt2mvsx/PaqBzPk7O14rh0v13eDPbv2m97/09+1mcd
vsB9utCu7SnGJ9ri2loQY37K0Y+gJ5y5voc2abv2wAg8GlPb3Jb+zvhcvT3j
PrngZ98rw7qMjeNtz8X6MOP+7r/Yuo71k+ztVj+/0RfQlzj7XF93yB43Gssk
Kz7KOhY+ji9jP/p2vtNnwbHmk+jEs7i19/t8y2n5fW/r03q2/m3XdXsnh8rn
Wm6T57WcJ//qpfqqHqvf6r14KE6Kn+LqxfC2NZzDZ3FbPBfnxX/tovZSO6p9
1e5qj7XT2u93N1fc+8F7P/jW4AeVz46+K6/Fk2Rr3YC2uG8dGjvFe2wcV+BI
eqEr+6PFzfjHM67F9mff4otvjHlpo/vGrvRF3O+1+R3PiIN3javxqnJc4z/X
nnmxazyjP7IxKb9VDpmrs34ADOBEeiRn6wfted6aSbxGBvDmO8+SA/7yLw70
vo1t0h/5rb9iX7i2K2PjcvTqt+SjfLLs2tL5xc1Lzt/ieH+P+70LFvTh6Ag+
+DJ8iAdhR9/EPjQ+C9fqJ+B+cvKc8TfjZp7t/T7fclp+39v6tJ6tf9t1vZZ2
cqh8KrfKs3Ku/KuX6qt6rH6r9+KhOCl+iquXwl7xWdwWzy+F+dpF7aV2VPuq
3dUea6e13+8Ofrj3g/d+8K3ZD7rvt3vm/++1OmwNNo5hd4uH2S9dsFPX65e5
xhW4B8/iUzbrevfZsnLo1P3F1dquHNy58l17xvO7vzwbrrXXtWdc45PdxzPG
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
Nn97zvV8pHd7l99ok76D73G29hgnpAdjcZ7ld3q/z7eclt/3tj6tZ+t/3a61
t3KofCq3yrNyrvyrl+qreqx+q/fioTgpfoqr4q04LD6L2+K5OC/+axe1l9pR
7at2d22Ps9Pab+269l4eKD+UN8on5Zlr/hkvla+uc7uN38p75cNrnhx/llfL
t+Xh8nN5u3xeni//1y/UX9SP1L/U79Qf1U/Vf9Wv1d8tb5+8ecZfdk2vt2Vd
8l89fYzn2y/jXdZubZ+aGGZruuiIrOjXtXZtbRiZq4OYpPvg1sbJdv59bSHP
+VMxgNiDrYtVPLPxkJ0lrcxL7Hh3HnTPxOy5YD0bhX6HsebIbZ7A5kpqvoju
me2+oa6d7vqxzqF3HqFjKY0na1PWHKiL2BjvqIu+w4e/+u0PLOAFseQl78sN
jHsed7g+56ne4bimY/fpBMe4Tza4wdgce2LrrukeHm7l+PDMu//9jvzFeEGe
fpghC2X4W33oyHyXfdPkq63f8s2/9Iir/s53/Krjb+NuzpVbLpKdrSdWJg/X
7KG+EI7d4zesw8CZOMvZeXShTyL/sd/gCLyrb9K1HLCi7K0lxd3whjv8Xn29
j57Xl/Juz+5636n7ctkof35I/dYXW39q++lwned2lv36qb3f51tOy+97W5/W
s/Vvu9reyqHyqdwqz8q58q9eqq/qsfqt3ouH4qT4Ka6Kt+Kw+Cxui+fivPiv
XVzby+yo9lW7qz3WTmu/tevae3mg/FDeKJ+UZ8o/5aXy1XW+0/Fbea98WJ4s
f5ZXy7fl4fJzebt8Xp4v/9cv1F/Uj9S/1O/UH9VP1X/Vr9XfiaX0BeXm9a/P
5fySh5fzsB9ccigceWu1XflkKo417+17deCL+WvydK3OZOJ6/fr18cUM2ig+
m38nK3IWG6wPPhkuF8TGE3ZNJn67titTHaqvnhPdszJ7XljPTGne+ObObf7A
5lBqHonupb3e37e1ZF1X1rn1zi90jKVxZm3N79TRNRuiY3YO42IdMbBrdqrP
D5vWY5h3Gg/ItXjJAX1wgneKqeUgJgt5K/GLcSj5FGHHfWMP5ABfPrhhfQx2
ZjzNGITcma5v467jb/I3JrZzZXcWKxuhg50H0XmtrclYH6xjbTuzjoz0SYzr
6Uf89udefpSHx+ViYVPWcYjN1yfy986S3bk/uLt+x3s2Drl5SfVRB2XOB23v
wvp0Psr3DO7nCzzbNa44Ud29Sxnw1ft9vuW0/L73uj6rZ+vfdrW9lUPlU7lV
npVz5V+9VF/VY/VbvRcPxUnxU1wVb8Vh8XmN2+G5OC/+axe1l9pR7at2V3us
ndZ+a9e19/JA+aG8UT4pz5R/ykvlq/JY+a28Vz4sT5Y/y6vl2/LwS3F1+bw8
X/6vX6i/qB+pf6nfqT+qn6r/ql+rv4MJPvA8p+SVl/7hs8dZJM40cQ9enFXC
b1ovvHy28OpdYo6tm9pcsPov16tYyjWbm09fexcXre9M7xv7XU4k8l8ffOMJ
L6aXxiee35iza3Kej9750T1Ds+eI9SyV5pNvTt3mFWxupeaX6B7b7jNqvNf1
Zp1z77xDx14af9YG6R+u2TAZX+R3szXpntfunVGuvs6OoUc24Vn5+tkDPtj5
EXAAH+RqzkXdtk8bNnHSPuL3XVt74O+3fNMvOfoWzr0T48MGfttaifHe8l02
N9rym3RPG87beXX8gz7J1ne4xgP0p3+C93E2Dlc2X4Eb5ls8h3PW7/I+vIy3
l0O644rbs++zPRc+3r2+zvqq81Pri6nX9th53u/Ub7lx/Ct/du/3+ZbT8vve
1qf1bP3brra3cqh8KrfKs3Ku/KuX6qt6vNbv9H6Nh+Gk+Cmuird+is/itngu
zov/2kXtpXZU+6rd1R5rp7Xf2nXtvTzwYnsuOp+CT8oz5Z/yUvmqPFZ+K++V
D8uT1/w5Xn2p8bfyc3m7fF6eL//XL1z7i/mR+pf6nfqj+qn6r/q1+js4sCaN
rzROep518vwDMdSvf9WrLudXPjcf+k7GCODIGZfmrI11qw/sGY+lYzZFPtpL
pzAEK2uLWI39iWf0hRdvbN2IPv7iH2MZW/e4+dPFGOIHsl3uwfWXlcmm1pcX
M5C5epK/+9tjvnOle7ZmzxfrGSvNM99cu8032JxLzTvRvbfdf9Q12F2H1rn4
zkd0TKZxaW0TFmB+cyXi0Evse+xn0x56Yyu39nrEkfI0wwLMeUY8TCbmeeQq
EY/jHecCGavycY4rfjKfg5esCRS/+1tb9jfuc+3Znm2H5+l1Z0Aspxfdbc82
zHR96MYFN7aHf32vD6Jf4l/+xBwb7tZfIQ+cuH6NcvgNclW+8sTLcOvdm0Nf
Dkx1Xr9p/mhrVHDQ+oDK5SfWD7KOw7Nbf7J5OfX0W5y43ypbfXu/z7eclt/3
tj6tZ+vfdrW9lUPlU7lVnpVz5V+9VF/VY/VbvRcPxUnxU1wVb8Vh8VncFs/F
efFfu6i91I5qX7W72mPttPZbu669lwfKD+WN8kl5pvxTXipflcfKb+W98mF5
svxZXi3flofLz+Xt8nl5vvxfv1B/UT9S/1K/U39UP1X/Vb9Wf0ff/KAPOW2d
dvuPyvmzlzOdYeU8e/zpB9ophvI9jC//nvF8cZJYBZb1W/n6xRviJPZq3EG7
JrfN05nP3V6byc1vPV+/uX43mcDV8uJu3hCOyQrGvHe+T/kwwz7FDuTW86a9
e+ea9dyxnr3S/PPNwds8hM3F1HwU3ZPbfUldm931aZ2j7zxFx2oar9Zm7cGC
I5hXtriVzi8++xgXIqNLDHvMKRg3ETNaVyW+FoeLtXDMzi+3zg/PLM+m+9ou
hv+6r/0Fx3324z5+c9+YFjnABIyM/9YXWd7r8eTyVMKWz9ZcbF7Mv/yCvsmt
PA5O9r25KWN0eFvOMbGwZ/VdcKBy/V4blUuXvlOvrb3cmUy+py863vzaznNf
P2t9NLw/P+VZdRJve9a1e2TLf+zshT3vna57//r5ldPy+97Wp/Vs/duutrdy
qHwqt8qzcq78q5fqq3qsfqv34qE4KX6Kq2u8DYfFZ3FbPBfnxX/tovZSO6p9
1e5qj7XT2m/tuvZeHig/lDfKJ+WZ8k95qXxVHiu/lffKh+XJ8md5tXx7zcPj
5/J2+bw8X/6vX6i/qB+pf6nfqT+qn6r/etKvPfZ3zjihc/PIxsE953fmmcnJ
751VqS/Jv8KB7/Qf9bHNRZMtDJhrFldtr6u4Z3mTFvOQj/rC8uS5/nLHotc3
VO7WCJEb2U4X84mT/+Zb19feuDFciVs2lm583rgIu6UH9REHGScQH/Yc6p7F
2fPIeiZL89I3N2/zEzZHU/NUdK9u9yt1zXbXrXXuvvMXHcNpHFtbVt+tGWDT
55mk7/EQt4lxlY1T8IX4+pT/e96t/beWD5+Qre/9LR5zD7fsTFdjWTu/RxxO
v2J3sT1ZeUa73SeLrctQ7s6E3V63jadtz9vWNW4cDv/Sxfos+iP6Je77jWv8
jYvxkRwsWw9iLaFn8Pj6hq7hQv2871x38DPu+kvqOP+yPJz4dH0udfK9Pp39
BfNxfBnuVR/jZOvnue9ZY4n6d73f51tOy+97W5/Ws/Vvu9reyqHyqdwqz8q5
8q9eqq/qsfqt3ouHa5wMP8VV8VYcFp/FbfFcnBf/tYvaS+2o9lW7qz3WTmu/
tevae3mg/FDeKJ+UZ8o/5aXyVXms/FbeKx+WJ8uf5dXybXm4/FzeLp+X58v/
9Qv1F/Uj9S/1O/VH9VP1X/Vr9Xc7f5n/5BPFDn5DLu653joaflO/0jPu+b17
xl5hQtn6nvQuJrnEWUednRFzxmlvOeaI+XR9bWMSGx/2/Mb0N/4MW5uH1WbP
bJ3V4g3X5L9x7I05TF/bC+O9xo/EPO5bR6u/Diu+IzsxATu4/fdoS8+n7hmd
PaeMHndWS/PVN2dv8xY2d1PzV3QPb/cxdS1317N1Tr/zGh3baXxbG1dHNmDu
hF7gTL1wxNbqicPxBJ7RFnyCR7TXc75zf/M42q497msLTHeMy3PLvcImNle0
3Ce7vzMFd67dF1zOu1sfZ/u+cS7+1c9Zn8T38ym4mq/gR/iDrevwnPkbsman
uF6/xm+3/sP7lKPPow2ba1O/zdnN1/i9OvMfmxPcGObGI/kvfsg94zf80Oba
5geNSfZ+n285Lb/vbX1az9a/7Wp7K4fKp3KrPCvnyr96qb6qx+q3ei8ernEy
/BRXxVtxeI3P4bZ4Ls6L/9pF7aV2VPuq3dUea6e139p17b08UH4ob5RPyjPl
n/JS+ao8Vn4r75UPy5Plz/Jq+bY8fM3P4+3yeXm+/F+/UH9RP1L/Ur9Tf1Q/
Vf9Vv1Z/J47hM89+5NPHff5SHMR3GkMlQ/9ubanx1cdjrk8dH/1L/4o3ztyI
P/YoC/bJhL60hQyNX2uvNmovPGwudXGFGIDcJoflhZjcyKr7Fl3Dz37Lrt2H
N7ZMfvrUYlv4Ouez33xg0z4j66vEDdqlndbTipduOeAYXzem0HOre3Znzy/r
GS7X5zgsl2/zGTanU/NadG9v9zd1jXfXuXWuv/MdHfNp3FvbxxE+5lfcwxX2
cqk/zsAj9KJtm9ejs51RbkzHd+K0nXewWH1nNOy+3+7sH/y2HJg7B89n+Z5x
4dY0bu/b5s92njk9nGeZP303rri+iXsf97E//DgnEAZ2rR+jfwOL7rMraw21
d74Gn3je2fDue6c5M7jdfnJt27qUcbdndkYfv8YXrR+njPXvNt7pHfyPZ+1p
6/0+33Jaft/b+rSerf91u9beyuFaPpNb5Vk5V/7VS/VVPVa/1XvxUJwUP8VV
8VYcFp/FbfFcnBf/tYvaS+2o9lW7qz3WTmu/tevr3E3jgfJDeaN8Up4p/5SX
ylflsfLbFe/d8WF5svxZXi3flofLz+Xt8nl5vvxfv1B/UT9S/1K/U39UP1X/
Vb9Wf2eMu37QGIDf73myIxfP+w4OzrWmb77MNz59xBhbb0q+lzVZD/houj3X
Lr/LDQzSIxzAH3xtbPDF+nfrR29+0PX84Oak6WLrb8mTbJUj3vCM+2ff4A3H
mAVsqI+44MzpLB54h6M/e1uv2zo/9QAuxBjaou8sVnLvpfxgz/QsPnu2S/Pb
N8dv8xzWLprvont+u+/peo/D1r91DUDnQToW1Hi4nOAaFnHFeGbrEzZf4xrn
7HxXfLOz7lwv/+XW4m+My/cbA3Otf6KdeHPr+fH9+hE760B/Y+tVxNNbh49T
tocCD+urKIu+rYfYvnDX+Bnfu9bPwuVn/uV3PPbX0p9nyGk8r89knJD8jBnp
E00u7BL21Fnd1l/js77gcmawd29sks/a+hT10CZ+ZH1VdeeHer/Pt5yW3/e2
Pq1n6992tb2VQ+VTuVWelXPlX71UX9Vj9Vu9Fw/FSfFTXBVvxWHxWdwWz8V5
8V+7qL3UjmpftbvaY+209lu7rr2XB8oP1+dijE/KM+Wfl/KD5bHyW3mvfFie
LH+WV8u35eHyc3n7ms/H8+X/+oX6i/qR+pf6nfqj+qn6r/q1+jvy2ZrRjakq
R7zjt/qT4p3LvCP5HfOQ/OnZvz7W5NytRfVbZZmTPOcN3/P4rXoaN+HP9b3F
Z+xMjn142L7IraFaPrTlRiB/4xXbG7i9LYtJlAkP619vnBwOxLaXnArH+k8x
mvpql9hBPeHhEks8IIP1r8ntHBt588OdBQobYmZxysbGvRdWe9ZnzzvrmS/N
e9/cv81/2BxQzYPRvcDdD9U14V0X17UBnR/pGFHj5HKFuvnb8/71t7UIm8Oh
N/LX5p2BO3+4PeHes3N6yMkzyvEvvsUv41AcbwzQb3aGAU713PbcbR0G3sSX
rnc+7PbobZ0JXu2+Nhw2/nfP/Nf4X9ypb0NHOAX24JUclSs+tqZg6zT9Xpu2
dw+nb6/B9j1oy3zZxj+V5ZntlVCW5/1244273+dbTsvve1uf1rP1b7va3sqh
8qncKs/KufKvXqqv6rH6rd6Lh+Kk+CmuirfisPgsbq/xPJwX/7WL2kvtqPZ1
vRdj9lg7rf3Wrmvv5YHywzVvjE/KM+Wf8lL5qjxWfivvlQ/Lk+XP8mr5tjxc
fi5vl8/L8+X/+oX6i/qR+pf6nfqj+qn6r/q1+jty0FdWlriBnPhUMjhjh1ce
ZXrfZfz15vz3haNM9zcXya9e1qRexmmfu6xNfeHB1imtHuzFPK/YRWzgWpzD
XjaezH7I0FgB/JhvdS0udr2cfvrgZMsOjY2T7TmudOYhdMbp8i8Zy1dHscQ5
Lv7MUbdz3OBcU0SeYiLfWePlb+1b7ib97HO/1uff5dlbfsief90zQHsOWs+C
aT785gRuXsTmhmp+jO4R7j6prhXvernrtS6bN+nY0XX8PA5RZ3+LuXdeweJy
v9m5BDv/Tj9k93CXZ9zz92L8nltHnnh782L7e7yKG/UnYML9rX/0985eWJ8R
PnDV1nvMXygbLmAMrxsb9Cw+kwsFH+McczDeb1yM72Dj42dl0Ye5iuUV01/C
aVtnqUzzK2d+w594N++26zNH5mMf53n+ZM/s/vXzK6fl972tT+vZ+rddbW/l
UPlUbpVn5Vz5Vy/VV/VY/VbvxUNxUvwUV8VbcVh8FrfFc3Fe/Ncuai+1o9pX
7a72WDut/daua+/lgfJDeaN8Up4p/5SXylflsfJbea98WJ4sf5ZXy7fl4fJz
ebt8Xp4v/9cv1F/Uj9S/1O886Y8e+6n6r/q1+jvj2uc46ssP+XgfGSlTP9p3
yvFu/pI8tt/Qu1bHc63OJx79wo1Dky8cnPOQzz+49MuPttg7IiYSY7BxOhUD
sFlz9GREbmIasmML4ip/i8/YDjuF4eUj9rf+tDFt+Ng8KJ2e+0KeO3TtX/q9
4OLBOcf68ktc8NwD8dNlvdgD4x+e0154pHOyOXMvvulYy7Q8gfCBl+hxfrC5
Ynom4M5H6xkxzZPfXMHNl9icUc2b0b3D3T/VNeRdR9e1BJ1P6ZhS4+pyy2Jx
11vbMJ9If50H9Ntd79zz7RXbeFbXzW/9hX6C8bvrPdrGfejeb9bH2NzZuRfq
Jx/cunMQ2CGfgT9XJi7C+R/2oT/48C/y7MKOZ/177oF+2WHjW5NGh3hJWcYv
xcg+nhP7bq+ePp320YN66EMt/+byxLhen0493d86mev7e77ltPy+t/VpPVv/
tqvtrRwqn8qt8qycK//qpfqqHqvf6r14KE6Kn+KqeCsOi8/itnguzov/6zU2
s5faUe2rdld7rJ3WfmvXtffyQPmhvFE+Kc+Uf8pL5avyWPmtvFc+LE+WP8ur
5dvycPm5vF0+L8+X/+sX6i/qR+pf6nfqj+qn6r/q1+rvyGHrabR9+wwve2OO
v8UT24fPn7rHt3rmklP5rr/pffS/ffqrM/+r3O1b1C7f64ezB/PR4lJjD+tz
iNtgm62T7c4ANTYBt2eO8191PD8bwCNs1ZwxfJ3ntZ2yPPt9r7mMBzx3+OXt
H9HWSz65B67FCOZezSOLFcgIrpaj4DyT4E3HeuDlVRDPqDN8Gq9Qx+aC2HnZ
X3x1du3OTevZMc2f3xzCzaPYXFLNp9E9xd1Xdb22fOvrusag8ywda2q8fc05
7vvt7m1/RPdEb92fZ1fe5g7pt2fn+hev0CU+xbv6OC+2Ngaf8hE4eHNnONlv
xtv6Wsrafjd2py8lTnefv2Cr/mXHYmu8AcewACPDj5hd/g26WR+O/eMtulsO
XmOFdLhr9du8nrbs7D715++2NrT3+3zLafl9b+vTerb+bVfbWzlcy2dyqzwr
58q/eqm+qsfqt3ovHoqT4qe4Kt6Kw+vYbLgtnovz4r92UXupHdW+ane1x9pp
7bd2XXsvD5Qfyhvlk/JM+ae8VL4qj5Xfynvlw/Jk+bO8Wr4tD5efy9vl8/J8
+b9+of6ifqT+pX6n/qh+qv6rfq3+zrVntHtzhcpc/9Fzl3W2h99Vhmvlb73t
xl3POcnXH8/73ke7lOm+tpEtuZ5teftDNxsjE0eKscho57EYg3BtDMK8tX9h
lg7YxvYl+e3mvvfv1jDCCp7wueQFOHR7Gf+92195WX97xEgXn3/Mu23PKTzb
36ndw9vWtZpjEY9d+0E8tTwzOz/0+tz2nSXa89R6pkzz6je3cPMrNsdU82x0
r3H3W3XNedfdde1B51+ux6AWh5eLXLvvM/5xza63xmH5JJcXc+sl/HZziRuH
3Voa/Q79iOUVWz4x94zT+d3G17xL3GluASaMt+F05RjT4SO8y9ig/o73mzvz
t3V55i+MA+GdMx751JsTG2884sz9C/fGEPEV3e/cdZy1eTccRw/LR4YTtIEf
ITM+Y/0+dfVM7/f5ltPy+97Wp/Vs/duutrdyqHwqt8qzcq78q5fqq3qsfqv3
4qE4KX6Kq+KtOHwxfF7juTgv/msX1/thZ0e1r9pd7bF2WvutXdfer88UHj+U
N8on135w/FNeKl+Vx8pv5b3yYXmy/FleLd+Wh8vP5e3yeXm+/F+/UH9RP1L/
Ur9Tf1Q/Vf9Vv1Z/p1+5cyf028npXEv6ssPn8o9bd7Pv1FOZfusdyjHOvP2K
7u+3fnf2Yd/48DK2e8jWnCj5+jSuIjOy8oFJ89NiDXrfM+cek1925NrdnjdY
XY6t5SomWzbht3seNti0cR96J6dzf+mh+3dSx3Nv5MsfnmtHX3m0y7Pbl0re
53z/Fx7rshaPGbcfPs0zq3/7gz1HWz26J3S5ZHfGaM9Z61kzzbffnMPX+Txn
q9f5N7YHufuwuha96/G6JqHzMh2banx+7fuUv7X8w/m4DtdvnGv7BHc2bHNt
4xR8u5xpeNgaBe/aOJvn+Adjg36Pg3E3LJhnw+me4VusmfQuXL5x0c2L4Wvj
iPBhjxcdXnJgHTHjJU/vgd/FpWd+iucfbj5Of0DfCY/pZ+kX0Zk1cHSwuVC6
29jizrDlM3q/z7eclt/3tj6tZ+vfdrW9lUPlU7lVnpVz5V+9VF/V43Uu9em9
eChOip/iqngrDovP63nq4bk4L/6v7WL2UjuqfdXuao+109pv7br2Xh4oP5Q3
yiflmfJPeal8VR4rv5X3yoflyfJnebV8Wx4uP5e3y+fl+fJ//UL9Rf1I/cu1
35k/qp+q/6pfq7/jJ9mHvvG5x+IcN95aYH+73rocsYT3nOdTvONdHbxzY7B8
8fbZn775VZd9jC88OMekn3tAh+JRn63F8hFbbE+PuGLjFeKz5Z6HQdh0399w
KA5czOEeHdHZct/7iJWUrRzlu8d+L+vcjnELn6fy3+l7zrOpjF2Lq5Z7E97g
Wdyz3HrevXVa6idON0YB5/r+O2fT2rydteScUdjuuds9e7Tnr/UMmubhby7i
5mO8zmm2vBzdm9z9WV2jfr1Ob2sVOl/TMasX6/dp0+Z7lk9k/m1npru/f7dP
cGf2ePfOMPCdvhFu7TkInsG7rsXkeHf5T/RXnGHneTzNrt03BkjGeINe6Gnr
JO0xwGHGmayN2xrs2Z/4mT1e5k7eCZ+c+3COXCNHPknvh219NWswz7UCD+7y
c+KB5QylB+3Vxt7v8y2n5fe9rU/r2fq3XW1v5VD5XMtt8qycK//qpfqqHqvf
a73v72ucDD/XPnF4Kw6v8TncFs/FefFfu6i91I6u853O7mqPT9rpY/utXdfe
ywPlh/JG+aQ8U/4pL5WvymPlt/Je+fCaJ8ef5dXybXm4/FzeLp+X58v/9Qv1
F/Uj9S/1O/VH9VP1X/Vr9XeZ9/u77p85uV84xpAv/ek7fyp2UIdzjfB7HHOv
597E5x9ecngtfr6M955+8OzrPveAnsWxPusj+5DTzuTceAZcwqx/O8e9/Whk
6l9z2ZvT3hg+XhGzrC8ihjVH4V86E69sTI+9wa6xI7gzVk8u5xj1mR9AO8UP
uABOzYsrd3mEth9WPKbcs3/wcUcsJ4bf+VDuGw/xPjr3Tvizh3S5IHYed88k
7blsPZum+fmbo/g6n+dyVTVfR/csd99W1653/V7XMHQe58XGPPFbOW18hBPV
f+crjNus0dg6fO12zebw7M6r25lEbF7/RDlkt/xjYm78rFwcD2PqwX/o47hP
nuLsrY0U+1rnZm5/6030nejVmJY4E3ddYsrDVtjDOY7y+ofnGrunjvEk4y3m
+f3r/ebc+BFzdtao2JOs/fpSfAT97Vyl3u/zLafl972tT+v5ZP0ft6vtrRwq
n2u5TZ6Vc+VfvVRf1WP1W70XD8VJ8fNi/UT3isPis7gtnovz4r92cZ3bbXZU
+7o+P2X2WDut/daua+/lgfJDeaN8Up4p/5SXylflsfJbea98WJ4sf5ZXy7fl
4fJzebt8Xp4v/9cv1F/Uj9S/XPud+aP6qfqv+rX6u+Vg42sXNzYP2zlH9vh6
eUzFmvrb556OZ5+oD5+7MdhzzvITH17q9GC5T8U+Ylwf/ecX6w+KITa+vLy8
yxe1GBAOyZc+yXj7hLb+i7wXk9DZxlR8v7Prlhdr8SO9woK4xRiQdXRiMmuj
7AnCQcv/6ppti722FlrcLsbbXlfxmzIXy21dtOfZtrEu18a+xIc7n9FcwvW5
7T2r9Pq8tl03b/917uKtmWsOq+bx6F7m7ufqmvau6+vahs7vdIzrut83rhs/
ud5cuvf53vvpBg+KUfGqZ7bnnJy3x7yyYq+eXW5MfuM8n+YnHn0cXKOueIkO
PO++cSzl4n4f/I6jcJC5FvkZ6UjMefa/njmurY0X55/nV/30Y33NZS368be5
IONixiH5EPXh58wF8XHGNrWT/1GP3u/zLafl972tT+vZ+rddbW/lUPlUbpVn
5Vz5Vy/VV/VY/VbvxUNxUvy82NgpvBWHxWdxWzwX58V/7eI63+nsqPb1UjZY
O639Vla19/JA+aG8UT4pz5R/ykvlq/JY+a28Vz4sT5Y/y6vl2/Jw+bm8XT4v
z5f/6xfqL+pH6l/qd+qP6qdeypfV3505WL/y8K3sa/nWHu/Hf4/Dh/qXb+5v
l6NAfbx3a3o2T+Ha96vn4tbl5bZWzfh4+8VkvDjBNZ3BjxhiY/Jb37Wcwf7e
2Enn3/27tWKLSZS3cWzl+Yjx9PV3rh37WIzqec9uzoCOfb+1CicWX3Gs/zXe
hANwmFjLu8X0cLs8seat1Wd56r3PtRgPdtgITtw6Ie8/z0P5eYdMen53zzDt
OW49y6b5/Nvfa17H5rZqfo/uce4+r65173q/rnnovE/Hvhr/lwN3Zuz2OOBP
7/Mb905f8NOOemyv/fYU4JBxMn6jD3Ez2Vr7cebr/wlHf0o8rt7GG+lD+bjd
8/ox7PDMs/iK43e4w9o4fapL3HL0w7b+jw9ybRzG/Z1JYO6BbzrzFr7zzr67
sYaTvvGZvcPs3VwIPuPrer/Pt5yW3/e2Pq1n6992tb2VQ+VTuVWelXPlX71U
X9d6nH6r9+Lhup84/BRXxVtxWHwWt8VzcV781y5qL7Wj2lftrvZYO639Xtv1
7L08UH4ob5RPyjPln/JS+ao8Vn4r75UPy5Plz/Jq+bY8XH4ub5fPy/Pl//qF
+ov6kfqX+p36o/qpF/NfZ76Xx/7unEN94W5ecblltibn0ofcuRNH/3F+Vjnn
/otPvKzFPcdwl7dmc4Wr29b/nPv4Pvrot9P7xoj1j8ULG1OgD7GI+2S6+Gpz
4ItnhlHYXT7LYXk5nLdGbHuJFrd53/IsiW3oj30sttw+qK2B31pw+pu9qefy
fcCUmBuX+S2s4jg4cW9nJsIqDCsLl+DAja24B1/LK4wzhi+x7M4w7VqDnm3a
8916xk3z/DfXcfM9NudV835073P3f3UNfNcBdi1E54M6JtZ+QblxuaLZ9M5F
35kI+HI5Ybwfd2+MTqzrefNW1nuwc3zPt7gWE+NzurcOhA7w+Xme3A882ofL
+SDP6Td5BkbPM0I/7+hfnT7nM47+ljk3Y1z8EjvEXVvvfY7THDk77uxjeQo9
K8+Fcq3XNF+nz9X7fb7ltPy+t/VpPVv/tqvtrRwqn8qt8qycK//qpfqqHqvf
6r14KE6Kn+KqeCsOi8/itnguzq/z2c4uai/XdjT7qt3VHmuntd/ade29PFB+
KG+UT8oz5Z/yUvmqPFZ+K++VD8uT5c/yavm2PFx+Lm+Xz8vz5f/6hfqL+pFr
/zK/U39UP1X/Vb9Wf7fzB8+/X3HJJ/r6w8+eOUyfebh9h8Zaz7XYz9z1MVcm
++NL/e3aOlfleGbXytAn9Txb12cXv9KDPjfZ0KMxdX1lctu6IjrYOPzGnZc/
cGun95l+lqN3PrJrHTvuUf+4OXO6g43FQctnLJZim7uGva3bZsfq79mtH2br
xp28V9wN5+ZJ4Ne6aHjEDWJsMdLmKzwDpzsbx/XOCd8Z5D3ju9c987TnvvXs
m+v8/8uB3DyQzYXVfCDdE919YV0b3/WBXSPReaKOlbW/UM50ba3Fzj3Hbea0
PI+HjeNpx7hXnZVB1p7fmJ76br0l/bs+c/i+yxGP4yA8j/99+CV+Q3xq75V+
mHkV/uYco/qKY7xRnL68ya6X29Hz1u+deQyfP/DOP+mfKVc5xsP0+fytPHXq
/T7fclp+39v6tJ6tf9vV9lYOlU/lVnlWzpV/9VJ9VY/Vb/VePBQnxU9xVbwV
h8VncXuN5+G8+K9d1F5qR7Wvl7LB2mntt3Zdey8PlB/KG+WT8kz5p7xUviqP
ld/Ke+XD8mT5s7xavi0Pl5/L2+Xz8nz5v36h/qJ+pP6lfqf+qH6q/qt+rf7O
fgr2de4tOvck8p97fj53v11e0vm+rdtR5vx167n5zK3d9nk8Tvuy4zn6Imt4
ax95642sq51cyWp7gcjc9WKy+UV/b/x64x3zdVtXtrPtpmsY2r2V7e/m693e
GfXdeKLrnWezc8LZLByKr+DdOivjIZ5hm+MNcbgy2COOUBZcL6fIckj7fmea
Li5m/3vf8hj72/M9B7xnofY8uJ6J03MBmhu5+SGbI6t5QrpXuvvFuma+6wa7
dqLzRx1Daz+iXLqcz/jWtXUZ2w+oLvoq5ObefJwyjP2pg7E+8y7arX/DF2i3
8nDN+kd+b92BtZme41vMuVjvzkb0waxp19fCVXyEtQ98kt943j5q9/gf45eu
L3tojzyT59nJrzpyQsqfIQYW6/d+n285Lb/vbX1az9a/7Wp7K4fKp3KrPCvn
yr96qb6qx+q3ei8eipPip7gq3orD4rO4LZ6L8+K/dlF7qR3Vvq7tbvZYO639
1q5r7+WB8kN5o3xSnin/lJfKV+Wx8lt5r3xYnix/llfLt+Xh8nN5u3xeni//
1y/UX9SP1L9c+535o/qp+q/6tfo7+Uv3bj5xexW3zmh78zcvubHWM6/3mV9W
n3M5e7ZncPOV29//eIz1lXf7J6xnMw/KBugdtpufQZxgjHpjy+To3vIlrS9O
/7Dl+41xLEfY1nytf7+x/J117vueb7d11hsDWDzk+42Lw/RyFi4/2ObGp9OO
MbIXdWAzMOy59e22B3XrTLSF3cE92/Xxm+X5Xx5l8lqMPNtXnt8p29+zuZ0P
3jNSe05cOaTnBTRncvNGNndW84d0D3X3kXUtfdcTdk1F55U6ttb+RTnW8zsf
XZnK84x36VtY36g+O0sIJrYXQJus9TD3trkw43vq6ncn/7zlcgbdeZ4N/2LP
s/n0Sz6Lw8fogy1HpDXszhyQU9i1PpqxLc9Zx2D9n7/5oXMe/+XH3B07Nj9x
yaF3d7/Pt5yW3/e2Pq1n6992tb2VQ+VTuVWelXPlX71UX9d6nH6r9+KhOCl+
iqvirTgsPovb4rk4v85TNLuovdSOal+1u9pj7bT2W7uuvZcHyg/ljfJJeab8
U14qX5XHym/lvfJhebL8WV4t35aHy8/l7fJ5eb78X79Qf1E/Uv9y7Xfmj+qn
6r+u/dr8nXHY7R9Zvp2dW3H2815z/NazG+fcmYbLrX7JT3qX02Z5a/x2/+58
jOV03T4nc6DmR9ic9dzbW2nsWAxBbs1hwFa2Z3v7rNjN+BN+yXRnqNPR9shu
Dn17L7aHduOlGxvoWuLl7d24x3JLTfdb57bcvT6bt/Ds5tW7bm1zFGLf2Y16
b1xlY57sA+aXVxKfuMZF+Ap/LP9/x4LEl8r1/c5HNebSc8Ovz07d+XE9Q6fn
CDSXcvNJNqdW84p0b3X3l3WNfdfOda1F55s65tZ+R7mXbjyznNjq7hl2rc+h
j6NduNncljpsX4DyrD83L+9f/TB+w2/4Fs9Ys2A8kcyNSZp3g1W2oy/G72xu
Tr9recs8Zy+XdZ7LFWKtysYqreE0Bqr/p7+nP9f7fb7ltPy+t/VpPVv/tqvt
rRwqn8qt8qycK//qpfqqHqvf6r14KE6Kn+KqeCsOi8/itnguzov/2kXtpXZU
+6rd1R5rp7Xf2nXtvTxQfihvlE/KM+Wf8lL5qjxWfivvlQ/Lk+XP8mr5tjxc
fi5vl8/L8+X/+oX6i/qR+pdrvzN/VD9V/1W/Vn+nDsZN2OLs6hwrffpuvNS7
+F6/3Zkdl/U3y0n+cDls1vfcOld++LEffOFub9N8NV+/uX593MmcLjZ/S2fD
HiySKTyvj8PO2Cb7gDVjOGIXz8A5ucPL1nItj8TGwJuvaWMC+2z9ddeRrf84
u9p4wMYllkNv8+Ibb4Crzekvvtp8wtZxw+zOV2UL7Gv9TO33nHu4Y2eJi+PZ
kHtsb2cOzPctP6QYk61en9veM1V7rlzP1un5As2x3DyTzbXVfCPdc919Z117
3/WHXYPReaiOxbU/Uk4me+1VPk7Du8b4Nr5n/oXe1UGZ5/veePgdfsDeq51n
6v3K9R6Y0h45snzvvXJ5WKPnO30yfS/+5jyD8z0ennm1Xn708diW/tqZT+sL
j7jT2A3/xx7PPPnv/MT9Pt9yWn7f2/q0nq1/29X2Vg6VT+VWeVbO17HH9FJ9
VY/Vb/VePBQnxU9xVbwVh8VncVs8X59TOfzXLmovtaPaV+2u9lg7rf3Wrmvv
5YHywzVvjE/KM+Wfa14aX5XHym/lvfJhebL8WV4t35aHy8/l7fJ5eb78X79Q
f1E/Uv9Sv1N/VD9V/1W/Vn9nTbQ9SWJR4y/sgC3xjWzSvKX6nbncXvtE+fqk
m/fbWRablzz97auOfRn+vuw9vzsDS/u253HttkYWnsgT5s3lbm8EPM5GYM16
KmM8dLO8T/DLTumFjrTtzK//7oc+4WTj1Z0rHK6276jrTRd/bd2pz+aKN4YA
ozsjfBjcuWzbtzQMweliMt9tLAOejW0oG99snGF7r2BpORtha7Ei/Glrc096
bnlINkZl7Mu7yXHntypbXH19zvjGcHreXM/c6bkDzb3c/JPXOc2Wh6R7sbsf
7XqPw9Yldm1G56eux+jWTylXu799AjtPAfd7l3kq7fW9ddqex3OwMx+9MwPJ
SZk4T9yoD2X9OjvRB4NDfTDjlGeOl48/7OfMZ3vappiUvZ05gZ8+9jHox/l3
ufXNDfZ+n285Lb/vbX1az9a/7Wp7K4fKp3KrPK/lPPlXL9VX9Vj9Vu/FQ3Fy
jZ/hqngrDovP4rZ4Ls6L/9pF7aV2VPuq3dUea6e139p17b08UH4ob5RPyjPl
n/JS+ao8Vn4r75UPy5Plz/Jq+bY8XH4ub5fPy/Pl//qF+ov6kfqX+p36o/qp
+q/6tfo7eIG7c47jFQfeTy76rMPWzvXbT1/O1XrhmIs8+3zP3u1b5JfFsOuH
Xs4XvOTbePubjeduz/7yxG2//8760Bf23vPcqdceOYrFEHQKK3BE7uyXnRnD
EZftLA+6ogvPwAcZs1P25Tn2RhfWLi0eWb99eOk67Pk75W7OeLmWtnd04xOr
o/tsCecMv/C5XBgw7Hv3XW+cnp2om3eyJeMH6gLr3undG9/ZmMn1vIl2ktHm
Vtx3D+bIxDUZkIvfL3Z1PR7o+eM9g7Xn0PUsnp5H0JzMzUvZ3FzNT9I92t2n
1rX6Xa/YNRudt+rYXfsv5XB1Uz6sk7X3s03fWw9ivsz35tA8r47+VWfvYB94
XrxoDo7vsX5FHGvs0hoU/Tc4VJZxHu2yZnN9QTaycZTlPD7zAj99yYv49BP3
+3zLafl9b+vTerb+bVfbWzlUPpVb5Xkt58m/eqm+qsfrvRjTe/FQnFzndhuu
irfisPgsbq/PYh7Oi//aRe2ldlT7qt3VHmuntd/ade29PFB+KG+UT8oz1/wz
XipflcfKb+W98mF5svxZXi3flofLz+Xt8nl5vvxfv1B/UT9S/1K/U39UP1X/
Vb9Wf0fO6mytGvnCr7iQzRhnsR7NmOl5TuHbHfkrHp+t9PZHPdXF59yv8ca7
czGWm/QS0z7cuR/LaXM5F/F47hwHPtt+5sF52c366zC+tSNwLg4Rry7fBVvZ
2MvyMIo5FmfSnftyLWwM3bgJnS+HLsws33zzJm1t6Pa9bpxic4Hzm9tX5Hrr
lzcPTcbKhGf13V4lduxff8PL1srsPFnlwOBiOO2GUe917X1bg755dXbufdrH
3ndG6+7DJH4TX+Ol5TOBbXJjb/iAbHsuec9mvT6/b2f09JyC61zN48bm7Gre
ku7d7v61ruHvOsau5eh8Vsf02q8pt+Mmsby/cZb5M2WRgRiRTLZn3viksUdj
N9au8Dnm8M5zKJ4+5gKt49w+XOu9PeM3bM54pXhTPfkl5Sl7tnPO7b3sKIet
9H6fbzktv+9tfVrP1r/tansrh8qncqs8K+fK/3oN0vRVPVa/1XvxUJwUP8VV
8VYcFp/FbfFcnBf/tYvay7Udzb5qd7XH2mntt3Zdey8PlB/KG+WT8kz5p7xU
viqPld/Ke+XD8mT5s7xavi0Pl5/L2+Xz8nz5v36h/qJ+pP6lfqf+qH6q/qt+
rf6OPmDNOjQYFouJEcVT2qRvy/7YjXhUH/M8B+qFOx+3mJbt+n5nOc2eL2tz
nvCJm+vc2tjNie68D3OjML5cj/abrE+98xvtg4Jl6whwAn2xp+VvnO5gno2w
SfGT8RZzE+KTnsG+WGj5k5oraXkhhjGYvN4z07MWlocTX8wnbm0V/O6Mku3Z
3bqxzbu7ZgfatLXb6+vNPjd+T2/q6x3zs9q8c13hEI/4rfbPP/Z8841leR+s
kNuu4aDnlffM1p5b17N7en5Bczg3j2VzeTWfSfd0d1/b9dr+rW/sGo/Oc3Ws
r/2dcr7xEParTOXZtwfz5szYj36YNZny9W+fnnFJZ9vwJ3BsD8Py/Z5nND9/
dwb11nWzj+318/tdyxtpv5R979Zu936fbzktv+9tfVrP1r/tansrh8qncqs8
K+fKv3qpvqrH6rd6Lx6Kk+KnuCrers9PHD6L2+K5OC/+axe1l9pR7at2V3us
ndZ+a9e19/JA+aG8UT4pz5R/ykvlq/JY+a28Vz4sT5Y/y6vl2/Jw+bm8XT4v
z5f/6xfqL+pH6l/qd+qP6qfqv+rX6u/ELtonpyE8wCbb8AxfyR601TjL5Ry9
Y7zGO71fXfhw4zFb872znHY2/SU/6pET4Bz/PfN1n+c7PXs5x/fc99Fc6Oc6
8mcPnrC+1voi4wowqR9ON8Z72DvbFoPai2WeRVuttzvHkn7UXd5G+j1zZf2g
zdEeY95yGcDBsLFzyYap5eddzu+NMTT+2r8+G5vv3v2ty2pezv27/e/bu7Rc
F/jJd+6JzdjIYqzt/2VH2wMpxtlc9M4y2BqC7clfTo/N67OLrVdns+QF18vR
BPNs3jU59hzznuXa8+x6pk/PNWhu5+a3bI6v5jnpXu/ud+ua/6577NqPzn91
DLD9oPoCY3b2KhirYcd8kevZkb6UONh6SzbBT/E5/s2Zbnd9OjHpcjudY6HP
Hra+fUmeYzf6anwY3PZ+n285Lb/vbX1az9a/7Wp7K4fKp3KrPCvnyr96qb5e
TI+eqd6Lh+Kk+CmuirfisPgsbovn4rz4r13UXmpHta/aXe2xdlr7rV3X3ssD
5YfyRvmkPFP+KS+Vr8pj5bfyXvmwPFn+LK+Wb8vD5efy9pN83jMvHvN//UL9
Rf1I/cu135k/qp+q/6pfq7/TZnGfNtKfdq4/BY8wQw7+tQdX/HeucXvVzfYt
rt/H96rD9kG6/3jv4AsPtO887/jx9bn27Tzz4jKWe7TVhz/fuZCbi55s5R+g
T/JmE2ya3YtzrTs3b4IT1EXb1BfHsFFxCi6A6Z0lbn8nTJKN8o2NL0baOdXL
L7R8SZuT3tqq+sXt19lnc9Idw1iZ+377e7aOi63u3BnxNLtzf/uXliORrrYu
bHmilmeJjPwNm4vLFq+Ks7e/yfzI8rS4JwYmD+NE5lDYsHiOvM61R1965Hzu
+eY947Xn3PWsn5530JzPzXvZ3F/Nf9I94N0H170AXQ/ZNSGdF+vYYPtH9RHn
noHPOfpV7N18gvt4dnlZznWWH3zkM/6A93//Y/7d2COfBP/esfND2enWesPk
OAC+Nw7i+sn7j59vOS2/7219Ws/Wv+1qeyuHyqdyqzwr58q/eqm+qsfqt3ov
HoqT4qe4Kt6Kw+KzuC2ei/Piv3ZRe6kd1b5qd7XH2um1/dauZ+/XPDB+eDHe
6Pjn5vfGP+Wl8lV5rPxW3isflifLn+XV8m15uPxc3i6fl+fL//UL9Rf1I/Uv
9Tv1R/VT9V/1a/V3GxeF1+XzgTfxDfzDredhfflb2Qws7rwndVDnjXGKWbfO
dTm8tXu5US9nK27/xxN5U7XvPD/quctc6HNHvnFzHdb40IW+tv47nW48G8Z2
to36Lz6xdsDYkBhEHG2NnXLYizgXf/ibDs/+4uuOthtvMU6ys/rYBt2a5xU3
iW/YiWv/bjx+ZzHv3M6eGbq+YHE+LG9MYzHhbGrrx3qG0c4Z3t4PtrlnjGG4
Xlyq3O0lVqeN6ewsCnJzHz5wBk4Q/+of+Jscti9vufphQnyFh+hw3N1zz3v2
a8+/6xlAPQehuaCbD7M5wZoXpXvDuz+uewS6TrJrRTpf1jHD9pvqO9gMPjDm
c+YUe8OBL/0PPsfaAM/5rVgZ1ozd4OYzJ8wzlxwY73W8yz4H46Ceu+SbPcZ5
+LPe7/Mtp+X3va1P69n6t11tb+VQ+VRulWflXPlXL9VX9Vj9Vu/FQ3Fyff5j
zkS+w1txWHwWt8VzcV78X9vF7KV2VPuq3dUea6e139p17b08UH4ob5RPyjPl
n/JS+ao8Vn4r75UPy5Plz/Jq+bY8XH4ub5fPy/Pl//qF+ov6kfqX+p36o/qp
+q/6tfo7ejI+wVeKWcRinuEf3fMMzLivbPj3W7YlFjU+q2965m879sc/2PrW
c0/j293sLOHt++frYXzjwPz71gXtPOHlxjFu7PnJBs7NZdIdm5/ed94K3Bo7
EfOxU3avv4snzvzDTz1ij+rtO316ehAT0DVbE8+6VndzHuz6nLv5YXdrouAd
9s2NyJ++cXfjCzt7a/HZ9q3uM2x3P0a/ZydiTJ/r84x8Zl/uL1//9swux9L2
5i4HhXhvOVJd7/wqGFH3redmO+zLu5Wlfcakdu65mEmMZxxK/M4OyFHsPU46
57GePA99Z8L2XLyeDdTzEZ7MZf04T2ZzhTVfSveMd99c9w50/WTXkHQerWOJ
7U/Vp9A/PGjveXb7Fx3ji8pc7k+5X2DMv8YuyQOf78zrs92vPnyEuFUMioeM
z/R+n285Lb/vbX1az9a/7Wp7K4fKp3KrPCvnyr96qb6qx+q3ei8eipPip7gq
3orD4rO4LZ6L8+K/dlF7qR3Vvmp3tcdrO5391q5r7+WB8sP1mNL4pDxT/ikv
la/KY+W38l75sDxZ/iyvlm/Lw+Xn8nb5vDx/zf/zC/UX9SNP+pfHfqf+qH6q
/qt+rf5O7CImYjvkLj7Yb93zvPhPX1m8AGPsik9lFzDOfs7x2mPv4HjwqLO4
deO5j/f9v+ouhuPftX1nYewcYXbAps5+8Xnmxc5M9BFTkK2YWGyi/csZCAPy
uS4HE92YBxAPiAHZtPEUNixOFoNqj/jVmBMd6vur0zkG89OPNbjnuM6Zhw6W
zj7EOx9zKOOGxV+wbexh51z3HMphnD3srIidw7p10dtDpD3zbcsXumf8xjXb
nH1tzn05/ReL0uHqRbezcc+IL/db19tvLDZdfqjtAzb+8Xiu+6ljLmW5MvAw
OcLPYrzLmdB356T3rNiel9czg3puQnNHN39mc4g1j0r3knc/XfcUdF1l15Z0
fq1jjO1n1dfgBzjyN/4VS/MxZz/zFUf5+H/9HTExLuC3tkdKW+F/+596v8+3
nJbf97Y+rWfr33Y92d7Hcqh8KrfKs3Ku/KuX6uvJHOCP9Vu9Fw/FSfFTXBVv
xWHxWdwWz8V58V+7qL3UjmpftbvaY+209lu7rr2XB8oP5Y3ySXmm/FNeKl+V
x8pv5b3yYXmy/FleLd+Wh8vP5e3yeXm+/F+/UH9RP1L/Ur9Tf1Q/Vf9Vv1Z/
p38/OWqXvq6xfX14fUm+0lyv8sSrytSfNhYCb/B+7pk6z12Dce1dfvxzndwP
O8aT3d/c53nO06uPWGG5wfn1jYGQgxh4cjnXB7z6Tj6Xsi9+9zyjSryJE3aG
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
zZYfXPZvXM57+jk359zIqx+Kg7SXTO1/gW24sR6YTZADnNhjRG5iO2PnZCLW
IANx7PIokL/vznPFf8CjxXJiOHPW4mzY376txfNbb3fG1686xrvgVN3oSfzG
prb+ZzaPBzbuszNF2f9ykrLt2S5b1t7t7Zl9w4TyxNR0S+9+a/ynHLL3LJ+/
csXp7M773MdRy/tvfmExtHK8ZzlLcB28WddG9uI7/LC5rZ7P3jNqe05fzyrq
eQ3NWd28nc1d1vwt3cPefXzdy9D1nF3TcjXfdze22f5dfdxlHOcY+9NOOMz4
znG/z7eclt/3tj5Prjt9XP+2q+2tHK5zvk1ulWflXPlXL9VX9Vj9Vu/FQ3FS
/BRXxVtxWHwWt8VzcV781y5qL7Wj2lftrvZYO6391q5r7+WBa34Yb5RPyjPl
n/JS+ao8Vn4r75UPy5Plz/Jq+bY8fM3P4+3yeXm+/F+/UH9RP1L/Ur9Tf1Q/
Vf9Vv1Z/t/4gWdGbuMB7dm6m++Ic18tBBLPGPcRo+uXqpC/uneJDcZs4znds
jz2wW/a9tc5kuLMRyefSR3y4eGF+0LU9J377eD716bs1tItRtzZ187DKX17W
c+7n1Xd7M8Vf4pvLut1D12LTcy/nyx5qC9ma4xAvkSm7+LZv/eV350VuTwo7
JiPthXFj0mI9siJH/XLPiLN9trbfOAds0wEu2Zoc9dAGevOduMz6sJ2FbZ4a
drfHkD42x7H4dmM77m9sp2cLzq+5xhXK9a927zxwNgsbnoEv97cmj63vt64X
Q7v2bjyy88nEZeb83VcP8fzGjxYfn7mqPu8YezE2Rmbbr+A+2RoL67ntPbu2
5/f1DKOe43Cdy3r5PJvTrHldure9+/u6x6HrPLvWpfN9HfNsv6++T5v5PP6i
9/t8y7maT7x7b+vTerb+bVfbWzlUPpVb5Vk5V/7VS/VVPV7rd3ovHoqT4qe4
Kt6ucTh8FrfXeB7Oi//aRe2ldlT7qt3VHmuntd/ade29PFB+KG+UT8oz5Z/y
UvmqPFZ+K++VD8uT5c/yavm2PFx+Lm+Xz695fvxfv1B/UT9S/1K/U39UP1X/
Vb927e/ohlzu+4P3/cH7/uB9f/C+P3jfH3xb7g/ezw/ezw/ezw/ezw/ezw/e
zw++Lc8P3q8XvV8ver9e9H696P160fv1om/L60Xv9w/e7x+83z94v3/wfv/g
/f7Bt+X9g/f5ZO7zydznk7nPJ3OfT+Y+n8zbcj6Z+/yi9/lF7/OL3ucXvc8v
ep9f9G05v+j9eRP3503cnzdxf97E/XkT9+dNlCff1s6buD9/8P78wfvzB+/P
H7w/f/D+/MG35fMH78+jvz+P/v48+vvz6O/Po78/j/5t+Tx6stCPNj5Df2JB
sd7GlYyJiBnVwfjH9neog77o9tBuHFfbNhamvZvz5Os9u/WxZ+6A1x7tfCr/
GSsRT4pFyPYW60e8A4vkTraLT7SXvZsL1rfXPjHyueb7R93t0WW/bI4NipPE
AXT1rd/yyw6sGG+gP/EVnMAUnH3Zl777gTPfuYbn+j3P71+f+TjvECP6zvOL
7fwLn/uXLWzegY1uHGVzE+6xaTbnemtdFpd6l+/EO2JF72B36rt5+c1vi4OV
b04FD7GVrRVno+RlrHzr8WDGWjrX5KhOOMP6deNP+iF4Vx8EdoyfGSvBa2xD
mcaivBfG/NZ3OBT2fDwPbzhVO41lic+0h559dl+Z2s9WPYOnYROXn/MBrzuu
tx7cu7RHvOt7f8O7OusPqDP+ZcN4Fb/WR7Tf1LHEzq9drznZOszuTeh+ve5h
b16X3u/zLafl972tT+vZ+rddbW/lUPlUbpVn5Vz5Vy/V14vp0TPVe/FQnBQ/
xVXxVhwWn8Vt8VycF/+1i9pL7aj2VburPdZOa7+169p7eaD8UN4on5Rnyj/l
pfJVeaz8Vt4rH5Yny5/l1fJtebj8XN5+ks8f/1f+r1+ov6gfqX+59jvzR/VT
9V/1a/V32mz8Vxs9A1twD5PazC5mR9pufn79V+8418ee+47Uw/fGbPj4+Wtt
EAfsebHA9oatT3uO959x8dl3fv6BOG5z3vrai8/ge/kU4Jg/N+YDv9q8/iw7
g3ljFnQizhmuxbL0r/8OI7AhXtpYA6zDBky6Z/wdxoY5mBm2fPxmf8MmDA+z
sO7a77dezL9sxr8+bIM9+Jcdud76bTbrb2NQ4kfPuFYvZdKb+m7v7sZycABM
skU84bfaLwbWru2rggffGyfxPpy0tQeu4cAz+gTk5h1sBNds/yk9aKfxFnrz
zJ4XX1ujxqa2ZwePufZb+tQ+z6uDdnseRsXRnnVfuzyjTt6Fu5VvLgQXmwPx
nD1o4kFchhvpXX1hRj9luWzgHh/hbWXWF7R/1DHDzqN1bUnXW3YPQvflda96
87c0p1nv9/mWc73XY+9tfVrP1r/tansrh8qncqs8K+fKv3qpvqrH6rd6Lx6K
k+KnuCreisPis7gtnovz4r92UXupHdW+ane1x9pp7bd2XXsvD5Qfyhvlk/JM
+ae8VL4qj5Xfynvlw/Jk+bO8Wr4tD5efy9vl8/J8+b9+of6ifqT+pX6n/qh+
qv6rfq3+bvss+EExDV8J6zBi/MGYA7vhc9Vxe43OufAzLmWPPuec3hsv3736
WP/TtiiD39e3PfeBHHlijufIwDMZ27hZvx8GF1vBJ7uAcbEpvbBfbYOb7bkl
dzYiLqav6U6ZMCU2o/+Na8PJ1nX6rX9hAubEVTAzXPmu/cCOWbiG4/m+2YMy
ccH8lO/Zg3/9LQ7bmpjNOyiHTW58RLvXR3W98ZbtXdqacO/Tvvk7et19tigW
Nz4Er+Jne67gk9xgHqbJdnG458dL5K483ELu2sNGPKO9sO6+a/ddkwH+gC26
xKdsQfmuvWv8ya600W/xnraqp7p5BlbZGAzjaTGpNq5MPGFtBPx6Rn21Rxyv
LuqJ9/Cqv8v57Qd1bLDzZV1D0nWV3WvQ/Xfdk948Lde5y5bPs/f7fMtp+X1v
69N6tv5tV9tbOVQ+lVvlWTlX/tVL9VU9Vr/Ve/FQnBQ/xVXxVhwWn8Vt8Vyc
F/+1i9rLtR3Nvmp3tcfaae23dl17Lw+UH8ob5ZPyTPmnvFS+Ko+V38p75cPy
ZPmzvFq+LQ+Xn8vb5fPyfPm/fqH+on6k/qV+p/6ofqr+q36t/m7jotb4wJ24
Thu3b9m8Avs690i+cNjnmTP12cMvq6f+6Zk75pnDr6vvOSf68qNuy8uqTlsX
dNb73FeinduP6b3GW4zViE/M89I3fMAkfBufEbuJP/W/tyaK3sVonqE72GaH
2ug5+qN7Y+PGB8RMi4U2zj6/tr871rDxCnPpfr9xi9bRffgQTylj66JhF57Z
n++3jnp7CLev1jvZhXEEdcErG0tdjkOYw1WwzeZwmGe0c33G3XcPh5CJazIg
F7+nbxzk2vwIXmCbZGUOxXvYN3tXf+V5TlvFVfQA0/5dnhnfi+HVgS6Ur572
aamDNihv3KVuYjIy8n76co3fXGvv8of4rfLYFxsdNyrH8+tfeAaG1y+AaXVT
Po4ut7e/0zHAzot1rUjXT3ZPQffZde9587E0R1nzdl7nAN/9Pt9yWn7f2/q0
nq1/29X2Vg6VT+VWeV7LefKvXqqv6rH6rd6Lh+Kk+CmuirfisPgsbovn4rz4
r13UXmpHta/aXe2xdlr7rV3X3ssD5YfyRvmkPHPNP+Ol8lV5rPxW3isflifL
n+XV8m15uPxc3i6fl+fL//UL9Rf1I/Uv9Tv1R/VT9V/1a/V35KzOy41pnEPc
6Vnz79b66GNe8roddVt+G7a79VvecebJe4dLv/Q1d33brXNVT79Zn3Z7peIL
H8Da5szpYn1qMRsMs031F0vq24pLZxfiEPJmd8Z74fqcMz/n87TVtTLhQbn+
hRv/bszdNUz6d+MLm++rf/Q7OoWr5aTAAzC+fLzDsHoOx9tD5DuY82GXYjVl
w87WcbNn9sQ+NsbC5tmXMtmQti6/FBv03PIxusY54jbvJkf32JCy8cvyRpDX
xm/wA54hW9yy2FgfQLuNo3nfrre/eHPi6kNf3u294mzruN033kKP7Iu+cCyZ
Lc4kRxhgV947biQvHIZjXW8si+zdx/Nkp0x26v7WYZTD26/pWF/nv7ompOsk
u3eg++m6x7x5V5qLrPk5m7O65zj0fp9vOS2/7219Ws/Wv+1qeyuHyqdyqzyv
5Tz5Vy/VV/VY/VbvxUNxco2f4ap4Kw6Lz+K2eC7Oi//aRe2ldlT7qt3VHmun
td/ade29PFB+KG+UT8oz5Z/yUvmqPFZ+K++VD8uT5c/yavm2PFx+Lm+Xz8vz
5f/6hfqL+pH6l/qd+qP6qfqv+rX6O3iBO/Yk3uR32d/mIZbHhl/17pY/29z8
/XmOxjN3ObQvOeOO3132Uh7+b7lZ1/7ll1Df9dPoSeywOWmYgiX2QDfDANyR
JxukI7EhvdC3Z+DNmDg909XWVm2N8+KkjSH4HT3ts7H1zVFvfdhw6R1b/7z9
R/6GZ7/x+8VnyxHh/vqgyliufLZJH/DkO/ZjTMGz2w/sOfdga/P5sIfj3IOv
7RvGI64XJ7NxuFyOtZ0p472LY7XHPfywfcbLRcOmNwZrvGR52LyD7NUZlylf
u9g9flFn5cE8GeGk+ZrZiGe0ZfzpeXMTnlEG/aoL/W6M1H39BTqlZzgge+1V
frm6/ZeO6XWeq2s/uh6yewS6b657yZtfpTnHmoezual7XkPPMOr9Pt9yWn7f
2/q0nq1/29X2Vg6VT+VWeVbOlX/1Un1Vj9Vv9V48FCfFT3FVvBWHxWdxWzwX
58V/7aL2UjuqfdXuao+109pv7br2Xh4oP1zzxvikPFP+ueal8VV5rPxW3isf
lifLn+XV8m15uPxc3i6fl+fL//UL9Rf1I/Uv9Tv1R/VT9V/1a/V3fPt5Xsd5
dtu5j//MZ6H8nWekPj7nHsuzH+r57WVc/rdzjvPt7taI799LftTLOPCx7/HI
D3Gef/SVx7zHecbWrzjWF33LN//SY6zaOAI9rL9Oxvr5W3+8HPPLowvP8Lp8
tjAxmdO7fze/N31v/nnrsrbv3fXG3renb7Hm5q3FYJ6h443Nux5eF4cpfzmS
1HNjJjDCltTb8ztfbTmWxH7LGQxzrtkcDmGj7a/BIvsa9nzveRicT5y947R9
5z1sv2cUwvnsCacs9+HOs1hZ5O9f9dA+z+IQ9shOxNXaol7eS5aecV/52++r
/tccKN5mw/SJf8nb8+xN+Z431kY3ntk+x3Ly+ikdu+t8Vtd4dN1j9wJ0f1z3
jDePSnOLNd9mc1D3XIaeVdTz+3q/z7eclt/3tj6tZ+vfdrW9lUPlU7lVnpVz
5V+9VF/VY/VbvRcPxUnxU1wVb8Vh8VncFs/FefFfu6i91I5qX7W72mPttPZb
u669lwfKD+WN8kl5pvxTXipflcfKb+W98mF5svxZXi3flofLz+Xt8nl5vvxf
v1B/UT9S/3Ltd+aP6qfqv+rX6u/UQV+RLfKL23/ht+c47LFG5+5sRO+cz3bt
XeqqT7r9/xvHPft9b84ewlcuR9qDyz6Qo41sYudFWme7D92Sm3Flsl0+IXKl
RzrcOAO9+35rqzYmvj7+4qthyO/Z9cYQltt6e1o3Xr99Pb7f/DFbUp53bA2z
MY7FfSt7OShgXh1gGSY9t/l14wTqsDnzrRtlV+zbx282hrO8UOS18Rb2o07K
87vtW2Kf5OL59Z19P9/n79md55WjLn7vd97lvt9vD7Fr7fOMdo1D8Innla+u
y73k786bbG4F97GNrVcnx52Voz7jzJ2biVfdx3/4xPMbqyr3tj/SMbrOW12v
5dj6xq757z647g1vvpTmEGtezeaa7vkLPZOo5/T17Nre7/Mtp+X3va1P69n6
t11tb+VQ+VRu12PRk3PlX71UX9d6nH6r9+KhOLmeBx+uirfisPgsbovn4rz4
r13UXmpHta/aXe2xdlr7rV3X3ssD5YfyRvmkPFP+KS+Vr8pj5bfyXvmwPFn+
LK+Wb8vD5efydvm8PF/+r1+ov6gfqX+59jvzR/VT9V/Xfm3+Tgx5no3244/8
MOc5xC8cfc8zH+qrD7955rp+5piX3DrX7Vs8/esrLnMcb7w730X569tu3PZy
dsTlnNxzP+R0Siff8e2/8k4+5Gef51u+6ZfcjVeLKTaHt/ndjQv4fmuH9b+3
p2Z675yg9228cnuAdm9l+1s5K3f90q29Uv7WdW0d186aZSOwCSMw/M1vea/j
GXaw2Pg8M+SVh50uvz38Ly8+TCnL97C8OXR/i2n3vvksf3vev55fPtKdha3t
W8M9m3KtnTtbdDkDxw+z/3EJ+x1nuC6H7PwZHOKdeGvjTtrnb7LeuW70tHPB
yUSb2MRi/q3PIaut98OR+LMc235Hx+I6P9U1G13H2LX93e/WPeDNi9JcYc2f
2ZzSPWehZw/1PL6eUdtz23u/z7eclt/3tj6tZ+vfdrW913tSJp/KrfKsnCv/
6qX6qh6r3+q9eChOip/iqngrDovP4rZ4Ls6L/9pF7aV2VPu6trvZY+209lu7
rr2XB8oP5Y3ySXmm/FNeKl+Vx8pv5b3yYXmy/FleLd+Wh8vP5e3yeXm+/F+/
UH9RP1L/cu135o/qp+q/6tfq75aH9fz+FTfn+Zivv3u+467NDT5ftn7ezo3a
OVOrp2d2feYSffaypvRdj31TOxtC/gGyst/k73zHr3r0bd/6yw89yuuq/7z8
QdYwuZ58u4dvn+lgOl+ehu5pX99QWdPx+u/0tTNRjA34LNcgm9hZY4sdN5YA
U+rvWfj2eza79fw4Riy+fD44C26MtZh/ETstR+DOW9peXteLETe2unGVjdnu
2r9sa3kNXfvsGXhbfV1v/6/2+A173DnabH3vXOzbsSDf4zR8xx7ZvfuewRl4
zHsXK3u/fxc/+62Y37td62Ns7Tm5uMYN+iHl0vYvOubWeaiuzeh6xa7h7762
7vVu/pPmBGuezOaO7nkKPWOo5+71LNqez+5v5alT7/f5ltPy+94nc1k/rmfr
33a1vZVD5VO5VZ6Vc+VfvVRf1WP1W70XD8VJ8VNcFW/FYfFZ3F7jeTgv/msX
tZfaUe3rpWywdlr7rV3X3ssD5YfyRvmkPFP+KS+Vr8pj5bfyXvmwPFn+LK+W
b6/3Uo+fy9vl8/J8+b9+of6ifqT+pX6n/qh+qv6rfq3+7lwT8/wlJ+SZx89z
y32/sx70NXde/HJ/Kmf7+s+x1ufvxma3/vVy5sfxt5zg57mCzz1gv2Jg/dFb
X3zEB3IbkIUx42/6xl98yE384D5Z0p1nu+99Y6PT1fSyOeLmQ6u/8xFfeZ93
KH/zuLMBeF2faueaLe6kR+/ynHouzxJ7NZ8Px34rxjd2xTbcu+STPNZTGetS
Fu6Bc1jRDvfEVOoET2LkzXGzr+VMUuZ82mKx4XZz2rve/qLlq3Bve3c3ttGx
XFzimc1VaMvmYjb+hOO2lg0vdL5i8wm+2zjV9kYtXme3k61r7VT+cvmz+XJm
+xEdW+t8U9dgdF1i1+p3/1r3dDfPSXN/NR/mkznAH5+b0LOEer7ek2fOPj6H
3bPzaeYmls+79/t8y2n5fW/r03q2/m1X21s5VD7Xexwmz8q58q9eqq/qsfqt
3ouH4qT4Ka6Kt+Kw+Cxui+fivPivXdReru1o9lW7qz3WTmu/tevae3mg/FDe
KJ+UZ8o/5aXyVXms/FbeKx+WJ8uf5dXybXm4/FzeLp+X58v/9Qv1F/Uj1/5l
fqf+qH6q/qt+rf7OtX/Pv19x+Fbl7BljrBtrVa/d50/Z3+q2NTzq1rypvle3
8/yd8zyx5cK1Ttu8fPvIYiS69HFNN/Kpk6u/jS3Twfr5zc23/vn0tfFx/y4e
Up4xahhUng/9sDHYghUx1OYOPO9Z5XqWPft+OZrEzNYUaI+1erAIqzDs3dat
i8vV1bV4XX2sXcBd3uea3uGfvYrLjYdo9/bvqwOZbPxdnfHG1sAuR9vW/8wO
hs3FcWTFBrv+tePHy5GonbjEvD+OG5do996HN2Ynm39Xn3HB+qYbdyK3xd47
a8Z7tt/Ev3iz3Nj+QsfQOq/UtRZdf3i9F2P71Lp3u/lMmuOreS+bC7rnI/TM
oJ6j17Nle966Pp45N/rmS3AYH8Q/4TYc2Pt9vuW0/L639Wk9W/+2q+2tHCqf
yq3yrJwr/+ql+rrW4/RbvRcPxUnxU1wVb8Vh8VncFs/FefFfu6i91I5qX7W7
2mPttPZ7bdez9/JA+aG8UT4pz5R/ykvlq/JY+a28Vz4sT5Y/y6vl2/Jw+bm8
XT4vz5f/6xfqL+pH6l/qd+qP6qdezH9tP8X83fJRnOcfPv7tOVb6bObynr3b
4z8/u32LvjP/uHqao9+85Na3XvZGPrjkWH3A/ti6j77x5EB2ZCNGoAdxg770
YrGdi7K5XTiEt+lEbAO3PmRNH2IQetD33n5R34s12azYdOuylElXYhjxjFgY
Z4h15S/WZ8cxciuYc3Ft/MX6BTyjfqdvfM2N3+M1uFUmfLpWB/MtF149xpxc
s1PrF4yLde0ceag7/GyPK/ksV1Lzv7neHPly5y+P0sY9PDe/Ne7YerHt31gM
uVz9Xbe2/UbNg3h9PtSenx8cl21OQtw+HnFdDmy/oGNlnT/qmorKqmvvux+t
e7Sbt6S5vJrfsjmfew5CzwbqeXk9Q7bnqvNt1nlak60vpD58wfI1Lp8PLlSP
3u/zLafl972tT+vZ+rddbW/lUPlUbpVn5Vz5Vy/VV/VY/VbvxUNxUvwUV8Vb
cVh8FrfFc3Fe/Ncuai+1o9rXS9lg7bT2W1nV3ssD5YfyRvmkPFP+KS+Vr8pj
5bfyXvmwPFn+LK+Wb8vD5efydvm8PF/+r1+ov6gfqX+p36k/qp96KV9Wf6fM
nWlxnpX7Hnfrc7ZW58x/8+xdfuzt998aVL9pfdzfvObOWjzXsNor+dTRzxWD
siEf/eHJgXwXJ+z8yeWKXUwiFtnZW/BKpv6lX7ryL93BHZmzJXZLP9ZtsVH/
wgI9+rdric2jwKZY65yjfeXhw/XXt94Iju29Eocr1/oDOFQX68+NQylXvCzG
U2/cI2+kertvPaD34RjvFLviKGMD4m9rIIxxwSde8s6NJRhbV1/vg9GtExK/
NW+S8l2L8bo/dnnfNqbReNgzG0NefvHFgcub2jmE5XBaPLzzs3tW1ObxN/eC
F8t1jf87JtZ5oq6d6HrCrrHvvrPuxW5+kubsah7L5nbueQc9A6jn4vWs2J6f
Li5df8z79ad2Rg0ft/y3/Jv4nf52DnPv9/mW0/L73tan9Xyy/o/b1fZWDpXP
tdwmz8q58q9eqq/qsfq97vcND8VJ8VNcFW/FYfFZ3BbPxXnxX7uovdSOal+1
u9pj7bT2W7uuvZcHyg/ljfJJeab8U14qX5XHym/lvfJhebL8WV4t35aHy8/l
7fJ5eb78X79Qf1E/Uv9y7Xfmj+qn6r/q1+rvlrtmZ8T37OD1H12fe+IfnyOs
PjvvaeOo66tezuA55i43djs/6KNdYkp692m/uHECWflsnRF8iSnEI1t/5G94
ozv36Mg9Mak+/9Yx+1hnpWzlKN89MSo8iq+3bra50Mnv0v9+KOYyLkX2bN2e
LnhmM+IwY1DeLWazll39FsvBgFgM/mCFvuHV9bn+7tNvYO3MZ/yaIxcWvOMu
71W2OH/jLMrzLnPO5AZ7ZMT+2CkZ+ZuNk6lnl2NpZ5HB43JG7Jzr2T4Mb411
z0gb97heHLl1uJtHqE/Upo1Zb83BOO26n7ixr84HdY1E1w12LX33l3XPdfOQ
XOfm2l6A5nDuuQY96+f6/LudCdtz0ndOhHEZfsP7YXv5F63R5A+WhwSPbP8r
PWwNRe/3+ZbT8vve1qf1bP3brra3cqh8ruU2eVbOlX/1Un1Vj9Xvtd739zVO
hp/iqngrDq/xOdwWz8V58V+7qL3Ujmpftbva45N2+th+a9e19/JA+aG8UT4p
z5R/ykvlq/LYk2c9POa98uE1T44/y6vl2/Jw+bm8XT4vz5f/6xfqL+pH6l/q
d+qP6qfqv+rXrvt9l3Nbjvn4nQE1f7q5Q8/tu3MP/pnDbecKG6tZHcYX29Ox
fKKXs1qPtsGCeREf62gnh60n8oFHMhJTiVP2DIyJIfSn9d03jk1HYpedfwm7
sOi3e954g5iXXYsVzrM+nr3b26+Ol3PejvlMefq1y7NiOWMO+t/nWOEXHusP
2AI8W7/nXee40RuOWA5WYVs9z/OFPuV4Xj2saYfz3WenxsXdF2tb5w7PxsOM
f51YfvuDo+0J027y0C7vgkOyVP7G5HcesOvNEcIoDtic58Y/NvexPBKbayHH
5Y/rmlvv3HjR9s72zI2NrZS7Gs93jKvzPl0L0fWBXTPffWTdW918I9e53Zb3
qbmae35Bz/TpOXdXZ7/enYe+eQqfnXt+xus/4ojhjW0a+9p6SzrQfjxDd8t7
sj3JuOb/be/+XX1LrzqOTyHYWNgIlhYW2qUM5N5xaquprfwLJIpFyiksI9go
ESxSJlaWFhapgqQIQUIYQgjB0iqKjVbOez/fz7mv2dwrEzKT3EnOhcPZd5+9
n/08a33WZz0/1/K+z1uO5ftd62M9rb/tsr3K4R4jfXJTnspZ+asX9aUe1a96
f92cp+O++T5zWw9v4lB8ilvxLM7F/90uZi/akfal3WmP2qn2q11r7/KA/CBv
yCfyjPwjL8lX8pj8Ju/Jh/Kk/CmvyrfysPwsb8vn8rz8r1/QX+hH9C93vzN/
pJ/Sf+nX9Hf1I7OP/GLzLL1TOZ49rOye277QxbJJvidO8Mn7srih25Ozcxw7
q7j9PxuHVs/qFYaH842Rt56cnLrevHK/l4t5cxfLUVIfIx3s92IZJNOwceI9
nnwf1eFxxvKRF/Jb5H16yul2xbda7OOw0Xp17T7nWj+81l7CYf2x8D189s1s
6sSKvvI2PuG563isfdG9u1gjyaCzzs2HnP1z37/2ARYjq7mtE2fvH9498bq+
/nLx6OOYbNG9Rtlo8gufySPZzc7D6vZz1V9LRusPj0t2BmjzG/HI5jXGHT2/
+5tbNpahPvE+TnTutPq758F9gO6N97yYZ6iNK2KsLeNPGpPZPAXm7jGfnTle
zXu+3+E+n9HcVLrfea/669urEMelh8WgjCdqQ2OkZBbH52PiluraM973ecux
fL9rfayn9bddtlc5KB/lpjyVs/JXL+pLPapf9S4exIn4EVfiTRy+Dp93PItz
8a9daC/akfal3WmP2qn2q11r7/KA/CBvyCfyjPwjL8lX8pj8Ju/Jh/Kk/Cmv
yrfysPwsb8vn8rz8r1/QX+hH9C/6Hf2Rfkr/pV/T3y2nYT6ycpb7qXHy4tfU
l2Hc+O7O9ffMzvnvTOKrnExfe8qxe/JA/enTucbkXLsecfVfZsuN/cPBeLy5
kHS9GHpxwtZgm4MIE8muvkXPD+9xRVioH9a8e3vlkuPmAR6xeK4558Vr3VnL
E3/gWy8Wb6e59M5eLf9H2Ay/yWN4a45i/bHmm+5+0PFgXBUPZdfxVf29cN7z
zdXX5rjt8NSLK95d5Yfn7U/s/PTyFTcG6Gdy28/m8OtnLebS8lFv7WLz+dn4
9nf19/WF+3913nr4+Gd7wybv9b3vPtH+uXNWruO4t8H9fu6B91zYPe7H9scb
U8s4k8ZeNh+BOXrMW2cuV/Obh5HhpzW79nCefOhffIqXFT+lu7iidscJO2vT
dfWrbos/tViS1T8/WDsXx3X3fd5yLN/vWh/raf1tl+295+9TPpOb8lTOyl+9
qC/1qH7Vu3gQJ+JHXIk3cSg+xa14FufiX7vQXrQj7Uu70x61U+1Xu9be5QH5
Qd6QT+5+cPwjL8lX8pj8Ju/Jh/Kk/CmvyrfysPwsb8vn8rz8r1/QX+hH9C/6
Hf2Rfkr/pV/T3y2n4c4MnvMXX7jK3/nD5pA3B1u/5owp//XK+Vsdeid/evzk
Pz35vuUK7d7kPJk2d10cjdb7s7v0nv7S+/I41t9cLo+wnY32/2Rbv6o1/uwi
u8+e+397pP76q1+95iIq+4x5P3j36LVzi7//7vGBH3yp9i7nx4lT9+XrmebT
N28cbyx2T7gKzyfX6ntP/a5wGw7rj2VD4bPvh5Pq2xmu7Cg8b94j/qrvl61l
J60F1JbWf8JZ5ddvfMTauvqXjeNbCw8H6aj+YuvhrTVUTlwRv4TJfupztYa9
/lf1zIZb244fkuPWELcPbGvcOwNbG+ojb8/XfN+u75yzfrhzU67XuIfBfX3u
dff8l2eijRNi7CzjSRpj2bwD5uK5509czlbzmJ88Jf9++ZGwmA7josrKXzSf
+Cqn6DtPMSKbG9zaavXIRyy+ZP5uZwoWM2jjwdq8vMne3/OWY/l+1/pYT+tv
u2yvclA+yk15Kmflr17Ul3pUv+pdPIgT8SOuxNu9bzZ8ilvxLM7Fv3ahvWhH
2pd2pz1qp9qvdq29ywPyg7whn8gz8o+8JF/JY/KbvCcfypPyp7wq38rD8rO8
LZ/L8/K/fkF/oR/Rv+h39Ef6Kf2Xfk1/lxy2d7Qy84nGZHvEOn33rD1e5w8f
5xB/cpV54uSf+GmLg9M3z56ar197ctaWk2/qi4/4bu9feiwORnrsuv5MNpRs
wkZyS2bN4WR/Z6/Bv9Svuq7rL9X/bG4hzGSX2Xi6P/Epzjx88z6bl0inj/XW
L51x9Dmf8tiLfsk5+Zw4BB+8qF/3wMfL9evqX/St4TnbqU8dPrOtdDo/eM4f
f/vCc7hMBtsXvT5efff6gdnTYlWe83U/vOypfnn7xZJ9/f72xoeLx9rhJevs
oPpUfnMPzdc0F5H91m+tH1v52fTOYHbdOvViBS4X9fbFVf/qt3msxS6UW+xv
Owd1X5fZXgX377mn3XNenn02HogxsowbaSxl8wuYc8c8dOZmNV95nB7n1C/t
+80NLnb39ttvPS5uWw6Bxjjx0nK1Vma+ojFVNr785rs+a0R/fH2j9bae31jO
+/fnV47l+13rYz2tv+2yvcpB+Sg35amclb96UV/qUf2qd/EgTsSPuLrP1Q+H
4lPcimdxLv61C+1FO9K+tDvtUTvVfrVr7V0ekB/kDflEnpF/5CX5Sh6T3+Q9
+VCelD/lVflWHpaf5W35XJ6X//UL+gv9iP5Fv/Nxf/TKT+m/9Gv6u5On98oX
8fLMI//G1T/Y9/OPxbfYPGplVl71OvOuHzzKP/txzvnEb1xyPefl//JxpuO3
X561hB9ceg9z6ak+QHjs7HBrpOEznSbb7Lr1i2SbfSXDYgyHn/q8mzfYnqvs
onmGZBsftCeu8fvJr/aNq4/RunKyqL61q/F39aw/0HVrx8vZkUzC8nJgbX9W
/an66WGw/2dHfbf5iuGz+Yr138LN+nXD8/p+4b+2NzcSp9WW8B9+eq++Uf2p
k8f1K9dZ7M4Ete+p/udirD/OaV/6ipvamxCvbS9WcxXJbecy45v6ujsn2+9s
fmsl/W3xdXteDrFf7VyT6y/uSXCfnnvXPc/lGWfjfhgLy/iQxkw2j4C5dcw3
d8/BurzkPdfevPZibt2ttZawF16TY+W2dpbvqMx4e/m1F085H7G85BvT1ZbF
+VjOv/m4yu9+ZS0GSmM67/u85Vi+37U+1tP62y7bqxyUj3JTnspZ+asX9aUe
1a96Fw/i5L5vebgSb+JQfIrbO56Hc/GvXWgv2pH2pd1pj9qp9qtda+/ygPxw
543xiTwj/8hL8pU8Jr/Je/KhPCl/yqvyrTwsP8vb8rk8L//rF/QX+hH9i35H
f6Sf0n/p1/R3yWHzrsWsWHzS5Lb4NY3ne7e/vTqP/9OXi9l2Ys6cvEonN9qF
i2tMna5OP+n9K25Y/Znk2J7Z9r41rg4Pjaeb065v0HXz2geH/331K7rfdf2q
Xafj5J88ez4spYvKSf490/2TS+y711pxfa7qc/abf+3pbE1yeJxXebE4PLVl
MQq617vpv35E8z2LJRke4pK+sbOuzTul69pfP6e2hOewGp7Xx+v5ntl+sK0X
1L+qjPqN9fvDTnbU3/udfZVjoPnu6pcNbk9wfcrmQWpjvJLtxWWtV2fP2Xm2
vTNOyb976WRr33efaP/ZOSXXWdx74H4896h7bsuzzMb3MOaVcSCNjWy+AHPo
3PPKLc6/+cfj27jp9LkP/6e/nklOy0fcvF38n/w6W9CeycmlcUnYmz+oLv3O
l21dbznK6x/H9fNl1aM2xac9v7PmzWN63+ctx/L9rvWxntbfdtle5aB8lJvy
VM7KX72oL/WoftW7eBAn4kdciTdxKD7v8xvDszgX/9qF9qIdaV/anfaonWq/
2rX2Lg/ID/KGfCLPyD/yknwlj8lv8p58KE/Kn/KqfCsPy8/y9p3Px/Pyv35B
f6Ef0b/od/RH+in9l35Nf7c9M8tReM5M/M3T8/nTxtXnrMXJd3HGj1+/vvno
S7w8sUvfeTpv3juVlR3Wxvx6cwontvH3rn1HnSGtD5A8eyZZhflku32YPVN5
m0OYH2wMXl8iW+jdrtcn6d3mRrof3uKPziKHjfrF4as57fom4Tk5tY4cPpbX
I7m+mjc489Fv8oN9a/l5xGd1S4/132rLycX97af9YNVj52GbK9Au4pLFb67O
2Vt1De/LkRWmmq/I1vpe/Z7G98m0fk+66v36peGi+bDWo8NZ8zx9O5nV5+2n
tX85wX6yc0eup7jHwH137kX3fJZnlo3jYWyre7zHxUA2L8Dr9szE5eZUNc94
GNh1feb6uGGx+8slVHvnd+K8nm9usPsbm4Xb5ZjZmZDeWRz2nllucNfOKrMy
+nY+q/K71zcaL/VsfOl9n7ccy/e71sd6Wv97u9Ze5XCXz+SmPJWz8lcv6ks9
ql/1Lh7EifgRV+JNHIpPcSuexbn41y60F+1I+9LutEftVPvVrrV3eUB+kDfk
E3lG/nmTH5TH5Lcb7z3xoTwpf8qr8q08LD/L2/K5PC//6xf0F/oR/Yt+R3+k
n9J/6df0d/Vfmk/tva1/NtasH9C9nb9YTsNk2TM7x+j4+rH/9kvZU+P1B3au
NYrkeNaajxzOGZP/vdqb3Da+rr+RfCa3ZNiYev2KzSe/bvyY3Tce77p3k2Hv
ZpuV03dPHMMfXmWeOJLfuHLS9Lftu33ss73akgwbT9fHCIP1cWprfNLc+GJB
bJ06bIfn9FXdWnsJw9Wtfl39nPDjeLByux8e6lNlFyfu2I+vfuPJdf3PF0az
ybBZvdbnTFfJtTn97lev5hGy2ceZjatdreGfuZEvv6yOzVe0lqDt2x92jsh1
k/tegu2vc8+557A8m2y8DmNYGdfRWMfG/zcnjnnizJ16zyfeGGVjruUK77nW
6JN1dr11t95dTvG+VzmNncanjVcW10/ft7h8+ZzlPe/Z5aqbr9me0OYA8xU7
A7HxVH7N+z5vOZbvd62P9bT+tsv2Kgflo9yUp3K+53SeXtTXPb/J9KvexcMd
J8OPuBJv4vCOz+FWPItz8a9daC/akfal3WmP2qn2q11r7/KA/CBvyCfyjPwj
L8lX8pj8Ju/Jh/Kk/Cmvyrfy8J2fx9vyuTwv/+sX9Bf6Ef2Lfkd/pJ/Sf+nX
9Hcnfu/xg40Nk9VyWJxzDyded886p7qcF42hFzd7cQ13JrS+yuLENhae3usD
hOVkOD/S/Z7JXrtufmDj6OSWnbbeuv3GiyO0fkXyz166v/H49JX8m39uHTmb
bP6i/llzRWGt+oT99nkdn/KVd0++qQ9eFJfxnLN/78XOpdbf2zx59a8O6T0c
1sbWeWt79e+d5hSqczJZv64+3uaE69d1ndyqf3o/nPujq27pvbmYbC/7qo9X
PzNMNVeR3vp+1+mzMhaDOVnWnkcsoqe1e23cfq9zQa6P3PfYbB+de8vv5612
Btm4HPdYVVvLMaabcf7NfWM+OHOkmjc8rm480/3e6bq5vDi+Pm7jnO33aP2r
Z+Lw5gmX4ypcLIZ7fmnnFPJL4+j8w/KYxj0927eXd3hrX31r47jFGMuPLF7M
xonzKd73ecuxfL9rfayn9bddtlc5KB/lpjyVs/JXL+pLPapf9X6P5ylOhh9x
Jd7uZ4KGT3ErnsW5+NcutBftSPvS7rRH7VT71a61d3lAfpA35BN5Rv6Rl+Qr
eUx+k/fkQ3lS/pRX5Vt5WH6Wt+VzeV7+1y/oL/Qj+hf9jv5IP6X/0q/p79ZP
eMQYeDo/cmJSvPc4V37ilbY2+VhvvGKfVr/FM62fUz131rL+zMZHya0xdTJc
HNhsNNx0znPrvGElmSS3zY03Vt98cs/P9yWfZKv8h4fG49PF5Nl30+PKr38X
L9Tnqa/WHoKz1/mvrm/vzGl9uuYSkm1lNzdSH+LESfy3aw48267fsr7c5FCd
w2LzFX335D349oWr9Nh3mstZPzD8Dw/xVHWrLfFQsmnPV/aVzNJbGEiWJ3fr
iU/fvExlZ4ON9bOn5UDQlu3fOufjOoh7A9wv5x5yz1V51tj4G/fYbu7TW+xi
4/mb48a8b+ZCNT/4xiLZcX/febflRe+cec/GR+1t2P7K7WlJl/1t8UcqY/vy
+3v62j7IjXHyL8vhvfzj+Y/q0++e3fioZ7vu3uY958v3fN/cvO7u359fOZbv
d62P9bT+tsv2Kgflo9yUp3JW/upFfalH9ave7zHhhxPxc4+PJN6GQ/EpbsWz
OBf/2oX2oh1pX9qd9qidar/atfYuD8gP8oZ8Is/IP/KSfCWPyW/ynnwoT8qf
8qp8e+fh8bO8LZ/L8/K/fkF/oR/Rv+h39Ef6Kf3Xx/3aK3+3cxr1ec7e1Ffn
Fh9nIF68WgtsHP2F7cl50XxNY/DkVn8s3dUXSafJJFnlu8NK7ao/uD5X9lf9
9WsbA3aGJJmHh8ktzCSrxu2T23L5LbZecqvfsn5I2Fh+h8ba1TP8dH8+sf5Q
687n7Nl3r3ns6tVcR5jv3s7Y1KZwlWxOjs/vXfu+aktlLm5M7U0v1b8+XmVU
5+Y3+u7mOowRsbUA/eAjptcVT7K69+3Krq31P7cWnd3W7q5bqzh55K55/Y/Z
rP1Y53Zc73APgPvi3Cvu+SnPFBtnw9hTxmM0RrFx+81lY343c56aB7zxSNeL
7RTfLvZafiNOjrcXn3PxnxuzVE5rZRsDVl5zkuG2b9dnrz7bp7Ix184F7Mze
1ri2H7Jym09aXvLlQN8c5vaCLO70zkKs7OrrfZ+3HMv3u9bHelp/22V7lYPy
UW7KUzkrf/WivtSj+lXv4kGc3ON5msdneBOH4lPcimdxLv61C+1FO9K+tDvt
UTvVfrVr7V0ekB/kDflEnpF/5CX5Sh6T3+Q9+VCelD/lVflWHpaf5W35XJ6X
//UL+gv9iP5Fv6M/0k/pv/Rr+rvlH5xf3Dn9nb/vXvpuzrW+RDpZjIL6WmGi
PsTG6a3z1q7kU33Wlq4fcXMuDHY/uS3GbLLK1yf/ZP7A1iWf2hs2tpba87uf
PLs/OSefcN3zPdPzm8fenHbPL25DdajOJ0fXf1zPb09Y8wX1fcN8Y+72B7Rn
qXmT8BNms5m4J2w0z199Tp6f71xtCbfD1WJB7BzQzk30/PqB1af7cWG6DTPN
izV3cvp0v3v1j+p/tj5w9vt8+TozG0bqv2qb9ledw3Fdw7V+97+5J9xzUp4d
Np6GMabu8U4Xi/gen395aszjZm5Tc3zPFy5fWnOJ2b1ntBubpL/GMMYhq+z8
w+b0dtZgY9HK7HvZYWOF2td1ZW+cFZ8vRnO+Y+fZ+vZyj+/sQN/YWuHii+1s
XM8vr8Lyhm/tz/s+bzmW73etj/W0/rbL9ioH5aPclKdyvsc6mF7Ul3q863d6
v+NhOBE/4kq8+SM+xe39jMNwLv61C+1FO9K+tDvtUTvVfrVr7V0ekB/kDflE
npF/5CX5Sh6T3+Q9+VCevPPneFW+lYflZ3lbPpfn5X/9wt1fzI/oX/Q7+iP9
lP5Lv6a/217RrREuFrfjx3TTPHnP1Pa+1VpveAsH/b0+g+unXVf/sNh1vj67
qP7Lr1d7w8PG2vUfkuf232Yzyar762NsLnTXybB3l8+oMnfGcHpZfyP571vD
YXULN3FOz2cfzZdkG+G7/nF/b04jLnj4umtfVnhsv1VYqh8VHvpW/Rn7b/OJ
7UPfWXuvjTmTfJLn5uezn+qQLOuPNo9RX6/5/t6rjl1rg/ZLnatx/cI1ffe5
3c9i7DyUZ4SNm2EsKeMrGnPYOPzmppH3zGFqDGb5c+OgnZVYLpHGITvXtn0f
jVsqL36Ou82D0HeXH3178OPv7WmcH1nen+1f3HhmuWMrs2eae1y81I3v5qeW
T2lnG+djFgu+uvetylhMzt33ecuxfL97r8/qaf1tl+1VDspHuSlP5az81Yv6
Uo/qV73fc/kNJ+JHXIk3cSg+77gdnsW5+NcutBftSPvS7rRH7VT71a61d3lA
fpA35BN5Rv6Rl+QreUx+k/fkQ3lS/pRX5Vt5+E1cLZ/L8/K/fkF/oR/Rv+h3
9Ef6Kf2Xfk1/FyZOzt5X5zDym+m2d0/stvcujC12YuWni+qQLmp7+K3OjpfT
S22fT8+mamNt6bq+RHraemtj4fTSdePrjffrJyjDZBJGtw6YnHv3Tf2T3t1Y
vvJ7fuPE1S0O6Lp+RXYV1nu3tifLMLNYEOH77J/48VW37LExft9duyqnutVX
2d6YMNy1/b2us6XlYKrOyScurPzqUH8yOYXt+nXVJWxra/Y/nZNxncK1e/ez
ucfbc0+eBTY+hjGjjKNobGHj7ZuDxrxs5io1f3cy33ih6415lqtnY664vzWq
bL9xSbFQ0kVjkZ09j/vzC/F3HN319uVU9nJaxBnhLU7p/eq7Ob6Nxfp2z+56
f6vu/cwHLdZb9ZvfOetCZ7xVXeK3nuu6da3lg/W+z1uO5ftd62M9rb/tsr3K
QfkoN+WpnJW/elFf6lH9qnfxIE7Ej7gSb+JQfIpb8SzOxb92cbeX2ZH2pd1p
j9qp9qtda+/ygPwgb8gn8oz8Iy/JV/KY/CbvyYfypPz5pvk3eVh+lrflc3le
/tcv6C/0I/oX/Y7+SD+l/9Kv6e92JjBfWB+n+fDmTXcmKX2Ex/TXvtra0nzs
+gP5Ys/xhYn59/mv7uevs4Oua2P20HX9oq7rG9Sunum6d/tWsp1PdOycPKvv
9LXz7JW5PaiTbXVYn2Tl7L5j9rBev6hn0kUyDzOLAbg5hI3ZFxshbqg+vdv9
vru5bjEWzp3f2Fkh/eCwHZ6b665u9cUrOzvSpuxnOvfieoRr9O5bcy+355s8
82scDGNDGS/RGMLG1TfXjPnXzElqnu6zNvFn1714Ngwlj57XB27vRX3anele
3M14KLtYfLGNTXqu8iszHVZu9rxx2c6Hh4euw/3GRM4r9jdzIuwcQn5p86dd
V2bXfbtv9c72q/T3raO1tpYe6sduP4n3fd5yLN/vWh/raf3v7Vp7lYPyUW7K
Uzkrf/WivtSj+lXv4kGciB9xJd7EofgUt+JZnIt/7UJ70Y60L+3ubo+zU+1X
u9be5QH5Qd6QT+SZO/+Ml+QreUx+k/fkwztPjj/lVflWHpaf5W35XJ6X//UL
+gv9iP5Fv6M/0k/pv/Rr+jtzM9bGvl283eYe2l+VvXSdntJ/3zpxE79z9UNq
b3MQ8+9hYH0A5ZCs1va1d+un6XFzzulrslp+rrVrcXhW5vzg7lf/ZFLfY7pb
fLbq2Rh8Z2G6rj7VM3kOD8l82AuTfas+yeaoKycbWN16ZvoKq5Ufxrru/ub/
e35j/J0D2r6g+jBbE0+GfSsuax0h7Gk79iedY3HdwbV496e5Z9tzTJ7tNd6F
MaCMi2isYOPnm1PGPGvmHjUfd/LsnbhuebaaEwtrOysWhybTnm1ssjnRxiK9
209yq94717C/7xx55wuaT6vcjbvSa36n97b/ZH7jxOw/+0mMedL/twY3X9Q3
kuVyxFbfzUN2vTMnlbM4xHFTfB6vN3ao/YsP6X2ftxzL97vWx3paf9tle5WD
8lFuylM5K3/1or7Uo/pV7+JBnIgfcSXexKH4FLfiWZyLf+1Ce9GOtC/tTnvU
TrVf7Vp7lwfkB3lDPrnzzPhHXpKv5DH5Td6TD+VJ+VNelW/lYflZ3pbP5Xn5
X7+gv9CP6F/0O/oj/ZT+S7+mvzt9rPev9eJnP/j2+EGv7Tc6l+L6gmvu7kNz
b7bnlTzDa1yLe4yLxT80JrBx8s0dYz41c4yad7u+WDLs3fi0+ztDFK/F/dtD
E3+0J3B7CdNjZbl/1LNpG9PEd/XN49b61nHSzp7FzT23/Sc9v30e22+5cdPO
LG6dcmfe9rfK2Tzk/t5132qNZ2OzxgPZVOtM7Ee75uSav0snjV0e/dKn+z5v
OZbvd62P9bzXf+2yvcpB+Sg35amclb96UV/qUf2qd/EgTsSPuBJv4lB8ilvx
/CbMaxfai3akfWl32qN2qv2+ycaf/eCzH3z2g7/5/147Z+I6gmvr7jdzD7bn
kjyra/wKYzoZ59DYv8bDN0eMedPMJWp+7dpbnz6ZJOfOYiXDdJ3M63vHib27
NY7m8+vTxxXNE7b+3bfi4MYsy/25swHL97q9GGGzOvTTM8tR0LPhoecqa3FN
Ns6av6jOy1uws977vb8t58Fin2xctPiqXbdnofaddaYzD9ccXetb2V5zZeG3
/RiNd7zv85Zj+X7X+ljPe/3XLturHJSPclOeyln5qxf1pR7Vr3oXD+JE/Nzz
tpu7djgUn+JWPIvzO/5fZy/akfal3WmP2qn2+0ns/dkPPvvBXzc/+EmuXS9w
Dd19Zd73/JFnco1TYewm4xka49e49+aCMT/aj245hZdHu2d6fjEQmptfHeLA
5R7tmXiv+9ubni6qfzKPY5Pb1m2Xf726ufdyezn6lrldlwO0Zzc+2zhoZx+W
Rzv/MN+w8dT8hutZ95/KWJyv2hHfZyPFYGn9of0Uje22dtS83DnP9fXL17XO
lU6Kse99n7ccy/e71sf6vakttlc5KB/lpjyVs/JXL+pLPapf9X7Hw3AifsSV
eBOH4lPcimdxLv61C+1FO9K+Pok9ar8/q+0/+8FnP/ir6gd/1mvXyt0/5p5q
zxl59tZ4FMZoMm6hsXyNb2/OF/OgmRvUfNlhZH317u86Tmjv1nJqVE66bp6t
d+P9xU1qP9v2hs2+zv6s7zc2uji5Naj64cm3uTnz1i2/wObg4pTthezv4/Ou
4+7ksLjPi+nc//vdj/5lPmQ/y+tTu/f9fpJjOAozjeO6Ts61L+zFcY37zj6F
D684U/20nuR9n7ccy/e71sd6Wn/bZXuVg/JRbsrzLufVQ72oL/WoftW7eBAn
4kdc3fE2HIrP1+H2dXkchn/tQnvRjrSv+/m+2aN2qv3+PDzw7Aef/eDn3Q/+
PNfuE3Pv9P184s7YGnfCWEzGJzRm7z0vxnK7mO/MHKDmxY73xgObL+o6Htv9
5prGb6031c8PA4uZ3/2+Gx92Heem07BRH7t1sfhoeym2j8Wz7bW/e7UrrG7N
ahw+/j77Jv7kyTd2vbXHxXxezK/9LK/PcmfsucW17Ke9jcUcW6ySMBUO59eS
Q9hpj0S/29fWvr50GY7KdZosvO/zlmP5ftf6WE/rb7tsr3JQPsrtLs/JWfmr
F/WlHtWvehcPd5zoH1+HN3EoPl+H2zvOxb92cbeX2ZH29Tq7qxztVPv9tDjh
2Q8++8HPix/8tK7dI+25Ic/SGl/CmEvGITQ2r/HqzeHitbk+zX9dH75yuu7s
W9c987rruKI9h8sJurWYZF6d4/0w0D6M9JicG4c05xd3tJc+DkoG4W3n6ZLD
4o/GP31vuYDT39awWn9qfaq2V0brWGE4vfZu8llck/mLraVtPa22x6G9F7cv
12LfnM9o/SodhY/GDc11tt8/7DS2ax9hezfi0cZ9nd9KTj0Xv7YntGe97/OW
Y/l+1/pYT+tvu2yvclA+yk15Kmflr17Ul3pUv+pdPIgT8SOu3oQ98SluxfOb
MK9daC/akfal3WmP2qn2+1nww7MffPaDb5sf/CyuPR/kmVnjSBhbyXiDxuA1
Ln3tXa4W85eZ09M814uJtJjze3dnadcf7l3vr1+92IO1a+ePmi+rLV03rskH
VE7nphcDM/5Z3JGdjwsj4TGuH7/Hg8ZkW9695err75WxvR8bE1W+/mH58Jbf
rrov33AyaI9/9eudzqPFe/NZyb61vM6aJatyxBR7pfnAuDL7ifv729n385Mr
pl066dm42vs+bzmW73etj/W0/rbr3t7JQfnc5TZ53uU8+asX9aUe1a96Fw/i
RPyIq9fhrXLEp7gVz+Jc/GsX2ot2pH1pd9qjdqr9ftZc8ewHn/3gL8sPftbX
no01XoQxlIwraKxd48+bk8U8Zebu9LozWZXTuyd+5TmTdc5Xf3jNy505yg+v
vR277n7P1F+unOrWdWe+OhtWPcPMYskX6705s+a+Gg80dlj+ge3rjzPjw405
4tn2iCyXXTpbbJWNW+LG7QGpb9/1/N04u/fmB7Yu6P7K3mk8ki/Z3GHzeju7
1rpWZx7ySbWveM21sfaG7crLXpoPDHud686XtaeksVztrW35uDOX9+q+z1uO
5ftd62M9rb/tsr3KQfnc5TZ5Kmflr17Ul3pUv+pdPIgT8SOuxJs4FJ/iVjy/
CfPahfaiHWlf2p32qJ1qv79I3nj2g89+8LP2g7/Ia+NCGCvJ+IHG1DXOvLlX
zEdmjk7zVnu9uahiLS5eR7E8GrN0Hfd2vXi2PRMPF8d+3+q6fnHnAionLuj3
idf3rSsmR7wXd6aP2hrGltd8/BnHNI5oDqt7G7v0zNao4rDlbk1vOzuwdbF0
vNwW2+ex682pdi/u772+cc6i/cXTHGj8nFzq98eL8V9n/fp/bSx+ZfGy809h
vu8VlyRs5SOyrcZ41aec8OmnWJntqywGi/d93nIs3+9aH+tp/W2X7VUOyke5
KU/lrPzVi/pSj+pXvYsHcSJ+xJV4E4fiU9yK5zdhXrvQXrQj7Uu70x61U+33
l8Uhz37w2Q9+Wn7wl3VtTCTjBBo713jy5lgx75i5OM1P/c1v/MFl0z3Xvvxi
D5e78qM6PHKS/vSK39h199vD33Vxa+v7Fqd/+SmW16wzbz1bTNv+v7hFxXw8
uU7ee9H+jrDWXsDm0trnEc4ax8SR9d/j4n62Tte4xnNwYWTzeOl8eyXH19s7
0zsb/4SHfi+e8+JbbjyUXyi+cxzeu8v9k+zDVPNb+ZvkHOednKbvXLElk136
atzW2KD6ZjePWM7XnGbX5QEqNko6bnyUD2ls5H2ftxzL97vWx3paf9tle5WD
8lFu971Ik7PyVy/qSz2qX/UuHsSJ+BFX4k0cik9xK57FufjXLrQX7Uj70u60
x3s8T2Oa/bL55NkPPvvBn9UPvg3Xtdd4p4uRa9x4c6mYX6z3xxXmoY4PPtLX
lZMrXohjuh8vfCSX6/+NK+Kicpb0fNzUM/WnH/m6XzQOiZNOvsvfqx9/+bpH
Xuf8w4t3+FfftP0C1TUOjKPj5frMzR9tbnNnsfvb4qeMi3c2fGe8l8s1HS6f
QT/by7FzAvON5rbbPpLq0r1wnj8I8/Fz19Upf7Sz3488kFcOxzivtsbdj/34
11pVNtRYrDrF740H8gmN+dJl5Ye/ys2esp3GD973ecuxfL9rfayn9bddtlc5
3OUzuSlP5az81Yv6Uo/qV72LB3Fyw88TrsSbOBSf4lY8i3Pxr11oL9qR9qXd
aY/aqfb7NvDJsx989oOfxA++rdc7g7w92OZMMY+YuTXNNx1vZq+bn8yO6xPX
l44Xitcft8Qf45nDCe+8OH3m9x95mU9fuByX8c8jT9eV67lnHrm6XsQlcVf4
Kv5xP3Lmzp2lq/ZhLK9g/N883nzf9nWk995dvMz5va1Fbd/+xotbn3JP5MYx
ce3GKF33jfK2Lp95+e6Wzz0Z5mPijeYj8y/1/+OSOK98BO1j2RxUNtK8ZNzX
N5vzbH6ucV+c396Q2tl5+HTZel58Hhd73+ctx/L9rvWxntbfdtle5aB8lJvy
VM7KX72oL/WoftW7eBAn4kdciTdxKD7vuB2exbn41y60F+1I+9LutEft9G6/
bwuf3K+f/eCzH3ybr40Db24U84WZQzM5LK90c1CNM+LJ+LVnk0/7MpJ96x+t
4TeXFB+feC4fXn3sj8q5eCPOOdzwwYuTk+u3HhzywZfii8XArD/ee8cnvnfx
Sv3n1oTi6/Ys1N+PA/u93IHFc26dqJ/m5eLl5gfj7NoS5ramNe5Np9uzsX2Q
28eyubyNCXe+bTzf78qvzPxAddlekXi5urZHIu5rjSg9hOvkcWJkv3+twf3d
3/7OpZPmz8JVMm3+qzrkpxo31KY4PtuJ1xv39LfeyV811xafx9mbu959n7cc
y/e71sd6Wn/bZXuVg/JRbspTOSt/9aK+1KP6Ve/i4Y6T4UdciTdxKD7FrXgW
5+Jfu9BetCPtS7vTHrVT7fdt4JNPcv3sB399/ODn5XrtXX7GrpOVuTKXAyW7
i5Nq7+LJxJHtqV48/Pql8Up2XRyT5syy3dY54tbW/esD1+eNkxurNA/0EVZe
jlvi7a7jnuaZHv9/0e84qHFLfNv57sY18Wx55dpL0D6Pfu9sd+tTcWP7Gpuz
29ihn/Ht4qT1N+fgdvahsYvnHfp75Tb26J34tLK713PtIYhX49j4rtx5XYf9
9i/mU9p3cvr5P7h8SGOO5L0c5b2XDB97I/7oH7/5h9dez+VQ7P/LN9z/00fY
f6wfXfx9+PnkQkue3vd5y7F8v2t9rKf1t122VzkoH+WmPJWz8lcv6ks9ql/1
Lh7EifgRV+JNHIpPcSuexbn41y60F+1I+9LutEftVPt9G/jkZ71+9oO/en7w
83ht/i9zYponOntM/tlvukr+9V3jlPqry2ddH7Xr4bx5oObImkerH9g++/gi
Du2s8yN32RXvZLne4pbDO4eDtnYTv8a5/dSXb96tvZBxbD+tn6Tr5vrCQuOB
+K39jOHKvRQbOywW2Pb1d6//167Ft+x66375iMU52z7IMNUYI16N8zoH3v6G
5FI/Pzw3Pmqtp/PRzSH2k2089ixec4x//7XfveK8JLM4NBm2XzA/8l//+efX
/F45E/IdfbPvdCYtGWYXjzzY15xeY5rm7pqX+0ifT/tAvO/zlmP5ftf6WE/r
b7tsr3JQPspNed7lPPmrF/WlHtWvehcP4kT8iCvxJg7Fp7gVz+Jc/GsX2ot2
pH1pd9qjdqr9vg188mlw0bMf/Pz5wc/7de3yTPHyQXudPU6Gcc5scH3U5B//
NG+TzW4OZ3ktK2e5pFvfD/M7P5VOG3Ms71tnp+KSxjHxc2X3zPbJx4PNt6Wb
6t6Zsf5feXFdZ7zj77ilObHWiar/9txvj8XWphYHs+d27rv3PN/X3xvD9E7z
h/mF+vb5hfZWxu3xYDyfbOP19tfnQ8b5ySP+C8+1tXFYeyPixeTUvon2rTQm
ad6xNqx98XPfj68bjzW22Lhv/Pw/V070s3+j+crm9hrDnH0dJx+2933ecizf
71of62n9bdfH2/tKDspHuSlP5az81Yv6Uo/qV72LB3EifsSVeBOH4lPcimdx
Lv61C+1FO9K+tLs32ab2+zbwyafJS7+KfvD/ABU7FVU=
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3Qvctmta1/WVmlGZWVlRmY1tp72pGcV6n2c0MyKqCc3MyNDSyiwntcTM
PgtFRNwNuBsRcImIAyKOiDgqjiMi4og4IiLiiKMioiKOuENE6vle1/N/3t97
s+5xDcMaZob3/Xzu9z6e674253Wex3n8z+M4j833+tE/4YN/7Hd45plnftL7
3P33wT/qp/yAn/gTf9RP/SHf2R8/5kf9+O/7fX78d7wjf/Ld55fefdCf+Rv/
ndvf8tmfffO3vv7Dbj7j1/+bt7/xda+7+fNf/T9fpX/dp/1r7xD9yb/6X7j9
9Z/+6Td/4i0fcpX+lZ/4PW8/9bWvvflDb37lVfqXv+Z9b3/NJ3/yze/5vB90
lf7Fv+gfu/2Ej//4m9/xOc++KPoTP+Gfvf2Vn/iJRxuu0b/xdd/79re+/vU3
P/sjP/Iq/fm/5z+6/VNvfevNr3r++av0l/3R//r2w5975vY3f9ZnvSj67tm3
H/Wz/77b3/7bfttV+i1//L+9/Tkf9T5vl/6SP/xDbn/WR3ynt0vf9e/tR/zM
73j7O9/whqv0m//gf3H7M3/Gd7j93Z/7uS+Kdu3P+PC/56C/6A/8Z7d/6+u/
/gafven3/Se3f+lrvuaORz7t5ne+4eb2933BFxx9+Nt/239wPOev/7WffPM5
v/39b//Qm99880t+8S++cY+/8rZX3fyxL/uyRz/v5/6Dtx/z6lfffMLHf48b
9C/7pb/0rm9fdvOpr3353fPe/OiXv+Y1j4zrXR/e3PX7oz/yJT/05uf/vO9y
81fe9rZHf+lrfvxBO/7rP/3fuDv2qkd39LN3/XTzu974ikd3n2fd645vH92N
7d3fb3x09w6PPvy55569o5+9+37/u+nyDF7Eaz5f8xf/19s7Hr/17V3unn37
xt95e/vVf+5/Oj5/4c//L7fG60//qR91fP7ol/6w26/4E//drfH50j/yXx2/
ffkf+29u/9iX/fDjOPrP/OkfffvWP/nfH7+7/k+99UOP6xx33h/4wg+647v3
u8Wj+sB5n/Jr/qXbV//Cf/j297/pA28/7pf/U8eY/cW/8BeO/tPeP/uVX3nw
oPloTuEffHnXJ7df9Wd/zK1xK/13vvH/OeTBXZ/oy6MPvLv+Mw53fz/6NZ/8
Lx59qc/1p/6/Gxv9ePMxr/5ux99/+Is/+PYPftF/fscDP/AWb2urNv7xL/8R
t3djc4sX9Ivz0N4X/fu+4AOO6173G/7tW3LiNb/sn7zr56+++YNf9EV3/PHX
bszfn/URH3Fz14ZDPuAPcgwv/9yP/uibT/vUf/UWfzm+efozf8bPuPns3/zv
3t6N5cFv1+TeNdl1TRZdkyfX5MO1OX5tzl6bg51fzv873/iNN87Rf+aaZ+tj
13qWPv/on/P3H/fBRx/5s/7e29/0mZ953Odvf8M3HH3q/n/zb/yNu/d7zc0X
/6H/8rgP2ri5/6/4uI87rvVc74kv/79v+qbjuGc5x5xE7/jahsa7o8kE5/za
T/mUm5PnvvHmvn+P48Zv99TX2qCd7u+5+vAX/oJfcMgT7TS+f/IrfuTBL7//
TW+6eeaZ546589pf+6/cor/p7/z0g8e03zN+9Sf983f9/VHHeN711aNrvHGN
foqVT7HyxdDkmHa61pwyf3/H53zOE/QX/v7/9PYvf+3XHjy/eWdu4n+0OQ4T
//AXf/HB/5/3u//Do6+M5ef+rh9whw1/+qC9qznxS37xd3+CvpPbB1aS08VB
ch59h8GPjA25bS6QrWjy3N93uHgn8585MGD/jKd30v/mo485SnaT8V/we//j
A0/g45/9yv/xDo9+3O3X/qX/7fZtf/knHHPQXPUxjsPE4iAM/Mo/8z8cf6Ph
hN/hoPsaW1j7Wb/p+x74BxOHfXjJnIGPP/sjv/Mxv8gHcsH7ezdyzpwyl8kJ
ctMaxDuQTb/ls7//LV7Uh3hbP8G0u3P1x431ARy8e+7Rf3fnHtinv+7m4UFb
d8DHpzj4FAffU3DwGp9co7+1sPIdxc13JVa+o7j5FCu/+ZzFw47DO/L95370
P3D7ez//82/Id/iEV7XBcTSe9aw/+qVfekP+axvau5h3zsHD5MAlTRf741/+
5cdcLk0/o1eaO7/g5/9Dt+bfb/6s73dDd0KT5Whz3XHn/KKP/dibU9f50AMz
6YpwkVy/w5FDV4QJ9EcYRxf8c1/1Y29hOtn9ez//B9/qE+02v6cP+tYn+sJv
zvEO5rdv70xWTWfcb64bhoz2zL/8tf/7gY3OJfve8DseHTrpp/+6f/0O+/+J
29/wGf/W0Z/WCj7mvPXAnT534MMdj/v71jvTHb/ur/wfxzNhFgx3T/c71wKn
Lnw3nu5z9IPr9Qu9ujh41z+HzvgUB5/i4HsSDl7jmWv0U6x898fKdxQ3Xwqs
3LwzT/En7LvEQbIfzTa642Sde9Jp/sAXfuENWQ8r/8Rb3nJDT3JP+Ah7nO+4
Z5nvrvVe5o7n4nlz6vd83uex8d3CAH1Nl0Trn9LFwdlg0ey45C4cwWv3ePLo
+V/5zx3ziZyGibDJ3NP/9EI4rJ1wi26oP70zLPS++mXY5zftnW6oDxxzPx/X
uRfc8E3HdP3dvD3u7xr3giG/7bf++7e/9Jf844ceTc7or7v73rABG3PvArv0
q/eBHWTRJ/2q73UnW77rLUyEV6//Lf/eISt//s/7eYc+aU0wvfhO9jyabVl/
wEC4SL5ZE9Axn+LgUxx8T8HBa/xzjX6KlU+x8ho9XKMDlibr4Io56Di8gU07
x1z2LDLYcbxKT4Ob7u/a4SNZ4TiedxzPFxPhjfkOA0bTCV07/RFmoIe/ZIXj
sBJmGA9yHG1ekLfajrfxr3lwN6dv7AGaU+S+9pjP8K807PbxfO1h2xzOwUNy
gozaPqH5vo9395tv5+svc9u53nn3Hj4WB9mQP/5X/DNHH5EfZAYspPvhX7od
3ZHuTB56hnmOH+GRvvC3tQiedz0cnG7IHgoH2Y3dCwbSHZ/i4FMcfE/EQfxq
7fhX3va2G/sOeM6zy1fvzlj5UuxdPsXKbxlW4rvNNfJtNPkPp2BcMdHchH14
CzZ8zKu/23GcnEfDu52DJ0o7/2M/5h950DE9C665//TNPcs58If+AxPZ/dCw
svTwcfhLhpiz5o13/NWf9Ek3jtET4aD+1B57cX/tr/6kA6f0BxkCC8h/sh1O
OWaeegZ8dJ4PfXTYNqwzVy9p1+4YmQD/6IGObx/yb3/D/33oh2j7kZ55x1cH
HrKN6ts/91VfdcxR+6fmPTmE58miu2O3f/Xrvu6QMzCGjHY/bYOLxs8cn27I
f2i64ezGT3HwKQ6+J+KgfQXj6v1Lm59o/X4NE59i5TuPlS+Fn8+3Fla+o7g5
nYsOiDZf8AT+NK+N2eyco4eJZDnacefDODS5Tzd0Dr4eTYbAoNld0Y6jd86O
a4NnTfe8pD0XPUwkb/lPzs8GhpIh+pffDjspTPzU1778llyGv2S4+UzmFwdn
23SMzKdDmsfkFdlkP3E6n3mv34Z30xFd43rnwDjH3csz50/jPcx3tlm/uS8/
ml/0sf/oE3Rx0DuxA9vTo0NOfuo3GGMsPRtukyee615+MwdcB/+8t/flY/MU
B5/i4HsyDuIv++LFwU/4+O9xtAPvo617y3vX6KdY+e0LK/Ubmrykd+BtsuxP
fsVXHLxNLvLd1y+zQ5qPaDz/Gz7jMw4eHg13YJDxo0sNH4dHs7UO79BsrcNK
tPa5v2s9F1bARMedQ9+cLXe0ZzmHvKJrwQ28OLur42S6dpItpcl3fUd+zedl
sp4sIAM8F45N9g8H/e5v/afNZKVrYdv8SrdvSA8c7X5kqWPOpbtpK5mq/WQH
Pc4cNkZiUowPfc7chy/3a4qjr8gG/rvabz7oR3ouTIL52seW6h1LP8XBpzj4
no6D5gm/a/dC/4qP+6eP55XGx8bYs4uJjvMV0O4Xg4/vzlj5bRU/8t6AlcNB
csvcQv+mz/w+x/zDq457X/4W5Kd9PPMLbX/KvMCjjrsv2YjXXEO+4y/3Je/N
CzR5b15P1yM3HEeTLZ5dHCRnnA9np1dqt3PIe8c9l8x1T89yjnkKu4aPznf/
6cLapt/ps/oCpnoX8n66IT3Kt2vpnJ5PLpGJZIP563dzq7RzyQK44Nphn2un
B5rX5On2HBeT8Ve/7ice1zvXvIPjMA6WGDexD/pYjKF4S+3Qdrqte5rX9hKt
PfiVkr/kCRlCt8Sfrjd+T3HwKQ6+p+MgHoWD0wGHfaXtMaCNjfNnL708Pkws
r17j26dY+a2Lld9WsZb2nvC15+Ijdja042Ss9runPbU7rLjBl/rcuJCn5ij9
5Nd+yr980HQWc4QuyfZIHi5mkHyFlY6Tz3jQvcgT/OvdTgz4uuN8WFk9kc1z
+EjmTD8dDpJF9shmU6UPkhXTMfdcsst7mpt4fzLBtX/kS77kwE3y6PRF/eEH
rpGF2lbsIpvIgOmCYgHhuHdmm9EGGLq4wu0vDg8bY+h+i4V339La5vlwyj6o
PubbAhfNS36k4hHZTPWb64yTuQvfjROajyreJVuHfebQUxx8ioPv6TgIy4aD
21MfDuI/71y6OMgnbTG85jE+oCei8Y2xvMbDL4Z+ipXv/lhJhzC/+Y3Qn4zd
ffz1gRWXOGiumwf89s1F54jdQ+Nre04wUZ+LdyeD9RVa+72vfsOT+B3Wnnts
X37gIzsGLPIM+DH90dzB1+jNzWEfWbY4C/uSnm3OapN74mftxivmGpp8cD49
kZwxF/D7/bgetk57iXDNvNPexd3723PNU3KR7HKMvHTctdMNyQIyCd75zfmL
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
R0vDM++LN813PM2mAhvmR4on4e38S/E3me15aPomrPNsfFscJCt80PO98Qzt
dRzurt7FfHGMsbElu9WJsMdq7MgFctv44kHj9RQHn+LgtycctDd+SRcT0dMN
naOt3ms+oqWHU6OHg96dLgEr0YtL8o7TH/Wbcy5x0Fqb75ocF9bbk6H8vT1H
H5k32o7n8Lm+cp/Ou2tz8ClWfnMZYr8Pz/IF1e/iIMS882PBQzARn1mH4A0Y
BM9gjLEj86xTZpuEU+yXeNI3Pc+H7gaj4Br/FPwM92AcubHaRWSFY67BzzDN
NY5Pv1uuzdHwhe10eTrdB62NxnC4BydW92G5PRfPYJzr/2IOkG3GFE3Oz5YJ
E/EnrKATug6PkotkC3xAD9f8vVq77oU3zRn3Ke33Pc98mb3UPaY3Lofb/E6H
g671Lmh9Rv463xrW3DK25B1/JL62fjPf2G+3p4kmB/D7WYfig472eBfP0Q7v
OT9ZfeAdneO5+ngxIN7XNX4bbrvvaO9hzIzR8g14H/xkjiy3OdmxOhr2L0/f
qVc+wbddy9WmUTt/977rA1a/6MYK0fPJb3TjZ5tT4lq+webgbV761mdpzbLW
8Wxta/1E/nuG4/QA+G28jOf9/v1DTgn38dzT3n3ioGvxEh7QtuEOG8Gwz7s5
f3nmtc357omnnEMeDX+Hgzs+evnq4cYwd3iHdk/tH74bj7XNmOElbXAtXnLc
WhyNF4bFxsO7W0PjKf4u5oe1JH9w7bMfcCdnH3LDyxV/aRfFZ/AFz6MdH+09
S08HnL8o26n2TU+cnRMO6vfSxm7xvcVB46jt5L15ZY1ExyMvvIc+tcZ2D5hh
DQ0f3ccaXFv0y+Knlz+RfwVfQ+sY/GuOXMPHlwIrX4q9y5caKytbzC1952/6
zuruba2F7+CTv2Hc9uZm32TP9IFpZDGcgkv6hb4Gx9BwbjX2ZsMcDpp3MM51
i5drTT4fv5Mvzpne597mwvJZu+fqu69G/HQy9/XbcHA50fCuz/xi4ERx0G+O
6xvf8rOw49NB6IL6yrNc59jiC8njYTA575nVoWCH48MyzzHvyI756cwWulyl
dMzph9rinciXxTCO9r7m/OoVW9vQg9xDO+EDWlumA/qcsZinL+swerLGe2g/
2rP2LuS8c7TZGDQ2pDbe6Y3uPz8fvy2GxG+LkdS/5B65UP7smq12DPhI7nrH
2va7310fsPpCNz6oMbPNHdF8Ss0x2Fy7zT/fmiytw9J6na1hrc+GofpOvMti
Wt1fO5ZTgn0bfzmuTXiGXLjfw3jAVv2Kho/DNe+mn8l4OGi8tNm1q8niuctT
AR+NIV0SHk13Mx7Gz320bXrczhm27r30F5oOq3+Wr0nb9Bvac/UVWtvMdbJf
m/WbebYaavzlxFfZnzGGaoayfQz7YAJdkN/dcsgsnza9bzg4Wp8vxxqcsg+4
uPjRxb63h4NkAtpcxEPGxnrTMXqcdeRqpplj+AQWOz4/QDjI79B5eM911lur
Ic4Hw1rPPKAv88s/66M9/4ifIn97fcIH0fn+rt3mmg3n2wNWdo1dOcPOCIt8
YNx0OvtysMvvpeEPGpahYR2azLfWR8Mh2AUTffvNcTik7+Dl4s1XW2E1/IZ1
ix0fDk4fXAzdjjfmfPbD+ZUMH1cHwme20PmjzPY3ne83f9b3O3Qe3/qpNOyx
nmBjKw661/RBcglWkMGeA4+s47QHX5l/q0Hh3OmAzjN3XOMcx4Z98wmFYTsP
PTw987n+iIfcp3hJe+mt+mj4Pp3SO3i+67yb/sHL3mFxkGedxh/24BN7qQ9O
Jx3GuWY+SK7xma3Y+3jXfWuHd/C9PVTjZ/yNfXnSsfVR12m1XdSe333t+nrV
/7lxQI2Nbb6I5k1qLsHm122e+dZeaT0ydOtyjm7dav1H5jvunmQzXNDX9nq3
p39fT/JoA1wlB8lYfaGt+p5sXn5desPqnZHl1gSedeaN/uQncFD74ZQ1hDFx
Pgxa/evZfkcXE93HPfXpnuU4XnZPzzXeswkbd21bXW/06ruhtQHfwpHVYjPm
sN/fsO+uX9QHe3RfO/NZuOfDNw8ewED0YgDn/zm9bPg1jBsOzv65PbtLunuF
sM28Ikvp58s9BbdKO8dz0MbLe3lP+iC8g4Xubb1h7Od3z7eQTxt5Tt+Fd/Y7
7vhNDmH9dbyjGjPrDzFpcO9ubhz6oWPOgZ2uVVONbejso2eevYaP761YWbtT
196VOT50Oz4q5M+OORcWzj/RMZiHbx1fvbzpgea+Dxwc9jle2re/XT+9zb3J
Cte69+45f5DZGaf3rXbfaO+1uILl6VxNh/lobuzMxek7ZM+wkPzHw8M1fU7+
wgvXoMkkvA1nzIfVLaJbmV9ww2/eZ3jhnZy3vYzVctLm6onFFB/H58cKX53r
o33avuPaNl1UH8I71+rf2VzdB39pv+u02Xt5JplrHbp4xzNnz4cc7+M+2uwZ
fvMcz3bNdGbt2T6o4/pzPjzks75w742/dvm2Jpp/FHr8OD7s2qw2itrtu5dd
n676OTf25zIGdnkhmiuJbKJv3Ps6P+QPbG55MoJsI+dbb6U1yC5rVa8u2Gg4
p5+dDxO3fwfz9Knr4DI9996Wc2C955N/eO5+T/LBdjo7rfZMNyTLt59IJsMa
9Pbyqg8WH91nuLn7ON/Y7rh32R6f82tT1Qb3wTPTAR2HIcYN7zmOXr9pM34w
NnRgcgvG8ks3lupCT++DCfDA57SHvvrAQzIfNlzGOMwvdHVktKN0dUDHrYHm
r0Jf256ddtLRSpsL5Ks8TuYWHiKDF7foPew9eF/9UprMxkfGhW1XvpC75z6y
pwHX4Bkc9M5+/9TXvvyIuabv3ePl8b54Aq0fzrwj+uetz46GfbDSPeAjGibe
fZ7tvv81H4CXGitfir3LYmL3YmqP6jq8smgYNb1sOAhvVi99mNj49eXLXD11
f6Mbq+6axckN27RjfiyLE9fHridHyeDVLnKd9i23ynBQ3+Hj1cOd3jG8s46b
fXIxC+0T151r8A940ANdR76zGbrOfpr+hYNif8wf94Ut5phnupacLg6urhLM
8B7O85y1jd40rJ5t1n3Ns+0RasPy1JCRszt63mIJF6vo3rBMPwyzt1dJdk43
9S7TJffc+Qi5DzwlA/zmftoDdz3T93Ts1RWuTXv8NBuAj/FcDePx1fIXjN+6
Bqstovb57lnXj4s8hWlkRn2bG/dqbtDn+MA0F0TzIzVnYHPnNp98a6y01ljr
b7YmtX5CVx80N/G6Z9znUrqP+f7cw27Grk0XJcc9k0w8/X5fdsQl0SP3XqfP
0xfdDKfIbDirr9zTcz0LZnkH/D8b6eyT1g2uXa3q6YD0O3Nsfi/az57nfc9c
8F9z3H/6pvf1LtrnnsM+uo5x977WHMbbuy1/Pt3K2oKPE2zRTjkz6HdkNZl9
rwO+//QeOg65DgvRcAEO+phv0+Mu6fp/4g8Yb64aI32H36216Pylt5enfeat
cZw/KpuCdzPHPOfUwx/TnodfjZO1GhzT9r0H3ZauB/fgunGFbc7Bf/6GXfAR
DsK+6Xre37Fhn+vcZzjoHDgIQ6cTuud0SDSc9dxrfnHviVhZn4Tuy9Q21TV5
5dI1GYX/p0vi29kwl/tr+td0v9kwp/d53vYEh4OzZw4TzVvXaOuwcTF1jvl7
dYjIafKc7IZRbEbmkPsvB+j0oOlfxngxCMbxkjb+7kc/Gi/QDR2zhrM2x//z
F4WX87UmW2AG26lxgBdslLPvnXs+P/LBZlocnP3PNfPd0Qbf2u853mnxF/Mz
NUeH557tHt7VXqbjfif7HYdp2rY9PrjmHM/3nv7Wf97NvTzHfbYW8cyNu2/j
ic/wz3jCWC8/uL8X/7J11Gzl8wHGK29v3eV7tojZ5LtPXd+t+jA3rqexrs35
0DxIzQ3YfLnNG99aKq0v1jqbrT2NZz1j/px0TnuC+t85ZKJ+gBdwUB+ftfLe
eOCgd4DHZDQctNaH22QVnch9yTHrf7rLmX/wI27OPLZffuCI57LbrT71mUfz
8x5smDAI/3vGsA826Yvh2rCS7c4zjO9wcPfXluGmPsJvztd300/1qXGEB3RG
/KNP6MLGcf0Ad6ernHUE3/js3fw7cPBuTO7/fmwXnc3w9JE+xxw+4O3aNhcH
sXgE46yfp8eVNg9r2zSO8J6MgHfuSeY435iVnp1bn1tLaQvsgk3eB34Zy9N+
+VFP0Nrub+8K14ZN97kjH853jG4MI60Tth7AC2jPu9cjH/REa6dzXfHMgZfs
I+7pGvZm+DhMnF5tnpw66GufwMf3FKysn159FbpfUztV1+qVV6uhsFyY/R69
/Jfb95tsK93P6iuQg9vj87zh4bBy9xvtezi4Og/ThegndCaYRQ7s78UIzG7n
vfG1a8gytD5Du8a36/iTLNYB7VqYgIYtq8MCQ+hb7CalyYHFV5Bvnm9vjkyf
/VPfDgfnW2KOzl5qXvodj8zP07kwETY6V5tm1/W88Z124x3nwGLn41nt8w3v
2IBcP912ucDJALywOP2ujzauW+cYR8dmj0Zrv+tWV2q4ObxbXeHar7e+eiGb
w9Z024+uj1b9lhu/05jW5nlovqPmAGxe3Gu54ltH7Fptzdab9i5wF20OkqVw
UL/BQXrB7IHuNTyCC3ST1SZzLgwh2+i7p6x7xbPe46w5+dyzdBj4T7ade9tv
ONq2fcztG5LtZLT+337c/FtgbnFwWAn70PBuPjYwxLXVAWcvXT3Q4ezqjWrP
apytNqg+8e7uZ8+XnkRusw3CenKYfIYd9KfTvvfcYffTD3DROJ0y//lH1ito
ctw89Sy4hjesdeB3aefo/+3x6Wu0eeP4Wfvt5YedE2aXZu80hmy52g67YRed
C05p7/bvYMklPX3QdXhzv537fa84vuEPH6DSwyXnsJVvbxRP39cfPuyow1e8
q79ObHv5ga3zqzltq695pN894z5f5dG37rl+hqd4a35I1+Kq3h2w8pKu7/rs
aPVhuNy7mf2qa/jKrvme7DMZthp6q6M+eTm9cDKOXFxd98nI0avht/p73tv9
fJdenb7JXZ/FReiv2TLhBtwZ3jmmL+CesZtt8hIH50sJU/TjYgb1GxsH2xis
oBdaUzrPfFj9Puf4zTyiP8Ia7+l694cvy0EzHNQGY+HYbJ6Nux8O+n1+q/Dc
HGbbnF44HXC5xKePstlqC3wgo9cH5jS5tPx1xnt6+fZrm+tNG2e7nM8u3pi+
b7z9jgeX/2Zrl/oulX9mM5htofb27kHXF6v+yY3Z8c1+Ci8bx9ocR1ujw8fm
/Wsu3OaHb52U1g5rPc3Wlda26YP6j7ysjdTxxRXCRO+rrfQg/X7mKXnTIYe1
bzg4X4nJee/inewjsRPCYHLNe+FH9kvYScenG8KsxRKuRudwcPuGsG++r6Wn
D8Iq7XGt+7gW32jz9iUXG2j82GDZq8/8GF9/PNfYwD7YpD/pvM73bjDNu5DF
dDuyd/6P84WBgX4zNv6Gi3RA56CtY8jz4aB+pseZC/p/9k995DfnzHfFvIXJ
1gml4SKcZ2c2ZnRc+qxnnfmQ3/qAv3CjtLWLtp32zlccGA+LZu/UZvc43/mt
z5aefZR+5xmwT5/ATe94rxPenD4yrz50zunF2jC89OzzPidunu157qCXz1lb
YSacLQ7CZ9/ao11o9lX30i5rlWLiNfpdiZWN4aofe335rvkzdE/n0q619Xxl
2vJ++Szf12oQmf/zdRlO7tjwrnWGev3OWR32F8qnuf2+1Ttafk5zUr/CKfMf
Lmzfz1gs9s3vpdcHs53OTri9v7Om02Mc1H+wEb4MB80juqi5tlwTcNj508nY
URdD4p285/xhhomwcrXrYfDG37toq+dpj/daDOPGddimDedezsuPfWJyVr8s
T9xyty4/2/ZhyeTZn6cLTnff+mXrm43jct/MT2m2h45pbQejL+0JtauPh+p/
NT0RXZ/kxuk0drU5HJrXqLn+mvO2eeBbG6U1wlo3s7WktWsxXZ6pvxdLOBz0
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
6e/y2vuY/Lcd+HzqqI/prZXun7d64A/x7Npq/TQf0NLz/fGs2bmnA5/jOF9Y
ut4ZUzHaONFlYbs1HT5eDTp8bj6QL+QWnRx/z05WHCQv8Ja4U/OZPLNWs6Y2
btZyjsMsY18cdD+0eYNvrf/dx3xlN8MT+Hx5VouD+Iq9mq3c32z1+L+5jv9u
eY8v6eaEbC6s5gNpTHRjweoPX5/A+kJ0P+iaTax6QWXjbFuuGR7O93N6xTCt
tYq0e3i5mrbO9w6zlZJD82+B5ejVDCwONv+ne/gdrY/xAWxyX/1tLL0b3cte
nufDJTog2u9o96T3+9uej7UxGcPmcO43n3No6zd8g0fg42yW1tmzWcKy2bSN
nbatztMwcXuUw0S85B1nX926aHnXZuPdPuLwEV5uD1RfDOuWT2Z41xzg08v9
trHwd8e3a57aAWrzrG28+8X1obr0JZ5doTGnzb3QfETN0XeZq3b521vTpLW9
Wu+yNaDPWITvdOCNcWOnZJ/Tj8MpbV7OT/eZDqht8G45ZxZLOH0Q3mk3vCAH
lqd0OcToUvbd4KfnwAc8Bv/I0NN/bz4ML7vXh55/9h4nD3sjTHQMDRNPe9nz
/DFu5l9CPrEZ2kP0Lssbpv/wlN/xBjk5PyvfsNCYLWc1XoLp2s03ha68OIZh
n/XE6c/yxmcn/8n900f0dYuNf8BMuL24eDi4fTF9MR3M+y7+XD/Mn2Z2Rfec
b+QZc/C+D7bTU0d8fjbZB+zbveHRbK7DXNe6ZuNw6nunHndJz7/lfpzu8fbV
j+abufHb3lzpyRLtWn5Isor+tVgsf8M8cqp0cZCdnw3UPt78m9g0jNP2yvEg
PrUuKg6Sd8s3SI4s3zvb0/KbwiBzw/qnOGgeWv9rA1lnHek5foeN1nytCb5c
iufewAvXArhGN09y80M2R1bzhFzGRy9GrH7y9Q+sj8TlPtHsY9URKie3/ze7
3PxYJmOn641eDmp4rS2z5e2cxRfMvrf8YN7L9cZJn7hu/pTLe+a4+8CR+VgO
B51DF7S+8T5+Zytz3Dhau6zein1A93MdPuMzyPYE48xR/G9O7tt8cg35YHyX
T5eeUXpxhdpcHFxMPHprGRhnbOaTunzbsNJYze/UOOgzdmDtH27OHuA+60P3
2n6l5yy+ZTbn2Uw7prOPe17XOdX9aw/vvnB9peo/3Diay9jS+lw1bnW+pt3v
bp721i5pPS/YyKem8Rc+rftM/yKvyKXpZfaSzpw7bznky3JykhvaY64vf6Zx
p09pMxyc7XS5ZbTF+WTB8rqQJ2ddri877g8Hl1OF7Wt2tDN31isO35Iz1uxV
9/HYzzz4DW6f6F7nerb+D3CbXVT/zo/KukB/6nf9pa3GBCZu7mnz1qj6y/n6
gJ2MfNRvsOP0/XjmAUOKfd0vO/PAvN/9HtkbD1+X6Vb0vvlQev/tk93HfN7M
/2S2xPmfeO8zzuSrH/b7ho90wOHj4/3HVz3oj4s9X7zi6LM/X37g74lzj+nH
9s5XP8T67Zrp6dMjT9+Vx/S+6XzkDR2KfMGj+rq5+c3f0luD4B/rlDOfzecf
+XitQ6wdTh++1x1rO2ssPH2/RnjAwXt/5aNPXes67+1+zoH/bAau9Z7FQWt6
z9IXsMQ1eIs8nT2cbKZXXuKg9SNeJEdbK7z1UmGkddpl7dTWC2ie5OaKLN3c
Wc0Z0rjpxo7VZ75+g/Wd6J5R7WbVHS5xcPuA89OYLJ2P5+IFqs+O3n4YniDb
va9neIetAZzrfbTBOfqH3G1c+WIKyG7nTh9cfIF7GifrIMf1jbWOPlt+uvmL
usb6ityy17J98vt8f4fc2Xw//bXe+IiskL/CfeZfSobi+dWxmJ+MNm894130
wXxGYRd8s1ZffjVzyDgOQxdXCe+Hm9OL0csvurzixmVrEvTGdb4z2tdx7Nqm
On7t3t0Lrk9U/YQbO9MY0uZVaK4hY4oXh7XLv9ectPOvgXWX9UpWw6t1LVvf
WX+vFiX9jywm08zH2RXPPYkvOfxJvAtbIhzUD3CA3Jm/KP0SjY/og8s580I4
eNZ0fdMDDtIH4S8/xnMf7CMeYufPva7XbX/o0X3cwSFXt2c0expe9Axyyad5
feZr5HtrH+M7W7f+ZlvTZ771F1vc9Gp9hnbt7DUnxr3v0VZYeG+nfPY+T/Qx
R6aLnT6X7/eEL+XyqpDL6OlfiwHvnt18Y5y/eIT5VbqfOblcYsM4/aePShcr
i4PwbjEOi0n3G3pxf9P1hvHn55z/o0+d/Jl7H8uvPvCG/J+9DY83r27p5US0
FidDrNPIDXOVrIIh+p1sQZMRi50sDtIH8CdMcx2eoO9ZR1vXLw/48lEXB/E7
2pica/8POfZK3cO+73CTTmk8i4PsZ3DP73gcb9NTh3fmQuuGl27t1NaPaw2d
1g5o/uTmkGzurOYPaQx148gu/edH15+wfhTdS6o97VKPmCydjJ1uOBz0Xstp
5vz5jphf3sX7Lt6OPF+NI3i0/T4Y5pnTodxD38A4bYJreMg98NSZ2/EDDwxh
49RvziF7ioPzF8Ur+g/+zMaJl8/4q3Me4ZnZe8zTe5vUMQfmM6MN2kdOGlvv
Zm3HhmDtrR14WZ/DIrrbcup5T78vZ9r2G9c2/adtxno1JuDF+EHfbi1hji3P
wOwueOiFMLF54baG2Tm1b3fPt35Qy4vnuvoGN250NbNgVHMpXOYXGm8192zz
sbdGSWt1tX5lazp7BiykG26v5Rv/9k87xsR8NF/ZEukk5OZppz7311aPr7Hh
8M798dH0wR33rEt90FyfPmg9bzzIEDi8OPrTtnfWHYB1p33uZffxXG98sKed
cdTPH7qJ5595xr/noVvALe+Fl9Z/853DU6sVas1wxgCe57t26wTtX8wmbISJ
PtWr+cqQjz73e4HPzod/e2KbJ2cetJffLE7e8cUDzI7p+PxG50u5a9mpHVuc
HjyCecU+1w2PTlvjGRteHFwOm8XmT9fbft+wdXRx0PHR2+d8jLNnnDyegWHm
4/qMzl16eZUmF81tc3bxUOyS5vrs0qWLg+YI2U6+mN9spWe+vzOmmI0KTfd0
3+KgteP8Csxh9yGv4LL74k38bn0H/4qDsNKazZjQ9awN6YpsamSk9sM9fG2N
V5o+4Xy6X2uIz0cb77eWXOnLejqrKdC8ys0n2ZxazSvS2OrGlNWvvr6F9ano
vlJta9UpLuXqaOevra6hvxj36TvGbHte019W+8F1sAIWaItj04/Q5v70Prqc
8/UTHnD/8Ym+YVPAA9prb9B6RD+5N1kIp8gxHxhjPF1LPzBnrU/u5+cx/879
+Nc8WizQaHs697lMjnyV7gV/x794h1yeLkcmzfdJPxhDbfW7tYC2GovZPOHE
8snMR8i6bOsf5+GB2cfnp7P1hnPwgnOsG9yjY9R1y+zTp0/HY5t293nr+1Qf
4MbFNFa0ORPKf82t13yzzbveWiStz9U6lZe1mx03793PN1nkN3KJPG/+XHte
7KJ87s3r+7zUh/yZj6V38RuMQ7MFzTcGD8JB7SN7rHE9a/6g2r/cnqdN50sP
nPVca2C8g8daY2//2LHm/0++LResvaTFVjruY71qnIyn8Z2Otzwa1gP6St/4
bXq1+/h9MSyO60vPcP/54vrAdnztc+pFb52fx6P5VcKj7bWZE937GyYuTtz5
ZN78Shfj8kJ4Nx25WNnze5+dY+2w+Ajn6OszNvGN3wwH187pquda95kH+zM9
it6EN8iT7R+Urh0e9i2/5XT0+ZeRU+ZsaTw8HwbzlpxbTg/yhBwzh6fnOE6+
nLngH+Og5xlnvG+9Mz8y82b2Fe2zJpqNZjhor332ce0hD+AHPlq87373vsVB
GMO3Qrut+WAf3NMueO0dYKK9eVhYunXGW1eudXZaX2D5LPVFcyw3z2RzbRUH
G2fdWLP629fPsL4W3W8q3lXXqLxdzjFjNb2W3PY82KM9k+3z/ZiuV3p5z/St
a+Ed/NKeYaK+YkMlm7yDtdBZE+4HH+OCf4z3mYv5ux73cZ21kHczlmeujpcf
+Ol66xjjYJzM3xPjnjtofobGiQ5hTvBxMI58B3wbN5jmGXCXrYLdwBp7uUTx
5Pw89ZV3wf/GZ3Zgx/WVd9vawL2N++yo85mZP4x3Zhs3LvhgOLh95I5L1yfV
2WvH7n5ufZzq99v4l8aENk9C8wU1h17zyl7Ltd46XG+vNuX8S4eV5rdztp9I
VqG3pwgX6D7e29jjT7zCX3L+lua3PRH3J/vnI4p3zHPPwTNsUJ532gM+7SHu
3prY+y+P2ZkP6A2HLct6eH785Pu51/YK9YaOPCerJaHdnr8c5b6th8wL38Zx
8bjbG8VrZN98iLavuvwHsz8vvmXxLot98Tsc9JmN1Mc8YffwuY9rfDQcvI8Z
P3Bn9sTiTvGoOFU9rvrdpc1zOlltp9Uln9QxH2PuNRyEm7vP/EC1iR7+2C/3
MQ7iA2N2Xxfz6FvrCX2Ej+jXW1vQoeenvxxepVefZvskZJ01Dt0N9hkn89r8
d5w8sVYvDuKD1f9x79lF8Mv2ELaPMP+z4eDsNK7detVcGX+gF5eBB4uD+Gn8
s336PW88tNzBswGNngyYfmU9T9625nhrrZZuzZ36SDTfcnNONu9W842Ubvx1
cbC+9/U/rA9G955qf7vUQSp7V9PW/WAime/87W15F2PuXdwTrX+0ha6EP4wH
THfcsx0781m88rBtnuv1H/hghyytP9HO985nTYLvcsh6/WRdRQaSe7DSGoVO
SHYN3+ZLAfvm7z4cvPdvP/5mQ7Cm4W9hHODh4uJ9e1+yeDWWhn3mgj7ZXvnW
A7ONO8e1w7jlatPf5sZyl+ovY+T9zaH2f9ck1c1rr+4ebn2Z6t97GfOyuJfG
gTZH0GprLdZp+9HNJdv86q0z0tpbrUfZusyzu5qf7rf55xnLqVR662D6DjlG
ppnr3WvGg/RBmOQd8BF+WNwE2r2mAy52frk68Rpd0pjQ/Zy/vNR4ip2IfrE6
wqvD6J7atlxP05vNP/xgLGd7Jsem03mH+dVuz5/cnW+Ud55PTPd557NLFm2/
sPog+T4cNMfMFZ8zR8yZK7s4Unwp7iwfy+yf9Vf5u+3r1TemfjXdZywO1gZb
nbS6arG77e978VXhY8teWL1YP20tVRyEFbMpb422enaLt17+RbxujFdDztww
p62Ji4PLRTi/6e11zcZibLffPh/s4VLXhOP/2UK2Nl3ezGHicNA9p8NuT3lY
Nv7bmnXrtX02X+dX4H6LU956ffXK4UTprbvnP7karK1DN9njeOnmYe5cbg6u
5iFpLHZj0OqHX1/Ea/4Y3ZOqXa76SGWyY8Z5PpzLWb3Ydrqz84eDaO+02Acy
HJ65FqbYEy4OajuMJaecA9tOv6sPPvBoOiO89eEHc9rB/9rhs8dOZT1O97Nm
5wNvHplXdITSbDvwcXUO2M5h4pkL8QOOexUHt49t31B79CUsxxeLRdzaZj5C
6MXdmyOLubAesSbUP+SjvltdjO05rp+79qg+Xrt092rrv7Qawotjbcz+4lwa
+9kcCM0L1Fx5zRnbPOqtLdIaW83b3Xym+9v83TzcvuRwcfkkZnvVnuVCqEyw
riXP+IUsf5vj2maMyCTjRxdw39WxWH5peyeegYaD+N040+n0Nf5iB5oPFYyE
V97vrDH44442eFd/r2+Ng/H2/NXo0OblSnRNc5hPv76M711ep+3hNoZqe6mr
0+b90dMHK/+LCxd60wPe1cZY22P35opxi92je9XPs/6fjY8oDtbvtH449c/p
fuUlDiZG/kG3rc7bNUD7of1jPKxFWuPV+mH69mqRDw9KFwfdcxi0/fDNl/lz
DJu61zBbyvBpNVyby2l6j+/x9nBQW3bvHWs8VHMojocu8a50c244DhPMZfxc
evsoZJDjk0etS956rKVbk651eVqb4Fpeyubman6SxmU3Nq26Z3Gwvhndn6qN
rrpJ5fP2+GCQ/p/9s7R7Ohd+DC/wpH5y7fK6DCv1x+pBOH8xEdpiP4P/1vYH
2c+nA64ep707eEmWWavzkyDjzjX+Vx17vX5b3km0OJz5jZ92lyP3x0O96DOG
9wOOnCF8ia2f4S39gL6or9Z+faUvYb1+3X4oGbj9AvyiP+Hq/IVmO904t2+N
yXKldr1RHbx26e7P1mepfryNZ2mMZ/MeNP9Pc+LVB7X50ltDpHW1Wl+yNZen
ay43kWdtTk63GT3MnL1n7XJsNout4+rjs7pRs6V6Tx/8Zey0x5yCce5pfPGI
d4F9xnh1YP1GTi5nELlZv6Hty7t2fTv/W78t3wXcIr+Wk3wxl1tfNJdFc99t
zT4btPeZj9L2ASe3K8+r72yP0PHaBmsz7J5afU42H8yV+mfWb7NxDY37azxg
Y+Qbe9iYxMZoFAfrv1p/nvr5dN+zOFibcHXk6s5dS7Q/28/DmX6mZ3Wdt/3w
5iAsDs5vbL7bw6btmQ0bu1YcDg6rhrfDutlSt47cOqo4uLm02N/l2tx1xcfh
5r53fPHprZk035ftyc2HZ3RrlLc2a2vVtUZP6dYpaI5Ke2v2Ms76nY9zdjVX
SeO1G7NWX/36K9ZnozhYe111lsptbfMNI1w7/xDnaBu9T59NH0RPZ1xN6jOv
8Qcev585rR7T+n5+ocVBeEKP9Fx9cdYuOPMg85U6a5q+36HT8QmkEzrOLmbv
iCyAnfZ+6Hz2hFdf2l46XZHdFO5ZAzvmXD7VsNRcW2yjNuGD+fnMtj2fn2Gi
cZm91Hgt54xx0B/kcvuz64rq2rU/dx+2vkn1120MS2M5m9+gOX+a+675YJsj
3TnL/9O6Ia2l1fqSrbO82ivDiuXnm9+rj2O+3WPn6L/Se0bn1Wwi6K3Ptz/p
Wv1h/jgHvuEJv5GbeIhMw8P4jbyc79rk1nyxt2YdvZim7cUud477De98zw7c
PdPJn8m+remb83DysDmBpqegt39am15tfd0Lq6/IWcfg1Q8xg/OrrL9l4xEa
r7f6estRttj2xrw3J8xlzrTmpRkONma/MYyNbWysR3GwfrDV+4p93T8tDta2
XF27OnjXJKU7XsXB4ZlrF8s9vq9Ne3xRHNyew2VezMZAzVa+Zw6r0OPT4d7o
rUfX3uqBW1OWF2cDbRy6e/ugu29CBkxPXN2F1dGbDtja5aVbt671elq/oHmb
Sy8Oj9xr3pLGbl+LX6sPf/0Y67/RPaxLO950mcpw/UHOkOH62f3Iav06++H0
vp0/v5bZQtHu795kk/W7fTr7O+zCfP1gnd/EuJBX7FuwCe68kN8uGhZa7y/H
Fh9A19MLxZ/CRnh4+st8zrGff9YM/bDjes8XR6pvvK9nGndrB23wXvP5Qetb
eqJ3XD8YE+fTc43jsL791rVEderamS/3XueDVL/cxqpci99sToNr+e6aA7Z5
0VsrpDWzWkeytZVnd62e6JnOWQ4m9/Rs125ezb7ib9du7rjn9Ffv5nvX42W/
O99znKcdZIvzvOd8tM511Icd/QXT6WvaaXw8Z/saW/d6/uxX7r1Yv+U/JzuL
YduDXT79ya2t/ycnKz+rX+x+s4/WLrdndA+rPh7FgvpDNl6gcQSNsysONia9
OVuay6W5zpoDrXlB57/v9+Ypbd625nN7ofw257Mex/43FrIxko0ZKQ7Wn7b+
RfU76j5s6dqoq7NXl+/apmuejntxcOM+W/jsI+MVfLhn4aPioPNX/8a7eO/V
aBgezScU37pv86IsZmoYuL2Qzc3qf/MJ2n12jr8dX4ze9mCGldv7G724LbKp
dcxbw651fEq3lkHzOTenZXN5NZ9JY7oby1Z//vo01pej+1nXbHrVayrbF0cw
/QXeLe8Z2Uyfcg5ZC9OWHxvWabP28q9ynb0MOqPf+Omt9g3cW7vtJZ7v+fHH
Xp+4QetDeh/s254gm+lyIjmPXQxG8oGYjzA98fQBeNkTcTLsZcZu/qtk63AN
H83+iX+0y5ph8UHeV//Mj7r90zVD9ejlzzntsY9ty91vrQ9SfXEbn9KYzeYu
aD6f5rhrrtfmP29NkNbGar3I1lDWJ9sju6wt4v6et+dsHbg8Sq6bH9d0zeWa
w8fus/Wm95zvmPd3njnhMwz1zMWiawvZtv16MsR5Z3z8idHea9jhm/ybb85y
qc6Xx/hp49bSix2ZfKvcq14wm5hrakPrHlP3nuqbMV8KbagfY/386//f+Lj7
/NH3+SQex5I310pzsDRH2fKds4E2n2f9Py/zYC82v/UjWsOiOb2Lg8132vxv
zQvXPDnFweYQaExlYy0be1IcrF9u/ZTqv9T93NK1dRcHaxPoGqlrp/JPcXBj
P1xzfOux+X5vj8PcmX/b4r5HD+Os6RY7bN5uj2LzZLae6XmXsefea/NzOqL7
zE+GXFz7nb/nbm08f83WNC99WeN1de5a16B5LK/RzfG1vtze0+K7G+NWP/9L
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
r+Fp6dN+cdYlaR3kJ+sjP64XWbq1tFpbpDVHmoO9dPPTNl9f8/g1r1Hp5nxo
LojGxjZWqDFE9aOuf3X9zbr/3n357k10z6I2nK5pu9btfK8cMGfdH19Pd8MT
cBAfX+KgsbW3TO63fnrrybaOXusmlG4e6ebSbA6x5lEpXRx0nfUff5T6Ul7z
J+meWu2K1aeKKY6Z695Z31njwX19hN/9Zm5Zc67ujjm0ut3sE+wbsNC61TsX
B8+43Fc+UWNCn3hP53o/7YRT+tp4kedwiFzWB+RR21nsrj7rvcVjGLvaeOv/
gw/ICfevT2zjRBo72RwCzavTXHPNudo85K3N0RpVrdvYWsb6WZuNHf6F0dps
HrkWr+sT43763D7m5/J514FdH9ZmUltK9xq6F989+vqt1Z+t/t6Nh2qcVGOH
G1PcnBuXOakW0zfb565bXsfmPW4+5NYLuPdZOWRKa+u09lxr0rVm6+qVm3ut
b873kV8o+595CFvEyT9Z8+LNjxb3t1rw5gFMXN2Vs47Rkavz2dUKtKY0NxZH
5Ljzz5iGDz3mF2w0z80DPAr7ZgvCY9ZieMg7W/d5R2PnGvK/eIeGU5PtO66f
yRXvP7yDZbORwgg8htYHpY0HDHUO3rJ2Jh/wOMw590Cem//P+5e2Hzqbcusp
t85y606Wbk2u1ihp7ZLmci/dPLfNf9t8gM2PVLq5I5pTojG2jTlqLFL9seun
Xb+17uN3f797HN37qC2oNqKumSs3Kk/IKfwC7+x1zcZxra56a8u2pl7rCjWn
dHNplm5useZXaVz5tTg78xMfmA/1Len+Wm2M1a2KL2T8sGP4AjdL4xH2APfB
7zDwvP/rjzaQI2SBd/NeqzGqrfMH1/baMPAJPtQObdOOYdPGom3TZrLJHCte
V4etXbf7m/X5qR9s40EaI9m8Ac2f05xyzbPafOOtwdG6VK3P2JrFjp21PN9y
/56fedi4yoflz67fYI614HxEZ+uoDaR7BN1D7956/c3qh1Y/7cYxXcY3Lea3
scDNldH8US+UY6r2z+3vzc9wuLj8G4uTXm0ex1oTpzXjWkuutVb1Jd6wLmtd
cmOOX/guL/bX2sr97aPos63TYaK5/th294rFIzzUPFpNh3v+f6DJjsd12o/4
wifyydBxlu9l8YDwCf9qNxwnw/CSscEf/jZ+5Jx5PbsofiWX/Q6HLvHO/CZD
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
lrOIXDWX9C+84rOCR6wvjKMxO/fIjppFt37Xh/gKr+pr7+AeeGT2f/cjz813
z4F9yxEIf+c/ZB7hoxNfn3m0fSuy+lyrnDbMxQMa3+HcbESLlYDP9Lqz1u1r
Dh0Hbs5XBr7iS+tax+cfsNqc7ke24FHvrX14xBwxflvH6l/vaF7qe31JNpCt
5BBMMj54aTiINo+cb96Zj5c4qH/nL3ruyX/azRkP/03HHise1M/OhylnzZnX
H9ikv+HOmZ/oDcf9vYN+PfNpvO5mtQ/PHOBHX7//6mXoL/h95hv+7se7m2fF
bvcvzZagT2AfPDpjeT//sHOaT3DNezlnet9o77hcj/jTu+A/c3M+rtbm+s+a
tvRqbckToE/MT3vXrWHd+p6lL2ufzaesNWJaO6a59IuDzTPcvIvNx9j8VMXB
5u5oLHNjnBvzVRysP3z9A+s3WD+K0t1jerJew2NbXHWTa/nKioONW1++evPs
mt9mcbB7drVbVncrZukvbTG/PO/00frkQw/2PjDJPe3N+e30/fmyQ281j2Eo
fut9iq2XOubsrt2LrE9O/VQbu9EYxvZP+63riuZ/qw5eG3Vt193bbV3F+kHV
T7j+w42vsQawdiJfGovaXA3N4dAcR/PVNl+bD7D5ci/z6E7+N/98a7IsN+Jq
Yo5urc/WAG1d7OVx9Mzt75mT5KH2emf9tT1vH/2I9/QB/iJj8Jv+wHPW3Mv3
ZZ12Hjv0/WNemh/kGJnven3lGuOsXWgyla1q+yjauTWAtlhLGdfTH/+MTZs9
07iiz/iF5x74Y35g28/D+6dd9GUHDp7x7m889g2nM+IHfHXqQmce0Xu/gkOv
tIZj59MneE778AiZvjgIvGH8yW1rM2NKVsGt6dJnTbQPOvoc7fgL4SD+Mgc9
i/x13Nq12Kc/6XqLE5xuuD1Bx+k8Z226z7s5azR/7SG/8Ix5Ax/JTfc2Z+jZ
p1x67tnNVXPP+2mL/ij2lfbcU9/9ogfsI1thzllH7k1Hm/ETWVbae3kG+cMG
ccZgveHh3fHCWTf0Sw6ZXBq+aqtxJffnO89+zn+YLxV8WU2u0ssRv736xfm0
LnbrhF7Sw8HWVmutmdagaU7+4mDzFTd/Y/M6Ns9VcbA5QBoT3Vjpxo6Vrl99
/Qzrf1h/jNLdqyoO1qZXHedaDHtxsD6cT/quvPBeXu2Z1eOKZZNDeKQ4aJ0O
B+CGPma3gXc9vxhavbL21e451g/n3rb4UK9m79X37XqgsfzVnWtbrs25e7Kt
kVH/pfr3PllT+HFcjHF2H+uJxpA2x0JzLzQ30XBwPLxY3Oa5bf7b5ocf/1/W
UiEbd7w1yFqjs7U7W896/jCr9eAZrl+eavc297QFJulv42Y89dn2uRwnb9ix
8bj+tZ4n22AA2e79rSvZttzbHMI75Ij1p74iY8xNayiyl15pfMnkxcM4X3ud
tzU6LPRcsvye1x7Whfcx6oedbnZO/LS5dtZof/mBX+bHagWaJ+izfsNbDz9/
mIbeOffy86DnD748aYuDw8tbQ5/7ka84ZDg5Y2wWD2X8Hfe+y60Bn7ZWnz5o
PYGGfcuNNhyEN2TsjqOHj9srvLSLzmfG8dlFzY2dbywXq2iOnGupLzr0R3gz
3wXrDn2pz61373PkPLvYB3KEvqIP9qzVO12MgzkFR87Y6C94gp4O6JnwcXgH
b/Tl4kRm1ym99T85sb1IMk2/nDmSn3+E5+HecoaP1gb+ynRE60T852/8yR5i
Lba6GK2RsZykyw3YOsOtr926261DWhxsjbbWrGktm+b2Lw4273HzQDY/ZPNl
FQebS6Sx1Y25bgxa6frn11+xfoz16yjdPa/iYG2D1ZWqQxVHioPd16s985p+
V4zTNrKfbGFH0D73WR4ZfNVzipvXbKptT9tZHG9cRnXe2oRrK+5eavOd1u+o
frn11208S2sHN/azuRGaM6E5hcy1xcY2/17z0zZvbfO6DwdPm83juietEdba
Ya2t2ZqbrUO9GAi/zW653PXzAV9s/XL5uu/yApKB3vmMlX3tfX7M1z2Mk/5b
TS39YC2tf6ztyPzZQsk59hCyHE+Rud7LXDQHzbXZ+qynyXk4CBPNX7KS34I2
W7POfgwnzvjYT9t+8YPeN36AWWdtvVcff597Fmdu0NM39Iz3wzMn77zuwMTV
yvV91gQ893yHg8uhDV8XD3ivNx7Pus8TerTLGsw6xvtZJ5FV5hc7HVlAzlsj
k29kFRwiH4d92+sxHvP9Gw4O+67hIHnruvnGuLc5QJ7PXoqeLXS4Odup9sIa
bcMLjuNLY2/tatzJEXIFNp768KseeSbZZB4u3nDY5Df6nfZ4DzQ80Q/mKQw5
cyG86WjDmev38w/smw4I+/SneVx6OQHg+2nH//JjzpPFMM9cPm0Ezz866089
ppcXSd+zia6mhjbAPnNa/+BLc7p0c92uXu/qCG8ffflJYdrWn8vNOxw0/1ab
prGHrd/deqbFwdZ6a+2b1sRpjYDiYPMnN59k80w279YlvZwkjdFu7HZj2UrX
z79+j/WHfNI/5IXj3IuDtTFW56ouVjwqTlXXmz0UX93bcQ7b39ZOse8cx4uP
vU9xtvhbnbS6am25tfF2D7T5auovVH/aa7m+W/+iMZvNadBcB80FZK1qrlnn
NG9e88o232zzsZu/+H91JVa7pLW9in2tibkazqtNufrR+HYxb8O66YPbT1/N
3vnJ7HnzD3UNPcscW156GH/WFHvz0Sf6q/WYF7+pL0+59/yxvpgOiG/JTv1n
fi1fCzlvjpGHZ72EH3TMAeeap/y7yUdxDbCd7kEGmefmp/fVNmOgTede8bmf
t7p746th1olHLzv451xTnTk82Rf8zV7hvNMG8IqbYZtvdk33Gva552yhj2PA
3/iQZ9t1ZD5soFf6fTY5soAuC4PIfWNpfaAvjKl1sv4y7rD9jKX4oON99QO5
ZK2E36YP6qsXg33DO8dLexbsM7a7D5lAfuvjcyx/+EGTS+7vnvxPtNkYmofm
A3lkvnk381dfnHvVbz7kARoPaCfZ77nkGNw4bQNvOfCLXMVT2kD/cM78XvRh
afojOWuuwtD1tbbBT88l6+9jB5+gTzvudzriN7yPdYpxa63J4R5/0dIwWjv8
vdr2eHY5AJfzfX5iq43iUxw05xonZa6by/O/WSzF/D+Lg+7jmsXmr95364C3
LmpxsD6xraHT2jqtNVC6eZibl7L5Kpu/q3RzmzTWuzHgjYkr/WTOz8c4WL/K
+plci33o3lxtldXdrul9xTv2QL/Bi2JicXN2z3sb2YOOefoXvOKIM14Mke/u
XXoeGaI99fNpjpr6xzZ+RHtPH/dXPJHfe7Ys92iOgubwaY1g85VuZw3EVkVW
4YHmiW0edfNhdsbWH1kuXuu21upCT5dD43U42BrQZN3qMq/uvWfBM+eyU6wu
4TB08UezkW6vHL5tb3F6pXnmvo7zJ1mtGPN2Pt7myXz2yG/9Bxsc04fkBv7D
h7Dv9Nn69EPvI5P0nbUD2WaukOf4Vt+aG4uVcw7b0+rb0vvIsu3xe/Z8ls4Y
9u92r3c9f2DfmcvyzHsBp2Cjc84Y7TPftXGe38tsBfcY+hDjgMfnB3OukZ4/
njG9EA46fvqOnvdfzVzXLjYG9uA7c5hdwPuaw94Fj9N3yBLHzBHjAEuWG0of
6KvVg9Zn+IWc0a+OGxv98vb0vhfCwWLf4iBO28srD910PjaLs3AfegCswFfW
NOYAnjNnrdHx0L0ednPmuf/oYx6Swc45419OX9b5dp6+rl962FrxB9lWHCRX
yVQ6oPOLfc7Bc8U+fUL2kamlteesA/Bhh3whO8gKbdwesXt6tr4vvTqJX/83
f8pDvcJhH/xebneYCCdLFwenJ66OMHp1VJY7ovWeioOzqxqT1vBcjc3VoVou
m+Kg62Ynat3w1hO/rK86+rL23GrxtEZPaxaUbj7n5rds3svmASvdHCmNGW8s
eWPrSjfuoPEI9c+sv8o1f5ju8dXmeU0HLF0M7X1Kd/+x/jn1X61fa2M9GgPS
GMnmEGhugebeaT665qlrHtfmOW/+89YHad2Q1tVa/eXl+Vy9yNZlbr3m1nHe
Hh16PinOx+d4Wh9YRy62djaXYdviLlY/iFxYfjXvqd8Whz/fHOO/3KLWituj
3/6CvvMO89N2zmrNeP/t1c/fxppyfq1/N3o+4/ri70Z792u08VqfXKNbE+/F
0POJNaev0a3hc40mu9z37dH2k5aj6xqtXdZBxusa/WJ0wGvYdw0Hh33kiHci
t+iGZy2fc6/Nmst6x/p6tkdryXPN9wXHWnjPna3yrAPzpkOnM3/NcbxNdpJl
nnva5M5cMfiaXMDzzoF9xcHlFXd/fTK7qzkNt63/9QEMhH2Orf5x6dO+/CXH
WpxfDHso/W6x9PL5eS4MtD9YejlvYabxHfZ5l+0TGgvz2ViZU8uhVBwcvTpV
q3PReN7lKXSP4uD8Z5b3ngxZ/QsyarXgJ4uKg56xmketP9665K3Tekmvht1l
TZ/V+mntg9LNC908mc2f2XxipZtrpbHnjUlvjF5j9xq/UAwqNnVPsDrdtT3B
6oC1hVbHLM4Wf9uetrOxjY39b26c5sxpTrnWsGj+1eYnb97y1vUoDrYGVmtj
kf2zG7Secusst/4yHoUbi2+drjd/Fu12//nJ4O3GQThPO4qD5OT43vHFXcBB
6zjv5XnwEY/MpopH8C0sW70n70Celp6v2lm79Yc9+KI57mNu+N19PefdGeNe
DK69O2NcaWNrjsCL0i8G+16MDljs877b1ymtD8ggmLi9QnP1rIf3Fcd9zv2A
rzn2a51zxk592rEnuNyp+PzkzS94oOmJs4Uu/n04aL942KefrXXJK88iD7z7
WVv69YcM0kY6hbV7aevp0+f9mQMTzxwkr3+En8xrcxz20f+Wx3Y03QrWiatf
LiR/O659ZMl0weWMQK9W5nBQH65u2eylq7O4vcTWYCkOTmfEQ2SAb308v9PG
G5IpxUHnoec7il4umskxvIHfFlM/2vnuwT7WOuatb956r6VbC6+1gVozqDUU
Sje/dPNtNg9n85KVbs6WYkp1rvqI1lbZvbxruFa9r1jZ87vnWBtsddLqqsXu
tr/vdZmP9IVydDfHeHOPtzZHa1e1plVrPrYOcusjt26ya4eV7g8HrbXM99Vz
dS3sO+O8f8SDDjdfTvwzPxrzsLZK9Pb/Vs/Fb/PnxEelzaHVP5ptZ/Hz+hRf
mu/aOOxeHO78ZJzruebQYnWHg6srAePNne1zP8W4lw7jSps7i+cp/c7YP4t9
13Cw2LdYDHNw8RrO8S6rXWgcnQNntME8JnPMqdMn8bRzbv4XBxcbOB+Y0asX
zL5pTtAJvOMlDmojG6z3sF/JD336IBu2c63l2badS0Y5Xvqb/s5PP/YG6Xpn
TvKffGCeuQYD/Y2vzLHVC9bWYd5wcPkEHdOfyy+hn1c7czhIpywOLtducdDc
0OerDbO4xMZfLLZ3MsHYmePm3WSBeTq5dPoAPKaXv9R6wD2XB9wzXLe8NDte
evZS65jLeuirk966saVbU681hlp7qHK+dHGhulJtibUxlu7eXP1V6sdSLLtm
O60uWQytH079c67FD3ZPs3bd6rzNQdr1QOtTtN9ai6q1Gi/rF6/G8XJ6WG+s
do+/jaOx9rc5uLUTHoMJMG61NadnwbXVvd0+YOnta9M/8Rj+xDd4b/tiZPf0
x+mDbFHmynS25QddbXdzZLHtW39uz95vq0+rz7wvTISP8xv1PquvC8uLg/Px
PnN+/NCj71bL/inGveO49mIwrjResaa994l7oL+17J8vBvuu4aB7wmJYph/M
IWt495mPTXGQjD/jzz7/0PWGiWjHl7tGG14IB8kD74KXtdEepfcgX2Cfd9Vn
fNyKg9pOTjmHjmpP59w7/uSHnLT83GAhXc/88b04wdHFweHYcgXiJ38vt+Bs
o84btg0Hh4/us3NWo2y5eZe7ZvWuh4OLxcf/s62aZ8uTD/+WN9E8dY/Zhrb/
QpZt3U7OON/6f/b26X2lF3s4LCOr6IyuXT302UvJ1dLa6x7bZ1xd9dZbv6w/
O7o6Tm2Al7bB7Z2Vbr7r+mHWP7PxC9fwqzpdbZvX9Mpia+//ZMzgY7/W+vl0
r7N7oLUJV0cuDnYt0Rq+7We8tlxDaHrbagKSL/oUFsFJ9ymNd2Y7Xd1aPDF7
++Id4LQ5ip/He9PvhgXzicHDs0MuFwR6edHmX+p8ODXe15b5Wrvv7CvmiHno
b7wAEzcXVyt+NcCHg+7huGeXNo/nX7r9ijPu+Uc8+MH2+LtyD+7bA8aVJrPM
V3sUpb+17J/FvhejAxb7PMua9JJ2zrBsz5qfDLyDj8ZobSgOmhdkDFsonrD3
R04Yh+WaMp/JLHKqOKhvyTfreW1c7lny4r4W0OGvY93ORmr+GzP3KE0PXE4Z
60k4yIdr+4D+pgv627m+/c2fpThoXpY2N4eDq8c5+hIHzYvWdRnOrUb2cND1
ywM8HPSs+aC7DzkDz7bnQs7MTkXOuHbrcPN+Nk884Hdy0H3m5+A9piOUnj5I
f/Qus0FV3lYfKV2dpTa97nnVJ6R0/UbqV3ktt0xj9BrDXpyq7lZ75rV9xuqY
T8ZBPI4N7LMa69FcavWDLQ7WX6h7prUhX7MzV++uPt71Scer44g29/ADHplP
FB3OsY3XbI94DybMzwRW0sOWkwyWedbwBj3bhWuXlx6Po08f8A88vmefXFz7
6tyS4aVnj/Guy3mGv9DmluPkf/OhLY7Je8H01c52HH+5ZvmbtHm4tr3K5l57
inHfOhhX2tqNDuP80u9K+2ex7xoOFvtcC8uW94zMQBcH8enasHpPzjFm9hzn
m7o41eIgeUnOkFmrG0yueeZ9zY1DVrjufl/wAQfpl+SgtbqYiTPv96seLY6T
3wwbqM/iJvCTvUKYiGYnLQ6O9ttqNtH1zDHH0ObCfisOtmbnfEDNGXMTbXyM
9daUxcHVD11c8GIqyInl7nbv5WokV2AWW5brYCPZ1XqmZNJqOXmGY2Rmaee7
B/pSTk53qH5Rura47lXVl6M+HqXrD+k98dXqzCyOoLF1jT1vTHpj7YtN1dFq
t+xeXn1auue4ueC3a5jb5zYPQOnGRTZOpPEj9adtXcL6HbVmffdk8VT199mu
q79Xx+86p+NeHJzPlXNWM9rcXb7P5QVdjMRiwC9p5+CV6Xf4A98tz3btHqsZ
MYzcPLnEwa0rF9O7vIfWrObi1rbmuW98Ze741v7ppa5brQr327OWF27+bO/J
GPdicO1diXGlrcHxOJld+hr2vdT2zxeDfddwEB+ax6sXTKZpA74nY8zn4qAx
XDwWOw5fBOtzWEo+oM1tNHlTHDxzgJ0y5cxZeeZ4NW/dj/yz91L/mdHso3AQ
9l3ioLnCRmqu+aC94/xHzRE0X5viIKzcxzmbn6tTtnrVq9dSHDR28z+dj0xr
hi4XDXli/jpOZlgz+3YMJs4HHJ8aI/JqfguOk6P6H486p/Ktcq82sdrKSneP
qXtP9ceo72Lp+vm3Dm9j4hoz3ljy5lopDjYv2bVcNNfiELtnV5+W+uHUBtu4
vyfzfj/G4uZMa+7Q5sxpDoHmFmh8ZeNNGodSv9z6KdV/6XI/Fw6ecYKPcRCf
eGdrz9oESuPP2di7jiovld9cuz24+cb4rdiH3v64ObOc9cXB/b7aEPt79SA8
s3POfDWHV/d99SHMUX7i5rhnLIe++WL+0EPx++yf27PQzvrnrDaF936Kce88
xl2j8ZC1ITn+bWX/LPa9GB3wGvaVxsfsn2dehu99+AYM++7rSh14d8qnD3kC
B8ki6266gHGHg46jz1xZr7g5azY+981w0L7KZCteN/fJksXTL1aCzjfsM1/Y
RWHc9geLg/p/+uHmW+fc/kbPh6afxecvXtDH3/UzHT567tbJ8xMwP9xjMVHO
MefIndmp6FWVRe5rzsOrrucvbVy1fW0/iPyZn3x9KupnWD/80vXbbywbPDdO
5mVjwK/VImw+sebbbB7OYs01/as2ye7TNS6j/pz1ySldHGwemGu43LypzSPX
+krNt9Pau81FAN+00ZxvzGZp6ye2T+c2zqW+vvV9qk9U94hrM68t/dK2sPXV
5RpsfFj+HPa5X2u3zOdluZq2Fmyd3NpOVmdwdV5mQ2mNQHhIJ/Rx3HxbrO9q
JdUnfHVifOs37fJ+w9vV6h0OPsW4dx7jrtHaACPoPu9M7MNLbf8s9l3DwUvs
0xbvaC7BNXhXHKQ/ONect35d7S3n6PPljTntTx/wBA5a16LJJOtgss99PNM9
rMHx72wspWGeGAqf4qB5Y67M1wWmVb8blg3XioM9V/9MB5ytdHuKo4uDqwVK
f3LN7KWVG5UnXWN37V07Vfduasvq/k79H+orWP/5+tWXbgxa49S8w3K4kc90
kTM/4+OcJ80D9mSezMf5M5tfujjYWgzX8pRey1FzzVezsQz1U61/Dmynk5FR
tdNWVy1Gt53NMV66ecibi7W56Zqzrjl8mtOgONjYT+NofJzTuBi8gZ5P1PyH
60NVP6vuNdf2Xpt8bRRds5Xuuu6Sz3d8uSa6lz7cm344LDQ+y3PoPHPLXDSn
HV+OCveZ3We1ZayDi4OrC+V79tLWKoTr70qMezG49m2FcS8G165h3DXa+tse
GbnwrbX39660f17Dvms4aI4b67P+2fsevnnW7s4xFuxjxUEydTn+HXcfcmbH
z7xS73O7PCClyUPv6l7LL8o+Cr/sB8I+NNyDhS9Eb3+wObV9lkPGZ7bPHZ/O
t3k47DM/h5ed79vzN56VCV0z16bUPZfVVXuhfZn5LdSvr/5+9Ye/9JOfbtjY
6sZcNyeJ48ZP3zd/V/NbNu9l80IXB1tD4Vrtwmt1K6pndd+t9d/rn1kcbLxG
6fqv0nPc6z6fzEPes9pvmx+7ON72t55ga3O01nzzlhcHm9+1Oe6a86e5gJob
obGijSFtTA1e2jmNu6kfcn2x6qPVPevuZdeeX5t/7R5dB8KxrRE7XzbPyMXt
C27+bB7i29VDW8wv7Fv+qPmZwsDlEzbP5+ttrjtPO+ZjM51zexnLbfoU475l
GHeNxlsvhIMv9d7fO2P/LPa9GB3wGvaVNt+MO9lpXWvsYJ95jLbHg95+T2k2
HdeiVzuWjco51s/6xd4gHFR/sPTmi8/sovPRvtTfhn3T93Z8v12eM1+Zzd+u
abvWrS2oNqLuodSvoPpg/fHqp1c/9sZ2NearMdGNlW4ukebaIpPJNjKz+bia
r7L5nIuDrX3Q2kCtGdSaesXB1jGsDtUaFt1rKw5e88lsnEJjGBvPfs2XtTk/
r9lyWyPp2ru0bmNrV7WWBzyx7tDXzXlujP2Nt5sPtnlijaNxu8yhh1esKfkq
NddQ8y00J0PjUi/jdOa3XH/m+nd1j7v74N0LqG2kc65rSLy9T+daab9tPrrX
5t78voeJvhcXDPv87Rs22k/U/j1nc9K8WY1r/fYU475lGHeNpkvf1wx8l8Y+
vNT2z2LfNRws9rUf2j/FQbqINYK9JFi588kO5zifPYvspR+Uni5ILzQn6IPi
C+cHOr8Xv5kjpRf7sPm6+de51nVpbTWXNpzR3fuob0D95eo/4LqdU//zxmc1
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
nNmtKbG62NYkXHrrFm4t3611v/Xwl97eMdtPbXuPbk/S7dO9/burGeNdiuPz
bksvDtafzf28Qz7EcJB8W9o4wyL39hu2NFj0Qmf54fn56JkcAvGRL8b6wMET
Hz85bH3mub4PyfO17y0OXsWBbGzk5gvc59A9VlPlsZpjnn9xcOumbh25+/59
xZMsDpr3ctWtk3S+jSNa/6lcSHR1csPB3T/c042n8ZO7UT0KflRr217Ie3gG
e59sH/ixHIpqyFQDIdw3zvhp+1o6b3GwPSB+KjfCcbaO4lay7RcvVv+G7cW5
/Tq3Z9ljPVz6TXEyW/d+6+FvfeDi2mDd1k6k7+X72xpTW2dja3FsPvLmZ23e
1saxf1Vc+65h3BXuLP2h+v6+TfvnFfZd4eDWRLqvGWj/Wo2L6K3HuzXqt1fL
F9PbZen7nmjhUNchd7bX9tKuS9e79+O4hmv6f75BY2Y9w1dj5rny9UTXYzSa
/PRbY5LflIyrTraYx/xj+G/pF/P27AUvPTt1mz876onRf1ZWr/5yZdNbP9fG
fiwOXuXHbf741lG57yn8WL3N7cWwdcUXB7em3NbV2doCm1N52i7//Igh2rwS
v3P9M97yZXzR+lXVLrWnUMdt9evdY8BDOgr7Kd+k3BLr2Zxab+5jTNzrrCf3
r453SQesXlA+Vn/Dh/ixHBzzga+8O561Rovbwo/eHc/gq6Xxo3GwRuuzYuyL
Xdlc92wu+ce3t3W1J/INFk+2PdEWB7d3zNbP33rCW2d46y6SPWSJ8d/6VHji
rPfzz1+p3WGOza9zlt48r99h3G/TV3i09FOoe/aufH9fx/55ldP6T8G+6K0h
v/bR7cmyPcuWLqeY7Ni+n9sX27X59zzT0uQFOVu+Hj3MMzsnGVs+luu4tnOS
RY4Z76XxT/kSxdSQg+Gzc8iN6tEsna6Jh/Irwic4Rx6fNbH/7DkbH1l9JZ9X
Z1k73vqzNsZjYx03F2Bz4hYHr2qnbD2xqx6LV32Itsb49qtdHNzaAptfaU58
e77NMdk42401Wh/r2plX1949xo65ccXj8BSfeQ/3rvdEfZZ9V5c7f+jS5aLG
n94ftsW/9fPyzvgrPISV7J7pjP4WhvZdvmF2UTKqOBcyrbz6cgizg4aD2xfb
ucVh3/cMpfPBvu2ttr1mtgfN0luTf+sVbx3jreX4WG0revvWAHlXGPcmuPau
MO4Kp5Z+ynXP3nbuw9u2f17VxX0T7Htd/82tV/83t37WaOeRCdZzcmTp8h7I
0OovVre/XIb8fvArf6a/Le136X5kUXjXM4Z97kWOLd05xqiaWGxkzuk61ZLB
I9VnOfWXP3/ou5D/Cy6uTF7dZO117guzyJL1Z93HNxZ/cpUHt7nhfotvyKp7
HHyspvT2XNjeQ4uDW2/8qv7qVe0deFGdls273Jhb94Pt/KAbd7Q2Z/Gzxvf2
edC7dx+y428NsdGJRXUtNlnrwZ7Hc1WL25pwj+ppVxc9+317Ou/ZPgrfGjfv
H+/lz3YOXMRD5fu4j3lwjfZmW/ev3Fz3jS7O03c+QxiYruez8Wnu5bfOcxwG
wrzttb29R7cn6fZoIyNhl/zP7WVz7sX+4yEPt77x1j3eOpBbH/J3GPd6+iqO
5X2pe/Zt5j68bfvnFfZd4SC5UUymtV5MJvmcjWlp5/g4xzxWox9tbryf+5Ah
cId9p7qhflf8Svtov6/GjOPuX5780mR7cqjci+qL+hsZV60211zatT2vuU0m
092MubhFc8anVU74lexd3WR9VRu/cRXTuHH+m++2OHhVH2zrZ24d6cXB7TG0
fRi3F9X24Fgc3PqrW3tn6a1FsDmYZHIYszkpG4vrufL/rk92bdFXe5KdF+PE
vkQPzWd61pD7F4cOWq2AbJjG1vqs5wheMofFR8d7+NM4tZdDpyOaZ+cXG7N0
NSTi32qs5R8s7z28K0eimNBsnniYvgfjXN+YOu63cNC4ouFhucHsoc4hz8gP
+vb2794epouD2+tte9+YK/LzVk/ooUfA0uYLTWZ+FzDuCteu6Cv97n2se/au
fH9fx/551UPzq2LfY7R38jvXK+bcHpusKR6UP8l7WXtwxfnkK7llzZu/+vDm
U7yn00PJl3AL7V3hoPeoz8TS4aDncC/v7l7kR35Qcpk9DcY4pz284/bTjsOw
+jKsvF1b3Ov8U9kzN3Zx4/k3x21zva2R/HFbE2xx8Kp29PZT2P56i4Pbi2r7
cdz35qg++dZl/WJq013VJdjczM1P2bjcjU1a/+zapRcHd3+y84Lv4J41DdOa
i/Rxf8Mz3sP6M86eyz2Wbn/k/vmjjaN3L3fe+5bfmn3Db+CUd8k/GN4VQxNO
5g90HOZVyyl7aJgI++Ch8aLj4Wf4hn/lToj9zA9YDIxnMhZnj6iXOGicxHje
09vjm9yl98G77YW6PVLve6fWS2776XxTuPa+Y9wV3j3l3Ien4Pt7V/bPxb5/
DAfvsa+9sfOXNlfsKOxXZ52tnxzjtjQZ4fz6meIJmEBWVAsGz7hutWKiq9lY
Hn3xq8W+kgX4J73S+Pib35C9xZLm/6LLuAZcPWPi/tmhl+DFlbGra6z9bX1S
G5ux8Yobt++3xQJtfvfWObmqA7a1MbdXwuLg63rq1Wf2qlfj9umo7rRnXfqq
Tl0xUOjN04wHPevmqiwOlh+T/zJf7dqrV2e/2rekY5I1npHeUv5s7964GUfj
ad2i8R9+73h9Bjdmprz5ar97Z+eWO1ju/OLd1uatDlM5tOUGWg9ym6pzSLer
phO8W1oMqI/aaC9w7LCD+q0x9ez4gayEcXx89gow7dZD+YjD5RO0pyNj2D/J
HLZQ8hANB+mQ9HJ6Irm0/cTtpWDiF3c95n6Hcb9NX+XCf6h1z77N3Ie3bf98
HfY9hoP88MZBH4TqXp61oZ8d9iy+HuvF2rO/L0eebF66GtxktO+lw8f23fkQ
o9tzu04y1vXIm/I+4Jq5gWXez3zQGVzbO8G1laWrX6yd7cr3tPEYG6u/OWtX
Od0bH7v1vrYG5lV/hO0ZtH30Fge3x/r2alx6e1dtz46tW761W5feGj5bu2Dp
zd/cHJaN4934pfXhrh17dfndw+w8hoPm0Xs4xi7tXubI/2FddOug/oPhYLbS
xmR7x1dPrZ4q1ZiJhm/5CMsf5PNzneJezLV3pjc7H7/Cu77FvdAFfdMDFwfJ
VPEv5C3Z8b++/PLokUw+qVsklotsoef5P52b3IKP4rv8xhplp4Zr8JE8hmu3
HtCHr9DvzR95zI+IV/gIknv1H1/6qWHcm+DaN4Vx9zEwj+XIP+Xch/fd9/dN
2D/z9z2Gg9aRZzt9WH911NSCfZ71nJ+fHR/jZD+5tHl0PTpLuVXlHlYfjezD
i2TV0vUlra5auJbttJ7gxTcsDlY7sfql5Js5cU4xNiszr/SItbOtv2njD6/i
8zdnbXO3t57JF1Pja2tdbv3nv5meCIuD2y9ve8gunb3acxh756dT18t4+1jd
09m6t5751nGtD4h3rE9yddEfy+WM3po/jm8sU723nLc27dXldz+zc+o568EE
ez2vOV0cNF/Gp/1ANH4rT6fYGfNVrGg2+dZJNSDqM1jfafPiu9jQYmKyi5ZH
7xisWxws5/3+U90J83nWU/zFsc8kn866758+P2u5nnGheNq+VB8QeEe/g3fo
s0/mHx42f2uZzdT+Aq2umjEl38gr80UOyyf0zu5hfZ/r7ddH/ow1xvbKX/hd
xrilr+pmv++5D0/B9/dt2j/5buhw+IMcER/Ct7W0OTz7sX/v8DnYS5oL+QTl
lFvz9sJ4YWnPWfx62Fa8OjpfjPPQi4PZRZ0PW8sVLFfZu/pdeYmrH2UbTB9J
Zq7uYByNQbpYPqaNtdj4w43D39y0q3zt+gK77ta33DrPV70PtjfQ9sjbvrHF
K+FB5zieLTr6qq/x9rQqzgUOLr11zre+69a4Kx7YMy8mbl5n/GtMN75345qu
7NtL7z7naq69DxnBz+tYtR381nj0DGjn1msX/xQv47r40/tml8BrxiYcrB9n
eqDj1e11rBgY2AcD+fjwLfyj98Xf3hdf+lhfS1tb4oVejOFzvtViQa1L8oYO
SI60H/WuZJo1it+LBXMv9lPy1Hupj04nRDvOd7g4WH8mMtF7kvlhE4wQS/Zd
xrgremuKvi+5D++77+/r2D/JWuML6/jEzYv1IPadHmj/Zz4d9w3v2EmM0dJk
h3cyb57Zs7pfz1zsQTVult5aVel9xiFd0jl4qb5Ni4MwltzxPs6DOda965Br
cG3l4ZW+sL6kjanYOMOr2PvNR9sc7a3ZdVXTcus8b7+D9gLhbL68z6dP+tLe
3bN51zDC/erZQYZ7l2Igl77q+bj9PrbO+dJb727r/DxW66D6e5v7Wc7Lxv1u
7NP6f9fuvTi4+5+d9/YwdPxyd8iJYo74vurBm67ansFc1w/addDGqz7S8a//
5xOsRszSi4lomEgHZBvl86P34U17S+uNzKC30fXoab7FzfKV+ht/vPehh7G9
4F14RY6ddXs/P/ajnt+aJSvPflG/Po4vDsI4a8LvPevS4Yj1xSYkbsl7VANX
vE+0PYxzYOLb9sG9K4y76hlxRW+vpQ8p9+F99/3Jv02+WY9sfvhgcZDswJPW
A/nLZkgHNJ9souwj5tI7mif1lOtDQEbVc2Lp6uyTa/lU8Fe1NrKV5ou5x8Hk
UbEK9akvVz+baP6pcDDdB9avLuB96Q3sbPc+o8fiKDa2cOPtN/86HxMdbWMt
tmbX1q7st95xexxsz7ultyes56n+l2umw5BFxTUunb0Rzxg3Y9R4Jue35+PS
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
Na+ir2ojb7+A7aGzfeW2z/jS/T0sbFzTV9IPXd99l07fLBe/e2d7Tifd3q/R
6Z/tAdItjUnYZyy8R/Zvz+m7HDnf1cLBG65f3Ev6enVHo82Dz32/5u3VRX7h
+9ve8KFO+9aqLQ6LrN06RVurIXo/97HKjUv7juh7/3V2+zCwmkXt35Zv2+dl
p8Y75jE/pusY6/bH+M//8Xu9TuiBdD52SH39FgdhI/lknWarJFdgHN0LTQ6S
KfbJ5AA8I2vYKNHwzre6pHDNWJ82pO+TIc9frK/DTuU6/s8GZS5cm7wRG0eu
eQZ75LPO6b//+FxT//PjbLPegQ5oTLyTdzCusIBsCRf8/m1g3Jvg2tvAOPSe
/xj9odY98zexwfZn7mVts1mU54oHYNnp0/v0iG+Ba/gzXa+Yz/bA5MJpi/js
mfPxNbwjJzoHnxYj6hhehoPWC2wzRuSZde85jT9bBv83/4G1Yc2QR2LY/Gbp
4t7FmZCJZHC6ErmYDML36TvRydb1TRXrmBypt1oyPHr30u2t7cnX53IVh7Cx
eRuvvvnLi4NXda629uPWQ14c9MzknXO2f9z2VPXe1VVGwz1j55rpYUunzxmL
bJ74rp7lPX9/Wzr5u9iXnF4MCNcWB/3N/fP79pzmKj25WF584f/mIvtk+Q7k
RjFL2RvR8MO6sUa3d/P28Nq+XfX5kbez9duX3jp+7ZWqsdN4rE7Y+OTjXP0w
/Cs2N5t4vuy14TteLdTdyy0Pu79xTqd3X7/JJ5luGA4617OfNRs+O+QTHCT/
YA4ZAbuse/tdsqF8YXsFsoB8IGfspZ172p3+6Dj/zLFKVtD7/uSQLc4/9b6P
Dtrf0eSZsbZH4dskM+HumXP7Xw7d07zxJ5K/3gNO0euNCXwxL8aXPJTfgd+c
w2YbZqE/JIwrH+R19FPLffg6vj+2OTIY5jhXHBR84SMmk+2BPBes8WzxKqw7
7RA/OjAMT+JXfys3Ap4VK4pX7d9OO+iPH2Jjwk3Xaf/GtonfrS+y3XquR1z1
YaLZLcgYexLPasw9J9723vab1rP3tf9fGs+n34Rv2fqSucmgbEjR2ZLIQddz
Pnlyv3/OjrT0+lk29mBj8BYHr3KWN797a1stDm7dY7Tv//O//+0rfQG2T9zi
4FU/cc/jWv5vDJzX3iJba5jmvKW9uw88Dcu2JmVzko65ONgctN9wXnoouZ3e
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
D73vZvt572sSflM5F/j7tj6e3WpKPNRUya5+1Ytze5NtT5atS7/1eLcm4dZl
2noUm5O7eUnstniJbN2YtPXLV/PVM65NZvelaMetn12beBImwUe4hy5vuOOu
lf1n6WJbjTW5cNqQPjp88XCff9l6h4nsyJ67PE3YbL0YH3IBfllvi4PVuLAu
yBDn4CHvbV+I7z0DvKsOm3NgX/n4+LJ8DevnKWPcFX2rAXT4m+3V7Zc8Bz5D
05Ucr44VHo2GKYt90bAMT95jYjU/H8NB13TO4h155fw9XszM4mCxN9YfPi/n
Itq6dT56cRCm8w/gKddx/KwF9gfHvis9gC3Q3p6N1Nqm4ywOLl1sPmwLB8I+
v1u7aPbW6DM346fHfppugU/xmHVivlpfraOrPefaXtY3sT76jVvb+G0yEe+e
fpGXeb5b7+KqHtTWSNya+dtH5qq32vYY3R7c3sFceAbrztok05xj7u5p74uG
id473TDbkfWOH8iGe5pOUP1o/ELOwCx84LnIZLEXt140r9DvS4/Ot9Gf+goT
z33Rlw/r5dab+vApnHUmfvxKf+rTvn5i5eLg9mepzgxe3Rr1ZJp9HX7ZWoVb
o6n+l+Zkc3U3R6mcITy1sWrro18cXFvN0rtfrVZDtf+i0/t84Jh4LB9z63l9
ztiD37/ZpH5yi087a7KVe4/X2Vro4ouD1k0xV+aQHPU372CN2B+Uq2tf6D3x
en4Ka5AcIk88H70AtlSj5p62nquP4bj97lfFtbeNcVe0PdNpS/j5c7YAOhFc
wBvW+Rmf9JImr6wrvGV/Bae8pz0UPooOK5e2TmArPAr7spc6DjfvcTD9znH3
2nOqq+Z53HexLz2xvJuOO9+7lEtYzMzioPckW9gczB8+5OewDtkExY5a4/DL
B6/mHyw/m91waRiKd+mB5H55iH4bbZ/3srbS4uDfH7GM3nfX0e4n195y5YPY
+LSN2d7cpavc3q13sXWfthbiVZ387R2z/dSucNBehY7u3ng1H2Lr0ZqFiTDO
MzrH+oWD6Ynmb+l+Gybaf5Ef1SU21jCBfgKDloaJt9obR84+GW0fftWv80Pt
WfZVfYh4ozq81stZh/Cnr+Bgdenve1Vvv87tWba9WrZe/dbs3VqFW69pa1Ys
vXm7m8e08dsbt7a++/VfrN1m9667fslXcsyHbYF88/GOPvlW85MkE9DFnBsf
MoM/wnnGuPXJ93zut38v+XOsU7zGBnPW6X5JG/+bj+OHnvNW2/jQi61PuIlX
jTn+s+/GQ9YqOWHdZXtx3Do1jtYJ/ntqGPcmtD2cuclmGE0fPHv7fHlgn/eF
FUsv3qX3hX1dx3HXwQ9Lh4/mwXUc99uwD8bd42D3jfZsxiWddOnFQdcnGz2P
vWExM46Tq67JlkLW8mksDvo++8+f6xof3fIGPz57g/3i4M/2beR79WTq33RP
w4j4Gz6ctb0/O/AjObBr52o/eW97ye+wcWhXcdqbu7Q5vFvXYms9bc1Dx282
4R9ubfztEbN90/zGt3fbvqLGnp7od9WPqq7FmTP6l4f9s7W5NJlGzyTbnW9+
N+403bB41KWLrzv3PX98xNVYv2QqPIJBZCL/CSxb2rzAF9j+Xe5h/Sa6oT2k
tYCHyNmz1sSnh5/9jEE7a9TfeO2VHtbbv+yql9nWsd9avvYvbHXGYes4bS0L
+6dTp/r5x4uDG8ttnM6cj19/vPFs68vA/+5jfncfu2vZ87m/75c4dzzT83wr
1W60NpZ2D2PY/vnMV/rpQ07WbQ/6/NxzfvrsjF047VTFJVh7t96ohx//rAVy
7lHJJePmOfH4mSN25Dwf+3zXtLaKf7Pu8JAxWRykA+Mdcv+JYNzz9lFvQsOF
MGtp+qA1jw+yndqX4fXFwXTGpfP3odMB9ziMWxzsHHR20eI5O+4cv/Vsi4PF
iGYLLTam+s/FoHov+Ls4aNzzoXvf8uvxP9touWfx4eKg9XTy1iev0PVmwlu3
tXTs4ep3f1+Xe3Gw+Jqb7fRhvewecu0ti4Prc9/Ys43H3hylzdvd+hX2DuQw
/83WOdx6v1c18LdHzPYM3T7a1pJ3tUbLuRBju7Q5Yh+qnuHJL2ecDBtpmAjX
6O/3NF9Q2BdNnrMZkX3FrLL5LI3HYDHdL9y5x8TFwa+Kid+UD/Ft1/X9pnyI
cDCZzk7e/u+UsR8d/GONOCfZ6xzrbXtbb3/P7WuWfuS3W99+c3wWB7e+09a1
2HzezW/auO6NZ1v//vo1XqW/92ALulrj9WpLhuz+2d+9s7Xj2Omb+cEtT/mz
G3797CFmr2c619onD3EI3qV3utlqntd7vNyucp7PfqonXs+Y/hBPt/fAj+by
1rP8gSYv0K5bjy9r+ilgXL2AbvukR+n/D5Ta1FI=
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs/Qvcdnt+13dt21pHrRq1ajxPPcZ6iq2H6DyHXUWNiDWmtSJWHWpba402
UhSK1tcu0BAgwBBoGA6FXQ5hODQM5ymEsEnTENIQhhBoCAEGCCFQGtIQIIQQ
+7zXur73/bmvPGsaX5aCzbNfr2vfv2dd61rrf/x9/7/z3/L3/SOf/Q/+dW+9
9dY/+r5X//vsH/6j/o4f8SN++D/2d/2N/vEP/PDP+dv/ts/561+RP/LV54te
fdBf+ps/8PKf+pl/88s/823f9uK3fOmzlz/zZ/wHX/7Lf+pPvfht77398ov+
qf/Qcb30V/zz/4OXP+uL/sMv/+x3fMdraff8C1/xg15++Gf9R17+q9/+7S++
8l/4H7782R/+1OOeXh/t+lf99v/xy5/zs/+jx/XX0ff3eKbf/it/+k8f13/B
z/9PvfxxP/ave/kvfvUPPujP+yf/7S+/9nf+zw76J3ze3/jyd37ND3n5837u
f/zlj/9xf/3LL/9tf8fLn/pT/j0v/9x3fufRZn3/iZ//vpf6/qGf9u877v8V
v/yXa9/x+XPf+SNf/JM//m948dM/9Ckv/rmPfcaL3/8N3/D8j3ziE8/9+5d9
5CPP/4l33nn1eevFT/z8z3/+apyeu/efeffd57/745/1/Jd95NNe/Mlv/dbn
v/qjH33+6vkv3Pe7P/7x5//sr/yvHNd/23vvPf+nf95/4oXnue7fP/1DHzqe
+eras1f3P3/1rGdoH7S2/Z6v+7rj811/4Ue9fOutd47PX/ruH3P8/Yvf9aNf
/vk/939/+Ze/5/910H/yW/+hl3/gG3/Yy4//rv/5y9/3e/+XL3/hP/O3vPwp
X/A3vRq7z3n5G3/Df/vlq/e//Jp/8X/66vff/eJVO1982W95/vKP/dE/+uLn
/pyf88Lv/vL3fM+LX/KLf/ExVq/a8OKn/dSf+sLvftfXfu2rcfnxL774l/zn
X/7WL/uyFz/lC77ghbl59d4Xv+OrPvOFcX01Pq/G7UPHc3/JL/7PHf1/1aYX
55i988xvfvaHP/z81TJ868f+E/+2V3P7ucf4WpOvxuPVM37mi17/gp/8737p
ecYM/bO+6ItejfX7Xxhn4+dZG2dj+nu//u9+1a6/Sbuev+rvQbtu/F898xjj
V3NvfZu7Z55lrn71Rz/9mAtzqJ2v6Fdz8c4HtPPVtYe18af/5f/zMb7+/tYv
e3Gsofd+68uX3/on/o/H50/9yf/Tyz/4TX/vyz/6R3748fmXft/f8/IP/cH/
7ctv+gP/m2MufPeNv/9//fL3f8MPPa6j/9gf/ftefuIP/++P7/3+j3zig8fv
XHeftfxqHb78+f/0f/KlMXCfObB2rX97xDq3h42f9v7xb/5ma/LVmvuHXtgT
n/8T/h3HXFoD3/LH/4FjbZQ2h+bp1ZgYy2MM9N34mQfzZz6NpTE3nsbf2vUb
e8O/7Rfr3P29br62T16tk+OZ5sP4o+2lVzzj1X772LGnXN/e0Aa033oGWhvM
sblzz/nujx33eNarMTzmUltcM79bL55fWr+2ZvTvd3zVVx3P3DOsBd/5jWft
Hr/Xnr/4Xd91/Bu957ad3e/6+Pj7T324x/i4rj/G0PvcY83t3a/ac4yVPrnH
ve4x39rl+sbQb/w1Fr779b/uv3nMy66f/OaDz/dO/x4P01/vO/nb2Xf3uF97
jZn14d+v5vfYy/alNeQd1uyr57z8Rb/wP/OKz37+sR5vbbmij73oOd8femth
e/Z19I3fHP++oouDV5iIN8JBuPPPf/l//wG/rjCxGPc6HHy1Vo7neCY82j3o
exzc9WGftv32r/wfPeApvHv3F/ynX77ar09wEI1XoD1Hv/B0fYR1f+JbvuXF
V/+O/8nRBv8uDr6avxc/4wu/ELa9Wl+ffsyPNWa/W3vnunjfAw6W3r43/sXB
k9++d8xz9wWePUz0XPe6XhzU9p/7c/5jx+d7//I//oB9+NZ3/tl/9NX4/MiX
3/Gv/t8O7PMpDn7bv/J/Ob7z97v/4j928FN89f/zvf/vg1fDum/4l/5XxzkB
5sDFV205cO2X/7L/0qtx/OoXP/kn/aQXxhKuveLDL2CgcdFWPNX3xuZVu4/x
0fef8Hmfd+xlawxfufHTD9iD+orv3ePaaHME5+2n0sNiuOw8A6/R2gCf8dTS
8N7vtK04aI+izal2nmecjz2H62h87+Sj7zc/x37bf6+uv/jNv+k3vfj1v+7X
vTCOPrDoFfYfa85aMy/w8Y9/89//av/8w8fYf/uf+UcOHPvDf+h/d3yM+TCx
OAgDv/mP/R+Of6Php+/Nm+fCTlj7637t337gH0wc9tkjv/gX/WcPfLSOnT9+
3I/9sS/Mof7r21/483/+1Xj8ygPnYOzv+brPfvmbf9N/7+iDveSMAzON4at3
HeN047sPeGR9473Gz/zCOONlD6DxyhuuPNDOJMMGa8e6t37sEffceNZxj2eN
V3umNeGvNsCZ8Vy0Z9zacPDjYfb+82976OThn3vj7W/f9td5tsm/j3v6/ebf
v73Tc+xhH+vc3+HkU/p9D+feqz3ec6/7h93W7omHHzn2jms+O4f7nXvOM9tH
D/xam8699s7DGUBf1qdzD751tMFzvA/uG3NzeZ473nt2ngkfxvQD8NdeuOHO
C3Pp/tL4Bdpzv+53/y9ewgzrEJ/Cs/DaYuIV/VcLK+2BYV9p/YBrsIY8OFwr
jS/BKXsLxtmPaBi357juOTCodHFwGOq3MM5zYOVossqwz3uLg8YXPrinNBkH
T4ePnv/Tfuq/9wHrh4OumyvPJCf9wW/6pldt/IqDdzhL2Zf+Gitrsjjou53r
7MedO63Prmf339M9K3aP2HPbx84g+u7zPX/p//l95L57HMRzff7Et/yDBw/e
PWQKv/EM3+OreCk+jAf+rq/9O49reCBsIYfButu5/+A/+IizwavfHzzLdf21
R16t4QPjtBmfvOH3s3NsPuvgV37jr75VdqtMV4zTNpiMf5e2X065/ylNFvsD
3/iNrzD05z2hnW30xzvoAMi4+KvzDhpfQcNv193j/HPKOh885hcvwKu0Vx/s
mfMs/PYzGEcWNObWm7G0Nr/+9/xdx/iSrSYP+vuKTxxY5zv36AP88RfmOZNM
Ztx3m6vS3vlnvu3/emCje82j/arvv/JX/JePvfSrvuS/dug5nBV88JHb+iUL
H+v61b8P3YizrrOSd9qX1o9net55Fjjxwro9ef2nHLKGcbnx2AcctC+sneHg
rhc3K0tWxrROJmP4fjJ76XM9njzZ+jox7u1nnnXjbc/MrTOVfhYHz/a/7zgP
/Pav/MoX9BjONb/0i/8LBw921qPLoFO4nWFfGJs//If+0Isv+Wf/qy9/za/+
b7w0ZtMP2ffWv/c4M1i7zh50Nt3L2jd86fl25+L1XR/sjdLesXO4957r8EMP
MuxNZrudU959NlnNeJ1jdp4ZznP6W8+HcbdzzQ1PP/0Yz1/w83/+0a+dSW54
+gzv3B6x3vBeY+I8h7YH/8Kf/38cZ0F8H99xxvrIL/0vfh96mHhF/9XCSudJ
PJesh29MpittP+gvzIKDwym8C+6MHiaWHt7Bo8l9+Jd7XB/Gue4e52nPRN/j
oHtg6HDQe4t3dEbWMr7Z6+7XF+3Xl1fr6eC57v8ZX/gfeCUbfe8L/XTOf7Xe
nuCgvWydwSp8xHrcmpw+4YYNx5osbS/tTGi9VWcy+twT7z/WW/eRtuqH/hYH
i334qzVGfsAT/fUhe7zaA4euqziI17qGh3qO7/YXL/e83/k1X3PsZ/KAPbtz
Nd6ljXjiqeM89/iJa6f+BJ7dzpwHz9leq66y8loxq/JdMU6/fvJP+ncdZxR9
+0k/8d/5Cit+3wvtJe+5Dj/IQ+RUOHGes778eI65dbaxbmGAve5daHJP6eLg
5FO0vUFWNP/mZ+chegj70lqEicbVfFjn1rE9pJ1wyxkEjpkDWIif4CPDPt9p
72RDcqJrnufjd5sjf8mYfm+ePd9vPAsv+k3/3H/32Fvk6F/6xV/8wnjh1zcZ
5aW+WNfGVX/I8zDbWRDPg4lk24/9xv/Oy1/7a37NoRsgT8KnrQfrd9hkPPBZ
/Nl4TY7r9eJm5crKm9XBeu54lPG3Nsgf1r7+Gh/9fLVHDxnY3qADsb7dY107
O2wsnfNKGzd472xSHJxe+rQJnPoVepTtPx/yjjl0lvGMP/sdP+KYD3sSP7ff
un97pq1up/aOm9wSnHz/MbbDu8nCcM59xnj7k+0G79+Z8yYXf8Dcwq5TR/NI
G/+bzv8D2gk/nFOMi/1pvcB9Y+6cYG1b4/aqtefsaC6Kg8bx1fsPnZHr5sT1
0p8MH/8qYeUDPZ0nTCEPoslZrg/L8KvR+MZkrtJkPbq1XTc+1sHkxOlt3D/a
M91zj4Pu73W8TP89H3+EX/Sf8Kx4V9o+dj9ae+AdeZBOyXzZW8XBV/z84LHm
GC+kC8A78PlTJ/Gx5+Pt9nJp/GV6iOnb7P/p309dyaMdoXR1KU9x8HFP0V/a
2z5o65Lu056f3rM4aL/ju9age5zV8A737nfOJ9Y9/od34sXWEd5pH/js7H3i
31sPuqmbfvHYa/bUydvefeb6TR//rLa56ievcBBfOef2a57gHb5FrnF+L61v
sMr+Kibqt9/qx2gyod8OW40P2pkHbT26Diu9U3vsBTSMeMXbDxuo85H97/xP
ZjYX9p11pz3G0votvTnxfu3Bn8ePx0vx3NkJ8e594KDv/HU//oxfuFef9+zh
Y3HQOdP6N0b2pDG3nsk39r71S3Y0/rDOO+jB8WznImPh3+YDb/P76clO2f/d
Y+3vzGMNWyun7fXbH/bLrhcHK1dW3qw+tjbK2i6H/+ONMMgYWMt0xXjubCnW
gLmhA/oVv/xvPcbmN/z6/9bBO5xRyMz40XTYxtXzd350HQ0zjbHzJZu8fciu
4GxZerYH+632iyt9jnPIF/70f//xqd3/lPs+9ZDNpmc6bdRvPZxNT1n21JO+
wreXt/36wnq3Zs0xbMJHfacP+B49mLWCtl/087Qtf/WxX+wLfGjnz9/ypV96
6M/p0OjT72n72VnLnLhOFjc38MR+ucLEv9awstgHI+CXMwx6GFfa/ngdXezD
Yyf3jX4dDsI798xuCI/wjuFd8fEeB2f7s7YnP+4ebXDd8z2zOKi/eIOzjufb
9+53TiNPmHd77zyjHnqxB7rYN9+Y+cnM7goTT1+Ajzyha1uvfaE6lp4tS3d/
FQftf/+2xs3t+CiZaHwR/8RD/PU7z/TXvBgj/NK7JjOSiYwhXjGd0u1s/qB3
0q9TH/bes/qc1O5We1x1ktVVVo4rlpUu3rmfvAKLYAn+ARPR9j9c02+/dT/a
b91jDOxr79ZfNJ5TevjofrigbdptbK2vX/QLf+EL18iJcJAsoj32P34Ip4w9
eQH/NcaTtV3TF++wxt3nY20O24Z15vGe9ttdM8fm3tnG9dkhzaG1gMazvXPn
U+sd78QH4bhziH2Ph/GfgTH2AL2IMxHsx+M8T9vsdXI1fj3Z0PxPNpzeuPhY
3KwsWRnzqQ72EQdrr6wds34+cE/f8IHZPfE2cq1+mkftdja2Buk18QH8zbnX
3OHX3mMfwJOdKcy/vTU7Q3HQnM4ej3Z959XtzXubxc6xvV4/t9LWhTmgZze2
pw3xrefO7nyfrD1r0rp1jikO0klY88bH3Fmb1rx26atztjYYw1/1JV9ynDnd
4+yn386Z5ABtIGeQB+0797CJW4OuWwfWHt5pP2ivPWL+ShcTvz/0X2msvMLB
yn2l7c9hmb0Ea6w3exsG6eeuG5fSxUHrq/Lg/DbxAs9xPzwaxhUH8Wlr2P2T
Ac0HHjMcLPaV3v3ucT62ZvAC7cQn4T69j+eZg+Kg8TnPYu87+AV8m87HmM02
DRNPe9EjPZ849zxi4Oc+8Terzb109S09Z3bfWcP4n32Ep04eqLyBh0zesC7s
Y+c7+9Ue9Sx73z6zJvAgH3PuvfaP55++eu/e/AAf/SfrV1l/y/qc1AZnXf3e
r//6wwe1usrqMCvHFdfwI/zKPfriufh5r9sjaNfRu2fX6bv137y7/57GN9DD
ROuAHDA51phqD15BtsCPYCJeSu7QTnMES6z94uB0m67hM3glPoGv4y/W/mQ+
53fzNrybjOg3fu8e/Mx1z/LO+dPoh/2OD/rOc/nR4Puli4P6hOfR/9sj9gG+
Z9zgoD3o3fYk3uK9nuU72Hnazz/8/PSh/uCBecXH4mblSut3fq/VwdZGWdtl
fXvq81OfWM/C2/XPusZz7G3Pni8c3DSnzsPm4Nf+mr+N/fMYV330DP3VBnNp
HPV5/rrWweRR9OwL249XupraL2rHr29b/b399Szv1n7zRHdvXVif1ptnDY/s
WXxueuPR1oc5dU9xUF/sQTYCz9zZzpr0W3g02nrAj4yffYS3eC9M1D44YF+4
Th6yX0pf4eO/2Vj5/cXB2c6KgzBo9ji0sbiii4PFvmGcMb3CQXg3zHLdM4eD
i4kYJqKLg6M9c76jkxO1wVjbV/ONKQ56F3nQGcjaYjcxznSh01/ST5BvzjPv
I+0z++B0hmQ8vm3+vfiKR7/rR7p+aLW/1wbR82fp7sHioHU1/Zq/1sDsT5ND
rH/7yz6cDZF8SFeER/hrDeCJ1kVjBBo7UF/K+ljW56R2t9rmqp+s3rJyXHGt
eOeeYdw9jWei9Rtt/+ozjLP3YYXnuO4eeiH72vXRxtE92oy3wQ08ZPKp69YS
HoIPlJ5/svU8+xJcs/fwEXzfe/Ej7S0O+t6/rUdtdj7wW/M1v9LZDc33aM8z
PrMPT39njLUfPzL29vBv/A2/4YgBchaEI+aQDuY2xsdY4Q0wQvutSeOIr8IV
mK99dKn6WPrmd3es5+JjcbNyZfWu1cfWRlnbZX17ioNPfWIfY0YaS2Ks4B0+
4p3+6pc1jhehzZH1T3dqTsyVdhvf+VNvrI2N9Tlc7B6sfsZ+1F+/ubLd+zf+
7Lx7FevkfePP5sFfekvvtfacLbXD2d/69C40Od86WNyT9uOFaGcqPN4ZyDpz
fnCuswaNn/OKdw3v4AbaHvFb9wwTvcsZxXP2rtJX+PhXAiv/f8HB+r1c6Twr
Axb7XIc75qP08A4eFQeHfaOtSWMKs/x28mCxr7GB7nE/7EObG9hn72jPFQ7C
5fnGeA6+5znsA/66h38gbDvjex5pn9Of7a3j2hlX8/EH3y2ynv05m0jpxiLV
H7s+abXFl65tomfR7sfJAvf0vr+3L1kn24/zvfDsxr41Jq52q/qi15ey/iT1
MxkOwr7a46qfHPaRG6rDrExXjNNW80ivhu/A0Ml6u462r+3f4qD+u58uaHIl
bHCP57vuXbDBM42Re/AT2DV8dL/no63z07b8kQPT6UmtLfvNOptsaAz99Vtj
W/6K5+qv7+2V0vPjsJb9dtjnt5tvc2N+Z3NcTIbzzfgpHJocRNaFezd9/kvy
lLWtHdpujjzTPiJvmS9nNPOHn+AhMAa/8Xt6uWJicbN4Wl1rdbCla6+sP0/9
fOr7Wp/YxowUBxtrCfvwCv00VtpNDtUGOldtta5OO/lnP+Bcx9unZ87qXmqb
qI0eNtq7O88OB+vX3fgm33m+59mTmzv0GdP2pQceOctvbcMjZ1Bzb67sO+cr
tDU8PYx1Pj2MPYJ23ZovDo52v3d5jnkxVt7lvdrnt86KV/QVPv4bhZX/RuGg
vbp4h0/mA/M6nef99ddh4nBtZ8ji6Xw7i4Oj5xtDbzEctIaHg67f46D9h7bX
9NU+cH6yfk6s+8RDTMcpYzzS1oF9Z2zojMhufLLg1elL/P6Dvy+mtfSwcnH0
84FpfG5jlErXP602+topqp8pXX7aPTtcLP75NKYbb5/vaOO+GxPXWLnGCzSO
oL6U9TOp/8mVPa76yeowi1/FteKd/loX2qhf1q/9e2LAdxz7yxhWTvTe4SP+
6fnFQWNlPUynSh70rsmYzsyzrcD76YjwHGPmt/S/xhYfOc8CP/TANXxa24pd
O/NPFsSz9dE6djbRBnO9uMLJ9cPDxhh63vxJPLe0tnk/W5txX24IPPVc8+87
bG30JcbN7/APewcvhylo65P+wrwWB4uPxc3iaXWt1cFWN1sfnvr21OfHuOBh
p77gMU6kdGMqG2vZXATNUWCsjJ95sA8mk+t7x3lny/tz5nQvV3b5+qpdxTE1
trf5Lqyh03//Sw9cM2fkL881JzDO79HWsLZO/4meTrl4ZwzOOIBT32IPO4tO
fpzfmvm1trVn9vHi4Jlz4XuOfXdF/5XAyr8SONi4vyufzysfmOo/h3HwqNjn
HntBf4qDxTj0sA/GaeMZM3ZiX+nZCvV3ulD3e5exmvyov9PBFgf1ZfHyZ66Z
rznOyOxYZBzYBwev6MXFo29xhE9wsDkrSjdut37a9sZserXXl67Nojqcnl27
Z0tPN9PYtPnMLL67MeCNg2t8XGMEGjtQv8r6ltTnpHa32uOqn6y8VhwslhXv
TrvaNx52utKweLZIfbfuYJm+W9do/MT1YR+d3OIs+N7gz9YYvYJnGhe4Od8A
9Jkz4Ice/Bi2TudAxqTb8g62RP2176y7nTH823v1f3GcrsEq1/12siFeAEfx
Xd9NR+czO+J4qXXkunbRs+G5nrGzIR4K68yV9Q6X5l/h9/aU+fC87anSxpMu
yH4k9+kTGbj4WNwsDlbvWn1s9bS1Xda3pz4/9YltzEhjSRpf2fwD93kJ5nOE
dt14Lp5lMvboni2rY6ndobb4+qTVT7uxS43hbV6L5nrSZ5hlrXonPrZ1a4zh
wvbFdKHTnZovv6W7cA/5cftr9ORE92vbsMb9rlvnwx17Cg8afuFRaO8t/f3B
x+8PVv6biYNXcX+vwz7r/Mrv5V7/+ToZEI+19xbfZ78M42Di7hkO4kXuX2zg
fmvM/Xa+o/qOLg56jvP57J7zH7d/8Do8l11CG7Wf/xodDPlvuZ1uvt0PsX7J
pXT4TJ5xwe9/fk8vD1HzVzSGt7FLpevLXdu98Tcm+lMdTumeY7uv7/N3TTYs
3fwnjQFvTFzjBeoz2ZiC+lXWz4SOcXJf7XHFweoqK7sVy4pxxT7jZf/R13qe
8+xN93z4nOID+Irf2td49vLk4EHWi/3IJmpP2Xf0Za5rW3EQTU70LONEBtFu
bcafzZex91ztNY7WN35mPspvjYvxt6+Hf9bzMBFP3LWdY+DB+O/ONTvbTL7w
THM3vdz0o56FLxpL+lB7CM+BP/aF9WXctdmYorXbOWF2EPeYy2JisdI6dM7D
B6prLV19bPW0xtQas0/q21P/n/rENmaksSSNtWz+geYoaN6e5vPpfukZsnqV
2hdqZ68fWv2x7+nFKzWGt7ksmt+pOQ+1eWu1OIh2j30xHak1P5nOHnEdX0dr
/zBI32ZPHNaQAfEje8FeGh55vnn816Ov8PH7g5t/tXCwuV8a834V91dd6Ov8
XmYTfJ3OszJgcbB0sW94d499pfEbfUXjEae//1vHeRHvklvRuRzuOQPBRHvL
d/JFOBPd/K1vMTrvPJufy/L0nTmE3n5C+/6Mpzv8PY/773MbNpdF6cbzNqap
ft31Zytd+35tHD3fdl+Xbi6v5jZprHdjwBsH11i5xgvUf7J+lfd+JrOv1QZ3
b5sbJlZ2Kw4W14p33u2cQe4uvXgNfj7W9/LhsE3y5TFfeLw24sXOSvRP8NE5
HXZai8YQbdzxY23amAzHioPGYWcJvM+ac17xTPNjH/g7G5A1DKOMvXusY/f4
fvL+ZJHpVH2qN51v8Oy+lVeKg/prf+Ad8Nu4mD97mD3XfrGf7G/86MT4T7ww
7vYhzDR+xcfiZuXK6lqrg61utj489e2pz099YhsnUrqxJI21bC6C5ihoDh/j
Pd+k7pHqT65sCrWzX/lgNy7pKmdF8zhd5fgt7Z2T1xa/UBx0vTg4vai9M/vg
/NYmD+66e+4xcfrS6VK864r+/xYr/1rAwau8Z839chX398l8Pl/nA3Ov/5yN
odjn7Lxz6utwcPERZLnh5nDQPZMZ6ULtYTqZxQzql/Y6F9mXxo6dj2/Lqe/8
9OXge8j/ecbKfftDPsDb3yPX0+LMm+O3dH1L9Nu78Yfmu2h8U+n6eNfnrbb+
2jhK3591t9+by6u5TUo37nv+//Zz4+MaL1CfSc/BF63n+ljW56R2t+oki4PV
W1aOK5bRpTlrGNtin2fvnGPfsju5b3oOvMdYGQfv1Df9sW700bnemb70cpfj
f8bY3OF7MG72PWOFB1qD9pl1aeym+3Kff+OL5nI81fX59Xqe57jfvsEHpjfb
mcbzhnvj5z7Fw83j/PX1z/qzfsyTccHfjMXp9/rlRz4l/5Yvq/Ti0Y29PWQ/
2dfFx+Jm5crqXauPNZ9sgs4w9eGpb099foqDjRlpLMnW+s4I0102L0H9vroX
Svd8WJ1J7Qi1pxcH63fd+KPG5DZPRfM1NYdh8/o2v712mg97YbKhedQvvNP1
2fLgxXxmpsOfzcK44JHTh48uDnqX/eJ+axDWeKbxmZ/qFf39wce/FnGwua+t
4eVJW96z3TM5cTHvjft7HQ7e+73U3nel/yzeTY+6nGz28+I42Mc8szi4GAr3
O5drC5kPvti3bCSu04va086/eIKxZeNbzQfYOFvg4t/Ji8sTwz9k+aDu82Y3
329zHjbvU+nmvmj8b2Og6vNWunb/2kGq/2nOrtLN69XcJo37bhzcfWz4YuUa
L1BfyvqT1M+kOFh7XPWTldEquxUHi3HFvtKTu4zPxt2ZHG38/Xv5Cdhn8NfF
gllj47fW/HAHbuq79lrb1rq9Qi6G2T74ibGavc8Y+b44iK/iZZ7hnWjj6dn2
KRr/8dH+YWD9E6u/Kyb2g5fMJuljbRl7+Occc+qb36P7x5ePv9Yc3Qkss9/s
IVjV68XKypKVMat3rT629sr68NS3Z3KgPjc2pDEjjSVprGXzDzRHweTn+XNu
/fccWN1I7QW1odeXrP7V9/VHFn90lZui+Zqat7C5fJvfvnVetBWPtKf0ZTle
9HP0cvNOTrRHd7+9Zo+5jl/Co+le3KN/kwHPvPyPeOf6MPGKfh0m/rWMg631
0HzX97mvl9flKvfLVdyf63Dw3u+l8uC9zpN9ofpP9xcH/ZZPmuv4M6w096up
NP0nHZ29Zj3CROMIW+x3eoezZs9Hbjnr33+suzPn9duHnEjfCR9n/1vexDP3
8qc8+IW2Fkxz/5ZuLsTmgGoejMYCl773A5++uv4AVzmZqwvq2bg8oXlOSjcG
vHFwzrqeBwsaO1C6OFjfkvqf1AZXnWRxED+1b4xPZbriGhxr7OU+vY5X+rcY
TP1zroeBxkBbF982vdfwA390jjKW+oy2j4qFeJ21Rw6wLq095zR7w/OMn/20
2DT91n5ja5wnh9BhWNvuGQ7u/LFzintLb273dxjpXdP5wYbZItkzrTv8Vf6f
2cTNlbE1T5MTYZu16QPvioPFzcqVlTerg61utrbL+vbU56c+sY0NaQxDfWeL
g81F0BwFzeHTs1/z3VUfUlv5lf9YZcyreNvmYrrKT9icva3nclXbBR/GG4y1
9pm7+YieeU2+4kEvOp8Z8+CMqs3DIHOAl5jj4uPshn5bHLyi//8dB+/r+g0T
l+N6fp7NfT1MLN3cL1dxf1c+n/c+MMPBe/2nPez+Yp9xxntmu9RmvPOjv+q/
fpxZ7VXnb2vjlK0+dvinGbfFwZ0x8W895EwT1wf7fLfc+c5tj7XU3jtyaZ61
vR7zBpNZWhdGfhV+39Zt8wM3H1Tp5sdojHBjo1pfoHR9A+7tI+MFPRuXLn9o
fHfjvhsTV7pxc40dqC9lfUtqaysO1h5XXWXltcpxxcFi3OKY6TGNz/5tH6Hh
3+JMZusb9pXuGWK6s8WozM5nTRoLY7VYLzZe7beGnSN9Txbk/2TM4CG8nC4T
f539Ccb6t98471jn3rH4C/zCv1evwr8nD+7f8zXdeWjz6PeeTQZ0BsFDSpun
M+/rzzx8V/BL6++sP/regYnFx+Jm5criYPWxxtr69Kntsr499fm594nd97WJ
3sdXzsbXvARdz1fnvdfpQMxhbeX1GavvdGOLagdpronmYmpOwubmLQ62hktr
mbW+p3M1PzH4pb1kcXbWxUTMHxt2LHfE6OlR/fZKR+o5sy2iXTenpf+tioOt
93df6+G+7kNzX9/nPVsdwPuY98b93ePgfD7r91J735X+szKgZ1sP9qTnuUYP
jze512/nc8HH0To88wAf9qNjvZHxViNpuLbzGxy85Rh71jqhrY92VSOmOfOb
K7j5EpsrozHCpRsnVb/x+ss1F2Xp6ot6Zi7fmH/heM7oxoM3Jq4xAtatsbZW
GkdQHKyfSe1unuk754XqJ4uDld0q0xXjtNn6d09pe8dv4Wd9KlxfrPN0j9OX
TQYs9s32Nx0Z7NJ3vNJ5ixxYGp7BA2vTfremndemU0brr/7Mv9T6hpXeh3bO
WZy2NVMcNOY+q7Os3d6hva6bh+n55ovj3IIPnLkcznUL4/AFZzd7m+6NPN7r
xcrKkqWrd60+tvbKK9+eXq9PbGNGGktyH2u5/AP3OQq2hpvXrrqO6vxrB69v
WP2lGzd0FVfbXBNXeQibm/eqbktrmV3VucYP8DPYdPoZf+OBd/oBI8iGk++a
D4393ZqZnIiefdCYuD6b4/Dr3+o42Jrvo4uJq3m0e2abm49o6fu8Z1e5X14X
92fc3PPJ/F6udJ6VAYt9zm10CDDS3qb/tB6dwVaTcrHzp1z3KQ+2P/fd8ok+
g3en/vP9T2pnt2YouXJ2wtaOaf785g1u7sTSzZvRGjqNn6rfeOny+fu8lNMd
9fxcujyksd6NAW8cXOPjioP1n6xfZX1L6nNSHKxt7kpeax+Lg8W76c6cO9Zv
96P91vPHW+HEdFzjyYtn0Nb6v9gD+A0ejMY/p8uEidanswuZ0O+mEzcX5hw9
XPPvxbR5ljFcjYTSvt/79He82zMmN053Pb/T4eDmDL2YcffPN9+ewu+s77Oe
2KHfeXHWNH+8jv/f6vc+kSUrb1YHWxvl62yXs3HO97U+saUbM9JYksZaNhdB
121z+NzrN/ac5sErDtYv+ipWqHkkrnIrNe/uVS761mppzbLW8Wxta3NxypBv
HTI7vqYN5vT0G/vxL8499W3HXC2PKNvD7In6MDsg3jLc8ftiYmXDe33pbIj3
vjS73piLYdx0ucO7+xw1aGep5m1rLtPm926di9Z+aj3E1gXWPnNwW9vHuOLP
93rR19V8b72/0q1/tLoP9/mum+usdHO/XMX9NfahPp9XPjDVf1buK/Y5xzgD
2Mt81+CdMVm9+NWFGfahb/imLvyLs+blJ55NZnR/62i3lmjrqRUHm0u/+YSb
U7G5pJpP42k9naexVPb5YqmGI6/LSzmfg/niVb9UftJY79LFwcbHNV6gPpP1
pSwO1uekNrh7PWRjP4aD93JccW0+Q8NK9Hjo7Ka7Zz6Bk8m8f36JyxHpt9ru
M78Y57Li4PpGFvSXvts5nVxHFrRnvMvvXFuf4eUw2DiuzoBnTu5zfVjmPcZ1
9bK8f1iwXKXmYvKhtuiT+VgM42j9tedXA8S5S35QfH650Hu98mPlysqbmzPz
XhtlbZeV+e7pyeSNGZkcbhwaX9m4y67PntlKV6dR3X7t3fUBq19044OKg80j
0XxKzSvYvLvNP986LK1T1nqdrVt91po/eMoH8JIzN947z7RlOX61h14brpU2
H3jMWY/y7zl4M12NcV4e0WJi5cTqS2tDrF9N/Uuv4hAbj98cNc3bdp+/dG1r
nQt7Fa1t97WfVg/RXNBBmQ+x4cZ3+eCHfct/aRyXQ2Z+mOS+4eDoqzrvpa/q
PtzjIJ6Abt4za8Y1clxj3q/i/urzWb+X2vtqB6z+szKg89NqyltHN1nwQRe6
GtYwEQ5ak/591qf/tGPNfrL62q0x2poyrTVzlVu4+RWbY6p5NhpfXN/y0vWv
q49B7SzVL5VunpN7njM7ZGPiGitXHKwvZX0s62dS/5PiYPWT93rLyW7FsmJc
sa8x59Mfjjf3nvloThc6f5TpKyfzyfOjr/6eeqlHWt/IxfSixUHPmjxobPSb
3sZ7jLFz3GI77b/5d7h3MqD7jJPfuMe1Yd90kLB296GHp8Z9eKsfxl97ya10
CcX3XS9WVpYsXXmzdsnaK2vHvPftmVxYn9jGjDSmsrGWjcG8z0vwOn1F893V
rl3/rqs4oNLNF3GVQ6k4eJVzvnVYrmp0loaXO6s7l5w2mref4fN4D97ufjEY
eJIz1q0fRxvEuJBRi4OVDasvXbwhua84WL+a+po25uIqDrE5apq3rblMm9O7
dS5a++mPpAZi6wLri33Gp8u/Yd90fPPjh3uPfh1nrTz0YgCbC3Q6Sfg1jBsO
tub76+jaCmHb6t7SVzbfdemrvGfN/XIV99fYh/p/1u/lk+k8t67use8co7eO
GPkzfuLIk/3isa7Spx9nNu+ydk8s/dCTWtutN3pVc611Z5pnuLXhmm/qqp5O
444be1Vfu/ob3PsezOZSvVPP3lf8pzjYuIDGDtR/sn6VxcH6nNQeV51kdZXF
wcpxxbjlFJhNdHHYvT6fxPkljudOT7bYsukhh4XwzBoerukLrICFfoPWT2sb
ntgPq7+AP+kTPPUd/j0d5urBzpYx2USbKyf6uGf2Qdd3jjCe7vXRPm3fdW2b
LGrszI/fWpPTufZ6cbCyZOXN4XTXhv7Vdnnv2/M639f6xzZmpDGVjbXsOuzZ
rDqK5vapLbs+Xc0T29ifxsA2L0RzJTVn4OtqWU4nuRory2NG1i7dupytT116
ej08ZjpYOmv8F39w/j59nE7/GzICnoNvFBMrG1ZfWhtifWnqX1p5sPjYePzm
qLnK2/ZNyWV6VeeitZ9aD7E1gp1tYJ8xIktM7uazO9+MxXSf/hsfvOlDP3Tg
IZ4PG+5jHOYXurgw7Sj9/an53np/pVv/CD+Ab+TB5rturrPSzf3SmPfG/TX2
oT6fVz4w9/rPyX3FvjPH9ruHTxddxnxGnTX85nz32y82pld1t1uHtPXXWoOm
ufeLg81F3NxTzcVxH4M8m1/p+qLXH+/e/vI6fVRxsLyocXCNC2jcXHGwvpTz
n3StPif1RSkOVj+5mI9h4/hmca30cNp7So8/r1bAbG3TTy5mwbO1Z/l1tFmf
Jwf6nfafMV5/5zEG7NVw0FnF/vFc2GiPeaffkgeLg9Nf66N2u8971ja8fXgx
2c1z7bOdJbRheWrg4PDH+yYnLVbRs/Fg4+DZ2tfrlR8rV1berD62NsraLmvT
rO9rfWLrK9s4ysZXdr1d6SJKFwev/Ljq29x4n9YZaS6I5kdqzsDX1bKEia2x
0lpjrb/ZmtTW25kz8muOtg1DF1MPU+wTz4Yppd2LP+BLxcTKidWX1oZYv5r6
lzbmonGIjc1vjprmbWsu0+b0bt7v+9pPq4HYusDGTd+WP59sZSzkSIQt2nnK
Ju8cvBrPXh3oyT1kHPz79Gs6fR3xbB/7rfX7Stf/09qB8ebCGjjrfzw7bFvs
d6Vb8/2q3l9rHpW+yn19n/dsceuNeb+K+6vPZ/1eau+rHbD6z8qA6OWWMeaL
qSgOkg3PWPvT13T+YK3NfVWLrbVpmpO/eYmbj7E42LwcjUdufFb90ot/pYuD
1U31TH7Fo4qDjRFo7ED9J+tXWRys3a32uOonq7e8l92GE8U4bfIu+6a0Pk9+
cJ/+Tf6yByafLnas9OlH+PbRJ/Rkw80nfbf1v/7Cy/lam3990vfpBugDZtec
7+50psXBYYrf7MygDf5qv/csJ7vr8zM13sNz7/YMfWXLNH7669/FysqPlSsr
bxYHa6+sHXNYjK7va31i731lF1PZWMuusXv9w/L2VCdff63mg60Pc/PHNufD
Vf6H5ga8ypfbWipX9cVae3qyJ91l6eLg4uLRxvOslffeExysbFh9aW2I9aWp
f2ljLrT/jEV7GofY2Pzmq2netuYybX7vPV9bWvup9RAnn5J1nTHgAZkRnzRv
+m6d4pFsf3B3ssrpv//e4Zu4WO7z34960ekMTx/pH/Ji9fSsneo2FwexeATy
mnGeHFfaPqxu0xqA9/YAvPPM1nwvrR/G+Bbn8lDvDzbpD/xqvuvSzf/ZvGfN
/XIV99fYh/p/3vu9vE7neSUDwt75i56+0N/+kGPU884YokccbJ3u1vtuvbar
/PzNUdw8jc1V1VoDjc8qXX+F+3yVs9PUXlM9VXGw/KoxcY0LaLxAcfDer3J+
JrW1WUue7XfFweoqK7sVy+7lu+Ednktmgln4wP69vACLX9i7PdMcoedH5Df+
ztdp/Bvtt7AFrT+rw6L/+oqfltbGjQv+5v3LnT795/LcreaC++zR6UvtS99P
x6497jWOxsO92rS58b7pWbW7+FjcrCxZGbM62Hsb5WyX9e2pv2vp+sROH689
jansuur5qjqH6uFrj66PVv2WG79THGyeh+Y7ag7A5sVtfnj3rGZK64jd062t
udrTnum35DL3wErXYYHreP70gfCxmFg5sfrS2hDrV1P/0sZcNA6x8fjNUXOV
t625TO/rXMCQ19V+Wj3E1gjWR9e1Z7J58w/ru+fd8o4ceEE3iK/iw6t7R346
9XunferM/fxZhw/Scp7M3opXW+vLW2J9Ww/wu7R7lkvJmBtrtL3l+lkL59OO
+TLHpen5yDB0udoOu2FXa7633t89PXmwdR+a77q5zko390tj3hv319iH+nxe
+cAY97OuxLvfR/95sw0+wcGzhv2HH/SiZ361pzW7r+qWWierWdNc/c1dfJWz
sXmrmruj8cuvy0t57793j4O1kVV/NQwo7yoONl6gcQT1IamP5b3PyX5b21z1
k9VbVo4rrhXv/BtWGOvSwzvXYAdMcP90k/c46PowxXhMttUO+O5s473mw5y6
z35wztR+9/jOPiI/sjeYp2G1s8zkn+GgNuDjrk3n2bj74aDvN6bGwh6mpx2+
ub57Js+uL8XNypXVu1YfWxtlbZf17anva31iGzPSWJKrc1R1C83Vc2WD9hz9
H35exey8LrdD648UB5sLF16sluV9jcvVDptcCU9bV9peOeugntgKc8mJ5tx1
sp73er7rxcTKifpL9zYcnA2xfjX1NW3MReMQG5t/n6NmONhcpt+UnN6jJw+u
9pPfLh6sdYFnH3TPWZPxuw/ZAL9a/UR6M+OMzzkzOve7X99ueQk+cNb/OWNM
5v84XxgY6Ds82b/h4nKZo8ky+Plw0DiT46wl4z/9pzHynXvmu2LfwmTnhNJw
0brAq80Znkye9a7TZ/ITD/gLN0q35rv74R8sar2/1jwqfZX7unnPmu+lMe9X
cX9XPp+19xUHq/+8lwGHfbczyPfBwdbybg3T1nFrLZviYPMYN39j81k1j0fp
+7zMw7768tWH4cqmUxzseb48rTECjR0oDqLhPv17fU5qd6s9rjrJ6iorxxXL
inGN9cOj7X/jOlx1v/YPR0svTm6yMN6sj+v3WdPpEQe1B39mExwOnrmCzti0
5ZqAw+43ptaDcWHzxTdhjDPSsGaYOFlMf2HwsEVftNX7tEe/dvbQto1nMbFY
WbpyZfWu1cfWXjn5cX4sa1N9X+sT25iRrpmeneCmZ+jDvT5htubm86n/VWNz
mie28arN59C8Rs311/y3zQN/VRuldTOvakmb28mGkyvRxcTKhtWX1oZYX5r6
lzbmwtkc3yIPNg6xsfn4jffTpzZvW3OZNr/3fZ2L1X5qPUR9Ga5NfvRb4zBf
GjjoHjgI++wP9lNrxD14nN/j16vzA9PJuY/xaW8deIY/T9Zbfujp8WY7m38I
X5rhoH03m539p52nb+un3vTT3/CE5q8C48h2bJnwAE/3fLx+PirT15Y2N7BF
G5xHhtFw5NTnfvxJnffS000uN9Hq/W1czHHzXZdu/s/mPWvul6u4v6exD+9/
0G3W78VatD+sv+o8r2RAa+6sSfEpz1vX+6qeaeu7ta5Nc/s3v3FxsLmtmtOj
Mc6vi+1qLNg9Dta+U73W1Tm/ONh4gfpS1p+k/pb1OakNbvzcd5XRqsOsHFeM
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
est72W0yXXFNX8w9Gn+Da9YQXPc7PMh7vYuO09i4B+8pDk5WtVbweW2cjtNa
PuOvzn1kzUzfY5/edFLHHpjPzJnX8m89+KS5hXPGgA4Bv9YOaxkfggnDOO3Y
vAwfi5s7n5jHypjVwVY3W9tl/Xnq51P/n55hruT62nyv/KCKg1dxo82l0Dx7
zaPe3LP3NUdWk6u1ulq/sphYfWnrQdeGWL+a+po25uI+DnGx+c1R07xtzWXa
nN6tc9HaT62BeFcX+EGfdsZRv3vIJt5v3qx174Jb+mUtGdPZEKx186Cd+k+f
fMYAnvf77c4J2q/2H9kRNsJEH2O3e/jK4I8+N1vgs/nwzya2fXLmQfu0F4uT
d33xANNjuj6/0flS7rd4oWuL04NHZ97yb30SOzA8OnWNZ2x4cXA5bBabP1lv
9r5h6+jioOujZ+d8xNkzTt6agWHW/8aMzF3aOM/3YnZzfA0fsu/oJe2t6aVL
FwftC9iDv7Tme2vdovFbzy0O0ptM3mm+6+lWrM3mPbvK/XIV91efz9L3tb9X
F7U6z9aMK916Oq0p0LzKzaN1T8+fsvHUjSmrX33p+lQ0Dq66tcoUV3y1viX1
OakNrjrJ2uyqt6wcV4zDX7ceioO9rl3w1hrwXhjrPKKvno8Xwhtt9YEZ5tNv
yQf2rPPJbX8e+++0x3/4+WKBRrPp2Nf2mPZ6Fvzd+rV28GVnDOOEJ81PaDnG
zFfxsbhZubI4WB3s7IrGv7bL+vZ0XnpWqfxePXZtu/V3Kl0f4MbINFa0ORPu
8whNN9Ecs82v3lokrc9VTLyv3Vx96WyI9aWpf2ljLqy5W17qJ3GIjc1HOyfM
N2Z525rLtPm9W+eitZ9aD7F1getDSI81/3/rw/xbM2xJ1gS/Wdd9zKcxNbb4
32Q8bfFxHjBWxsZ32mts5meET/u4biy9w/Nh43DQ3rOufU656BPz83g+v0p4
NFubPVHb3zCxNQ7wvPmVoqfPvMe7ycjFyt7f5+weZ4fFR7jHWJ+xie99Hxxc
Oyernmfdtx70z+QocpO1MX99a7909fCwz7iursJkcJ/W3xxtDU8WsIfsx+X0
wE/sdTwQRuJxruMv1tZVzferen+tf1QcbO5r7YE1sKN5z/a9/l7F/TX2oT6f
9XspXf1n5b5iX+sLlG6O5eaZbK6txlaXbqzZ63zs7bX6WpSunq2yRvltfUv8
25jwQ6v/Se1x1U9WXqscV/muGId2/sF37mnz4h7zbS483ziYK7ipDebyzNXx
aQd++r1zjHkwT/bviXHv3PIB/d3HPJEh7Al9NY98B/w1b9rmHfAI7tAbOGMv
54s1aY7xq14vPhY3K1dW71p9bO2VxcH69nReej6pzF49du259XGq32/jXxoT
2jwJzRfUHHqlm2O2+dVbh+uT1aacvrQ2xPrV1L+0MReNQ2w8fnPUNG9b85c2
p3frXHiPuXAmbu2n1kN0Hp4fP/5+2treVm/oyHOyWhLLn+j59r+/5gE/XMym
8fUeuIZnWVN4H77mr32tTcu7sbxVxk8fGq+M9j0c9JmO1Mc+sd99bnGNz4eD
t5jxA3emTyzuFI+KU5XjKt/d6zwnk1V3WlnyqYz5iLlXOAg395z5gWoTOfzR
L/cRB60Dc2Z+zYOxdZ4wRtYR+XpnCzK084Z/u/eenm/i9D14qTMOXojXmSdr
395zHT/BD4uD1oF1bQ49e3oR68W/N6+t/z4cbL2/1jxqrYfmvi4ONu9Z8710
DV3F/bUOeP1eWhuuOs/SlQFba6C5l5tzsnTzbjV/13389fztX5fzhM6tPhi1
PVX/dsV762dS/5Pa46qTrK6ysltlumKcNg4jrmjjiSabWXswF1bidfY0LPEs
fA+mOKOQCfGu4dt8KWDf/N2Hgzf/9uPfdAjONPqobzBlcX/+mnu8eLrsXjff
i8WrLFkZszrY2ihru6w/T8f/6kxSffWVDbf+vVcxL82HcJUjqPljm0fdGp9u
oThY2bD60vtalrMh1q/mPs5idOMQG5tfW3PztjWXaXN6t85Faz+1BmLrAi8v
tTVFT0S+QFvL+IF590xt87zVZ9RveG19GFNtGB+bTKcP/q3fxsE9+O5srPo8
n5iN5fySzvoSn/NgL6w8iL8PB50ZrUufM0fMmSu7OFJ8Ke4sH8v0n/VX+dez
69U3pn41tTMWB6uDrUxaWbXY3fa3X872zorOnJWLjdPOUsVBWDGd8s5o7jUX
xnj2QuvJWjfH04nYE/aQ/VYc9Ey/N1d75nQjOw967vCuONgz4etqvq9dq/de
HFy8ru+b73r1j3zf/J/N7dLcL1dxf/X5LF2/l9bQqc6ztQZKNw9z8082H1fz
kJS+j0FbfHd9EeuDUbo2qerlyofrZ1JbW31Rao+rrrKyW/Gr8l0xzv1wBJ/S
F9h2+l199vEc51nt9lsf7z714N95+CfRU8EKsp8zO/lWm7WXjFCabgc+rsYm
3fliX9CeVRycHXtxl8YJ9vR65cfKlZU3q4OtjbK2y455zx6Vwaujrq22Pkul
69/bOJfGezYfQvMC3efHW1xM86gXEysbVl9aG2J9ae5rPQ8XG3vYePzmqLnK
29Zcps3v7bno5VpZ7afWQ2yNYLKm9WWtT5a3VuGV/p01Bv/how366t/TJztL
4APe734fbXb/7H3as7O/cVitUrTnrY7n8lD5i69pu9/Uv8hz9R89ebD8v7hw
Jzc94F11jNU91jZXjFvsHtmrfp71/2x8RHGwfqf1w6l/Tu2V9ziYGPkH2bYy
b88AHYeOj/lwFiE3G9OdryZvr47Q8KB0cdAzh0HzsVmNUfM0GW75v4qD/g6f
vNccz36+urb2u79b26+r+X5V76/773V4V3o1ZHdva3yXbtxfYx/q81m/l9LV
f1buK/Y1L2Xp5uZqfpLXxWi7p3T9EhsTV/tU9XKlK6eUV9cGV9tc9ZPVW1Z2
Mwb4E3wsxukjGwa5tPRkSe3ac1aPk7ylH3iZszo/CTzuPON/y2Hr9d3qBKDF
4cxv/NS7HLk/HupFnzG8n3nEyfAl1mZ4Sz4gL5buPcXNypWVN2985+Yz+Gij
rB3z6rxRGfyT2Wdnp7iKZ2mMZ3Md1DemOfFKN196MbFy4r3udDbE+tXc+5pO
trmvAT19T3PUNG9bc5k2p/d9nYvVfmoNxNYF1hfYZ15XB9Z3+OT2Er6J3wyn
N147N6xuiO99py3zscC/yBZ4Ln6GH66esWct39TO6JM//F2dtvniTl9Wvl1+
XnlnNkLXqxuszrA2tfqcbD/YK/XPrN9m4xoa99d4wMbIN/awMYmN0SgO1n+1
/jz186ndszhYnXBl5MrOPUt0PDvOw5l+Jmf1nLcaC9bf5rY4aO1NphyWbW3v
4/c9Kw4Hh1XD22Fdaxq15ntxsPX+7mseva7uw33u6+a/Xr6Xxrxfxf21Zlz9
XlpToDrP0pUBm6Oyebqaq6T0VcxaffXrp1G6tqrq7iqzlFfX7lZ7XHWS1VVW
diuWFQeLd8Z+dsZex7Pxe231bLxteZD5Sp01TT/jkOn4BJIJXacXo0/EC2An
2w+Zj0149aXZ0smK9Kba6gzsmnvpH/XBXut1uklYTcaoLFkZs7JnbZT39Mbz
qZ/Po6xd/XNtsvVNqr9uY1gay3mV36D57poPtjhY2bD60toQ60tT/9LGXLSu
ZeMQG5vffDWlm8u0+b1b56K1n1oPsXWBfWfdWUN4mjOD8cYv8QHPHN/S7sWO
6Ndo75885zf45vJlDO/8nR54ber5fLxvZ/ph4Pht+XDlFPTsp9XpVddXW1h9
Rc46Bh96iBmcX2X9LRuP0Hi91ddbjrLFtjfmvTlh7nOmNS/NcLAx+41hbGxj
Yz2Kg/WDrdxX7Kv9tDhY3XJl7crgPZOU7nwVB4dnfrv6rK3bOp321kVxUBuH
R/vsPXvOdOV757AKvXV6VfN97a0cuDNl1+J0oNPt2FfN/9m8Z/e5X14X93fv
8zm6fi+tO1CdZ+W+0n7nTL56gsvlVRxszFrp+vDXj7HxAtXdla78Uh5eG5w1
CR+syeoqi4OV44prZFA+fTANBpOn2Hd6Hd8S44JfwR7PhY+v89tFw0I4vRxb
fAD9nlwo/hQ2auPpL/Olhz3/rBn6o4/fez+sO2u4fsuRC7/XKz9WrryTNx9w
sDbKjlvPD5Wvq2euvbX+SPXLLd24lcZyNqdBcbD57u7zwU5OrL60NsT61dS/
tDEXjUNsPH5z1DRvW/OXNqd361z4u9+39lPrIbZGsH28Mx89qjHS99XAsM+8
Z3aNnXu9f/orz16sH3q8sxim397l73Jg9Pw/Pln+Wfliz5t+tHq5vaM2rPp4
FAvqD9l4gcYRNM6uONiY9OZsaS6X5jprDrTmBZ3/vu+bp7R525rP7XX5bc53
Pcb+NxayMZKNGSkO1p+2/kX1O6odtnR11JXZK8v3bNMzT+e9OLh5ny58+pGt
Fetw77KOioPuny+Ivui3Pbl3nPkFf9jDuvVce8mabs33q3p/V/WPmvu6tb+b
96y14Uo37q+xD/X5rN9L6eZkrv6zObuay6t047gb11Z//voxlq5fR21b9S0p
Py/91Db3qJ+s3rKyW3GteIfmm3dPm2+4p73OBGyJ5BzY671kJ1hM7oN9swl6
93wt3UcvBiP5QMxHGDafPgDvfxIn42xQmo4T/mtr5cfKlZU3YaTxMx61UXas
en640i3X3nrli9v4lKvcBc3n0xx3xcTqS5s7vTbE+tXU1/S+Pldriyw2vzlq
mretuUyb07t1Llr7qTUQWxd4GOqdi0XXFrxt9no8xH2t5aFfw47Fg8w3x4ec
OV8evEkbd5Y2HuVv5XuVC5pvtTq02phqe6pvxnwptKF+jPXzr/9/4+Nu+aNv
PlmPseTNtdIcLM1RdqtDcehAm8+z/p/3ebAXm9/6Ea1h0ZzexcHmO23+t+aF
a56c4mBzCDSmsrGWjT0pDtYvt35K9V+qPbd0dd3FweoEekbq2anrpzi4uR+u
ub7z2HIHrQbQ6rJZz9aw+0YP42CAv/5t37bm+7Btuo7V+2vNo9Z6uMp93bxn
zffSmPeruL/7Gq/1/5zfy73O83X0fQ6TyZaNaytd3/76OtbHo7at0pVxyudr
j6tOsjJacbAyXTFuti39Ww71+aPuuvu00e/ErHouOYhfCZua35D/vNM7ioNs
omesy5lnhBx25nn4vEPHS96zB+k3zxy6j/hY3KwsWRmzOtiOSemeE4qD1SfX
rlpfo3v/28WhNAaz+QrqS1lMvM93N31pbYj3udPnX9qYi9bkahxiY/Nb17J5
25rLtPm9q4Nt7afWQ2xd4Pm1NQf4chVUtl3d4flzTgc7Px28CQ+cDIB2rXyp
/Krn+cZKVPdV21BtRvWpmP/5vf9h/fPrt9+4Nnzd78mpT2PAH3OkNHdKc4st
7yaMah7O5qlu/urWd4B9sO6+LtLyy91iCR9qCBYHW+OpNS9aC6O5wYuDzZva
PHLNL9d8O8XB5iJobGZjNhvDck/Pv7f+TvWDql24dHXmxcHqFnrW6hms67A4
OMzeWWAy4dbicrHMlrcz2mwI81e5qvnuOegzx/xjLrnW+26+69ZCbf7P5j1r
7peruL/mXi5dv5fmqKzOs3Lffe6v5Txp3Hdj3+rrWLr+HrV/Ve9X2ae+KMXB
6icruxW/imvFO/KpNe87spFnkI883zO9y15bHiAYCFdgiXt9T1Y6997nPj9z
cr3/wLYzr9GX3HJx/b4nOGjf6pf39Hpxs3KlXLlw1/uqg+041HZZGbl64/rE
1qeofralG4fSGMzmKCgmVk6svrQ2xPrV1L+0MReNQ2w8/n2OmuFd85c2p3fr
XFzVfmo9RG22F31nHBYLpM3Wi++81z7TztkV/c49k7/mCzFZYPykfKbn8OXH
17/qrGrTqa2nvhDTmw0PJzfUr/4+7mzxaMbVnFrzjd1ubpPmPGlOsJ1RnWGb
P7P5pZt3unUZFtNwX8OoNf5a+6+1cVszt3XkW+e39X9bD7E42FpRrZ3RmhrN
MV4cbP7V5qNrnrrm7bmnl9OgMZ6N/WwsTOn6Cddvqv5UtS/X7lzde3GwOoqe
2XqWu1/PW+eTU7VhuZy8y/h4x+KbzMfqu2nH8ros9viq3t9V/aPmvh7G4RfN
e9Z8L6Wv4v7q81m/l9LN5VX9Z+O7GwNeunFwjQWoH0jtX6WLg5WJigXVT1Zv
WRwslhXvPMN+JouVhiVnPtcvPex59jt8giu+82w+NNoPB7eXnWHtz1udzcMu
p23+0t2wT5xY/76bTf8zn1wvblaurLzZ/j49A7xeLq7N9MqPqDEmja+0Tpqj
YDhY2bD60ua4u899N7+a+po25qJxiI3Nb46a5m1rLtPm9G6di9Z+aj3E1gW2
B/XZv61r39kT05f63fSH3oF/2Ff2YPlAz8k9P1enVF1TbTG10dSHYTxp/GMY
WX/4+sk3jgztt7OdLOa6OUmaq6S5vIzfzjbNe9m80M0X3XoK9ByrmdjaQ63N
15p9rWlbHGz9d3vfPmEXsJadGZef3Lqz/rXNec/+Lw6Ssaxre6n1gltHuHUV
73FwNadag6O1OZqrvHTzuDavXfPdNf9P6eZGaKxoY0gbU1O6/sbFwfpl1U5d
+3V1+NXtV9fRs1/PhN0X3S/zm3HvYvVX29fznWVb8925YvGBrffXmket9XCV
+7r5P5v3rLUGruL+GvtQn8/6vVTnWboy4H0M+GLiGgtQuj4htYtVN3glHxUX
qqus7FYsK8YV+2ArP7PJnN7hrAjP7E/tWLwS/a3n+D2Mtpcm/8G0W9zTQ45k
9GrS0P8WH4ublSUrY7ZfpYv7lYWrE67va32H6ivbmMrGWhYT72XD6UtrQ6wv
zX0+2PHb+9zpk9fuc9Qsb1trdTWXafN7t+5zaz+1HmJrBNtPvlveida/2H7v
/u35tufe6oKqI6oNpT4G9T1YbQF8o356937s829v/Nf+Lm55eszmErnPtbUc
XJ5nLoxJ81U2n3PzPLcOgrV+1hf82EOtpzPP22NNvdbaay3a0773WccZt3Xb
F0e/OPfTL+aow/7iVkfw+c7B1rh5psNxBlsNLRi2mE17EE+27smIp67yu4+9
Ylxgnzw/xUHjibavWne49Yhbn7E42NpVreXRGh/NeV66+WCbH69585pHqHRz
LDTmtLGojc25j9OZ33L9mevfVXt37eC1BdRGUJ1Jz5A9W3Z/dd/tPfb5Vc33
1gG/r4W6mket+9B818XB5j1r7pfGvDfur3m6StfvpblNqvOs3Fe68XGNF6if
ZH1F6mNZHKysVLywXu0X31dvWRwsrhXvzvyh33z0ozT8IouRRZeDgg5yOf/t
6eEu+ZB8Br+9y/3zE/feM5fF20/wsbhZufKqL7VRVuatb0/tofURMv/+bR4b
P3IfUzlMrJxYfWltiFe5yhtzcVXbsTlqmretuUyb07t1Llr7qTUQWxd45zv7
y3U8xnO77+7PpTuvVodT3U5tH/e+AfMZqB9d/evqf16/9MZtTedp3zfG+T4H
yHKDNHfWbI362TyTzcPc/MytX6CfxtvYttZPa+G1Rl5ryJ45dt99yPO5euvk
wdsZ7yFmwe+s+TNO8Iydt0dco9dczD0ecNbZfd+hu7HunV3NpzUFd8yHtYYn
aOPy8sA7a8FeLA66x9qHT3i4s6F79HG46R5rH1YWB80DHokHtX5x6xq3zmPp
1sBqTZDWCnmaO/2R7n/Ns9f8e81HVLq5Ghq72pjWxvg09qf+z/WLrp9Y7ea1
p9emUFtDdS89i/aM2n3a/dva362F2tpwV/WPrnJfN+/ZVe6Xq7i/+nzW7+We
Xtx39Z+Nj7uKHSgO1oektrPqDytDFTuqt6wcVywrxhX77BPX/E29mwdcs1+X
9+L0eTltl94/2j4qrY32N95QfCxuVq5s+6uPrZxbfe+VDbQ+sY0ZKSZWNqy+
tDbE+tLUv7QxF8191zjExuY3X8193rblMm1+79a5aO2n1kNsXeDul54ne86s
7qU6mdosatOvrb/+b/WLq99446oabzVZbnaY5nhZLF9zejTn1fLDLTfyZMDm
T25e5dYd0M9hYmv0tIZda9u19qt5euQRj3XSZ8eHhfOBca3YZ33ffDwfagWe
dcrePvQhdJ+7/9SbftqLM5bhsDEe+8J+sLbNvzVvnuwJOIR36h8cKg4aa2dH
e8944vn2j3FHW//m2h6zN4uD8O7Us37xAybSwZgbv8V3zNfwtPSpv/jqB5/t
1UF+Wh/5sV5k6dbSam2R1hxpDvbSzU/bfH3N49e8RqWb86G5IBob21ihxhDV
j7r+1fU3q/29dvnaJmqzqA6nZ9qeda9qvl/V+2uth+Jgc183/2fznjVH5VXc
X2Mf6vNZv5fqPEtfyYD1pbzyJykOPtUrPuJIZbTqMIuDxbgTJ77wyO9YWt1u
+okTiz/9kN/0uTh4xuV+1pMaE8ZEP92rf6/DR7i5WCrtbzuL3aUr29afp3bP
K5/Y+5iRyYnVl9aGWL+a+pc25qJxiI3Hb46a5m1r/tLm9G6di9bq6nruOu85
sOfD6kyqS6mtobb42ujrt1Z/tvp7Nx6qcVKNHW5McXNu3OekWkzfdJ/73fI6
Nu9x8yG3XsDNZ+XgKa2t09pzrUnXmq2rV26ftb4530d+ofR/p0/zh444+ac1
Lz7+fHF/qwVvH8DE1V056xgduTqfrVag/Wb97ozruvvPmIYPHvsLNuJL1rc1
CvusN/2xxpzFrCF9psfQR3PnN/ZF8Q4Np8bbd90444P6P7yzL6cjxUusMbQx
KG0+YKh7rC28Bn+wxmHOaQN5Z/4/HyhNJzSdcuspt85y606Wbk2u1ihp7ZLm
ci/dPLfNf9t8gM2PVLq5I5pTojG2jTlqLFL9seunXb+12vFr36+No7aP6oKq
I+qZuXyj/KS1dVpf4KquevOeNfdLY94b99c8J3c5Tx78XhoHV53nVZxdcbC+
JbWvXekYi4PFmsp0xbXinfUOA8lfzgragI/gBfqmX6sxqq3zB9eW6jB2vkMX
H4ubxdPqWq/k1iv75nJ/a2v9YIuJ1Zc2vrI2xPrV1Ne0MReNQ2xsfnPUNG9b
c5k2p3fXYddnz2+tZVldR3UgtRHUhl7bev3N6odWP+3GMd3HNy3mt7HAzZXR
/FGvyzFV/efse/MzbB7jxVCjV5vHtdbEac241pJrrVVjaf9Yd61Lbs7xP2dK
fMhv2Tg8nx3FmO2cDhPt9Ufd3duLR3ioebSaDrf1/0DjHY912o/4wif5ZJzr
lu9l8YDw6eYzftSQxcOsJXNjffi3+cPnyLHTi1qv+LLv4dA93pGP8BA0/LSH
jKk1at+YG8+orfDebmi+pkd1v+t+e/oof+3R7tL+4i/Lg7qcqzd54RhPc7Pa
GaXt7+mXW5e59Zpbv7J0a3u15ldroDQnfOnmy20e3eYVbJ6l5l9qDormpmis
bmOXGtNUv+76e9f/rX5x9RMoDtaGUp1SdU09e1/VP7rKfX1Va6+5X67i/q58
PusDUxys/rO+lMW++pwUB6tvrMx1hTvFwWKcfTL9rXZ5v7+w0+8ml61WZGln
P8+yVouDT/HxETeLp8XoyqrV09amWd+eYmJlw+pLa0OsL039Sxtz0bw9jUNs
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
+JKzkvU2edBYfX+wb3jnemnvgn3mds/BE/BvY3zO5Q89aHzJ8z2T/4k2m0P7
8Myb/AXHftM3+9dYnLbqjx/8AG0NaCfe7734GNw4dQPfdOAXvmpNaQP5wz3z
ezGGpcmP+Ky9CkM31toGP70Xr7/FDj6hTz3u33DYh/THOcW8tdbkcI+/aGkY
rR3+vdr21uxyAC7n+/zEVhvFpzhozzVOyl63l+d/s1iK+X8WBz3Hb+7rfXu2
fb+6b6uLWhysT2xr6NhnnnHGlD3WGijdPMzNS9l8lc3fVbq5TRrr3RjwxsSV
fprz8xEH61dZPxPrCV93Dq0Nrra56ioruzlXa4vfFdeKd/SBvoMXxcTiZmXJ
Oxvigw62NsraLr0PD9Ge+vnUD7b+sY0faS7Txlo2F0FzFDSHT+sCN99d88E2
T2zzqNsP0zO25khrcrVWV2tZoq11OHhf99l169Z1e8G74Jl76SlWl3AYuvij
6UhnK4dvsy1OrrTPPNd1/iSrFWPfzsfbPpnPHv5t/GCDa8YQ37D+rEPYd/ps
/cpD7sOTjJ2zA95mr+Dn1q2xtTcWK+ceuqfVtyX34WWz8Xv3fJbOGPZPucld
7x7Yd+ayPPNenLkYPnzcc8Zon/muzfP8XqYruGHoQ4yDNT4/mPOM9O7xjsmF
cND103f0fP5q5vrtYmNuMbTHHqYX0F97WF+s8VtexGNf2yPmAZbQz+NdxsBY
4TloY2a94DPG1XVzY1zeyINv5ME38uAbefCNPPhGHvyBLg++sQ++sQ++sQ++
sQ++sQ++sQ/+QLUPvvEXfeMv+sZf9I2/6Bt/0Tf+oj/Q/UXfxA++iR98Ez/4
Jn7wTfzgm/jBH6jxg2/yybzJJ/Mmn8ybfDJv8sm8ySfzAzmfzJv8om/yi77J
L/omv+ib/KJv8ov+QM4v+qbexJt6E2/qTbypN/Gm3sSbehM/kOtNvKk/+Kb+
4Jv6g2/qD76pP/im/uAP5PqDb+rRv6lH/6Ye/Zt69G/q0b+pR/8DuR79Yvrg
hLGx/pzpphe1b4qD5tB6n7+oNWyPL/bc9eGjfWa+ZnN0RoGtszmOth7newn7
zrPBu8/wDH9vPPRBz1x6e9/Y3vjKoTudn62xnz+3OS1Nh+BMRAaBMb7DD/TF
WMFmfXROmE51tHXsXDE7qf29MwOMsq+Np30xnzXnEnPiXWRGH/txukp8htyF
18Cm4Zfr5tV38xm3zvxuMVbm1Pd412x/5Ds8gM+mObCX5k9uD7gfZtujng8X
i4PlJz1j9+xd3VRxsDad+jyUrn9g/QbrV9+4s9KN0W7sdnObFAcb9/00Du4x
Pq6+NMXB+lJexSFW93gVp1/cvPJTLd7VRlk9bWXVYnTbWb+X0rX9Vf9ZGbDY
1xw+zWnQXAeN95w/sDXTuJj6Cdd/uP5U1iRc8q7amqt7r06+Ogr7yG+t9Z7f
up67zmHFYiXs0+23+YN4L54+/xaymP0D1/A31/VvPtue5RqsNR74A1q/px/V
xtkZ5+c22XC6Uf/GZ/Ag/55O1HsmGw73FkvsPvfvd9pN5vBv+xbtmvvh4F/6
7h9zYKRzvWc7l+Mp+u1sYryM03IcnOfjjx57w37ge2NNTk60z/AlY2muYaJ4
MXKqfQhbnAHfyn9n7piPPehIFzcxHxl8fPGIePvshPbbeRY8z7uLN/Qdnm9/
0dPjS9a3NepcYr3pjzVGrrGG9Jn+Vx+Lg8bLmrI36J7JzPQZ7hlmzQ44HeNw
cNhnn8JKZ+HFFS6m3tx7pvutD+83Tmw79ruxKO0csHEzFjDxZo/NGePQEx9+
vKX7n3tPzHz7mXfjNZ6/fntfaftBX/BBvMAehHlkKOMDH61L+9g5eLI23ZC9
MJ82684as8dm+5uexF/PW8yTPW6NzsZvv9lP1qN32WfmzZqHZYt5nx3Qs42p
s+585fzWPd7hevd7+UDPxj0zV6dUHKwtpv4J9VuoX1/9/eoP33ixe3qx1Y25
bk6S4mDzdxUTKxtWX1ocrD3xytf0Kg6xclbtbtVD3vtnTpYsDhbXXod3p43y
0Y5Z/W19forjbX/9P+v3Uttf9Z/FwWJfc9w5w/kOX2guoOZGaM6Exo1aY+5x
vfE19TeuH3L9srzLmnQ+q826Ovzq9qvrGH36rz+eA3s+7H7xfHvQfdOVwliY
uJj55byYj8zOoPPpRvu7uAz09DuLA54NEW0MPNsz/XsYqN/24HwK0PYwHuye
Yd58z/GexWfNjqjdsA8mkhN9Bw/pM/1m+G/c9BWmnTm5fvCxl+ebZL3YR8bd
39v58CHfDR3p5Grz9MgjTh5+6vHOOBrnv+l6FltxO5ce69t1/NseJEPOj9R3
zoC7f/Gw07Na5/aF/WBtm39r3jzZE3BocRZwSHv1yz45fTtOXCsOwsf5i7r/
dXZA84Qn+W1x0Hojd55xtp9zyEDWqrlcngXzYc3hx/ab/Y93GVM8yae086nf
bt/iyzcf5lt+xx90yCr2KxmttHmxX+wxekt71drcudF46ft0IKXNrz5bq9aU
35x6oR997AF7Rl9mAzRW+jn7+vKYzTfGdc+bjDi96PaRMTF+3u07tHEe9u09
8K77tPu3Z9qedasLKg7WhlK/gvob1B+vOFg/9sZ5lW5MdGOlm0ukubZKNy9l
81VeyYbVnTbWu341jYkrDjZeoDJU/SpraysOPs1l+oiVV7H8lT2vfFmb8/NK
l1v/2Ku+1Oezfi+1/VX/Wbmv2Nd8sM0T21x5eKu5NsfNKdQcC8290FhU69P6
dY5vnM693/L8mevfNTy1nmv7ri2gNoLqTKpL6Xmy58zuu+k/7Ul91GffTb+J
hgf20OIK55NjHGYnmZy4vIzu0b/5h3o/LPMc91VnOn3p7IVo+9592oCvL3cx
zPMbODg8nJ3P77RDP+HdsM9vly9R37dvtc94o/XTeBvbycTGfXpccxsd9mHX
Ov093r75Dbx74N38O+ZrOky8+WEda92ad/8ZT37uEdcWE3uL9T/e432njuNr
D126+bSm4M70onjCedb5ugN7jLHv7R3nBP3DL/B/fIuepzioj8u9ZnxmK/R8
e8x7jaG15xxYHBRbDofO+PtH2vNhj7/Wh7OQuWX7Jc/LUaY92icWr7Q5dp+/
fufj/daBa+YcTU9uzZS2DhaDN73F/KsXu26NLm+S31ozpw/OD32wmzszWMOu
L88Z/JpP6PKD+h5meY536Ov81/Cf2cnd2/11v+92Fu0ZtTqc2jhq+6g/QP0E
6kdXHKz/eeOzSjeWuTHOzQHSHFmlm0+yeSabh7l5KUtXX9pcXvWlKQ7W1/Qq
DvEqR82Vfa0+J8XH4mblyuowK8cV14p39e2pffOpXvdRti2+t1+lG/tQ/8/6
wNT2V/1nZcBiX/OoN69s8802/565bg725SZqrobmcGhMqzU1P7HG+9T/uX7R
9ROzJ+c/Vht6beu1NVT3Up1Mz6U9r3b/4nt4jH2HD9nv7rVH7DVnSvxzcRba
b1+gYcjiLPAW9zmn4HP6jG+4Pn3q9Kv2dHWm3jW74v7O/2ayobbhh56nf8bK
WMBE42G+PM9cGBPfzzfVuJOtnZG0ydi4xx5fW611uoUzRvsTD7q75UcZ3s2P
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
v3D/4hNPf++PPvjqnHFOjzgozxlbzOTDxU57vn3jQ/5b34uDy58H+4zTdKar
sTBsm5x2H3fqrFKZbn+np9y8r47tYlU7710PPSNVh1DdQnXvxcHaqevHVf+u
+j/XL7qxQo0hal+bg6K5KZqvqXmcmueweYCbH7j580u31kxrsbVGW2uYlm69
79YBr2xYfWnp1tCpX01rDVzFIV7lqGn+rquc3tX71RZWn5DiYGMHer24WVny
ab2MR7r62Ooqr3Lm1Pf1Kmak1+s7VJtp9caVnXtm6Lg190tj3hv319iH+nzW
76V0bX/Vf1YGLPbBGdfc1/rRxbLW1mytsdYga00We2u1dZuvvnnsm9e3eQ7v
8x8uB1RzQzVXRmOHG1PcuKrGW9X/vP549dNb/tLpo+bDUJtOdVzVfXmXvzvj
Ty4onyz/9JzFKu55k0XGm9B7x+yM0/GxXX3XX/hRL4sFw3R9OOv8nnHyk8PO
WLdPPJ/PzOqHnfj3aTefsY8/xNHDyv3+lNHed6t1+M6hUz3zfH/44A+3mLzn
y8N65gf4+4977nFw98/Pe7EbqzEzjD7zAH78eXHQmc8Z0Ad/oP/wmY70HhOL
g3BxddvdsxoN05lPdzo78D7389V57Nmmsn91AtWZFwdrX67/1b1f1vyWi4ON
8WkMbGNjX5c7Yhg4+nX5l2pztKea17d570u3RkxrqLW2WmuPlm6d7umXyHR4
hL9sQq33XfpeX7oaqfWlua+hM/oqDrE5apq3rfkqm7Or/Lz6veLglR9IfSMb
L9Drxc36WFbGrA2uutnqKiuvVY6rfNc4ysaP9Hr9iGo/vcvV84CDPT/c0xvP
5j1r7pfGvzfur7EP97W65vdyX+Ny+s/iYLHPmjFPrlvr7l/dwMqMk9kmIy6X
4Wp0tmZZa5m1tktrvjTvfXMCl26+xOZRbC6p5phqzo3GIDc2ufFZjduqH3v9
+urvNx2b39QXorah6sqqQ+sZvPJF+W35sN8P/5b3jZ8GXJ5OUPvZxPiBkBP5
dOD71qw4e+vqrG34oQPLYFRzyJRertHV+HX/aljccnC/OPWabz/goO9Wv89z
yIazG9IpLceN65NDVwPwHgeX72+61mGx+2avvNWIOHSqxUH9Hw72bGBtGCMf
4+b8ADOLgx3n+3PI6MrsleWr6y4O1i5cv6n6U9XfuDjY2JzGrjamtTkf7nNB
dL3t07yCzbvbfLzNV1+6tV1a+6w10VoztHTra++M7P7tLfg47HPGLo3fzHeu
smH1pfWlKV1f08ZcNA6x9QVKN29bczKXV1/Ve7qqh1jfj+Jg4+PuY+WGg8XQ
ypXVu1Yfe5VL/E5eS+3aR/muMSONqSzde5qXoP5Ftau25lHl66e5rx9zfjbv
WXO/NOa9cX+NfajPZ/1eavur/rNyX7Gv9PSjzk2u7zmeOdvb5L75Uc/20NrW
rfV5XwN0PiPjNzszr15M8+c3r37zDMMG1/WnORibk6q5qpq7ozk97uOaV8Ot
8V/1h6+ffH0F8S9YhOfWp6I2ptqeqn8zHrM7Vk4p3y4/957VZPUdDHDd+qfb
p7OZjhF23GpHHZgE76aL3H6wV6zh5ZkZJuIFp070+Ptsstv2lTW8OlD++ndx
cO/1m7Mm1Ke+WFzGcoUvFnjtKQ7ecuA8n1/PLSbk2S233DNnbnEZeFxxsOPT
M0PPEpW1K4NXR10crD23/k71g6qfcHGwMTWNOb2PRV2uhuJg8xo171/zATZf
bvPoNrf86/ARzrVmWWuZtdZn6W9KXezFF853dPYIz53drvRsgrPFDBMrG1Zf
Wrr1vutX07qoV3GIVzlqmrftKqd3+XNllurxas+qj0d9HRsL0Ji4xsoVK+tL
WRmzOtinNspHe1zpymiV3SrTFdcaS9JYy16vn219jWpjrZ65snbPGB3z5vxs
3rPme2nMe+P+Sjf2of6f9YGp7e9f6+4OfW3brvuOP1BgaFBgaBhoGMn33j4Y
9Q8oKjAM9J9gUGCQSk9FgQ8GBhpElUFlVQZRQFVVqVU5tIoqg6Kg6rvn/u3z
uStnvb6otmIXHN1x99ln77XmmnP+5hjjN37D+Kc+oNi3f8Pannuf0XxbTqG5
adxoa24+Tv9v/W4djqcynLFnqL1E7a3W78O89jP7zqjDrz6/esXTNulspJZj
99rzDCvVvFIDRG0Q66P7/3Kj1pHJq5dvL+dwnAnjof3fXJU5LGN6/dvndv/6
O+7/4sLOYuNktt5XGz/cGXc0e71oV1M/nablCsPVvb56itPP6PRxCC+f/Y1e
+cTz3t+8tE+Hg9P0Ptj2vVe/tNbOrrPcxz5HHLzc1wvrPQPoI4uDxpbNvV7t
cUfkL8nvvfJ+Vwtjrag1pGosiIPqEanXp46fOrfioJrw9kyxl4q9xuxBZo9O
bftZtw+0HvJ3xu9qn+j7+117pHbXm93a6vrCqdUFz4/TN9Q2Xtp3DO/k0lz5
pbPv6hDVqFG3Tf1S+wuo7+2erG9ivE7NLvNZV37jeP7Wwd3ZYqV4qo9pDPau
96K5OTk/+mv6ceKg9ZXtO/Pzr1oE49yq4SPvyJiz2rB3PY8cf7Wv1f+86p5N
+8X6d+v+rH2Q/ynvxdyf8U/9PrFveYLeMw2L1efufLn8gpy61t5wr/U5Dsrq
wfp9a1fbXtv2HpUTa4+25n/z6Nq/Rj1/df7VPVYPWU3ItE6KMWarnaWWiBoj
1lnvPN4+Zj2a/Hx5+3IXexZyLRZXNedlLszYYLGZ5uXRxHjzm8QR8UXcWR39
M27x8gdP3u+rR4xUW6zsM9fTor9dnLPXh5vZXcOzpuLVX/gOB8VosVvfVhw0
JmzOVFt+kbwjebnWrWhb42ntp9oIV82E6Qips6f+nvq04qBa7vY6sQeKPcLE
QXtr2m/aPtTlisYd7LraT7qHzoLLfWmfupy/eOr3/c0jz1OerH2mv29v6nu3
H2iPc9raMF66Wo1el0ujLdf0rg7x2gt1trpt9o9T0/uu39NdP0RzVfI37jiN
8vytd7vaw0r9R31M467GY81XmnczHycO6q/px+nfWWup/oCvq1dgTYpcXLXv
zMkai747k/hc1L5W81Pds6v2y2rerfuz9kHOp7wXc3/XmOdsfUBxcLmwfsZd
u9aT9zmN6XpnLxbUe5b/aq/KblwX0+oc3x7Ssw/7mivN0/x9e3bbw9TepvZ6
6/t6PX/BPjjdT3tFc8l+Aeonq6ustqQ1FGpwqUmiVon12u19q9W2rk2ev/x/
+ZD9fv6gXBFzZ+bUjDG2VsabEXfEI3Hq6Ld99cCbfLtxUPu79embdk0xDl/3
/X6OeCrm6pNecXC2+U3znvKC5AvJp7Xe5PPak7faTGs21TRQ80dbfTx189SV
FQfVYLdHib1L7O0lDtoH0z7R9o/uXN7cj/8uDjZfm+/tndrhXe/v3Lc+r+PO
28fuPZ5i66X9KVwRE/UNjZde7eX/r1zT1Vzc1SEOB9cTfLUb6rbdaXrb88Le
Ou63xuK+KT81zobcRfn81rhZ6+3rYqW+pD6mMVhzlJ/zTN7vyahtrFLfTZ9O
XBPv1CWwNtP6FHm5cpPMzxqXFgc9n/hc7Pug3rWan+qeqfeibf27dX/WPsj/
lANj7s/4pz6g2DeMG/bl+0ybsdcas97T6637Pqt/24v6XfvS9ED6+8Y7X209
T5pz4VjPvWvPH8yna130uzjH2eFBeGbvb3uh2iPVnnH2krOfTnPsGUd8nVmO
jtmbDrP6zGpU9no/PU+1vNQ2UfPEGvD5kv3e+jj9QeOi8iqftfTT435xTszB
mZszVrl+9/P15sfp313x7smL+XiHid/GrzQvab5SPo84KA/WOhFtayqttVSL
QK0ebXXt1LtTD1YcVDvd3iL2HLEnlzho/0r7O9v3+cTq/u2jPlMc7P3N2Z5h
2DStnvba9vV+3xxPmycufZzDMG+6JOXAuj7tvqu1slqy1sL57i8e2g3P/oAv
31DbeOnOz9NZHZdmOjitOW3rEK3NV6NG3Tb1S+2Fqr63PePsoeMeq69h/M2c
lNyMq16lml3T8rK+WxwUK/Uf7zSijcEamzVfee0zuxycuTljldaP6MeJa+Kd
Wj3WaapxZ62KOLga78bLXO1dz/e7c4s9j+z7oPa1mp/qnl21X1bzLmfG2gf5
n/JezP0Z/7z6fcO+8duWFwlH29N7bTmvMLP9v3xN499eXpyvZ9J6bL22vvLt
2zcbq/WVa+61J8UZ7nk1fuFdn9886vWuYa/3XWFfa7/zf3OwtW4P8RMX/q+P
s7K9Vu09Z0+6z3v0fPnsffTVR/sXqOeszrNal13n8olqgqmRonaKteSN3d5j
nZ11B9YjyM8Ma4Z9clc+z+W95fiMebYXLu/X+TI8WvxzMVIxznyieUZ5OOKg
/FXrO7SthbRGUg0BNXa01aNTp04dV3XOte0JYq8Qe2mJg/adtC+z/Zr72/5u
uDYcDDv72+6zM13nu+FR39VYtO77m2Ij4mD7THtFc719NF5Y+17n/tZWe2jX
WQzw1CMffOwa83XzEa927wnvjt7lW7x0vT66D7k02nJN7+oQ1ajRVrftTtP7
rt/TXT9E/QvjbHe5p6sm87j61qzd1XSb0/E94qZ+pThoPNZ8pRyeS4/1Vw7O
3JzxSeOW+nHi2lWzbrwltQuu2j6r37SGRR6v/CVzuMax9eU9w/gc7Xlk3wf1
rtX8VPdMHLTm3bo/ax+unM/ZcmDM/Rn/1AcU+/ZvvlAYuD18/SGaI+HQ0cb7
+mNrMP+/fa5x6nx8NPL+zeMMXUynz59uUHjbOaf4UfZwsGs9+eo3HGwf628b
y/aqU2//3x7xosa0WFM4aC9y+n991rPVHnb2trO/z2oSw237IKgLrV60+pmN
V7gXV0htMbVW1GCxJn29qq/1etYvWNcgz/Pow3zx6nm23GJ7YJ/Z+9fTcNyb
9/gz8kvlnVqLYY2GNYzWNlr7rzaOtjpy6supv6o+uba9POzxYQ8se0Rq20/Z
PsvrL1mcURxsDjZnO9e1r8Vzbz63D+Yv9rftH8XBiheJg62T5nb7YNfV/hk2
t77C9a6hfaP99YqDw/DWVmsi7GoNtCfmM3deFBP1DY2XasurkV9qzcVdHWJ7
z2x129QvVdNbHLTnhb2f7IfonnnnRxhnM98k//COn2/N2lW/a3omYqK4qS95
9TEXdzU2a75SPo88E/kn5uOMT2rru4lf4toV71bveVfLqTasnF65TPYcMaat
L+95xmdqvz97HomD6l1rq/+p7pnaL9a/W/dn7YP8T3kv5v6u8c/hn9jnT/fT
T3jW+bf9qn0pPBoHqvvtmbcm+/6eY/tGeNdab902P3vu8wc787SHhINXf3A4
mD84vejWfZ8floa3+aKdfdfHaHpi5Qqzj48R9r31NH9qln0cFi6Oai88e+TZ
J6gYcdfauNpPQX1pdafV4Qw7nn1VPtMoU7NFLRdr2xvf+VTW/VkH0XuGN2Hc
eh2up+Ew6MRkTlzmxGa//1lthbWH1uZbs6+mjbb6b+rCqZuqrri2PTjszWHv
Kns7an/eB/mtP3J2a7h5Lw4uDtK+0vxcvKj9rzkd9vQsW6/NUXGw19ur89ua
B+2RxSz7vOzma1iTL9LniIPNq7AozGt+tK/np7U/tKe2V/T//MdiLeKgvqG2
8dJx7k9/8zcuzWpq27+1rUO0Nv+qUTPdNnFQfW/7XNj7yR6I9gW2F6p7pr6D
PXTMMcm1kH8oD9/atLt6bbW8xEdxUL/SuOtdjzxzl/J55JbIOTEHZ0zSWKW1
luLgFdeGd+raqX3ne6zrVEddfq+8prv4trbnnLtnbe8/ex7Z90HtazU/1T1T
+8Wad+v+rH2Q5ynvxdyf8U/9PrFPu7XVM33yKB7+YXG4U5v0Xx75wr6rfSJc
ycdqXndW7ntb251Vu772mPzBrjEcLBfbNba+2we6n/aV/MHDEzr+YDjY94QV
zbH5IeUL50+cffjHD7zr9/MrwoVee8bmPx1c/PqDvdHbn4o1/fs/+7NP9pC1
p5699uw91PxZbM6+DOpUq1/9np5n+75aZ2q/qAlTrM4c4ny27vfk737wwKPF
PzszhHmn19OPPx3f7/ufrLVXi0b7qts231O9U/XAte2dYU8Ne07Zk1Hb/sX2
NTYX3P3P39fufottdu35jGFAc2p1De0H4mD+/fbKzjbbx3t93Mj2hMV0xMGe
+7SY+67Wc/tA39O+2jwOf9u3wjVxsO8LW88aeMPE5nlxtfZJ46X5oL3ev3Jp
tOWa3tUhqlGjrW7bnab3Xb8n+yHaI9je3+6Hd/6CuSQ5FfIM77j3V03m1Wir
2aUtPoqb+pX6m8Zgr3Ha5S7l9sgtkXNiDs44pPFJ45b6ceKaeKfGnTo/72kd
ZF9rP1fzIu9X7pP5X+Pe4uC1B/Seu31v7fdnzyP7Pqh3reanumdqvFjzbt2f
9rUOYvxPOTDm/ox/6gOKfd1PMaL26aMv/LePM2hjNS29/Kf2ifzB1U2MO9o6
H2fm8Jd/8dCWCTvCpa59nLfTD+bg7PzQ/KGu7Ylzj/3/7LU/+fCsx3nshyeu
uLq2n2x//mFntcV1T33OL1981+Zt39HeUYw37LbfeufQ7Diy9qK1N9+v6Nln
D6PTn/CPX9iGZudL71od7Ksu6HSyw8HDnfn6hU2LVXZP05l5+mcfW+edZxrf
1mj7ZdeS7316+p6+bOMXqVOqjre2PS/shWGvKHspatt32H7E2ovlLgc6e37w
sw/jekh9OP0bv37UpMz3b2y1nznID+OBFz88vU2/fvhPxTbFwfCztddZtLXR
vO59rZ/W0nrmtgbCRXGwddWz7+zbXtZ5vznQe5pD7a13vqHxUvOJ8mrkl1pz
cVeHOO3y1aysbkX9UjW9rzi4/eiuH+JiostPDQft960vYF/Ua87oPR6F3EL5
9tZfq8ks1+KqVzlbrNSX1Mc0Bmte8pq7HJ9Hno98Enkm8k/EQeOT2sYw1SsQ
18Q+dfDU/1E73TpQe468Vwuz/pjv5YKNgTfXNnZ3c8Bet/b7u+t5ZB292tfq
f4qJar9Y/27dn7UP8j/lvZj7M/6p3yf2Nc7hSD5PY9L5dzHP1nLrs++Ybzh/
cDjYWbi/Hw62N3dfxVeLl/bcur54pOOTds6vFme9/LYPPzWKHnm4ODP5BNnt
e8Xs29/bQ1uH7Wn5aI1/Z+z2t8au7w3LGrtxX8P39rFwsDFujMotNS+KgYSV
9m1vPnTvYYs9be3xZ+8/eyGNBzpMWZ+IsK9/w8/ua3nA4WrvO3nTf/FpvZkW
d+0Ztcfm1zfPuq+utbXaWbVr07ZXhb2c7PFkD0Rt+wXbRzgcPPfxN6+Y7XKg
s08s9VFL8vAHxzHv/hqjxsq6Re3xiabFuj5TnRHk0B5+wpcfzxw5Z6T+9sSL
f/TkW73xrIyfDwen0d9Z7MTjf/7kvv7pY5wOJ/5PPh28/u5HcVDfsDkfLlxj
p823/qZ9Uhzs/NjcK8ZwV4doPY8aNeq2iYPqe9vnwt5P8pPEwenVtT+t9mJ7
eBgQnnv+/6aY2PJEcifk0ttbx1oz66/VIVGPS73Kaw+Cfb6+pP7mNQa7HKW5
S7k92vJg5ZbIOZGLYkzSWKUxTP04ce2Kd8sVqomnFtBVD2FxD2th5APLiTIv
rH0XH/CM5Dyx57t9b+33Z88j+z6ofa3mp7pnar9Y827dn7UPcj7lvZj7M+ap
rQ8oDhYXDdcW/5wP2PubG2FcY9h78ptWU9/3Nf7tE2HX4Wf/7ePsm395aqn+
5afVtR1f6OS/2nPa/591esXKXrWG/W33F4aeXox//eDa9Azbh3pv2N31d7/N
yYMVf/7w73pPGDw7f7h7yQ4fe71z/TRzsvucxr/cVD6Y/d+7764nfLM3rr0C
x0/ptTc+528ee2z31X7feWC1fOHUuCzjzIQfPceT4/37x3g2/l1fc6o9tt/1
np5R/oi9C7Xt87v+3z2XvveZd3zkLqeRoz1f7/B+vnw8w/BzfJ4w441b+usP
2sO6J+fulevNT1xucXUl4Wjftbxw13Bw+y9eWl2Nadi384M4ePI5P32M/+E3
ffUY/8b1Lfb+9fR8PoiDTxz+R5jYXtT5I4wzXioOyqW545re1SGqUaMt5n2T
pvd7/Z7sh2iP4OnfZw8rF6t8b3/zzG8czHyQHAn7xMkhvPbTWd7oTnvkqsc1
TBQr9SW19TeNx5qjNI8pt0fOjzxYuSVyTuSiWHdpfPI9rZ6r3p14pzas+nj2
FtFWJ8Fa0flc67M531CulD2gjZkbK2ieT+/POWOu1p7v4qD9/ux5ZN8H9a7V
/LzTPZMnbP27dX/WPsj/lANj7s/459UHHPaNL7pc4dF1+MXDN+w6wmBxsO+a
jvsdDo7XceJrv3nsW2FJuaH2ymevhEceMdxov+n7y/01Vu0zfWbfFSbk284H
LNbUtfV6Z4XGtHHIHu6Hg91L+1D+YOt0f9s49Le9p7NI78l/KJ7W+si/bY70
nva4/r79en5PvsrRnpnf8sXHwwf66Ysnc+oAf/PCwVN7/+UrfpgPf3rU/OyB
g6uha96Fe42Ndu/J52ivbX73XLLta9/cDL+naTy7dd+5ovl04qzffXID/ujp
k/764Sd2Pev3pN3vs1dnv98dvvmXH8dF7RlrD9+Ga6v72Jnh1M18/zEmz3r+
x1jNh238pjfeNSzfOg6rOLj6yvD35KNPfrPrXR3rnW9ovNR8orwauabioHWI
1uZ3PumZ5h+q26Z+qZred30u7voh9rNYmTg4Hd722fat9RV1T/Ns/02xr3Eh
5AfKmb+rI7O2Wr0R9SfVZNYWK8VQ/Up9T+Ox5ivFQXk+8mCtKbB+RJ6JXBTj
kMYnr72S57updyeuiX17j/UI154j9iJRP8G6Ufta3vGmVpdqrd81biAOOn+6
hp5p9l3Pd/ve2vvPnkf2fVD7Ws1Pdc/UfrHm/Vr3Z+3D+J/yXsz9Gf+8+n3D
vp55r+cf9b19fq8Xz2lffdZvvXgy3W85u66z78wna2+br/EWP3zEuX7YNa3e
4Gge/cUj/9WzDE+LZzZO7euLZ4ZNvd61nfrXP//Mv5udfzd/sOvpb8e/7/l3
zWFf71l89dQe/sMDB9uvhpthYuPcPtd5p3hw7+/ennUfP1wdQ3tvmN9+3t47
/st68i72OL7P4d98+cLB5kSxqO6hed1caJ02tj2v7qd51zh0PdrNvc42+bCt
z645v7J515zpM5tXvb97026fzo9sDpTfDDPy1VZz0fUNo/rRHp/08FC/82n1
lm89in/6rP14+IKvfhzh0MHUrx5233f8tO+/av+bM2HUak8aw8Vkr/71fOrm
1HBXHLz6houpGjvN12sPaM8UB5s/xULDsrs6xDuNGnXb1PTWFv+uvZ+Gf1cc
7Gf9fseL6HftgasZ7O+3p763j13P88v1yH+44wTKjbd2zBrqq67IfFf1J9Vh
Fh/FTf1KY63i4LXWe3uvfJ4r52c8WG25lHJL5JyYgzMmaaxSHNSPE9fEO3XU
1Y9VQ08doauWgr1LVkcjl1gOlXlkbePqxhM8Uzmvhmd7T//vb+35bt9b+/3Z
8+ja92F612p+qnsmDlrzbt2ftQ9yPq+2HJjl/ox/6gOKfWF2OJs/2P22v/ae
5e+Gg2HaqQv/009PrsSH+A6Hq/iTD+0p7SXtVefc+R8fXILGL35B99L1tLe3
V3Vfw8HmW3tQWDv/LhxsLKfzlp2fNE3UMKS/7f3FURuH8Xw2hv1t19899nrX
M71xNQfGK1tPsMMd/cEjR7Xc3zRb2r+n93J65x4NtOXIdk5or25+tE7Dvqtd
LqP7b64Vr1q8tGd6OEAfHvOhsdNunfQ8OqO0NnrW+ZXNt+Ui2//6npNbfbP7
vnz9fMhp5oQxJw58aiNWNxnOde+Ln4ZN/T/fsXmwPGIYu1hor50866/rCfXp
8JCOJsDT337wqaYL0GeuxiN7mBtWDmvFxObW8Um/+ixeKg7Kpbnjmt7VIapR
o25bfzd+spre61M1btzinvZA1LZHcHvU6mTbT7LbU8XBaXBkz3dpH3a/8gx/
l9+R53Dt/T0+vDhonzhrqNXUUltS7WVt8VEM1a807qp9re+e3yq3R86PnFhr
B+RSyi2Rc2IOTt0e45PGLfXjxDXxTk11+4yoK6u2nvpC9rK0ttT6mp2Zuia5
VeaXu5fGrs80tuD5qvncHO6znWO9N3xfrnZacvZ8t9et/f7seSQOqnetrf6n
umdqv1zr31f3Z+3De/zP00v5Leaprd8n9jWe7Q/5jK2ZPiNs6vfx/tubim+2
P7XntH+spj5f59R4/LtHHXE+YPtM3xV+dc1d/9Gu+E8vjFvec7FQcXAYN38w
H3D82Pb+sGyf37WM55Pv3Lzq/Z3j+9vphncGCA+KzbZP9ty69+Zpe2Rng/By
Wp9PXsyD7zh9l/P/n794k/mSw4LVaZw445888K77aT6Ux+ie1+uqs5F2c6v4
zd6zfmvNx+ZJ+3B7eOeWcFC7dTVfsnXSHAjbVyMQvrZ/dA5pLLTj5zSWnStW
/5GfH96tX+nqE8fVCfNOTPN7j3lhD8fmw6n1+csXDp7zwxePGo1pzG2My+2F
y/Mt73zDa7x0+UR5NXJNxUHrEK3Nb5yaI2Gvum3ioJre9rnQvuuHOAyc5uKw
pL2oPaXn3J63WsJxTMOn4hjtBc0j9yjP6saszOnIbbjj+1kLdq2Pnk6IOlrq
SWqrsawtVl79x/mYxl2Nx5qvNI8pt0f+jzUC1g7IpbTW8sozGQ6ajzM+adxS
302fToxTU92eI75ury4199QaEgetObXWRr7xXa75Gm9/76zlfNsc7W82j7pf
7XDH/mLT6LHvrb3/7Hlk3we1r9X8VPfsTvvFuj9rH+R8ynsx9ycO6veJfdq9
t/2hfenoaZxawe6puoj8hJOz/+tH/u7kSf/Xg9fRuIatYV9r5/SO/tnjenp9
GNe4zV+exunuZXnD7OKtzeHh4Ok/8fePz9c37Ll0fX1mzzSciYPZszs1mv/h
MW7d2+ouO280Fp1lw5au88TxHtzRD08f5uF7LEa4eODq9Fcj309zujXaNWUP
E1uH5afCuObZ6Sf/D4+4gXHUq924ZPc53c/ipcstLo6q3Xv6nuzWwzg5re3i
Es2bPrszQ89svdme+PbI5S4m3j098exVr7Gco30xToz1O6/4+XzGxme+4BUT
9Q3vYqdqvYqDnSM7nxULvatDvNOoUbdNTW/t9eGYr2efNHtHr4+Ydv+ur/Vi
bj3DftqL2tPEwdVlLQa2veh6Pl+c6i53I59Bjp9c97uaaLVB1MtSQ1Jd5f1+
fdP2ulipL3n1Mc2NLkdp7lJuj3xXObHWCFg7IA7KpZRjKefEHJy5OWOV+mv6
cfp36qvbc8TX1Z5Vc0/doeGcc6P7s+5mGJot/0rbHLRxeGMRnsGch13b+sfO
v+86xcH4MH3XuM3r+W7fW/v92fPIvg/qXav5eaf3Ys27dX/a1j7Ie9E292f8
Ux9Q7Avv23PaN5pz4XyxpNOb8H9+Wp6uPTv+RmPZZ60nRXvycoJd53gv3ctT
N/zx/mmG955wap8znN3rzaswZJzSsLL76tl2DX3OU2ftcQ3DxDCu+dPrqzdp
nLvmzir55o1RZ5Np6cSBWU3c6ummY/2mS/Ozj6u7b660P3VNrdHiNmGNtjio
P6jde6YtoD087X6yiw9lN3fDu/zB9sZeCwd77tOxbr6GgZ0nen26DZ0Xw8fe
17Pu7zoTTFf2qUv3wJwwc/WM470snxp+rfY/fHvi5D/CxPmJxkvvuDR3XNO7
OkQ1atRta0yLW4S9ano3rt1rsQX7PdkDUdsewc1PMXD5wd7X/Ot6tLvG4eDw
p33EPefuTG5synxNe9lineKg/HbrvKyDVg/k2iPVnnHTT7angH12xEp1mPUr
jbsaj1XLyzzmlduzWkK5QNbHWT9i7YBcSjmWck7MwV1zc/PR9Nf04/Tv7DnS
nr/4s6+Lg/a11FaXT02GxmwxUutx5CSPm9VnmY82Jj98bI7dncfWD335v/m9
zYX+bY8ZHzS780bPoTO6Pd/tdWu/P217Htn3Qe1rNT/VPVP7xfp36/7kfGrL
ezH3Z/xTv0/sO3r3v3rEHhub9ublAbuv9pPFP/Pd5q+t7mN41/h2v+Fjz673
h3fzB1c/Mrtn1P7V/fY5q7PYd/X6cLDvbWzDu/zEnnPXlt1zzp7mwPKVzdtw
pPhw99I6S1ek/xezm/+zuOg4NE89nacW2o8f/mBYEtY0H/qc4WB2r8/ON9ae
39d1t5+Flf83HJzdfB6vsbGaH9pe0zktfMwfDPfMOTa+4WCfUay0edU49Dnt
I11LYzT+8vJqYVb+X+NePUqYWZxz2o76htd46fKG5hOvvJpxTe/qEK3NX+5p
HIvptomDanrb5+Lznhfv90OcPsbqgLdHaE9ruP9Pp3yxpvVwbJ73mcOh2e4z
nr2nvXvN0chVkLMnp93aLnHwTvdDfUh1ksVB++l8U4+5Yah+pbqUxmPNV5rH
lOcj91UctGbEWhJrB+RSyrGUc2LezXyc8Un9tTsddTHO/iP25/J1ddrVp1WX
T50i9Rneq1G98pPlaN3F541RXM9mm5/92EN+9nQihqk7D8TZ7u8b9+bQfHB7
vtv31n5/9jyy74M4qOanumdqv1jzbt2ftQ9yPuW9mPsz5qmtDygONs7zv3q9
fbP3NOaLhYqD+oOrE2lMegbF67ofsa99pc9pTPr8sG/v2Vmi59Fntl9nh4lh
3/z06a+u7r61mt219czb+7vm1nHrbFpz+U09j84Jje/RQfvRqw/V+IyN43Cw
uOXVnhbcfMPuee9pnSwWGiZpN+baYV/X3RoO+8Kp7NWGi4ONZ+9ZbLY51zNo
/2gO9SzbP/MTl4vsexr38jFde/5h5/HGuc9pbIothqdior7hN8VOh4nyS625
uKtDvNOoUbdNTW/tfL72n86H9n5q3rb/dd/t8dOB11Y3uHnVPJ5m1HrMLGfY
PNXePtbz7O+mket+cnfeNv8iP0Ge3jdx11fPZY3zXe/vO21k+wXYQ8feOlfc
HJdWH9MYrLFZ9buuul7zFa882NWJWD9ijYC1A/InteVYmmszB2duTp1Y/TX9
OHuO2KfSXl2+rk67WrXjYXU96hSp1TDbnytXuWc1v1D7mr9e3H4YOM0i+3Fv
3u6ct3z4+sZvrPqc9XPrOpt//b95sRrP9it7vouD9vuz55F9H9S7VvPzTvdM
7Rfr3637s/ZB/qccGHN/xj/1AcW+7n+41hybT9fnDLMW88xP3N8uthne5dPu
c3p9dtjXXA03er1nkx2uZfeZ3VPvyQ4Tu4bs9sT5j/3t6hYb6+zupc/vu/Lv
w+s0gdp/8qlWa7u4cs+APhMPTNQfvGJfr4cvV3uct/l95gTHL81ejfBwMLuz
cXbvTxdlf5sdZk2L44qDvWevD2fHz2nOdf19dljXGPZ5vdZ5QEzUTzReesel
kWtqzYV1iNbmq1GjblvrJWzLX1fTe/3Fw277PdkDUdsewfmC7evzlcLB7UHN
+8U/Zw/Hdjbf69PXHkexfWN5w9mepXe2br8153LHQ5CbJ1/d+mVx8E7nSu1H
9ZDFQXvGaV97qg5Dr36lcVd1KfVLxuGR2yP3VVt+rPUj1pXMF129hpzJcSnl
WJpru2rfLTcnDuqv6cfp39mfy/6Vvm7fZ/XbtdXx21mpH7WM9AmHTzt76B8O
//rdnoO5bGP4vT5NAc9yzuG+v+fcZ4aVfW9/szPFfMPhYO/t2g8v+OePHH04
eNfz3b639v6z55F9H9S+VvNT3TO1X6x5t+7P2gf5n/JezP0Z/9TvE/sak17v
HLTXw5rWSJ/TdzWO00kb3g0H9/o0B7J7HrObo8s5NnfHqxlWho/7zDB3Pmaf
P7+yudh66Do7k/Ssj+buLx85o55vmJFdD8Tl3PuO5n/zuthg+/g1LnrFwfmA
45EOB6922FuuMFyTg9paDwdPr6x//fD1xL7Zw7vpEve30y4eDva8e3/PqPeH
uY1zscX1p+uawxx9Q+Ol5g3NJ8qrkWt6V4dobb56Neq23Wl62+dC+64fYs+l
seo803puj2tv1G7Ozx8cvjUPdjbeut8eo71YUmeKPq/392yv5+fFkbTNs8g9
kIMnDt7VLKvjobaVOKjusf1P7Qtgnzj75oiV9he48zeNx17jtMNEuT3qmciJ
tWbEWhJr4qyVkzMpl1KO5ZVzsryb+TjzdPpr+nHaYpx9u669LNfby54marmr
baumn1pG6jlY02pdj3zmK6dr92w835iG5zrn8z5j573Z668nJvYM12elc01z
onvomrqn9tHiTO0nzd/uW53/S9/bV78/ex7Z90G9azU/1T0TB615t+7P2gc5
n9pyYIx5ausDin3/v+Kg2Ncabe02v7XFu7Cm5z9+afvZai7CwcOR+rwWo3lz
6l4ODmb37Kat2ZjEe5wPOBzc672/62xdNS79bdjX62KivuFd7FRejfxSay7u
6hDVqFG3Tf1SNb21Fxu79kBcLPRZF/rS9tFuDjQOxYV7vXsI98PV1uZ4kst9
aW8vX95tP9tPZr+3P3hmNo5kPkWOgbb88z6z/bI1bZ2yOKiGVTWmTz7aJzUe
1fwXB+96w/m6WKkvqY8pDqrDbO5SPo88H3mw8mPVPLGuxJo4a+Wa24uxyp+8
41heOSfLs5mbM1ZpzxH9OHFNvGtu9nPtAW1/k72/vVccVN9vNT1dtxpH1rdO
83r85nF55TzL9bI+xpi/sY6dARtfz3sbp66na+k6ljvvZzHX5bt7Bqsb7fpb
e2HnYunP/fXVj+Da8/2t1+1bv79rz6PhoHrX2up/qnt21X5Z/bt1f9Y+yP+U
92Lu7xr/HK7d2X/oODhc67NWx5fdui0v1XfvPVccbE4MB4d97XHWX/R6ONj7
rzjYtczXC8vExL1nr4uDfW/7zHKU78VL77g0ck2tubAO0dp8NWrUbRsXtNfV
9LbPhf2erj0QZ+8MUv6vsTm1lb948IfDu+PD/vHjvrpm7eXVGoPxPuRGLi+0
PIv2ztbjTW5PeO9s3LzQlkuw2tLWnpxzcfCuHlm9DvUbxcE7nX9739z1g7Nn
nLipX6m/aTzWHKW6lHJ75L7KibVmxDpK60qsg7M+zro5awfkUsqxvOrgXX+G
54tPGrfUjxPXxDt7Pfu6Pb/sdaLee+u4NdqcVv9W3b+urXFq3NR/sO61+xy3
S/6zvC9x0Pi/cQ/Pfs7/Pn9x2eb+4shdS/id3XNaLHz58T6n9/ae/tVunnT2
7YzU3G+fbE+057t9b+39Z88j+z6ofa3mp7pnar9Y827dn3gn51Pei7m/b8K7
O/sPEQfz+/o+7fmJjVd2cdHme3b783y97YHv4eBipOHg4pzDRP1BcbC5tvUj
Jmpf46Xv5RPl1cg1vatDtDZfvRp12+40ve33pG2cpPteX9X8qfEZw+j86NaK
dv7i9GF6du2djWlrq32kz2mP7lk3L7Rb0+0Nw8Kdi1cLN39xa1/b87AxIvMm
8ujueObWXlmDLA7eaTaqY6y2vzho3zf7n4qDYqW+pP10jMHad0DbPKbcHjk/
cmLlyqpzIg723f30ujVx1spZOyCX8j3su2qmm48zPqm/ph8nrmnvjNbY2wPa
Pph3vcDUgb/TwlUH6aoFsRpY64DkQssB0280F2AMRN/NtaDdmPeexVK6hn76
jvL6xRHC2n625nZtxQNat/3b/CnG0JlKHGwsG5N+7Plu31v7/dnzyL4P6l2r
+Xmne2bN+10s1HoH+Z9XDoyY+J4t9v2h4OB8wOZhdj7g/L7F38TBXs9u3vf6
eDLDxHCws/Tq6684GF9gvpt+3+w73/AaO50tr6Z1cc5cX/wray7u6hDVqLnq
tk2/VE1v7emer0fweDX5iNMW3dlvnzt7Mazuo/Fp3XTd5Za6tp59z3q9zrW7
r8a8tdVnNO7F2VqHrY3ViI87o709ZTVqe80zsDmR5tX0U+QMyKOTTx4+NM7t
s9Ydq7+hJpU6jeLgnYa/PW7seSoOatsbTgzVx9T3NDZrvtKcpjwfebDyY60f
sabSWktr36yJs1bO2gH5k1c92Pc4J+bgjEkaq9R306cT18S71mF41vjZE7P7
bE842pdvfcHUhO978mM6V6qLqybSuL+dB9WFEAfH7Q2XtOU+XfPjGxdzBJ4P
p8G32Ones7jK8rc7u/R9+a7LF+7aWs89y55pz7yfzj2NfzVOxSIWb+lzOms0
Nu3n9ny31639/q69/1aLd+37MO1rNT/VPVP7xfr3u7o/+Z93GHeHd3f27xsO
tk53Vtbu+bVfrTd6r7dWeo/4OBxcjFR/sLU0fFzd/fw1sS8fsD1+73kvXnrl
0gwH5Zre1SFam69Gjbpt1ZgsV6Kmt30u7PdkD8SrvXhpOfDDAfvyqS3znUfO
sTW+HL92+3x8ivaU1t144I1/Y9L9NGfaU8NMbWshWpPjy8z3GybufKtt/Mec
iNwA+XJ3HHLri9XcUHvqTo9RvWJ1+8XBuz6n9v4WH8VN/Up7yRmPtb+AuUv1
J+X8qFcpDqphYn2l+gPXuu/lo6yPs0bA2gG5lHJL5JyYgxMHjU8at9SPE9fE
u52Ze5Y9l/WJtj+mPcLsk6KtVrx6uWoGqpWkXsS1ZnaYIl9azpi5cvMF15jJ
zoqul8VK9E/3s7hJ/mHXky+bXdwgjajGqvnQfnm1278a49ZduNi/XWuvt+92
ratpsee7fW9/9d8/7/e3nkfDwea8OPgrND/VPVP75a7uz9qHfyrGfRv79wEH
5/c1RtOW6fvEwfcwsechJg7vWi/iYO/JHxzvdJiob3iNlw4HzSfecU3v6hC7
32H0nW7bnaa3/Z6u9vohZj/11T6uf+J8xlPf84PP7OXDi4G0T3TNjUXn18VI
V4udLon2OP3TTu6cXX60tT5/oT1vvAJt17LnW+M85j7u+ABy5OSNW0d8p62h
9pQajOLgr9Dqt2eNfdzsZyoOaouVYqg+pnFXY7PmK+XziINyfuTEWidiLYn1
ldZdWvetbo81cdYIWDtw5VKOWyLnxJ4j5uOMTxq31I8T17TFvuJ+3VOxgbv+
0V3Heofd9U/J7ynG3V6kfqC6Sc1Re22sfta6oebJ6pHkj5k331h1XcZPPDcu
bzhezuzxcoy57jwybllj31zv81o7YePWWc9jNa3zJffsW2/lp1vnfV6/79y2
Ps6dXabPuXoHcdB+f3t93Bj7PkznU83PO90ztV+sf7fu79vg2rexxb5/zrjo
cLB5Pf00bWOh4uD19WGZ9p1veBc7lVcjVoqD1iFam69Gjbpt4qCa3trtxSdu
89NP9kDMPzxa299/5BJPr+P//FFbHFzfj/KI04F41gsNCz9obz02/1svrQFj
J4vHrK5be1ppqwMYn8416zn2LrZjvkMOgJzwuzop64jV0+j7T63MLz/TXdRW
k9/eNOLgXQ9T+3qLj/YBF0OvveHWM87YbGPVfOj95jHl+cj/UZfSmhH1u6y1
VIvAWm9rwK81cfNLrB2QSykOyjPRlotiTNJYpTHM/q79o7Ujrol3y+13/mif
ab31PntJi4Nde7jb6/ZSUUO+97UvdW1qCaqh1Li0hzVXrKXVllPd2u/eujZ5
ZebTpy3QczCu4nly9beLSc9ufHvPcpk9i/mPjUX/9vlxscLn02vvxEjnv/c5
8bW6vq299rHWRnOo+Vy8vvNRz2x8mPd6vnet69+XPT76tefR+j6ofa3mp7pn
ar9Y8/7/gnF3eHdn/65xsL2rOXN6eHz5wj7t8EL86pyyOMl72Ld46XKFxkuX
Q7zj0ly5pu/VIX6TRs102/rb7qtrVtO7z+nMe/Ts3vo92QNRexi3/hynNuJv
Hnh3eh6e3r7T6NEOK6eV9NTpfuDfM2b36EUcb7Gf1oF2eNH66cy7M2370HIe
w7qtz+tadZ2Kh4vnmNdoDymG2J4h501egZwfa4TvNDTUlVJzWO39u3401x5t
9vUeDoZx7aHrcbPXxU3xVH/TGOw1R7ncpdwe+w7IibVOxDpK6yvVH1Db5Frr
vRpw7Wt93Hs6sdYUyC2RcyIXxTik8UnjluKXuCbeiYOt2TCoZ3DXV9qeYvZV
0VZnXn1dNQbVWVJfwhrba53R+NVyzMytm18wxuLZ0vW1/mSLo46/u54l46Mu
Lh22tnb77MVRW9s9n9X19PviqTsLL3fcmtyzyz797v7qUeeeT7e5vZygPd/t
ezu/b9qh63kkPqp3reanumdX7ZffNsbd2WLf7wIHy4mMu99+aH4wvFudwrDv
ztY3NF4qDr7Hq3mPa/peHeLq9K2PUMNtMdL3cNB+T3f9EFv/rbvGM3wK49az
aT0MtU/t/el3vJqgcoLh5ng2/X3vz3/SLj5afW2Y0vm69ddeY+3b1kz1btrL
5+XHLcfU712bnlGN24QRrcnWp3kNeW7yve/qoawRbsymbaiO4p228K/Q3rcH
jT1J5xtee3b3HvHxPayc75avIQ62f/U5qylePNZ8pXyeK89n3Ff5sdrWj6jT
Zd2lugTWd1v3bT24GrDv6cTuTLSaArklck7kohiHND5p3FL8EtfEO+1n7exj
PqdDmm/X+ll/jfDvrudm19+/rcM7zfnmTvHS1p+aS2pNrEdq+4A4KNe67+zf
7ku+mbmG1XhOf2DnFc+fzc+dTV2D/TvdhmnT9je995pPDOv6f/tzMdHipp2B
i6nv/NJ49H3bn3sO9nkfP7PrWE6w71q+b/5d7/87et3a7+/a8+i9vg9qX1/1
P6d79rvAuDu8u7N/GzjYuGi3j13jn+GLvqHYdxc7vePViIPWIVqbr0aNum3i
4F2fC3s/2QNRHOws2Oc1jp1JOyt31mp8WmedP4uRhnft8/k5jdlTb/SBgc/c
38t+68v0lw+/MXw82kk/evWFfHJM/5E936F9sf2n9TGOWWfF1klzfjVursHx
JJZr3BnVnIV5/Dtum3zvown19bTkXpoYdzpR6iiqJ6yu/s6l60G2/mv2JO2+
1ptbHJwfd8VHcVNf0lirMdirfe0Z1zyQ5yMPVn6s9SPWVFprqRaBul7ioLXe
1oBbE3fViV3tgFxK+SR3/bnMwRmTNFZpDLPvbk22n4hr4t30izsnnbnw8wcm
9oyffYoedRjtr+1p9t+071h299u4qT+v7q44qP6SuhPW3vbZceCzrUWSgy0n
zVy8OQhjMp5FXY/9bc9nucD5eKtfaa02z/tpzW5N91OstOcXDvZvn9V3d/09
p84CzYvmZ/Otz5rudGu2fS4um3bzo2fae7quxUvt+T7d0WI69v6z55F9H9S+
VvPzd41xd3h3Z/9TcbB4QPMkXMjv7ozY3pS9uKj2Xez0jksj1/SuDvFOo0Yd
m2HcOKLDwfW5uPZ+mj/YZ9ojeLWEYWKf3zm094uDxWJOv6RH7O9lT/82XMvn
y/97xpc+rYfH+KLHP3yzV4/f+8ZFDUf6zHFS24fzz1o/2v2s3tu15vnTmMxd
nsLcvRw2ed13Nb9qYqgNpUbinYawuvr2WbP36F0/7uZ2z6u53fvDtfVYidNS
HFXc1K801mo89i5fKbdHzo88WLmy1o9YX3nVHJgugVo9aptY620NuLY6sdYI
WDsgl1JuiZwTcdAel8YnjWHqx4lr4t2JlZx8cfP7uT4+rA/qNFUWV7/rxWlv
MnuyqEuvHq+ahOoyqUdhTa51SZ1henbtrXLSzMu3tvp/12hMxnNpdq839q7N
5ltzInzs+WSvbniv91mL/2iP2xqeN7YnhvTFIxcf7jf3mpPN2+LIXff4TmFz
c77x6dk1N5vz4uBy3MU87flu31v7/dnzyL4P6l3/c2LcnT3s+7b+YOuh6xAT
9Q2v8dI7Ls17XNO7OsTV6fce8W56p76upvdwcNybu36InaN6/7S4h4PrC9yc
6nN6/eR4/uixl+ZLNA+KBZaTKEba2m6sxEHtcGH4NhwY9vV3xkUXb519ajO+
epyniyM0T5tjrZOe3dbX1tHdmdPYi7kJc/Ty1uRvh4fN3ZMXeavzVe/iTg9K
jUQ18+0jc9dbzR6j7bXrwd099Cy6htZda7M9TVt8FDf1K427Go81XymfR56P
PFhrQ6wfsabSWkttdQnU71LDxzysdd/X/O5q4qwRsHZALuXn/bneOCdyUczH
GZ80bqkfJ66Jd+cs9+hB/fGci37zWi97vZjm0Zn48Wf9qU98/fWZLxy0P8s4
P42pGvXtb53rGgO1CtVoWr+OYp7W6lqjtJqhxlWumjl6cdBYjbbn1dbucK3f
zZ7f10841lmun9Z819vP4R587xmT+umrf/qzF9Pj7NF8LNaSLy4ONt+bsz3j
4gvto/2ue2jf63ywWt3WS/fZnrc8xXq+2+v27+j3d7XtebS+D/9UXPttYdwd
3t3Z4mCxgOZ+uNDciG91+ElvdvtVuNbcklfTWmsezX6vDtHafDVq1G274qCa
3tc+F8tXTgtO7JufuLqbvd77u5flQMeZEQe7z/z+9saeX/OwuE/rsJhg3NHW
ePjVz+lPc/KDrfvs4obaYWhzNz+wfX91iP3t7M55b9pK4uD/ftQtd7+uI8+T
xlvuchDy0+RsW7t0V9ur3oW6T2oh3unk2zvGfmp3ONhZJZ+l726uDrO2Hluz
4qPYp19prNUYrDlKc5fa8nzk/8iJtWbEWhJrLdUiUKNA3R51vdS7s9bbGnBr
4qwRsHZAHLRXlzwT+Sfm4MzNGavUd9Ona/4uDtB4HL3BkzuYDq+vi4PTpb/2
qrZfpz3L7NWiXr2avWoVqtekZoW2dbvWMcnflrdm7t78hXEbz66u3/bX9rF+
8rnb3/rpHvtZbnV5ku0J2eOcNz6NefmI3tcYb32W9z3n7e9u/3ms055tMZij
0/1mN/7PHMcPu86ntvHDL259Nl/iLTTm+YP2fLfvrf3+7Hn0+4Zx38bu3Ds9
Ge38wdPb5zePPaT7DSu0xTvrENWoudNtGz5e9b2Hfev5Kw7ue+0R3LjMJ9UW
B/v81nfX09lwnJleb7/rM9sD2lPbM8XB/j3958+6bh496wZfveybnzu3tb9P
T2b9m652GLH5HT4cbe+fP/Bj+4Br5+48eY29LO8gD+2Op23tkjW86lqo9aTm
Ya8/Y8I/VBvfHjH2Tetv+rd7s6/o+oH1d9OPmq7FqRn95We2+KgtnmobgzU2
a+5Sbo84KCfWOhHrR6yvtO5SLYLVqiz/Nw0ftbzUNrHW+0473fo4e45YOyCX
Uo6lnBNzcObmPo9Vvvlr+nHiWpjanD+a9T/4tB4tvt5YH62Jrz+e8f31S6P+
Odc+62Ft/7K7Xmbq2Kvl27PtDNN9quOklkUxheNT/eyTOCiXuzl/aj7+xyf5
bOYymv99Tz6s51jXctfX9/fvG849runjcivTbmxtaPcdjeHOz2cefvWqyXqe
QT+eM+fXHw534cSpxkvoeT17oz7m7dECOWfU9qXGrevsjHhqxB41z49zfp/Z
3rk10nxbz3dx0H5/vycY93HnqG9jhwvDLO32kPbi5sFip53LWifi4HxG7eX7
sucD+vo0vYeD9ry464fYe/rbrk0cHEd0sdBxY8bfGwe1+wp/xcHGfTn07nf1
9c3/9sPGtfmweSgOtp7O3PrJZ/Z6MzW3nmvpcYZbv/urLrc4OH7NM3b6Wi+e
IY23iIPm3OWeyce2Rsm6XfUrOjt01ssHUOdQvd87DXx7xNgz1D7araXutTU6
nyuOrXbPKF8m/NIWK/Uf9TG1jcearzSPKbdH7quc2Es/nVdNpbWWahGoz6Ne
gRo+6nepZ6LOybXue/Xg1sRZK2ftwOdcyjduiZwT827m44xP6q/px4lr4l32
mx7vm12cfOe/s8d+8Zg/rZHes7239/RZ9ra2v6d9zeYfPa/hpW/v8xIH1XdS
18J6Xuub5HXLZzO/b17jc/s7r1jQ3Rpfr7btIZ6f+3333Pj32snN/PGzTvnn
T/z6yxdnb9d01tpPXjyE7mX39IzVfFzv8dV2reb51NEdvGZMf1iOaGeP9oae
5bNn+cu257t9b38fMG69gJ7npHft/wMgmn5K
        "], {{0, 116.}, {150., 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> Automatic, Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{150., 116.},
      PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.947491853459091*^9, 3.947509727661709*^9, 
  3.947613331720806*^9, 3.947666581513421*^9, 3.948071338085917*^9, 
  3.948985547438385*^9, 3.949437458779735*^9},
 CellLabel->
  "Out[380]=",ExpressionUUID->"f6683fff-c1ed-4f95-8d58-f3c6d3c49574"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Frieze", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50", ",", 
       RowBox[{"Pi", "/", "3"}]}], "}"}], ",", "1", ",", "lena"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[381]:=",ExpressionUUID->"ff51bca9-6ee1-4135-8e0a-2f62d95b1339"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3X/8vXdd1/FvSbRo2TK0Zcu+ltkys6Vo5D7nnFlmZGZLl5FZDVNbhopI
ivnj9gVxDBzjC46BijgQcfx0IODAgQMBJyJORJxzwoAxfg388nsgYOf+el3P
syM3+6P/Ovja7XZ2rs913tf7x+v1uL7X83q9f332N37H13zLnz127Nh3nbb9
39fc53u+7P73v8/3fu1d/fHN97nvF33hfT9le/iA7eeK7cfxwy65ZPWS6847
2h4ee8l1162eeOWVq2dffc7qQSdO1Mffv3vjjavfvOGG1XtOnVr92OPOXPt+
1Mkz1s98xufXsd9+84bz1z/8kLusn3311avnPfcea3nJ5+lP+7zN9tz67W+7
aP3kn/47m2c+4xnr37/5G9Y/9YTP2jz1qqvWrtvmufmZJz95/fKXffn68h/9
q5uffPzj1y+69mj9hJ/8m5ufesITKv02r80Lrrlm/dCLL16/4uX/YvPGW25Z
b+u2vvF3/sPmQSeObZ733OdKt7nkoX9+84svfOH65t/7T5uHXXJaHb/2t752
s61bHW/L2zzkhz5l80svfvH6ht/4t5sfevCf3fzyS19a5x/8oD9Tx9J/7KMf
XUvzW6/5ms2H77hjrezffu0Fda2yfu+mr988/GF/ofL53Rvvvbn4h//c5uef
85zK5w8/8pG1Nsj/Qx/84LZ9j1u/5jf/XeXj+HW//e8r/5/48R+va5Wrnb/z
uq/b/NHHP17nlSXNY6+4oo5zPnVz/Ouv+qrd8at//d9Ump99ylOqXOcX+9b5
pz/tabs82Vod1FP+ymXDR1522fqVv/qvqp4/9OAHr9/w+v+y4bNfe+Ur18eO
ndja/MLNVT/79zaOP/6xH9hIq/7K+Okn/e2tvS8pf25ttRquhqvharj608zV
s575D3csDVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVef3Fw959n/ePMLz3/++sN3
PHA9XA1Xw9VwNVwNV8PVcDVcDVfD1XA1XH1yc/X8533xZntN+Xq4Gq6Gq+Fq
uBquhqvhargaroar4Wq4+uTmKv5V7nA1XA1Xw9VwNVz9aeDqaU/9+xv1es+p
+62Hq+FquBquhqvhargaroar4Wq4Gq6Gq09urnDCDz/y8Ievh6vhargaroar
4Wq4Gq6Gq+FquBquhqtPbq5+5smfU77Gz3A1XA1Xw9VwNVz9aeDqA+9/f9ng
hx/ykPVwNVwNV8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PV/ytXj3vsX9u8/W1v
W//Gq1+9Hq6Gq+FquBquhqvhargaroar4Wq4Gq4+ubn6jVd/9ebqn/tHlW64
Gq6Gq+HqELly/MjLPnXz0IvvWraX97at60dcevoGU/x+xWM+faPu23zXnqPq
iB9l4OQtt37T+uee9QXl9w+8/wHWdS8bOy+N9PJ80hM/e7O0r5hxLP/HXvEZ
G/Zw/KiTZ2zwsrXZ+vE/8Teq3HCFW1xd/yv/cvPmN72pbIgfbLzo2mvVb+fr
W97wXzfa4HwYwAzbaqfzbMKeeOMX9lSG8+85dcreZOtX/dq/3rzzHe8oH/Hj
+9773vKLfJSLsXDlWv7CibrFjz/9pCftWNI26ZXrvLpJL0/+lQaT4Tlc5XyO
2SXMhOHw41ie6p/7hT9SNz676Xf/Y9XBtfhx/lEnT9YxFsI2f2j7hz743Ztf
vf5em8dcfveNe+TFL1ptLv2Rv7h597u+bXPrm//bxj2tLer9a6/8ys1wNVwN
V8PVoXClrDe98T4b+T3j6f+g8pGeLT3zseX4Rx/96PW7br/vWpuwx+940w7a
CTPRTlj6uWc9q1jC4eKT9ZU/9bc2i0+KGddiVV35QT4nH/mXq63y+fEf++sb
5Tr2DGcbXGnfG17/+vI1rtgEG9oRrhxrh2Ntw9ivvOIVZc8fefjd6ph9wiSt
8K7bby+/4Fb+6vErr/iKrb1u2tbx8vVLrjuvzqsTxmhTdcBJWGVbx3gLJ9rG
zjjBFR+os2tf//v/ueqgXHULh3QUbca/0UL8wdfyUbfooqQJq2kXezmmCdlH
mtSN3Rwrl60cq5t7k0ZVZ3bz7w59pe0/+uhP2/zO615X9aRr5ac+2u8bz9rv
7+FquBquhqtD4Uq7bnvLN2/e9tb/vnnve75zc/s7/2d9nHOdem3f+Xfx1N+/
+ea1cTY48Tz3TH7BNfcsBhYb7/jZ+r/4YY9tvbY2+syN92znxRacp8HEFhzT
ZvzPbxhzLX86/vnnfGHZA9M0z1tuvbX0j7aziXjHNq/i5+Uve1kdX/aIv1TH
tFaOtVcatmIbNnRenn/w7ncXV7/04vVWS1xfDIul8A+21QGn7q+XvuTLyhbq
yr84oa/kT59IFw3jHlMWe7HLPlfqz+/uSb6Wnk+ljx7bP95nTD7yZNOU5TyN
I0/l0leJsWBV3Rzzv2M2xZJjdXjrbd+ycW+zp7bwuXuJZqJBX/6yL9+419xX
+Zavcnxrg3oNV8PVcDVcHQpX73zHt251xX13TN3xoe/Z1vt/b7xXiqn+0cd/
cBdfdY524iPtFFfAVM9vPW3jndjf+PGcFz+nwbBnD0x1dIwxx9JHU/GP2AV9
9IhLL63YPvakxx59hSO/aaN4O7tpe+Lnb37TN5Z2YpN9fZWYgzhDjnGj/dJj
LPFwDP3iC7+0rsM53Uhjbq+pe0f5Wz1YcZUlxr+LRSTuoT7RWvhJfJ7f+c5x
YuP7+mqfN/mEw+QjPe2S89qSmLn0+zEKdZCPmEk0lfPiIfyGVecdx27qjAe+
oSnFnzD7vOfeo9qobN/uI7EF9WLnd7z9f2y2fqxvLG19N1wNV8PVcHUwXMnT
OXqEpoq+cu59771/8ba1b7GFMW1Rtnx//VWvWvMVm6gfRp545fG1OrI/DcYX
DzpxQp929TvTR/qU1V0a7Gkf29Bm3t0diz9g1Ts0DvGsDLyJA9A22swv7Iwx
bQlL2swutAQbOt7XV/pG6QpleHfO+7v2XPuL5271wg0VW+BzZdrHxTXat/17
RZelXTj0W/xOp+GWreSpXGVhQBtoocQc8r7vPnQtHrQ5mopeosHSj6z++gK0
F4diI/KPftNebVE/eYYl/cgY0F73MH9rGz5pKvEl96oxA/oy1FPdpPO7a/Nv
kGPfPtqIp6TBDY6Gq+FquBquDpGrnBdz0BbfPhjC2Kk/+I7SWNFb3jtpHe/c
NA0dQm/81mteU0xt9cS6+7Qvrmf0ox/1V6p9fKEdGMOVtmKEjsIVTaUPmj3Y
wLVP+Zm/WxrBOz6uPP/ZXz3DlTbgKu/Iysj4KBpOjJ2tpHFPsAn748o7Ml+7
FlfagG+6Blf2NHMfbOu5sqaTfO3tua3rSjyED41hMzZM3fhFufqpscrOmMFA
YgJ8igdlhCW+ZotwEvbE3pWBpXCV/NUlHLIRrSg920XvsSk/iifQYFhgE9qS
H2MHHGuXdRvZFi+YUC5e/O38PifOsT17hqnhargaroarQ+GK/dPv7KPsfOis
jK/x7ogrH7EIH3z5fOTD37uhMZ561dkb46rEnfGCK89s/cxbn63YSSzBHtHs
+rGPfn/pFXblEzqKPRzTYLjC3rOvPmerXT63uPLur4+YvmIDdZeXGIQ20U7Y
0BYcO+ZHjOGKfXBFD+X9Wl7xLzu/7Jf/eWkNfpeWT37y8WeVfsSR9Q21Y9nr
5Yiecj+Jpei752d1S79A4vB0FK74OvHt9BdjeJ+rsIclx/hJn7V7z7X7mirx
B7zRcuFWG51XH/bBjzTsxibaLj99KGJE8ne96+SZY/VkU+zk3xw85d8lx9ol
vbYOV8PVcDVcHQpX/pbG8zEsefb6XXp/+w1fmJLe++UfvPvbK+6QmLxv8Qj8
iZmz9W+/9rU1r0Os2rs5nSF+gDfvshjBGF3jnZ2OohH4jI9wRdM4jyuaBYv0
gL5QNo/dxMnVLfpK++mH/ZiD85mngzHtVVe6gg35FFf0ovqFKz7Hv3pY415b
tGnbDlydi2maUbuMJRMPwOILX/BPS2thIHNzpE3fdGLvGMBSxpLtH0df8b36
uFY+rqUJ1Tlx/sy14T8xDfEfsQH2VS7fYOmtt91W9qQhpde2rZ6ttmCP333w
w778L3aBb/UVb/etTN9YzEf9fA9Xw9VwNVwdClf4yTORbT1395+h6hjd5Tjv
mrjK7+qLKZ8PfuB/VVxWOvkYiyW2jhFtWPqTlxh991l7xou1e79lP/EGesb7
sec+fSXOQKfgSl9q9I96sSeulImTzM0JV9pGa2FJW7CCH+2gx5TPZnwk/mD8
FR68j9MjNJ6+5q1+rLi7WMP2XX+1rW/pK3GUbX1qDxgxAHU0xkydlb/0K5Q/
5akszLgv2Ei5iasn5sBn2FjmIxVL6acOJ9FjruX/9E3ziTTLXOJiWP8BNqRx
H7nefSJ+kniTumBA/XxoqvytLAyFp2jzsLT/Ga6Gq+FquDo0ruQXruSPLdfy
WWKpPljK37QWP2qDWLxj597/vu8q/SX2IDav35r28ptxq7RLxi6xPx2FFxxh
zHt5YhTRWn7TZ80W/vb+jgV+2edK3XCVuTnhSjvpK/pOO6XRL7zPFXvhWPzh
/8aV2McSO1n50CTYok+2fx9tfzuijfjKnmiu1QfRbfySylsMhS5y/0jL3tig
o/gh44qjqTK2yjFmEmcQK9jXY+wfPcYH7mN6ks/cR+5D7c5c4zCiLpjxcYyl
zLPJ346jo/bHr2cualhzXwxXw9VwNVwdGlf8kudr4g7eMbXRb7RSWMNQjjMO
R3rMyFMbMOY91Dl/tx0eUOnxtR+ft46D9YrYml4Rv8bYwy45bR2tQo/hynhg
tsQVNukj46PYk18ynlZMG2PqZrx05qXiKvNVMx/H/cHW3rfTb4s984/oET6V
1jc29Bt0zOTUalsODYep4qpjDseO6ETH+qZxRBtu74eVfojMz008H698kvhA
tJZ07Ja5PPwrbiO2oE85a0dk7BkNxleZZyo2pO1bvmmo0lPyFNdx77oXMtfK
Part2PF3uHIcXvx74zuf9M34RI/790kd/M0Pw9VwNVwNV4fC1f5HOuyol3QZ
l+xYenGFXIc97Ur8Qd0wJr2y8YUn9nGcuT/6qx1vtVXpL3F8thSb5/d+/t+w
4rNlfHD1WZvjQ1+I12fNhIxH8g7ObupF02SuJdviTbuitTJPR8whXGEo/bb6
ha3Boz78JQ/f3smN/cIVbeWbhhJn6PjD+autnjnquPuJ2idUH4J9Q8WxrWMn
foJJ6x/iWluVJbavDD4WW8CMuIS+Zly5jxyLn1z3S5tiLOssJQ7P5vrQ6UZz
RB2zkTaL59B8zme8XJgyXizaSp8AeybGkDF5uEnsaT+2vq+pEpuX/hPZGq6G
q+FquPr/mauMqfGRf3iikVwrjXJynGcqnuSXeTzSyxd7fERP0VjK9o2t7gN9
YM171Vft4xiP8tc2+kpftfFMPbb3LuU//aXe+8WxrZkTv6tz1tCTTzSVuuEn
azhkbk70FX7Um/1xlXX/siYPbSKOjUfl8I24CJ62vlvRW/qfxRcyR2erCY8W
7o6whDHnHGNsy36lUR6dxddb7VjxADF5bTGmWbyA/cQm/M7H9KV648o3tvjM
3F1s4cU9ot7m6NCeGQuuPjjnR2wZv5a19bDFPsr2d2JM/s544sw/DVf7san0
1+Rcvoer4Wq4Gq4OhSvXhC9sZAyptiS/rL8WBrGUvDJ2a38Oo2M+S3yenhJb
yDyOjGnWR70/ntnHmnA+xkjRM+INbBKdIxYvDiBGLracNe7EFtQHJ1mPjp3p
E3XGVWIRWatBXaQXZ8g6CfQJ/cE/8sdV1ijQv6xvfFmPAn81JtkxrugrfsQP
fdgcHS+W4lv/6dt2H4gzsK/xZMp0n7Enu7OXuvIJxpzDhDo7poXYS3o2sH6+
/n12o0eNlxbv0Hb3qzLkF36clzedxVbS0Gvycmz9oTAlHdsmtpB/h/ye+Pt+
PCIx+OFquBquhqtD4irPRO0UK5DGOVzkvLzlgZ+UoV2JQ0jrk/5q7MhDezCW
eYv6ol2HL2xlrquPZz+mtYueEq/GFj2R93S6g77ib232bo4r7WRXmirjr+g1
x/QZfZU1HP4krvQ7Zxxy9BWeze+klfQLZC4qTSWOTvsZm7yM4z3C2nKOrjoK
U8oQN/HZX88gffe+43P+zTs+e4vFsJlv9hKjiU5lM8euZYtlXaIa46au2pX4
guPEF/jfMd4cp9ww5rz0icXvr3OsnJxPv3XOh6nhargaroarQ+Eq2ilxhrAS
rYUR1zsvvevzbM645TCYsay+o73yHGYTeTiPJ+fCljKwRWvREmz10T/8vnqH
FkunR7yb0zh8ai2dxKuzv9X+XEv8yB8T0Vc5r6xP1Ff6h6OvxOHFGfgf15mX
iiuxfrF27NBYtJO+5oWhc2knv7kP1FP5vW7vZ5UuwoF2WX8+9vvll/6z8iG9
pJ6Z69Rzajq9a3PfqX/mQGENYz77OpWPxNG1Ayfyt6bFn8RY+NnXV0mTOIRr
/Za1al0XDjGTGH3mpWY883A1XA1Xw9UhcJW+wzw7pcmzUnm+/e04z9M8dxOT
TRw2+kp67acZ5Isfmk1ezrGdNM7TYPLz7d3ab+zEPmwbdsWQxRnMz7He+7LO
a/W9ZsyStvgNM47NEU1fs3dwXKmfmIMYgrIyvkr9s1aesWG4wq1y6SrxdayY
i2P80rG9/4zrFf/wMYbZfFT9ycYDZ66S8z60G5awZRxWNFPWv3N/sRXb+C06
VT5+z5hw59lSGfLXXmziiY/5H1d8pA9bnF4a+lW5fI8f9ZAeX651zrXd935B
caW+GY+Mt8zXkTZzVXHm92i84Wq4Gq6Gq0PhKsfSpB+RL6VNDD7HeZZmzLJ6
hqtwmOd25m+EvTCW8Vphjw2lSXxePR0nRs/OtASfWAfJHtQ0j/FHGb9kDqb4
tfzNP82YK3F78QfliDkYv6U853GZeax0lPZnXSBl4FH/t5gFpjLHRhxdjF0Z
OM3a7Oqt/Kz569seKM/9+S+qb35jb+Wkr4E+0hefPvn0U2TeZ+I5GS+ecb4Z
8+t3XPmwJx6sNeh6vIQrHOmj8G+Ccy+45p5VH7YzTpluYl/H0mDPb8qQlzpH
X2M3/75gzHfi89IljjFcDVfD1XB1KFzl2Hl2UQ/Xpl+ZvTAT9jyD8+xWft5D
M5c/Om1/LkfGbCWOwR7yS0xDGVkffP84sX/6ge3Ynz88y8Xc+f+aX/gnpa/4
WBvMx8RGxiE7llc0VeaiZu07axfQZvxBS0mfdV6NXzI2ypyg7MuZfc3kqW7y
i320m3/4kJ7JOzcuopG0IePU0n+Pw/QJa3P6mPfj2xkDR2Ml/h5OsItZbbDf
i/Q0EZ0njbpg2zlzgtmNz5yzviA/sV3HV76ueMFVNBR9ln9X8Og8tnLswyex
g+PhargaroarQ+Eq42uUnzGoianLJ3va8+NWX5Qf7e8o5p15HMreXwc3Y3Ay
jz86LDokcf5w5jtx/+g9afCb+bC9P8i3F1/6WbMekvPqJq7NVvqdaSf5Zl34
rNeq/1gZjnHFzubg0Ei0m/G8xl9pZ687f9fyv/b1nl3fWnXQVn/zpTrSMnyh
/Kx5r87Z98M1Wesp+2BlHovjjG1id7ZK7DpjvF2Tvgnf8tV+dsKxsVeuwQ/f
qI9z+MEElp545fGqM/9pq7LoLpqK/bXDb/J0vVgLPpzvdQe/fheDSCzBcZiS
d/pjhqvhargarg6JK8/2tGt/7I1nrXLUj6YKW/Kkv9iRT/e1mfz8nWesT+Y4
5jkcrZDjMKhtYVodnMt7svPss9+3mf0yEpvgUx8xBGOz1AcbmJGntQuMp9IW
LNFU2mDdBL/hQLuwht39fnjn5e1a33lnjxbNWq844POs8Zs5TLlfM2btE9f8
UZbvxHS0J33+iatHZ0qjfPd1z1/6kuJEPfjKek5s9fSnfd7GXF7+EFeQRr7i
/e4b5WgrDuWJMddLj09p3OPy6vFuF+zazq+OMS1PjGFRO+K/4Wq4Gq6Gq0Ph
KrFV76js5lnqvRUryr229ng8v/LhZ3lkbE/6LaXLMzfP2f0xqurhOON9fJzz
LY+kUaf945TBZtrgWxls4Fi67CmVsbHem8XWpcGLcch+0weNN75nM+Ox8MO3
8sw47KzXk/7WHCs/+sg1WYtCfuHHd+Iq+30Q0UxZ3y5j0sJUuMo4uMyPSj8F
W/ADVqRhF/EE/ndfuH/cI9ixj6gy+F96NsaLdOzl3wrssVXSsDH2rOnumLZi
R+3GQ68n8ZV1TKvJh33VST5+8zdm1Em+w9VwNVwNV4fCVXwmr+gIf+fbsxU7
0juWxvulv7VXvfffN/d1l3pJ45rE5ZXvWnWIZtEWf7vWN9blmec27n3nev72
u/TKkU496C7p2Agf7MnO4hK4Zgf6Rz3pDOXIQ36O03+aNQjknbkzjvPev89E
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
KT/6h99X9WYD9VQ+5tWRT7y/0z846rmc1+32XvTJmN5oKb51Dd9nDQb+zFoL
2JSHPHOtNH7XZy2+gAMc9ripU/X7shb7qtfSO1ljl3Ej7yX2sdNRYiBYxzyN
yNZ40S8tNi52TqOxI78ZOy0W5F4Sa+BrMQT9I+5h9z4fSeMaMfPsjeZv2it7
OJtvjDN5uYezNhTfYEn5xl7hyHxefvJvEtbd32JTtO1wNVwNV8PVoXBlrJQy
pRdPwA+W9CN7Vw1XYguO8aBsx5hRZ23Am3HJ3j1xIq7gWez8/vhhx9otz5zH
J02gjfjMHpdi7xjTpugreiH6CnPYU29c4RnL2t/rTVxf46H43vt+66ZeKy/+
7v1Czqn3frFr7/HxO50j9mA9dEwknkAPuR5X/saQvuvE2jGMM0zQTfLFpI+0
mR/qvHyyVq066hcw9sv4YHWnwcR9xOj9LbaQ/Ue1n4/4ji1xYewV/SRmoO+Z
znUN3cmubJl18h2zPx2cMejRXVlDI2vUii9gBt/+Dcg+cO5v3OOMH6K1hqvh
argarg6FK2x4t5QOS+qgThignRxLoxzPXPlgTHrzQ6XXHtdm7ir21Fc9Xes5
7l1VntophivenjX6sg6Da3CFkZzHkWPxhOypiSvayrjkxOczdxXbuOJT/hNT
X971K3aQvaf4OGOkpON/7/jLWK11xh/7tKY6r+IOtNXi/0qXuPyyDtE6abJ+
urFXxkT5fX9uq/hH9ojc8nKkDGOFMY1t7/3WfjAmq8e33VbzaNk/+lYfhfs4
MSLxHxqYHnLfi+dnjgx/iRVkfX7f2Sst4+DYmf9wgV1r++JaPfnePCF1o7n0
a4tx+PcAyzh336sL3TVcDVfD1XB1KFx5Ppuv6J3X+7x6WasGA+qpPmLj4QoP
6afEj5g8G9BR2ihO67w6sgdOPKe1LfNJXUMLYc3zW5rE6p2nFfyGH22mlRx7
rrMJ3YVVdfdMF0v2rNdnqs/Z/Bj9vj64oY98cIUDn14/9szyN0Z63sypzN3Z
rbuXY5oMa+b3LHNhis3E5LHCB+LozhsThR3l9x7Ln1PcWcNBnMOn5/nce1nP
4ZaV+xMLxmixe9bh5S/3sjlQ+HHMf+7Z/X1k8Ma24ga44qPsmebfCOkTQ2fz
7BfDpvqvsSFGoL7qid2sqST+ROMZqyaW4Z7Rt2CdJ+Pc2JAPcn64Gq6Gq+Hq
ULjyzO41cY6tPDO9L3u3VjfjYcV9+VMswjNXTEAZ3jnx5rxxWbRN2oOrrC/r
OCxJ432VXeTj3dY14hIZw6ztiVHQbM7hGaee+3RGz6F9aWkX46StyYCh7Ftp
7Tlt1T5pjOP1oWUy/4Y/05+b9YgwIV5Ob0nnG1fiABjDlDya05MLq8eq/5o2
Y3P6Q5ze2j/LWrQLG7es7ozbX7IK63yHJWOuMoaKjqFb/C1m7n4X2zEeIGvl
+U2sJnNksCMe4N8F9nW/uscxGb3KX1lXwT1s3BaNRCObB2Ssl/zZWZ3Ezx2b
z4NbzDmmj2ko1yjPuDH3lnta+/AzXA1Xw9VwdShcaRd7sIvnt/dg7fcMpRH0
xSpXX6dnLT2jLDFgWsszXFptdCyPxBzEKOglsQVtpcG0iw6zxkLmNMoHh/QB
G2atGzoue43oWzUuV/3YwzE2xBP0ERvfSx/5OC+WbfyVOnuHp4myT5VYgnzE
y3vfrF4Tj47SdsyaPypen/XxpAkP2GrtdaJ+W8Zr1Vyf8CpuQXPgE1+9PsR1
NQ/IWOHs0+x+o2u0kd6hm8TJxdKxRLvSmNjBiX4G8RWxhIxrYy8fepafs7YT
1rI/KT/7jWZjFwzqY6AB3cPs5/7kB+12f9Bc7gn3rLyxL+bvXhdb0A71ZWPt
5TMaDGPD1XA1XA1Xh8KVfmNxXjrKs9q12uzdk33NVfE8d977pzbxqzgwxjIu
CEuJtWJMm7w3e5+lqTzTsxYfm2TcMnvRWtn3hN6imaw7xN7RK73e3FcV595l
ex2F47X/B05wJibu470db9rHDllXwbXyoK/YQdw8Y4mX/SErli5/9hb7zlrn
yl/m1qxaf15V6V3f+2qdsexJKQ5xizWRqq8ad3gSx1AvWg0fxhGze3QOe7KD
e4su1Ufs/tNfnD1D2BAvxgpkv1A2lE76zEviI3m4/9mw1xU8rdbrw7k6YaJt
cc3KOGZ9AWxAK4q/sG3Prb2u1oBwHy59CbXWk7TO4yPrRPBZrz9/42q4Gq6G
q+HqULjyXu5dmj34X9nixvqEvUd6h/Re6X2Uj/Vduh5znvV0j/d6bRVvaCYu
qjiB563YOLuEJe3Xb6kfWcxc3tJ5v7aeQMYNZ2wuv2VNoazVSov4eP57j6eZ
8JP1h/DDNvzY66SfVcdsSlvgtOfF9Ninjr8/rjjwd2IIjtmffqA5fLsOa/Jb
1kkvbpf9peuTtfRai11Z6yl4P7cvlnpm7SBcsaF+A9pUH7u+A1pInCFzP53H
Cj3KluI+NBPdRUvRO2wqtiAGwzZsggM+W+pZ/QJspD7Lfiy1vh8WwkniIO6N
3kul5/O6t9hSLCbzZmkvfsHVci/txlIPV8PVcDVcHQpX4tGe/crwXk9beE/G
GD/Lj/bJ2CBtwtGyP1TFATBnvLB4gzE7dBfdJib8Rx//wXo3pg/0HYu/y4Mt
xJKl7/2Pa3xUtSVr8eBAvfiNT4xjogX0y+Kalut+3ztqDVhMsU/6kOmmZf5L
8cbnGWeMD3aitZZ19Gr8b9igj3CFm15LvfdQzv7H9EbWre15OqdWSx921l0/
Yjs6jgaMplJ3fQviB2I1xlPRWFiLhsqa+fQSnYsrcQd/s6XxZvxDW9FTmPRv
AD/jgp1aC51X92PrwGNH6pJ5Qfzs3mDfpW9+f92KVfZA0W7p/PvBB3xv/AAt
Libk3wR+FHfY02Cr4Wq4Gq6Gq0PhStuyr4eYuLqxXe/r9aTqexULEI9VF893
z286wTNfX3V0gmd74gz6OeVHR4lBeD9mQ7bzGz1F62RPrKwNtMw5KT8l3o87
5euPpeH06fp4P+8YQe9X1bGCE7s9rbTP73hJP6+2R5OJm/B9r7V+3Spx+Z6v
c2debI+xaCefzG9NfAK7mfOTsVv0n/WHfMSr+cWxe1AsXZ893UkXaRc9hRe/
8Rv7YpAf2ZQN8SUmTneJ47CD2IA+YT5kO/dcWNHe3t/kxJF7KfpR3fDH9jR1
75F9UcZa1T3jfnDsvuMv/cr+HTE2QN+JMeD6TWhr9esxB++ofauHq+FquBqu
DoUr7fXeTLf0WuxPqfgsfeScPt3er/faGlvruU930SnNyq3lc8wYO2uMlr5m
cXV2oqnEGoz9yT6J9AAm+FVbjeVic/n0WnuXFc/e7b0b44+taDrsinP4uA43
3Wd83rJnySXl26y7nnWAsveV8z0P9Mp672az7F2ZNOlrllfGHne8o8di9VpF
FWevNXB9MhZLXIZ/xaHpDr5zLmsh0qB0Eab0T4jHZN4o/WT8kxiC8cbuVf3G
7Owc/vjLnFW26DHHV9X9Ls6QMVTs7FgMiT+MKdZG9l322Vzpg3YP6/tm04xd
kwaL/M7G4izG6GUPL3XnU30DxtNlDnL23jbuwDix4Wq4Gq6Gq0Phiv89O8VQ
jeXhS7qKpqJn6B980FD8LUbueYwrsV5zJ9VHbMG7s7Xf9TWzhbaqg7+NsZIP
25j7KB2twT7iG97Bu8/7CzaLbqo9PbQLr2Ld6sUvnvE+fBFt6Hd+xxSNEX2V
fbhoIr7f/zss0Uh0ROajZi+TRTst798nl7hD9VMfLX3O53bf6+mlZTCeeS1s
6t40XyV9EOLq2kc7+cYWG+qDYG9MsRMb8xP7ib/TXuITtKDr9IE7xiqty/7y
dG/6twCT5lT523m2dL282NC/D1hit467n10c8jFW1dlYAtrPGHB21s+ijtpE
H4qNOKazjBfQX077uXf0dw9Xw9VwNVwdClfe+10n3uDZqS7qKcbOp97BxQXE
1B3v66u0yzPdO7H8xF09ez2PPXc//rEf2D2HoxN8tFe53pUzBklber/J08tu
NJX36MzDwTB94ZsOw1ti783ihRX/Np6W/8UX8JF1+eil3iP5kvpNnBxXGYuM
I9pD+Zh0TdbT677ok6u8sy/9rEfdh3trjc/iL+/7bMUmmHEPibVnLVl+Yxs2
5Q8xBHEYLLEhm7n36CJal87hd8d0FLvRO+4j+WcfL+cT85G/+DjfiImL/dBk
8nY/StPrJJ6qvn4xC/c3rassmpD96SVlGRvWY72ur74VcRA6TLniTu51ZeCN
fsbWcDVcDVfD1aFwpb3eCz2PwxVf0lry87zutdFvWmKzX1VaS7nei9XLuy5m
2MKz2fpFtEHiDLjyEYtwPZa1XbzB81s+3k+9l2PXuy9OxIw9/9WDFlOu2AIt
pr58RpP5YM84Iv3M4iT4ydiqaKrWUqdW+/GIxAwwlvgDTeVbmsTVl/7k3b5a
2ZvZeCS6RZ3cj5hQNzbXTixpJxu6f4wPpkPYy72rD5lvxHLck+wt/kFTaYc2
0VraLi6AE/agffXf8yf9RCezf69n9NWVF+bYmV2dVyat57x89Pm7R9XTPR2N
7Xf+NjbOPePDn3ziGpwYf64M+dBq2JK/ejs/XA1Xw9VwdShc6TPkU+V1vPfm
erfvPbdur2M6St7s5jhcOfbMxZV3ZfnhimZQj6w15B3b+zONpZ3eWbMvmNiw
McPLmrAVg6dV6BT6YJnzvxG/9vzXNtqOjbXRNepFT/Bx5uvs66P0Fyfejpne
w/mWJW5QMYhl7HOvtddzWK/fMWU8VfpsaTB+4BPtp/nSN+A+da/QMWyi31j9
aSE+wJa2s3uvzfvBuo+NCWsez6txzfQXu4qVu5b+EeehwXBE37Al//obG3za
46QuKF/zhzFy+oP52H3Nrs7r//DviWNsy8e1NFL3Yd+t/s0RO4pe2o850Ini
JPI3XoyGlKdv9/5wNVwNV8PVoXClrWLf7ED7ePdkI9fyG99izDOd/6T3Xo8r
baF79AtLzy7S4yf9qcYhG3tsrA7dlZgym9AU2MMLnjCdddDZuvdoNNbreK0h
x7bq7N1XfdlC3yjt4L5wLRayjmzYwVIY6TUUbixWHPe6DedXjL3HKZ+140t+
Gbu1XFt+dp6O6rjHU2o/ZW337s8mdIn3db5wr4qrsIl+ZGOKe038t9U7vjaq
I83mfb/3eb77usevPatiJ/QSm9OdPR/npuIqPmI3/qWv8K6c7M3N5uyHIefV
lRbCgPi/uT/i89mjRJ45xpi+kKShI7NGBK4wpp8la1Xh1jlcDlfD1XA1XB0K
VzSA9UZ73uQF9YwVU02d+VBbxB+007sk++JKe3Elvk0D8K/3a9xYN4edMgdH
37M+SrrCccZNdXz90mITS7SVb+/tvuXPXnygv9uznr7CWOax6nt2jlYQV8Yc
u/uNL6KxMNK8XFN9x83XH48niD30/JuOPWQ/TOmMWcKSvK3BxDbiIt672Zwm
cd/RTXSj8braKx5AY9EqS19/9QfQbIseqhhH7xH65BpLbKyTNhob3Hu/9Boa
4gm4Yhtai4+yVoZ4Ak1MLylH3rQcXYSrMJZ9RuhbnGX/mjAT3hzzoWN5SoMb
/pTGtfIX78GxfPzODsPVcDVcDVeHwhV+fHve0z7qxjeep+rFdljyDKevcJjx
V9qovXznWExAe9kyeyXSV9qjHXTL4tNVj4ft+De/82G/Y19UH/mbGyRm0GNk
71GxdH27iXljg77BtXFFfIdBz/cwh1nsZvytOjh2beqT9fjyLV3WuaWZMsbL
3NGMa9I+/NI9bEhD+Z3G8Lc4C5tgTFy9936+IXN41j2/p/q4awyZ2Ia+Xfeu
uTCuw6/Yhfs3dqaBle/+U477j4/4VOzdvY0BGirr8OPC3+53PjH+2T2ODSxl
bJh02RsUi67NsXZlrzfX6nvGlTzpMXENGi97TA9Xw9VwNVwdCleY6b0Kbyp+
xMvZiiYQ29YeLInp8m+vBf7S8mXefx3TYNqEq+wT7VlrP0ptNsaIP/OhW/g1
/cLLmjk1D7Jj4sfLvvyBOfMms2fkMg64xgJ37OHy4rA5/njNi6QjjAfmA33E
vQ/J+bv19HDDr72fyDnLuKpjpXmU03NNz1hpg3tKvMO7dObC8Hv293TfiJvg
gk/ZTnxB/IQmwmT0lPtB3Fwblc3H/tZXIObCxvSWvmZaVVwDnz0e+4rq44jW
FbPImCvl9p4ir61/H/iUP9zjtE9i7HShsdLuc/cGzYgNWgtjGVecPWv0m+NH
PviRF33lWnXnV3n690i5bIT14Wq4Gq6Gq0PiSlyWZlJ/8VpjgJznHzZ07P1a
W7Dkuc9Wef+lY8QoaDT9wJ77Wdc92om2oKswtLBR7/aZQ5N10I0jpod8xLWl
8Y7f+4vcsjdX9IzEDYprOsp9oI7+NvaLdmHr7I9Mg+2tN4utI3l84rhi94p1
b9UFn+Iu2sy+bIYx+lP7zVGxBgUt4v7jJ+UqE680mrVe92MdvVbSGdUfQAvS
V8t6gqWv3EPhatkfazf2W5nYjr5ic7GYrBmFP/EH5fOZ89FatFP0Dza0DWPG
jYsnuEccu1/CWPb41j4xdizhs8cCnF5cufd63cYLiyusD1fD1XA1XB0KV3SR
Mj3XvcOKFYila4t68YVjz23HvUbc82usLw2h7eIB8qHBMElryN9+HJi6cy24
k8t4piuXdc3P282XWcY4rcQYaCp+oE+yZpzz6Z/NuuIdCz9VdVc3z39stca4
OWuq1nha9uTDrJ9At8gLU76jsxyzHT+KYYgdaKP8xQ6MNfJOTZ9k7UH+pXvE
Gqx1iBH6Cb/hNWvPL2s/rHvdiPNrHitb9roR96x5N+4n44FpVb9hSX3Yw3Hm
n+KYv7Tf2Gb+jL6NvqJtxZEwRweqO+Zw4t435gA/YuZ8hhn8ONY+NmU36bGE
0cTwM95YH7X7DVfS4ma4Gq6Gq+HqULjKXAz1dNzzPa+oY7EHNsCPmK7zvV/w
8yvure3aRAPQA9J452db8XF2zHpBy/je0hp4yh6R+Or1DU6WvhLfljd7sgs7
Y0oZ8uJ3trOWjvNswIbuDdoA98Z90Yt8ycfGUNNcdAzfyFvs4djef871mn+n
VmxMt2R+TeLb/KKdxo059h7eY5Setm5WHrJOLCGsZq6r33qd+eM1htq9gjsa
RfydZtTvnD2i9Ttrp3g7Zumm9PXTd5kDlf1lsIQr9uNrPudf+se4guw1w+9s
5bjn/Hy00mcdXe2iI8UNMCZ20/0xF1U8oce8XVSaSp83xnp/73eXrtPfwfbD
1XA1XA1Xh8KVOvc+TFeVfsi8kvRv8kevx/bKOnbeey2NwsaO6StptL33d2r9
hBU6ouMHN64SM8h6CYl30xOJsaeflx+yR2Kvsd51se5c9lRkd5qOL9QHD2Im
4uxiA+FHDL9ZPmNZq+94Yu4Vt+95prdWfsrNviq44l9jvtjQWhP8Qdd4r+69
PW9fdzzhysor69jKO/uF+Z0+w4++dfni3XljodwfGX+FHXYIV+IdmQuc8Vfh
Sj0yX1i8PX5M7J0N0h/da1p8Y+mp9E33Pqa373QRjZQxzHQqxvDDpum/lle0
GZvIx7X4xhUeh6vhargarg6JK+/gdJG+T/He3rvqXru1+LTTe7TyMx8n+1LR
MtpO++CHZsjeI7jxzUb0k3iD754LemzZW/mMmg9DT9Bgy34qxYM4gPf77qN9
YO0Doh04yvNc3Fl9sYM9vsOd/Hx6nfXzKj7f6yscOwrP3v3dE+Lby14u1V7l
0yPpU9C3m1i0cVTGINEZyvMRQ1niJcVnrxl/YbGV8VZ+d7/Snjjpeai1vt/R
Muez9CWuaFhxFve4+4qOpG8zH4fu5Tdtpa8wJg5P57GNYzGHxN5xIt4jXeaf
aqfjrNsgPcbcjxjDuvgNJsVc6DGMsbv7ib7Sr6AMcRZ5qhNbudfcA8PVcDVc
DVeHwpX9oPQV851jdhUjkEY5/nYcvaEsjPEJe/QeV9eWxsJCr7NzxzK/5bTS
Ckvsubhia7w5F/6yb8iyN2TZz0d5NBV/qFNi7HSA8qXBlbr3HpjHpDnCTe83
0vssY6oZvuVIPWlAMQgaxrwZ8WJjn7BLuxmLxObsz6f6YcWX2ZX92TZr2CZm
giNc5X4xvkt7k67XmXhy3TO91uw9Sl/RJuqujvqwcdFzY++101f7cQb9GnQT
TUVfubfoS/woI4y571yPH/Xld77TPposXGVOq3uJPoteYuPM63FsHDLGHCdu
jz1cyUed/JujrF5rf7garoar4eowuKIZlMl/2uJY2zP/UVvkQTf1nJUzq28V
C/QHn7O/OAQ9pKzsFcKuYWnZL6v86b2fnsp7+LI/1lH2Gs5elRk73OOULqvx
UNjVNnqFxmvt1msJtY7yvn9ilb0Z01fNz/L3ziwmzAfshi0xe37Rb6xv1T4s
4trWmNDvLC5NN+z3ny/jlktT9diyboN2KbfXdDitdKS68Z/7QF84n0dTsac1
GNSZvsVIuHK/s5kYTtbByNpQWbsv/SDqzw+OjQ2LHsYMXRqtpR30sbZnPVv6
SvxBrEX6xB/CWLRWdBfG6ELtcK2+aGXTe7iir4ar4Wq4Gq4OhSvPa2m1wXrd
GYOrT1ldsGPtgex36Tpl6XvFkrUBlIEpeSir55hetxJTZvOspe6dWQzDee33
fs/OGYtF/yxzQmt/5J6Hc32t4SB+jAV2oVOyD3XWHKJv8GqsL00nL77OGhDi
D3QMRugk78je2cUQjIFiT1yJtRs/Zk4KprJXNFayh4kYhXxbX9X9sE78Ytmb
s9qT/nTXqL+Yhni+9/YeG3blSsyCPlTvLr/m1657ndtrqm8dYzSse4vey3qJ
uMq/CRjgW+zhih9oT+3KvCpsuK/oO+fDlfS9tt8tdUwv7TNGZ7s2jOETY9hz
7Lz04lEZ0z5cDVfD1XB1KFyZSyh/ZXk+Zlyr57gyvc/qX85a7tJ5puuPFHtw
LR9gUP2N0+VH+kHb2bT1TfXFVpyZT2gJ43wS2+4YxedXnCDjl3DcWu5ey7zT
J9W7c9ZgX9YWqnd2fmJX6eSHn27T6ypWzx7Y51/f/EU3qnP6EfiSplr2QVnW
vz3vKNoMPzjufU/OL07dN5lbK1biPljiD+6RddaC4DecsAmuaFj8i1trA5u5
V9lY3mwu3k6P0nraTV/qB2FrusscKD7EKp+mD14a7c0YLfpKG/ULi71rP7+7
R+UlLhEGcEJ/8jdW1dtx1jfGh35nLIlLOO84cXv+XMaAD1fD1XA1XB0EV/KU
nk+8P2aNvl5f9vZlr6hXr3v+6Rk1b9LH9c57rmKJ7qJT2MY7sDRL20pbed8X
m6eZxBDEbmkcbUm8vvk5a534A86k9x2dg7U79xyzfsGxpc/zxtKBbKIe+gjE
yfUT6xelG2mPaElcJZZgXJExR7039XvXS3yi5qoqFzPqn5iJ3+k1XKhrxltn
bu2yXi4dts54L37DiTFU/Em3agutJ/4vvqIu7IYrY66w5P6kgbVVPAL/4gz7
XLkHtJc/5S9N+krE5LPHitg4/7I3xtxT7IIH9VvWsig2MIoZMYTey+Sblnmo
t+1Yiu7qMWR3xup777Xhargaroarw+DKs9h7pTw9N/FBk0iv3OxbyRfs7h3f
3+Kz+DEXxLF8cSh2LQ8aQuxa+3uNoUtLn/n2YTM2oDPEG/gpDGXdIh96i5+8
M4tNsC9e6Ds89Njdz6xxsdpu3XN9yFinpdgkmqV9fnxZT+515Udjl5f3512c
XPkZP5y+4x5Pdnbmla4y10cd1R1brb3OqBiLa1sfXl15qkvaz47aTi+pt/Ut
aDHzUsMVfcv/dGPWhnJfZt1gsSD8iPXgir5KTB8/fC4vx/yS/b/EH7KGhnts
KaNs5d+J9Ef7d8a/OeqaY37GGw6zj7VYhH9vHMu/14l/03A1XA1Xw9XBcOU5
7tnqOS3O7Nnveby0s+omTu7dW/4YYBPcaI/2ZR8R9eRz5be2Orvem9nN+6x8
5dHzZc6vMvih9cuF1WfMP3zBN+IKyhY7yFgh7VSGtoglaBeOxDroEOusimHj
Zpk/VGzRGh3XPqfGW9GUfKa87GmZWD+2s56e+oVvXDlu9u69jpZy7/S451tW
0Vz0lbyX/aDP1W7xchqJfcQblC/W0ffc54uX7LhKjF050VfS00uJM9BUuNIu
bBgnQEPyO58Yy5Zj2k4ax7jKmDr3N8bwljWOMObfE+n5Vb7SJ+agDuHNMQ2G
N/xomzTD1XA1XA1Xh8KVZ7Rr1U9dWw9dXz6nG+gafHkv106xXXXHhjTmjqiz
91ix3uxtqc76cD2HcasPV77atKwNuBu/hE0+oFe843o+0wSuU0fxiIwbovnc
C5iljdjN+F26TsyBDuGn1FW++pbFNeSRPSTFNZb9LY8wow70kDpob68jeL9V
j8muObVHmWuk76DXme89wOSXNXaluXPdpeM1vrjXVupxbX53j7hXMKa97k/l
ionQrNIYA8BWGMu+aeEqc4fDlXwxwFbuJX3H/OxeYh/3FT+GMb7CUvYqlU/W
WpQ/xpSXvWyUkf2glS2+wQ+OsURPY3KfpeFquBquhqtD4cp7K92TdV3FEVzP
7nSUssV81Z3PHNM88sEXvdV16jma9JS+atfigd2813vvV4a2upaeYH++kc5v
2oIPz2jv/tpLO+mDZTfjcbXJHpm9ZsGXV6yBHcK2uomJiz3gsteMOL30Hs0l
frD0gx8t6+aWruIP1+Ijukv/Mn/nGlqn15g4Xv3d+puz/h7/40hMJXuh+Dvz
dOgjcQIaDf/iAWzJ9r7ZwpwfjBp/Zd1dLKhP9otRP74WD3DPJObAN86bEyOO
71hbMzfHfSoeRIvyFd0VrZX1b3OMKz53zO69r+iV1TdB3/Jf1ihOf/3++sba
g8/hargaroarQ+FKnWgL13iflD8tpB44Sozd337LOnl0CjvxgXR4Ug6Gsr8W
fztWF3n75gPXejflc20wN3RZ47biBfJwbD089fYMN0fGOqrGBz3/eV9ccQKx
DpqCnuIL+omOMW7K+C4aTDo6UEwgc2L5PH3hNJT4Od/SRzjBiDh7xhJL2/Nu
zt/Fz2kieeIBIzRRr1HRWgl/Sx6lId0ziUfQppkbyy76p+VLAy5rRZRNspZ7
5uDwE9/hRxv5lw2jtdJ2NsOVuAZm9uer0q3ue4xhQBn6KeglmtT9Sh+5Vt8E
Dchu+k4cs5lYTe8letaathUz0QaaEIPaNVwNV8PVcHUoXPUaQw+p93rxARzp
y+09pp5R8288azGTdd7VhQYTV2BT1+LOM9Y7tDTaTiOxMV2Cs2VuSdXZuCNp
tEc98aUs82RpMtxlb2jvx2wl7kx3sAfW+SkxZvrO2j723TAeiB/UiZ9xk/FU
XZ8791Khnego8YTs7exeoRWX+a7rXn/hxLk99rj7lDsmc2rV/Fy6i7fTXRhf
5gnt4u3uKdcrn9/cn0u60lfi++4njDi2Xi77sxd/Zew0v2MJY3RXzwW+X/VN
02CudyxfWitjy9MfTRfxvfszY7AzxiBxBjEKabJWkvzNFVrWplrjo9dlPF7H
+GEv9fTvCFsMV8PVcDVcHQpXfu/5J8fKH97bvVPSCp6TdEE/8y+t8b/ecXu+
6t2qTd6Fe/7GvatN0uRadebXaDNtwgH2rIkkDqA8sQTvqvIRG2cT6awfzna0
Epsnni6tPNnZHBo6SlzfWgfypBXpnmW9vmIJR85lLDEGsq4C/bRoo9JO6o4Z
f/M9LsUlsn+K9LRl1pDoPojWVGyJ8d6/65xlfYYrj8K+OD7/9XzcM8uW8l3W
uS/29IHTuHSQPg++W+Lidd/xteNeS/6FZQfH9JFjc1ezbq9YPXvinU7FjLrg
yr8j+2s4ZO13jMmXHnO/u4fpNDEH19JyGMYFbsMensRR/LszXA1Xw9VwdShc
OcdX/Mt3xiapV4+zvby0Ext5rmZtdR/lea9lI+/H2iQvx7QDDr1Ps7PfxADk
jx39xcYLG3tEW9ESeKWbaKiMrRJPF4N2DZtn7Qjv3eIR0hiLZW4nbcZPPfbp
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
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xn8bVd51/FrWxG1atWCONVUqyJO2GJF8zvnUK1Ya62RYtVaB9BWrbRl
iCW0tK8bhkuATEAGShkSpoYkQAIJTUKYwzwlDCGEEEJmwnQTEjKQpN3vtc/3
x8N90T/6X/fNc1+vc886e6+9huf57N9+9rPWetb3P/aXH/Xz37Fnz54n3X/6
71GPefKPPPGJj3nKT93Pj597zON+6Acf951T8vDpc9L0kX72UUet3vH2R+xM
yT3vePvbV6eecsrq7LMeujpy797x8fvTl122uuTii1c379+/+s0XPmjt+3nH
f8/6tWf+vZF27pKLD1s/8xnftT77rLNW557zsLWylHPG6Q/ZTMfWX7jx/6xf
+Yq/sXntmWeuP3vFz65f9tLv27zmtNPWrpvK3Lzqla9cv/uiH12f8II/v3nJ
i1+8fsuFO+uXvuSvbl720peO/FNZm/PPO2/9rH371u9597/cfP6qq9ZT29aX
feo/bo7cu2dz7jnnyLc56ll/bPPmCy5YX/GZ/7J59lH3H+lPfPynNlPbRnqq
b/OMp3/n5m1vfev64o/+u83Tn/Ydm3e9853j+NOO/CMjLf89d9+9lufjH3vU
5s477lir+5OfePS4Vl2fufxnNs959h8f5Xz6sv+02ffMP7p54xveMMr5xl13
rfVB+bd//etT/164/tgl/36UI33pJ//DKP+3XvSica169fNTl/705nfvvXcc
V5c8J5900kjneNom/eEP/cRu+iMf/rcjz2+/+tWjXse38h3Hzzj99N0yyVob
tFP56iXD4449dv2B9//r0c6nP+1p689d+d82dPbBD3xgvWfP3knm/2Nz2m//
7Y30vff8+kZe7VfHK17+1yd5HzX0Oclq1Vw1V81Vc3Vf5up1r/37uyw1V81V
c9VcNVfNVXPVXDVXzVVz1Vw1Vwc3V284+x9tfudNb1rfeccR6+aquWqumqvm
qrlqrpqr5qq5aq6aq+bq4ObqTef+4810zdB1c9VcNVfNVXPVXDVXzVVz1Vw1
V81Vc3VwcxX9qre5aq6aq+aquWqu7gtcnf6av7PRrpv3P37dXDVXzVVz1Vw1
V81Vc9VcNVfNVXPVXB3cXOGEHp77nOesm6vmqrlqrpqr5qq5aq6aq+aquWqu
mquDm6tXvfIHhq7x01w1V81Vc9VcNVf3Ba5uu/XWIYNnPuMZ6+aquWqumqvm
qrlqrpqr5qq5aq6aq+aquWqumqs/KFcvPPkvbL5w443rj37kI+vmqrlqrpqr
5qq5aq6aq+aquWqumqvm6uDm6qMf+cnNWa//hyNfc9VcNVfN1RK5kj7u2D+9
eda++w3ZK3vq6/qYo797gyl6P+nEB2y0fSp37TmqjfhRB06uu/Z/rV//un8w
9H7brYeL6z5k7Lg88ivz5ad+/2bbv8GMtPJPPumBG/KQft7x37PByySz9Yt/
6y+PesMVbnH1vvf+q801V189ZIgfbLzlwgu1b1fXV33uv2/0wfEwgBmy1U/H
yYQ88UYv5KkOx2/ev9/eZOsPffDfbL54001DR/T4tVtuGXpRjnoxFq5cS184
0bbo8RUvf/kuS/omv3od1zb5lUm/8mAyPIerHE+aXMJMGA4/0srU/twv9JG2
0dnln/7Pow2uxY/jzzv++JHGQtimD32//eu/snn/+35sc+IJ37txj7z1LavN
0c/9k5uvfPkXN9de8z837ml90e4PfuDHN81Vc9VcNVdL4UpdV3/+MRvlnXnG
3x3lyE+WnvnYkn7B85+//vKXHrfWJ+zRO970g+2EmdhOWHr96143WMLhVifr
U1721zZbnQxmXItVbaUH5Rx/3J8ZfVXOi37zL27UK+0ZTja40r/PXXnl0DWu
yAQb+hGupPVDWt8w9t73vGfI87nP+RMjTT5hkq3w5S99aegFt8rXjve+55GT
vC6f2njC+h1vf8Q4rk0YY5tqA07CKtlK4y2c6Bs54wRXdKDNrr3ys/91tEG9
2hYO2VFsM/qNLUQfdK0cbYtdlDxhNf0iL2k2IfnIk7aRm7R6yUpa29ybbFRt
Jjd/d9hX+v6C5/+5zacuvXS0k12rPO3Rf9941n+/m6vmqrlqrpbClX5df93P
bW684X9vbrn5CZsvffH/jY9jrtOu6Z1/15/62SuuWJtngxPPc8/k8897+GBg
K+Ndfib9D37IY2rXJKO/tPGe7TjfguNsML4FabYZ/dMbxlxLn9JvfMMPDnlg
ms1z3bXXDvtH38mEv2Mqa/Dz7osuGuljj/lTI83WSlp/5SErsiFDx5X51a98
ZXD1treuJ1vifYNhvhT6wbY24NT99c53/MiQhbbSL07YV8pnn8gXG8Y9pi7y
IpfKlfbTu3uSruWnU/ljj9V0ZUw5yiTT1OU4G0eZ6mVfxceCVW2Tpn9pMsWS
tDbccP3Pb9zb5KkvdO5eYjOxQd990Y9u3Gvuq3wrVz2+9UG7mqvmqrlqrpbC
1Rdv+oXJrnjcLlN33P7kqd2/uvFeyaf6u/f+xq5/1TG2Ex3pJ78Cpub1rfff
eCf2Gz+e8/znbDDs2QNTG6UxJi1/bCr64btgHx1z9NHDt489+bHHvsKRc/rI
305u+h7/+TVXP3bYTmRS7av4HPgZksaN/suPsfjDMfTmC/7ZuA7n7EY25nTN
uHfUP9mDw6+y9fHv+iLi99Ce2Fr4iX+e3ulOOr7xal9V3pQTDlOO/GyXHNeX
+Mzlrz4KbVAOn0lsKsf5Q+gNq45LR27ajAe6YVPyP2H23HMeNvqobt/uI74F
7SLnm77wfzeTHsc3libdNVfNVXPVXC2GK2U6xh5hU8W+cuxrtzxx8DbJd7CF
MX1Rt3I//KEPremKTLQPI6eecshaG8mfDUYXR+7da0x7jDuzj4wpa7s82NM/
smGbeXeX5n/AqndoHOJZHXjjB2Db6DO9kDPG9CUs6TO5sCXIULraV8ZG2RXq
8O6c93f9ufDNh072wsXDt0Dn6rSPi2v0b/q9YpelXzh0Lnpnp+GWrJSpXnVh
QB/YQvE55H3ffehaPOhzbCr2Ehss48jabyxAf3HIN6L82G/6qy/ap8ywZBwZ
A/rrHqZvfcMnm4p/yb1qzoCxDO3UNvmcd23+Bkn79tFHPCUPbnDUXDVXzVVz
tUSucpzPQV98+2AIY/u/+svDxoq95b2TreOdm03DDmFvfPxjHxtMTfbEeh7T
3jee0c9/3p8d/aML/cAYrvQVI+woXLGpjEGTBxm49tWv+pvDRvCOjyvPf/LX
znClD7jKO7I6Mj+KDcfHTlbyuCfIhPxx5R2Zrl2LK33AN7sGV/Y0cx9M7VyJ
6aRce3tObV3xh9ChOWzmhmkbvajXODVWyRkzGIhPgE7xoI6wRNdkEU7CHt+7
OrAUrlK+toRDMmIryk92sffIlB75E9hgWCATtiU9Rg441i9xG8kWL5hQL178
drxy4hjZk2eYaq6aq+aquVoKV+SfcWcfdefDzsr8Gu+OuPLhi/DBl89ddz5l
w8Z4zWkP3phXxe+MF1x5ZhtnnnS2Iie+BHtEk+s9dz912CvkSifsKPKQZoPh
Cntnn/XQyXb5W4Mr7/7GiNlXZKDtyuKD0Ce2Ezb0BcfS9IgxXJEPrthDeb9W
VvRLzhe9618MW4Pe5aWTl7z4rwz7EUfiG+rHdq+XHfaU+4kvxdg9PWtbxgXi
h2dH4Yqu49/OeDGGK1dhD0vS+MmYtXvPtdWmiv8Bb2y5cKuPjmsP+eBHHnIj
E31XnjEUPiLlu951ykxaO8kUO/mbg6f8XZLWL/n1tblqrpqr5mopXPktj+dj
WPLsdV5+v53DF6bk93751a/80vA7xCfvmz8Cf3zmZP3JT3xirOvgq/Zuzs7g
P8Cbd1mMYIxd452dHcVGoDM6whWbxnFcsVmwyB4wFkrmkRs/ubbFvtJ/9kP1
OTiedToY019tZVeQIZ3iir2ofeGKzvGvHWLc64s+Tf3A1aGYZjPql7lk/AFY
vOD8fzpsLQxkbY68GZuO7x0DWMpcspqOfUX32uNa5biWTajN8fNnrQ398Wnw
//ANkK966QZLN1x//ZAnG1J+fZvs2dEX7NG7D37Il/75LvCtvfztvtXpG4v5
aJ/v5qq5aq6aq6VwhZ88E8nWc7c+Q7Uxdpd03jVxlfPaiymfr9/2/4dfVj7l
mIvFt44RfdiOJ2999POYtWc8X7v3W/Ljb2DPeD/23Gdf8TOwU3BlLDX2j3aR
J67UiZOszQlX+sbWwpK+YAU/+sEeUz+Z0RH/g/lXePA+zh5h4xlrnuzH4Xfn
a5je9VdTe4d9xY8ytWfsAcMHoI3mmGmz+rfjCkOfylQXZtwXZKTe+NXjc6Az
bGzXIw2WMk4dTmKPuZb+MzZNJ/Js1xIPho0fYEMe95Hr3Sf8J/E3aQsGtM+H
TZXf6sJQeIptHpbqp7lqrpqr5mppXCkvXCkfW66ls/hSfbCU32wtetQHvnhp
x2792pOG/cX3wDdv3Jrt5Zx5q2yXzF0if3YUXnCEMe/l8VHE1nLOmDVZ+O39
HQv0UrnSNlxlbU640k/2FftOP+UxLly5Ii8c8z/8flzxfWx9JysfNgm22CfT
753p3A7biK7sieZaYxBzH394lM2Hwi5y/8hL3thgR9FD5hXHpsrcKmnMxM/A
V1DtMfKPPUYH7mP2JJ25j9yH+p21xmFEWzDjI42lrLPJb+nYUXX+etaihjX3
RXPVXDVXzdXSuKKXPF/jd/COqY/OsZXCGoaSzjwc+TGjTH3AmPdQx/ye5XD4
yI+v6p8Xx0G8IrJmr/BfY+zZR91/HVuFPYYr84HJElfYZB+ZH0We9JL5tHza
GNM286WzLhVXWa+a9TjuD7L2vp1xW+xZf8QeoVN5fWPDuMHsM9m/muphw2Fq
cDX7HPbssBOljU3jiG043Q8r4xBZnxt/Pl7pJP6B2FrykVvW8tAvvw3fgjHl
xI7I3DM2GF1lnSnfkL5PfLOhhj2lTH4d9657IWut3KP6jh2/w5V0ePH3xnc+
GZvxiT3u75M2+E0PzVVz1Vw1V0vhqn7kw452yZd5ydLy8yvkOuzpV/wP2oYx
+dWNLzyRj3TW/hivlp5sq2F/8eOTJd88vc/P/4tXdLadHzzGrK3xYV/w1ydm
QuYjeQcnN+1i02StJdniTb9ia2WdDp9DuMJQxm2NC4vBoz30pQzf3snN/cIV
28o3G4qfYfY/HLaa7Jmd2e++d+wTagzBvqH82OLY8Z9gUvxDXOuruvj21UHH
fAuY4Zcw1owr95E0/8nb37YZjCXOUvzwZG4Mnd1ojag0Gekzfw6bz/HMlwtT
5ovFtjImQJ7xMWROHm7ie6q+9WpTxTcv/4FsNVfNVXPVXP1h5ipzanyUH57Y
SK6VRz1J55mKJ+VlHY/8ysUeHbGn2Fjq9o2teQz0iLHu1Vi1jzQela9v7Ctj
1eYzzXN7v2voz3ip935+bDFzondtTgw95cSm0jb8JIZD1ubEvsKPdpM/rhL3
LzF52Cb82HhUD93wi+Bp0t2KvWX8mX8ha3Qmm3Bny90OljDmmDTGJvZHHvWx
s+h6sh2HP4BPXl/MaeYvID++CefpmH2p3bjyjS06s3YXW3hxj2i3NTpsz8wF
1x6c0yO2zF9LbD1skY+6/Y6Pye/MJ87603BVfVMZr8mxfDdXzVVz1VwthSvX
hC9sZA6pvqS8xF8Lg1hKWZm7VdcwStNZ/PPsKb6FrOPInGZj1HU+s4+YcD7m
SLFn+BvIJHYOXzw/AB8533Ji3PEtaA9OEo+OnNkn2oyr+CISq0Fb5OdnSJwE
9gn7g36Uj6vEKDC+bGx8G48Cf2NOsjSu2Ff0iB/24czRIYOl6NY/Y9vuA34G
8jWfTJ3uM/Ikd/LSVjrBmGOY0GZpthB5yU8G4ucb3yc39qj50vwd+u5+VYfy
wo/jymZnkZU87DVlSYs/FKbkI9v4FvJ3yPn436s/Ij745qq5aq6aqyVxlWei
fvIVyOMYLnJc2crAT+rQr/gh5PXJeDV2lKE/GMu6RWPRrsMXtrLW1cezH9P6
xZ7ir8YWeyLv6ewO9hV967N3c1zpJ7myqTL/ir0mzT5jXyWGw7fjyrhz5iHH
vsKz9Z1sJeMCWYvKpuJHZ/uZm7ydx7uDte0xdtVOmFIHv4lPjWeQsXvf0Tn9
5h2fvPliyMw3efHRxE4lM2nXksU2LtGY46at+hX/gnT8C/QvjTfp1BvGHJc/
vvga51g9OZ5x6xwPU81Vc9VcNVdL4Sq2U/wMYSW2FkZc77j8rs+zOfOWw2Dm
svqO7ZXnMJkow3E8ORa21IEtthZbgqzu/savjXdovnT2iHdzNg6diqUTf3X2
t6prLfGjfEzEvspxdR1oXxkfjn3FD8/PQP+4zrpUXPH187Vjh43FdjLWvGXo
ULaTc+4D7VT/HLf3+4ZdhAP9En8+8nvXO//50CF7STuz1mleUzPnd23uO+3P
GiisYcyn2ql0xI+uHzhRvpgW346x8FPtq+SJH8K1ziVWrevCIWbio8+61Mxn
bq6aq+aquVoCVxk7zLNTnjwr1efbb+k8T/PcjU82ftjYV/LrP5tBufhhsynL
MbKTx3E2mPJ8e7d2jpzIh2zDLh8yP4P1OeK9b+O8jrHXzFnSF+cwI22NaMaa
vYPjSvv4HPgQ1JX5VdqfWHnmhuEKt+plV/GvY8VaHPOX9pR/5vXyf/iYw2w9
qvFk84GzVslxH7YblrBlHlZspsS/c3+RFdk4FztVOc5nTrjjZKkO5esvNvFE
x/SPKzoyhs1PLw/7Vb10jx/tkB9frnXMtfPY+6MHV9qb+ch4y3odebNWFWfO
x8Zrrpqr5qq5WgpXScuTcUS6lDc++KTzLM2cZe0MV+Ewz+2s3wh7YSzztcIe
GcoT/7x2SsdHT85sCToRB8ke1Gwe848yf8kaTP5r5Vt/mjlX/Pb8D+rhczB/
S32O4zLrWNlR+p+4QOrAo/FvPgtMZY0NPzofuzpwmtjs2q3+xPz1bQ+Uc974
Q+Ob3shbPRlrYB8Zi8+YfMYpsu4z/pzMF88838z5dR5XPuSJB7EGXY+XcIUj
YxT+Jjh2/nkPH+0hO/OU2U3kKy0P9pxTh7K0OfY1dvP3BWO+45+XL36M5qq5
aq6aq6VwlbTj5KIdrs24MnlhJux5BufZrf68h2Ytf+y0upYjc7bixyAP5cWn
oY7EB6/p+P7ZD2RH/vThWc7nTv/n/c4/GfYVHeuD9ZjYyDxkaWXFpspa1MS+
E7uAbUYfbCn5E+fV/CVzo6wJyr6c2ddMmdqmvMhHv+mHDtkzeefGRWwkfcg8
tYzf4zBjwvqcMebq384cODZW/O/hBLuY1Qf7vcjPJmLnyaMt2HbMmmByozPH
xBekJ7Kb/Ss/PXjBVWwo9ln+ruDRcWwl7UMnkYN0c9VcNVfN1VK4yvwa9WcO
anzqysme9vQ42RdDj/Z35PPOOg511zi4mYOTdfyxw2KHxM8fznzH7x97Tx78
Zj3svD/ILw2+jLMmHpLj2savTVbGndlOyk1c+MRrNX6sDmlckbM1OGwktpv5
vOZf6eccd/5+Q//6N+/Z9QujDfrqN11qI1uGLtSfmPfanH0/XJNYT9kHK+tY
pDO3idzJKr7rzPF2TcYmfCtX/8kJx+ZeuQY/dKM9juEHE1g69ZRDRpvpT1/V
xe5iU5G/fjinTNfzteDD8Tnu4M/s+iDiS5AOU8rOeExz1Vw1V83VkrjybE+/
6twbz1r1aB+bKmwpk/1FjnRabTPl+Z1nrE/WOOY5HFsh6TCob2FaGxzLe7Lj
5FPHNrNfRnwTdOrDh2BulvZgAzPKFLvAfCp9wRKbSh/ETXAOB/qFNezWcXjH
le1a33lnjy2aWK84oPPE+M0aptyvmbN2YMwfdfmOT0d/MuYfv3rsTHnU776e
1y/98OBEO+hKPCeyOuP0h2ys5aUPfgV5lMvf775Rj77iUJkYc738+JTHPa6s
eb7bo3f7Tq/SmFYmxrCoH9Ffc9VcNVfN1VK4im/VOyq5eZZ6b8WKei8cezwe
NsqhZ2Vkbk/GLeXLMzfP2TpHVTukM9/HxzHfykgebarp1EFm+uBbHWQgLV/2
lMrcWO/NfOvy4MU8ZOeMQeON7snMfCz80K0yMw878Xoy3pq0+mMfuSaxKJQX
fnzHr1LHIGIzJb5d5qSFqXCVeXBZH5VxCrKgB6zIQy78CfTvvnD/uEewYx9R
ddC//GSMF/nIy98K7JFV8pAx9sR0l2ZbkaN+42GOJ/HjI81WUw75apNynPMb
M9qk3OaquWqumqulcBWdKSt2hN/59mzFjvzS8ni/9Ft/tbu+b1a7S7vkcU38
8up3rTbEZtEXv13rG+vKzHMb975zPX07L7965NMOdpd8ZIQP8iRnfglckwP7
RzvZGepRhvKkM36aGATKztoZ6bz3Vybie06Mc5+wlPlssZcyTy1+dsdSXvwN
sTWz9kkd+sxnYG6ZdvP7GzPQJvrXR9e4X/gT9I/dZP4ztrFknEB7kqYTfz/k
0WeyEguCDPBjP239Inu2nHaxtVyvb+SPH3olb3Vrp29xGJur5qq5aq6WwhWd
krcxSHniX8j7I72rK2zF1pLWl/hdK5OxTbAaG41fNzxqh+vkdz62m3x5VitH
XfLrM3lqozbLh3GfMKnOrO3UFvaOOpTLTpFvXm86M69fvvXTNz1mrDuxCTM2
Tu/aGDspc7HjM/A7Y8TKyprNjCG4psbFV3bmcmM2PhplZc2L9rGDzCfTbvo3
jq4OthV7SRlkIp82YMwaJm2QB2/KpWs+B/2RH5dkJI9xCrIjV9fGXxEmY4Nh
nK6wqC66ZWupS1odWV8Um7y5aq6aq+ZqCVy5Nr50NoY8ns30QL9+yx9W4mt1
DQbCYZjEDAYzrzVlqDfH9J89lPmx1afht/r1RX7vvief9MCRdowc6KPGXNUm
8giPsRW1j01Q54/JX9fj1vGGxOKNjuk3NhPdypPxgzr3WNnxMWSNbvwJiWuY
NbuuNRYtf9qtvXRJ/vQW/wCbin8kcYjYTq7HAE5cz7dw0okPGHnImHzUHX7k
d63jeMACfuShc7ZWbNHYWuwpc8yk5U9dmfOmLvrHJdnQm7pjm2UOWHPVXDVX
zdUSuPK8Z8PQt/Lpxjm2iWvpWNvoR/9diwH84Etd+knP4cczF2PzHlY/OVgJ
Y9pPbtJkiDEsaP+8h/M8RkqG5KzNzrFNlOs6bcaMc+qlc+2Mn9518sSeyRhu
xtZxlLVFWWOS93uy1MfcPxkjJpvMy44PIZ8w6nh87OEr8SuyZ3bG2pXtfiRr
Omc74R4Lxs6Vod9+y0/X/ABkwAcgT9JsMNeSH9+7NsfHrg3xLcjPd45DOlSv
OWZ05DiGlUOf7mVypAt1yRPGwp7y5ZE//nw8K6u5aq6aq+ZqKVzJj4WMRdIR
3Sat38qRX1nKif1Dp3n3x5HyxBlXpr54ztIRruTLM9/7rzR2PMfZEurRjrqW
hL6dw3T8D67L+7g6+AbIjk0XH4HrYgORU3QZXrKuKOzoL+bInU0VHwCWXOeT
8eDEZg2T2dMj65fiY6/rcbOW17XarW/kZOyb3OJD0HZy9VsbyDN2ES7427XR
vtGuja2FB8cxYMydLJRh/W7YCzPYw4m048rUJsfnPbAfOerizycbdSnT3x5l
iutEJ/4eYEzb/M1gdzmee6G5aq6aq+ZqKVzhJO3PXB19I9PMQ1YvnWcejmu1
KWOX+kb34Uo6NpL2aJvnr7T2a198tvHTZu1k9d/iK74Cedg2WPaeTof6bQ4U
fcsb/zf+sK0O/CR2gHT4Ij+6lo99x8egz3SSNaLxlSfWUuwmnMRWS2w631mH
mpi02maetPL0j6zIAsfkQe/q8d7PLtIWurWOSHsdx5s2kHfGl+NboDvypmty
woN4E2RE9nhwPOPU7iPyx1LyKJ/s1GVNL7nIP+959shRvrRywp5rtUcb4tuP
Tv3NiW3cXDVXzVVztQSu6EE58riWneW5qUx5Hddf5XjPxVLWetCTerWNDUVW
3ls9b7XTupfYZvKTj3Jx6Tg/hnIzPux4YgJgi24y7zY2jXRix9GV9sifOcNk
h42sDUo8+MRizTix+rGRecfxpWeuVI3ZFD+FfNrApqtxllxT49YnRm989/qJ
JVyI/aB+siRbbWXv0J20Yxhzj8uDATLz3o8T9xibVD73j2+ydY/JTx/sSbZw
fPU4ZI/Jg8Ev3nTT2Cdandbiaid90R2ZY0Ab5MGIdbzkrBy61raUqS9hlWxd
q03NVXPVXDVXS+Eq763Ykl8ebcvzWlv1BWP6Rj7aqw1Jk5U8eYdNrAD8qZf9
gh/l85HLR9649Dw2L1eb1Bn/NBlE/7jMXObME8OL+qUzbp21sH7jJTHGlV3n
OJG7fsc2ylh0jZmQtTHhKr72xItIvCWMhSfnxFDAmmv02/s4uWU+FV1qO53M
e3Cuh67pTh9ynCzwgiH+Hroia3Yn+8s19IOLOW7vg8d+mMqf/QgXj3iCxjzY
XGLchxPtIQs6jf+Bfe06bVMne4xs5Ym/nd7wl78zrnGfy581QeGkuWqumqvm
ailceW+8ef/+9RduvHHtOm1jF+kLppRD966b98qaY/hgia7ZRDgk58xTrTEB
tD/yzZ4o7AI6oaeMETteY+AoK/HDsciekWarJCaENsaOci6xjxIPIr+zfia+
8rAVH3nGprNGJr6EXKfd2es48fccyz5m9hvBE8aUzU7iU9dvuicvMiTnG66/
fk2u9kuxx/Q8Xjvv9YUnLPh45xdzV3xcLLhWfF757WdNR+RuLzPc8Ae53nm/
xd21/4u0ePbS5IhPdh454hYb5I55nxyXh43LbsIenxPmffwN0Qd1xd6mX/kd
U2Zz1Vw1V83VUrjSbu0XD/2eu5+6tiei/Ypdf83VV6/to6wu9pf8dMiPkDlX
+uNZS8f87Vnb6LnrXOILsJfogs7YWb4TFyjzm7CSGIBZ35p1O/E/4DDXyp/1
MTXWXdaCZq5UxoarL6H6E+IvT4yFcJYYSYkpiJ3sX22fFb5014hJRC7k7Z4h
J3YOHWJG3HjpcIIx+5Sxi+jEnp1ix5O5fco+c/nla3aT6+THhP1bxBgUV1cM
XXurkDtu2DSZP0BueGbjYAET11177dAnLsWoUK/68Kmdn7/qqrV2qtNv+dwL
Gcd2b+DFcb+V9bkrrxxt1g8xDpXhmL3RMNNcNVfNVXO1FK7mvYkvXk321eo1
p522u0+VOjz/9SsxZLGCMX4JssOS56rnP9kn7rcxWnrAgOPxKdBV1rjiIHZU
1nPKk/Ut2JMXP8kfOyrs1fnDzoeRjBeHq6yT8Ts2lT5lD2VtxH/868a1/Va2
eOvGpKX5DxI/iTzIwTs4WbgH2TTsneOOPVa8wLEfSvbk1Dc6Y6/EphIvnp2K
H/YWP7g9VcicrrCDI7EF7akp7q69xyZ5jDqURa+xf/CFKfc3W4tPhk1M5zjT
FnGbtFFZYtTj+Fn79o261CvmrzZonzrsqa0NYh1Ochhpx445+rvHfmr2kbbH
59QG+22vJv5XU9tXzVVz1Vw1V0vhKkxNz8o1n6++eT56T+Z3IANjmN49PVex
wofLLiBzemEb8UFnfjAbJWPB9BrbI7ERpMMFeyRrP5XtusQNV1a4qvutqM/H
ufCjvMwZjo+h8pRP7Cdt5RfInlniocePjmscZB0m3zMbiM+aXm679fBhp9jf
hC3KdyBNtuRnn0t2qutjR5El+4NOlacccubnYZPIx3dAtzhgx7CL6IS99doz
z7Sn2NjHGgfsYfc9fTvPT8SfIL+2YohNhxH7kql7sn1Hu8S0P/+8hw8+lef3
vMfL9ZPNtHfkVzY77i0X7oz9ROXHkPP297S3J26wNPV3cGSf66ntO/Y8a66a
q+aquVoKV5673lU95/nIEwMBTzjyLpn1oHzpbJfED2KjZJ2qNF1XluTJfCe2
WGwkNkD85PKEk8yhkh97GXvGWOLp0XfW2rDBsJU8jvkoI0wpt+4HyTeQfahj
N7me7zo6wQz7g9zn9+/Dhz7md+ifJdsVe2qyw4ZtQX7yT+/59sDc0DH7lO3J
hsKVcWJ+BgyQuW8+deMb9gwLC8rx2z6dyvdNv/j1e7LtRlv4hO6844ihdzYP
e4xtxBegnX6zsRxTBm4xhENp3GBbGxxTL56x4/6wZ6j9qvU3XE2y3Po7Dhk8
saMmWRw6f/bsaBd73ae5aq6aq+ZqKVwltiv/qvdgNoQx0Ng+1lp4584c4ux/
aLw5foLEpaFPfgb2iXzGIeNPuHAbG9DxxOvLGs3EaHetdLhVXxiTV1lZT5rx
6/gYwlViGPF1JCZDYhT58CEbO/BO7j3dfUMXfM/0fuIJJww7g1zJkr69g9Or
vM6zRc054lcgd/4G18jrvmRDeb+nV/rLuIX3dvYT/fJDxKegfPtIH3P00UOX
8k26c8ye0kPXdKU9k71H/yv18hEoS71YwSp7jS+CzVQ54VPgr3CO3cY+w5t+
+8aV691LWJ1trkNGmr117jkPG33FMz8Ujiaedux9Pdtde9axw/lemqvmqrlq
rpbCVeZT4Sm+cWtrpOmUrumV/s3PYdNgSRl0y+7JelK6NabquswTdpwfnj8Y
G3wGxq0Tpz2xZ3GGQ99JJ7Z71t1kL8b45KWzl4g64y/HFdtGe9mJfNmYsbeX
D32yKbzL0wkbCBve8/HBt+Deogc25Xxs2DnD5mS7sDONx7pePdi0bwq7ik+A
zumKbvipsTIxPfSiDVjyzT+BFccxNJWzYk/RFfuFPucxkcNWzuEIG/rEbuPX
wJI61afdfABTuYPJzCPAhjyuxY+87DV8kYf2KJO/nJ9A/dqFM23Tdv4TbGEt
Pghj32SsDe4pMiXH5qq5aq6aq6VwZU5R4gSFKzql88SKxUXW12TOVOLyYa7G
uaWH2F3ZFyzH6Vt+XCkn7MX3rj5lxtbK+HJip6vD9Yn7qmzsaQsd07d3bjok
C+/k+u44rry/e5enT75pvhU+bPaG/hu/5Q9QNlYwxE7jK/c+zs4kR+yEL2PK
9MF+wZ53cfYPnWqHNvCPs1cyhosV9ggdbd/Vx7gtbvgtsOjbcfno1Ley2Ezq
xRMfOV6w5jwm2Duun9o3zuFMG9l7+i2v+whHZISrra98xebjQ/DBovpwJS/f
i3LYie5Zfhk2Ktvc2ix2mr8difPQXDVXzVVztRSu6IgeswdWYoizg7KHRbhi
U2WOFT9DGJPfcfn5HOhaefJn3yfHlcnvLn/mFDsXP4CycJR4DVmr6jh7Rrny
Gw/gpyZb3Jg3xibwrs4Hba4SGdIrvwA/uvdwsmUH0U18CzgzJosX9hHbQL+8
L2OMnx6zzrHj2GGZm0bemaNkTJePgN1GX775qaWxRN+4oTsM4InfIO3FHf3q
CyaM7bKp5IsfgH2k3MzLUh47Snk4nu6RFRYylowpMpGXjRgbU79nnveM+vlU
tNXYQubj4ckaIDImNyzhyNwu8uQ7USZ9JO6iv1H0iI/mqrlqrpqrpXBFbuye
xGmna8/J+BMcryyxfxzPfpdsMcyEF/WyhxKHNuzEvkrs9+yBmXHn1Jf5Vq4x
lo0lx7Gmb/MexBeP8U/v7+SXeUVZt8KeMfbK/iDX2FRsKbYAeWEGH2TJV+D9
GG/sBzYcX7y8xhmsMcKxd3QseMemCzrECXbxQ/fmJ+Fktrd+YLzjez+f2jIY
8P6uzc5bfyo/XwNeMgd8ktsqfmz3TbgyXzn+h9mHPvOHD2w75hvfmMMfWZCT
uuRne7kXtIms2Jna4zy5qC9jAeaJuZ/YUNjCkvuO3uiZfm+5+Qm7trK/UYn7
31w1V81Vc7UUruhQGgfSsY2k2Ti4IufMzaJ/x7GU/X7pGh/yej/PPl9hMnua
xOeQcWe8xFcfO41vQbmOmx+FUbybL5W9ofnD9Y+NYyyYLWBOrGNk6f0dK/wK
WGKX+LCjjCuYH0VmxtnZD/wNuGEvYFZb+Bzk8X6NIfIna3aMb7qmQzZL/Ahb
X8aKnYMLfoKp7zvsFetX8OKbfWPMmh7pcPpeYYE9ZSxXPn3CL/3jDn/mgWHD
PeRewrXyfMuLr5mX+48xa2Vgh0y2shqss6XcC+45MnNv6TsfAdm4v/jPHTfm
QAaxa+maHRV/kLF9uqSb7E/GX9RcNVfNVXO1FK7q87E+N+vztD5n6/O3Ppfr
87o+x+vzvT73qz1Q7YRqP1S7otob1Q6p9km1W6o9U+2cav9Uu6jaS9WOqvZV
tbuqPVbttGq/VbvuQHsvdmC1D6vdWO3JamdW+7PapdVerXZstW+r3Vvt4Won
V/u52tXV3q52eLXPq33VXDVXzVVztRSuqr+0+lGrf7X6Xas/tvppq/+2+nWr
v/db/cDf9A9Xv3H1J1c/c/U/V7909VdXP3b1b1e/d/WHVz/5Af7zXb969bdX
P3z1z1e/ffXnVz9/9f/XcYE6XlDHEer4Qh13qOMRdZyijl/UcY063lHHQer4
yIHjJmGpjrPU8Zc6LlPHa6q/vblqrpqr5mopXNX5M3VeTZ1vU+fh1Pk5dd5O
nc9T5/nU+T91XtC3zhf65jyiOr+ozjuq85HqPKU6f6nOa6rzneo8qDo/qs6b
qvOp6jyrOv+qzsuq87XqPK46v6vO+zpwPljaVeeP1Xlldb5ZnYdW56fVeWt1
Plud51bnv9V5cXW+XJ1HV+fX1Xl3dT5enadX5+/V+VfNVXPVXDVXS+Gqrqeo
6yzq+ou6LqOu16jrOOr6jrruo64HqetE6vqRuq6krjep61Dq+pS6bqWuZ6nr
XOr6l7oupq6Xqeto6vqauu6mrsep63Tq+p26rqeu96nrgOr6oLpuqK4nquuM
6vqjui6prleq65jq+qa67qmuhzpwnVTWT9V1VXW9VV2HVddn1XVbdT1XXY/T
XDVXzVVztRSu6vr6uu6+rsev6/Tr+v26rr+u969xAGp8gBo3oMYTqHEGavyB
GpegxiuocQxqfIMa96DGQ6hxEmr8hBpXocZbqHEYanyGGrehxnOocR5q/Ica
F6LGi6hxJGp8iRp3osajqHEqavyKGtfiwHgXiYNR42PUuBk1nkaNs1Hjb9S4
HDVeR43jUeN71PgMzVVz1Vw1V0vhqsZbq3HYany2GretxnOrcd5q/LcaF67G
i6tx5Gp8uRp3rsajq3HqvjV+3Tfj2tV4dzUOXo2PV+Pm1Xh6Nc5ejb9X4/LV
eH01jl+N71fj/tV4gDVOYI0fWOMK1niDNQ5hjU9Y4xbWeIY1zmGNf1jjItZ4
iTWOYo2vWOMu1niMNU5jjd9Y4zrWeI81Xl9z1Vw1V83VUriq8bdrXO4ar7vG
8a7xvWvc7xoPvMYJr/HDa1zxGm+8xiGv8clr3PIaz7zGOa/xz2tc9BovvcZR
r/HVa9z1Go+9xmmv8dtrXPca773Gga/x4Wvc+BpPvsaZr/Hna1z6Gq/+wDj2
iW9f497XePg1Tn6Nn1/j6td4+zUOf43PX+P213j+Nc5/jf9f47c3V81Vc9Vc
LYerb+7HVPdpqvs31X2d6n5PdR+ouj9U3Teq7idV95mq+0/VfanqflV1H6u6
v1Xd96ruh1X3yar7Z9V9tep+W3Ufrro/V923q+7nVff5qvt/1X3B6n5h324f
lew3lu+6H1ndp6zuX1b3Nav7ndV90Or+aHXftLqf2oH7rGWuVd2Xre7XVvdx
q/u71X3f6n5wdT+v5qq5aq6aq6VwVffnrfv21v186z6/df/fui9w3S+47iNc
9xeu+w7X/YjrPsV1/+K6r3Hd77jug1z3R677Jtf9lOs+y3X/5bovc92vue7j
XPd3rvs+1/2g6z7RB+4dduC+0tW2yj7U2Z/6wH2rM7e47nNd97+u+2LX/bLr
Ptp1f+2673bdj7vu01337677etf9vus+4HV/8Lq/c3PVXDVXzdVSuNIWuvF8
JV/1YIruleVjnJKdghF1efc01ujZa26OT45rgzFOupQHL/wJGJFmy0jrB1tL
XXzX7B7n/cYnX4LnvbVAOOVDDyeus/bUJzaVMVBtZ2exAzDmWr4EPLsn3Avs
GXaH9+Zv3PWrgyF+ArpgF2EFI7i55urHDt05J01XlSP58+0TZtTBBnJO/thY
vnGRb/qOn5xu41fI3meOkSt2pDN2HDtKXc7RAxtPHTjU3oxfK1//6Vf5fOX+
TmA9c5IxYJyZHjKfit1KhtJsZG0iX/OM+RuMc9ARPw858xvhhD4w0Fw1V81V
c7UUrjxvzT1yvfZ6xjou7Xrl6BPbxzu4dsvPB+35L6/j2i8P9rQfE2wpvlu8
8GHL510fD/qmbewcOmc/sYsSG8K4sb7gU5nsCdyqmzzwji8yk5cPWNty3Hs1
3pUfuWoPjvgR6Jz82VHxEdANxujHMT5pDIQdvIQ5H9fkNx1jJUyRgbTrM6/K
N7n69sEQ2frWJ+nME6Zrv/lk2EXySGuXMtlL2ps1q/ElYIFdhUH6c63+06t+
ZX2NvyHO04n6yDh7m0pboyUPnZKbOugJW8p3LQ71k1+CHSZP8jdXzVVz1Vwt
hSv1ysN+kp++6Ua/pOkonNCdftEXDskUd9ogDx3iQ5/pml9cX1ImeRvL1G55
tFHb2AH4wY2+YMdvdoM28nFom/zayT5yXhukyUbd+iKPc+TDviMr7SR3tgqO
vvLlX9x99888KfaMb8zpC7sIY+HKuWpXVd+BNG7CUjhQpnsvenceN7791vaM
MeNKfuXQPU61wX0fm086/ofsfZY5w+rTv/BDdjmOR7LlP6AvdpG1NGwhusMj
PdB17G3583dmtlsfOZghW/3BgDz6iynHpR2Xbq6aq+aquVoKV/pojYVrPM+V
k2vx5j1SmeqlO2nlSJNF1uO7FnvaRmZhVTnys8eSByd5XrO9yFr5WGSj4FAb
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
xjEyt1p7wnpsveaquWqumqslcRW2fGu352ZitUonJkDWgyTut7KzDyJZGXv0
/kzOWMKP+rJ2sq4lyV6L/AmJp+q9lf7ZP7fc/IRdGyH7b2SMWLv0LUx5xpOb
Dw7wx37Co/jriafuPH7ZTdqU+VHKpEu2HPuNv9/4gDlm9gqzv4lYumI9iFEv
re3ixIuzq30za6etXW+sAFfKxKG0Nhg/38blHWt5pelRfCaxm+qcNzxpO870
NXZmYijVeErS+kFnidGeuEvxq8gXDsJE5mJnPnT89YnZXuePZd1S5qjVcfNq
m8WGa66aq+aquVoKV3Sa8dP4YnGT57Rr43tWhvPxsbom81rx55h0OOFfUH/m
xyqDTeOcfmk//eg/OfpkH8jEio2NxA7InlnKYbv4JlPy940lesCk9mBXmzGN
Wd/0g0Pfde6xeLh0y0aa7ImVPammdu7YN9oe2J++7LIVfYu7a38y5YoZjw1t
EWfC3irK5UNgO2k3n7q48drtuNi76jOPTJ1kJi6v/Tqt1xUH3Z6h5MqGU+dd
dz5lc/vXf2Wy4X5jtFd97pmMu7PDapwl5UuzxzIXTb7EUXIfZAyi2l/xySRe
b+xVZSSd67KHS+y9S7b7TmdMorlqrpqr5mopXOVdvdpazid2HMYSPzzrMvBA
HvLSn2cy+yXjl9qJPTxpE7ssc1nz7JYnvm19xhT7ATs+7JTYSGwudgO7y3G/
yZkMHcOSY9qn/szT9eH3V7ZylO8Y+0777W9p72qfPeWf/T3tTWWPTzaUPVWw
xbciTjy9kzt7y16f6mZT2YtM+2JTuUfYaHjVX2PQuJQ2p0xce+yzr9hmjuHR
fmrqVbZ9XBI/V3nquufup459V+iXjHBHX2TkNz2TqbyJsZQ9yvCWWBXZhzrs
4cbfhPgeMj877EjHHs28toxrVMb0qblqrpqr5mopXGUObtaTJMa4T9a8xB/v
PTTc4U092iGvdOb9SCePeh1zrXZkbs8dtz95yMaHPURWPvp97z2/PmwJdlDy
kK19R+7+xq8NhuM/x5Lys++jfumja5Pf+z1/9jau0WrS+djL2n7ER+7deyiW
7O156imH2KfY/sT2N2Nfrdg8fAuTnbOe370vHXtq6iMe7JuiLvGc7GWl/RjD
jHbO+8BcMPJrh/2r8ZHj5Ce2veN83PYpw60495Otup4Zf9DYp8z+L/pNHvql
LvcXWSo/YxP0zP6Rjs/d/YedjCHE75I1tIlfkXW85Jh4THUOmzrjx1BO/P2J
YR+fTnPVXDVXzdVSuMq8I+W5Nms2lVXXbOZ4nXtzxTbmDq4yZzdc5X2zMmYv
RPtJTzIdc3HzLKZ/ssq4K76k43f3nT2UE2sv9bIVMJfvxKTNHl8+Ezs7E0sT
L1ftYIUfAVPz3sSHrebzh6zPPuuscY49pY10igXjxrhiq336ssvG3tf6xb7C
QbhSJ13NMX3fOXzs4Ueaz8E8ZNcad+bDIAN7mfE/8LWbk2Vs2l6d9tS+ef/+
FY6ndtnfc8VupRP3PKZy34Up8qNX8iC78OMezPw1NhgZxb4KI1nzFH8OBuL3
SVwL+XM8vprMBc+8OJ/mqrlqrpqrpXCFh8zdzfn4UzOPN+s+Mw4c/3wYo9+U
i6fEOaf7PGvxducddwy7ZrJhVuZaeQcn38hF2XQUPz9bIvPAvEsrVx1sL/nT
P2XTOfuD3/q4Y49lH+3EbzC9ww/bCVtT3eYID3+6/YknXQzGpDHHx/6sffsG
V2wuLNAzWydc8SHEvjL/6kCuqn01x5U/b/gW+OTZUWQrP9++PrOv5j2Sdzb2
RlY+nvkZ+EAmOQym9IXP3idyyydjDWytxFDKPtW+yS/jFBjLfDbnY3P5rc1Z
3xvbSXkZsybv2FphzDXxNWSOV3PVXDVXzdVSuMq8mnzCVfZ6zDhk2Moc1Lxr
hp/47DPmiAW2AD1Gx3zIJ55wwpi/xN4iZ3pSp3dp83r55emFfaEv4ov7jTH2
h1gQ6uQ3sC+m3+ZIHXP00ePdXNnGiCebaT3zdMoO22hmau+hU1mjPdJsKlw5
x58u7dxk363lm5gZXNHv+ec9fPgZYl+RAa7YV3SFE/WTj/baY5p8cBU/A7uL
TUUf856cbx12pv2s3Q/KZ1+pj13Grnr/+35szPFim7L92GfGvfnklUM/7lv3
mg9b1Rg8+1RaOzFnbJ7eyTE++cxXy5i+fmSuFlssc9/CUtLanLVDWYeTTxhq
rpqr5qq5WgpXdf2K66qtlWN5x8/6z6x1zDoOtlD8Cvzp8SuwR8iOTujacfL/
zOWXD71Is0/YZ5giW1xhyjwk15O5tLFrafaJeryb05Hx42uuvnroQvyI+Ku/
cOONu+/pGHv2UUf5PhRj/Aqz3fVg86iGfYUjenOOPbPlbxU7h32lruidjqzB
wQ/5uEfC1bzv2XsGV7gkg8xDZmvRp3U67Cvy5Es37jyvg7p8cGTtrnlbfP98
JZ/8xKPX7NOtL37Yh7jWHuXzzfA78Mngip3FrlI+prKmSdr4O90lJkX86Pw0
2q99WW+aGIXhSH79klc687/zyfrf5qq5aq6aq6VwFV6qXyFzffOJPyL+d58a
/1U6x+h8avd4Rzd/ybxkciE37SBbNop+iF1gvpF+0RF9KWNiYTCDWYy99swz
h/zN+8WV9mbOkrZ5T8ekeVcTC8PPIF6C8+wt48H81fzpUx/W/By4Yl9JG2tm
v9AVfwQd4gqTmVfF/uIHwI7f+q5e/oRwxc8Q+wrfsa/o3fHYVOSv73wLdKUv
eHMfuY4Nyq7U18lO0o6xJmiyJdfsKz4RfgfjAtv7ZmVumDh5xtaN2/M98C2Q
G47YVWwkthU/g7b5xll8786FDfmTxhCZZ41v5m5hL/PFM2c8XDZXzVVz1Vwt
hasDxwkT767G/Mm+jBgKV9JkGxurjmOT8WwHHDbi8LA36Nt8YOsx+QXIk5+A
b1kd0vzasxxuHXaU49LsjKTpVB9xKL8+0Ity1C2P43wSeCJ7toz2YMM5th5b
Clezz8Gcq6vGGLR7YeJnvfWPrFyL0xNP+N6xRob94/1fX407qyNrUfnKyU//
2Y36givskXdsLfnl4X+gi/jb3ZPKYF+J3+TewpXzvnF13bXXDh+89mHMMfcw
W41/RB/ZaRi1NtjYM84wg5Ws7SF/x+gkY/YY07as682c8PjnM27t70uYq76p
2Orhp7lqrpqr5moJXIWlrE+ssWvCStbyZw1n1u3kuapcMvAuTmeYwwm7yvut
2AXsEm23BpNN5Tp5MKMubGRekzzKyzt4uOJbYINpv2ulY2u5Vpscpxd+iRuu
v34wYL9o+uSTZ6uQPz+28WXssFXYKZjiZ5j9DxePNTm/H1fqUq+x7sqVtrmP
2En6Yv0pn0PmX2lH1rHyn1Su+Fvcf2xFbcaNtuLXuhw2ovuG/wRP6mMvGiMn
U/4cjLmePWaum1gTxvfdz2wjdZMZm8vHWHXiNtGV8/oTGyz+h8zRqmuD6nhN
uGmumqvmqrlaGlexo7JmP7ZW9vjIunwcZGzS+6UP+2Q7j/dQMdy9Z2/7NObf
0us8BjpzMq+puWvIQB3xD7CL6Ag/2oUlvoXYVPLEBjvQHtM+/gdp12LYtcYA
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
00t84/QYlrK/VbhK/KKUGa5yHBs48ewPS4l3pJ3et7M2R1p7tBOT4YqswwBd
q4tNmDEC5dBB2iZP7hfMKB8b0o7Hfy5/fCxZp5NxdjaqNHuWDNVlbhh/O25w
pU5cYWbrjxm+BW03psy3QMb85+ITkSu901VspzNOf8i4j9lO5gwkLX4+bvHD
l8LPoa7US7/iH9Ib37782oste06ry3E2qfaYw4YxcRKNuTdXzVVz1VwthSuy
JQvP1eaquWqumqvmqrlqrpqr5qq5aq6aq+aquWqumqs/KFfmbanffObmqrlq
rpqr5qq5aq6aq+aquWqumqvm6uDmyn6h4hqK6dRcNVfNVXPVXDVX9wWuxLYX
r9GeaM1Vc9VcNVfNVXPVXDVXzVVz1Vw1V83Vwc3Vdo+XwVNz1Vw1V81Vc9Vc
NVfNVXPVXDVXzVVzdXBzZQ8z+7fcvH//qrlqrpqr5qq5aq7uC1zZExpH9vhs
rpqr5qq5aq6aq+aquWqumqvmqrlqrg5urux5iR0MNVfNVXPVXDVXzVVz1Vw1
V81Vc9VcNVcHN1eXzPty2Zts1Vw1V81Vc9VcNVfNVXPVXDVXzdV9k6vfAzCt
1TY=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.947491854726781*^9, 3.9475097286195602`*^9, 
  3.947613332957608*^9, 3.947666582786572*^9, 3.948071339268112*^9, 
  3.948985548953587*^9, 3.94943746024142*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"2b84b155-7fd5-45cf-8aef-15a964c3bd9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Frieze", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", "1", ",", "lena"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "6", ",", "7"}], "}"}]}], "}"}]}],
   "]"}]], "Input",
 CellLabel->
  "In[382]:=",ExpressionUUID->"ed46532b-430f-4f2f-9656-dfa34d2c5aeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xn0dVdd3/Gnailt7TzZ1rba2tbayaptbc3vXuxgbWtbinaexKq1LdaJ
OusKGMIURgMCAjIbMGCCgIghRkRERIwYI2JEBAyDDAkESJja+9r3eT/rLJb/
tX9wV75Z6+bue84+e/h+3+f5fc53D+dTv+xr7vGVH3fu3LlvuOvhf/e45zd9
/td//T2/5Yvv4sdX3PNen/1Z9/r4Q/Leh8+jDx/p99522+4Jj3/87n6XXLJ7
+tM+bf/MK67Y3XrL1+6ee/Xf2P/oi160e/CDHrR71jP/0v4HnvWsdfzqqz5z
/yMvfOHuu+57390Lnv839z9+3XW7+1966cr/wy94we6O279595xn/9X91Vdd
tXvrW75q9wPP+owL6ac99c/tn33llbtfvek/7r7viX961fXz199999jHfNL+
6U972u4nX/oPdpd/9x/aa8+Lr7lo98Qn/Kn99z3xiSt/9arrZT/5D/e//vrX
7578pCftXvNL/2Z/n4vP7Z//vOfJt3/A/X/HavdNv/If9g98wF1X+oZf+OL9
/S75hJU+1Le/5Ls+fv9j1167u/7n/sX+u+77cfufeMlL1vH73ue3rbT8H/7Q
h3byfP8z/sL+rW95y04/9fH/fOQju1+68cbdVT/411f6F2+4YfX3/e97306b
fvgFf2t/6f1++/6O22/fPf95n7PaIN8Lf/hv77/7kX9w/X7Rj/yd/eMe+8f3
D3/Y79sf+rl/6lP+7J4NDv3f6+cznv7n9y/9ib+/f94Pffae7X/qZV9w6Pvn
7n/wOX9t/8qf+acHm99tr56fe9U/X/mUJ80uP/qiv7vSr/jpf7zy66NrlFva
ta/62X+20vL/wqvvsa75iZf8vT173viL/2r/M6/4J/tfee2/3//iDV+yynrD
r99z5ZN+21v/+0r/9Mu/cF3HFnz7mO/5Y8tWP/eqV+2Gq+FquBquhqvharga
roar4Wq4Gq6Gq+FquBquhqvhargaroar4Wq4Gq6Gq+FquBquhqvhargaroar
4Wq4Gq6Gq+FquBquhqvhargaroar4Wq4Gq6Gq+FquBquhqvhargaroar4Wq4
Gq6Gq+FquBquhqvhargaroar4Wq4Gq6Gq+FquBquhqvhargaroar4Wq4Gq6G
q+FquBquhqvhargaroar4Wq4Gq6Gq+FquBquhqvhargaroar4Wq4Gq6Gq+Fq
uBquhqvhargaroar4Wq4Gq6Gq+FquPp/50r6YQ/9vfv7X3qXZfuHPfShu19+
zb/dPeSyT9xjit8f/ag/sv/exz3uYLcv3bEBxvBzxff/xcXJb7zpy3f6wO/v
ve3eu2df+Vf2P/Tc567j8sivzKc8+VNX+tDWxYy08r/n0X90//3PeMZKP+Lh
v3+Pl5995RftHv+9f3LVG1e4xdXLf+of7d/4hjfsXIMfbLz4mmu0b/+gB/7O
xczrf+2/7PXBcfZxHDPspJ+Oswkm8cbOWFCH47fecsvO/aBf73j723fy48p9
qBy2fNc737nYc+/85tvethj7oed+1v6DH/jAzjlprLrGPfjgB/2u1dZrfvTz
lg+0D0vYfcLjP3n50jVY4jNcYVZ/caVOebCI2YON9tf92H6PWYy85Mc/f6Vx
6HrlyKM/7Kfv7h8c4gdnP3btbv/aX/53Fxj9tdf95737ynVYco1zbMhGyi2N
sXe+46v3b3rjf927px3HmzYOV8PVcDVcnQpX/pa6XnlX/sBf3vPrZQ/+3ctO
tA22pL/7kY/cvePt99rRHdjjd7xhg3bCTNoJSz/4nOcslnBIR8n/pO/7M0tH
4QozrsXqoy7/w4sr5dAc9JVyaBD1SrMpVnGlb7/2utftlIsrvsOGfsSVtH5I
6xsf/tTLXrZjQ/6VfvXP/8sLTLIRfrSJH5WvHfyHi5986UsXG9iT5n/sqZcv
pX/2la/c8Zn8P3/99es4xvCGBW07arW77R/5iD+wytIX95hz2sB2dBjfuD/p
Lj7Ujic/6VMWCzTRM6/49OV/XMknTR+lqXzoKFzwNZYP/tjr87UvPlsM4EWa
DdNX7kd5tAsr0tolvzqUy4bpMOUr17dz8vk9XA1Xw9VwdSpcve5X/9P+5t/4
iv1b3vzf9u++9ev2b//N/7k+jrlOuT0L0wS/etNNuwc+4AGLE8/Pj3j4w3eH
v/2LAX7GUvwc2rb4wefBlrvvfdyfONjpMes4ezlOg4ktSNNm/I8ljLn2UZdf
vtL8KJaAaVriN970pqV/MEMviQMcyjqvWV660g99yO9ZabYqrb/y/MwrXrFi
FOISjiuTJsIVzfHTL3/5hfgJZpRP4+gzfvjMPSaf4/HjOF5+4dWvXkwWi8AC
nt98880rv/bgmL/pSzpPvWyHMbqLbnPP4co1nuUxQkfRXfwstqCN/Op+UOcv
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
H35lb3U3N8x9MlwNV8PVcHUqXOkLe+tDe964tudH9lBXbKW1pPWluOuWybQJ
VtNo7BWP2uG61k6m3dpjR/uUoy759bn3dWizfBj3iUl1ij00bi5Orw7likfI
d1xvemRev3zrp28cNdbd3oR8wvbtv6csXPjterrJeiFl00T4U7cxZ2n9ouuO
+95+0eKBVnMPxIn2Fk/QFrYXS1c+pswn027+x2dxe4zSWrHHRxjDt/7Ig7di
+2IO+iN/c8CaP8Z27Ora4hUxmQZzr/EVe6iLb2mtxgLUwbZbTT5cDVfD1XB1
Cly5tlg6jSGPfrIV//otf6wUa3UNBuIwJjGDwea1VoZ6O6b/bNv82G1Mw2/1
64v8nn35rP0J2IEvtnuualPv9thqRe2jCbbzx+Tfrsfdjje0F2/j8e4DfcGS
PfjYh29pLPU37tx7Ks1XVr/4hjQ74QJ76sWLa8zjau1qc7RoLcfkN34de7jE
W3OVcYUBnGhn633kaSxb2+NHftc6jgcs4Eee4v9p0bQWPeXekJa/uprzpi59
xqV+8Zu602bNARuuhqvharg6Ba48M9Iw/K18vnGONnEtH7cnanNfMYAfdlOX
fra/uPL9zcWYc8rBSoxpP3u2/wDG+EL7j+9wPo6RsiE/arNz7VvuOm3mD+fU
S39oZ3F618nTfLL2mWhsHUetLWqNSWPfbKmP3T/8SxPRVM5J27MP0+ZYib2z
V7EI19Bd9lVqvhYOlcc/5n4px71yfK/YFy6dhV3cYwF72qzffmszX4sDsIEY
gDylseha9lOfvhRjdw8VW5Bf7ByHfIg1c8xaJ4th5RT/Z0e+UJc8MRZ7ypdH
/uL5eFbWcDVcDVfD1alwJT8WGovko9Y8SrOZcuRXlnLSP3zasz+OlGferTL1
xd9ZPsKVfP3N9/wrjR1/x/lOPe3d2loS/nYO08UfXMdu2qQOsQG2459iBK5r
TRA7Nc8rXlpXFDv6izl2x8J2nzp9iSv10z7GmqXF183FUjd9dNzP/W4X9Jg6
XGuOlntXfuU0lm2cWlv42W9tZ1c6RxvYM12EC/xpI52mvrQWHhzHAKa1RxnK
jL2YwR5OpB1XJls6fnwH9hesusTz2UZdytR+ZTa/2r8HGGsMne5yvHthuBqu
hqvh6lS4wkntb66OvrFp85DVy+fNw3GtNjV2qW98H1fSaSTt0TZ/f9uLTvuK
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
L3bk3wp2N4fMp+PymDdAw6Xf8OTDDvqgLn10b/Cv/I4pc7garoar4epUuOIT
cQP6ie7Blvb6O+3vquuV42+4v9l4UY81GKXZWh7XmnvDp63foX1wRQsoX9/k
K/bA3hhrDSqNw6+NOeOHltF+7Ej7bp6ztDw4VKZPMXlpjCpbmX7HlH7TVJjC
nrR7A0vy+HaMjuR38W71nV/TuVOv+4smYXN+xoo80mIL+ssvGNEe9vZb2/kH
B2xjTFqcXB86zhb8a56X+wcPbO2+xq1r+Ef99JJ72L8J9BEfqB+f4h7YEhPR
Z4zyI1vwqTLpVm1znbap05iAPsrjODvym39npPnTNXS0/GyhzXEyXA1Xw9Vw
dSpcsSGmtNtxf2P1x99ceRyvHIz191QeXGCQHcxH8rcVb+IQ6mffuJC/ucw0
meP+liu3/RgcL57gbzXG+Ne54gXS9BM/tU6nMW52Yy/P/ekudpJfHv1rvpX6
caQc+bYxiOIP9Jb66JrWpdJN+NFffhQTUAc7OadP/C4/xmgwekwf5cGD+tnS
b23lNzxIO8ZHmJQHh2zGV57x3b/8KB8t55tt3Yfy84f7xlwBzOgP5vAqj/q1
U5/ViUt95S++Y3MMaEMcYp6dlcPX2laZ+oI37WRb12rTcDVcDVfD1alwxSbi
5P5Wyu95FTfsTTf4zQf+rsvHN/yPB3WJK9Ag+uu8fkmrV5v4nn7DnLQ24FV7
sKNc2se51rd2HCvqa+4WG/mbb1yYz9nJulQ6SF5s6Bt782PzlrUfV9L4bN7y
G9/wZSsfjWNOsj7zrePFJ4q3i1PHWGlciTFjiYbCknr43TXq40fxdG3iNzEL
9TT/Wz18yo/aIu6DS+U4zo/6zd6e/eVn23zH3upIDyuTjdgeh477d4Necq/F
QHmUz3btq8Au8mNOWvnSynGt9rlWe7SBv6zHyqf0snKHq+FquBquToWrxiv9
XdRmz7R0QWmx5DSSv9n64lrs9dyPK3aOK2ViUn3qokXk89Fm9pFun7f2SdIO
2kA//catc3yrX3zjuuY7q8NcYlzhgTbwaS8H+fhHmfHEtjEmjU39xWR7TDTm
zP/6wq7GI9SfXpLmB2O66qY1jnvG3+3CnKfmXImVu2/kV446WgOsLfzjt7az
Kx9pQ/e7dmMGD8WF1KePbE9HOd44sfYoQ5mOY6B4QrEgaceVyZYxo23qwiHb
qEuZ2q9MDPOJ+Dpdp230tLlmjvs3h4+Hq+FquBquToUr9naNc40J82n7cLev
O9/SPa1D5Qv1iuc2FytdpC+9u0Q5uFK+stNvrXPVPvpGe/St8eq0n/i8c2ze
+lhtxplz6sW/duKkPejlcU1jyu3V4DdthhtxC+xt5zOzcfzpH1vFlXPSYu5p
J3qJvWgtMW7XtP8RHxWTVx4/eGZXTvoKA3ybpuITftfmrY/c0+IIcSJPaTzE
jPr0hZ1pWvec+w8r8mMVx3yIWZqPjxyPPf7UPnbki+Lt2qMP2q89ypdH/uP4
+T3Wfa+s4Wq4Gq6Gq1PhivbADwbkwcZ2H1q/2wOvsV22c03v6tJu56V7FxhW
YineOoYl/nIOc40b48Tv9Jv8bKWP7aHLFu1FxLfSvUdKefKpz+9iFPrYXkWN
MesT34kv4Axz0o41Po0LfUkvsY/ncpyon72NKbCFsXexd/VbmyPNTnxurq56
aRXX2BsCi+0J7B6ilxyTn4ZjH5qlmDlO5EtT8a92FnOQh43Zp3VEmJTftek0
bIgpyMPnePPviTz0U8zQvdKxpC75tUld+kw/6xe/qVv5+uD4cDVcDVfD1alw
xdaON68pTlzrbyrftZaUDpOfvaSVKQ/786Pj7BqD/BsveJLPde3XJ7/zvtUr
X/EE5bQfkj7TUMU05NPH9rzVf3Va+6NN2kJbNZ4tfi6fMtojQr9866dvbIlZ
FKuwthaLNCBtZT5wMQS/XU9HYUbZ2Kex1M0n0vqFi8bfi2PHDF2lvcWotYXt
8ad8sR+caTefYxon/EbPuAfYRD4+cr9iphi4eA4e+Bwb+hNv2ikP3tiOXV3r
eIzJ37tsaNHmmTdW0vvdtuMm+Xu4Gq6Gq+HqVLjq/SFpktjou/dX8q+0PPGh
j2zkN5v0rsp8p73yNIdYmb2jmZ39bo92v13bvu7KxIW6/S333fXa7rz86pFP
O7AhX+8ma0/eO27/5mUL/cWOdvKVenpfWPsBts+SstqHtxgC29FW5iFrN61k
HNp1jdvqL5+IIaiHfsGD/FjApX7giqbS9/wo7f4rJhAz+hyH2t04sjxYajxa
+/CpXqzGRnEGbSvdnIE0lTa0pphGEr9gQ/2nt+ix3uct7tF72viVvdWtnb4x
OlwNV8PVcHUqXLGna9lc35XZe7i2GiwNlOaSdpwf5Ws9qXq0QZu0sTiANDvw
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
xoxrxRPYzt4LaS3zf5WDVfVK01e0D1/TFGLVvbvEeHFrcPhkuw9D61KxJDbO
bvwr7Z6hf8xbZkd+1ib+Ub528FNxAzoGM9I4b62NeLs03jy3yy9O4Xi8uTe1
zd4N7feuLH0xPuycNrCduAM/WpPj/uNP7WiP98b4e2elfNK9t1Ien+P+vl+y
WMQSfdT7umkjukq6WL3r3YOtXd2u92ntjnJjr7U6yvXt3HZ/2+FquBquhqtT
4IpmOo4N32XpFMzggR+OewbdffEj7o0BnLC9mAAbYIlG0h9xBxpJPzHguDzy
KxN70rhiS2nl0xe4ksa1/WJxiD314sqeeGLeuOJ3MXDXtM9ea3DiqniC4/rq
uJiA/uun42xJ12CD7/hZHY7jhH7TL7zJXzxBOThv/yI6yL2HH7xhyTlpzLsG
k3jWVj4+jjd84tIrYufGm7HkGvOL+VUsgY7SX/pKnfJgtPdR4gq/9CHdJU33
uF458ugP++k7HYT9j9ZX7XfkHmzfWvema5xjQzZSbmm8NT+vNaoY1sbharga
roarU+FKn+kIc3+t96BZxLrZkL2xpX0YcFz78GMeFVt5/u55nE/wxhZ8Qi+x
eWnPyWkwc4nUhSUagu4Snxdz0B5j09ij8eJKverybC3ejj/2wYYYhL6JG2h3
626k2QlL0uxafJ5d+RknjmNAuneEycPnR0103eqjuIFxaj4uhqC/5k9rE01j
3hhG+V4b5OPv9qXnV9qRliyGwwYY009zzXqfF9vjBFcYb59a9cSC8qTZhfaS
5vO0lmuUW9q1uGgPwN5hQl+lm7CBE1wpC2PySYurS2PMdWzBt+4VtjLWMFwN
V8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PV
cDVcDVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PVcDVc
DVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVfD
1XA1XA1Xw9VwNVwNV8PVcDVcDVfD1XA1XA1Xw9VwNVwNV8PVcDVcDVfD1XA1
XA1Xw9VwNVwNV8PVcDVcDVfD1XD1/4ur/wtd4OiX
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Y27bddV1/ErRIxYNSoqKmrQilVRYykYyTl7B0StihhLxYpvKQJWDG9t
eS30uZRQQgnlAqGEUsol9CWEtISSlrSU9pKGEkoJNyGUEEK5DSGkUNo0TV9o
0uL+jLF+Oxse/wD3eUae5+Sss/Zcc805xnfd/Vtjzjnmx3/elz7hCz/i2LFj
Tzt7878nPPmrPu2pT33y13z2R/njC558ySc99pKP3Bw+ffPzvM2P49tu/Q/r
9z744Or1r3vd6tbTF62/4fix9c/dfPPqLb/8H9eXf+ufWv/6XXet7vq1/7L+
vuf/1fX73/e+1Znf+B/ra3/kH6wv++Y/sf7Nuz9v/ZOv+dT19zzvL9XxG3/m
X6yv+sGPX//GW//7po7Hr1/y4r9Tx2/++X+7vuaH/976nt/8n+vTv/jv16/4
sX+yvu+3/9fa/V71yk9e3/+uL13/8u1PXP/Uaw/WH/z9r1m/9df/2/rmn/1X
6wff87S6/pZf+Hfr9zzw1Lpeux5+6Bn12W/d8/nr17z6n61ffcP51abNPVc/
c9NnrH7w5Lmbn5OH33LZZYeb48O33/eU1abu1fe/4ONWP/GqV60251e//4Gv
Vmb106cuXH3vlR+7+uGrr1698vrHbc5/4PCV119f5d9+332HL33JJ6w3vzfl
Tq20+w8+/OHVr7zlLavrfvQf1/Ev33776uUv+4dlm7edObOp/1PWz/6mP77e
1KO+9bdcdnaVu+En/un6u77zz9ff2vz87/0r6xPf/merzz901d9ab9qw3rR9
/WPXnVd2u+kN/3x9/Y9/UtntZ9/4L6uPP/ryf1S23LR57T6/eMtnVTn1OWZ/
/nD8pp/711WevV2j3hy7lk0dK/9Ltz2hrnnDjZ++vuNX/lPZ+Off9G/Wv3bn
55Zf1HX3255c5Rz/ztv/dx3zsevY4kU/9LfXV37PXy5b/eItt6yGq+FquBqu
9oUr93r3/fevfvI1r1n9wps/s+zxhhtvXLnvN1161ub621a3/9Jnr6/4rr9Q
1/z6Xf91ffVL/+76m5/9UcWSPrGJY3Z58YseXf52P/1y7Ho2vve3vqDarC/v
+N3/U31gowfe/eXFkjbjxbH7b3xf5fz9e++4pOpyDaa17V3vfOfmWTh96Ocb
jh8/3NR14Gfz9X7su6/4mA0/Z69efcMNh9/zvOetPvTw120YeGJx9a3Pec7q
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
uIpuoaO8j/r+p7X0i7/EH+gHY8uOnWcbcXh2cCwWrwx7y22kb9EM+simnc/g
mRXL9d394HueVu3LeCldQYu4ls1cmz2j2dx5bPNvz5G9fSW3UM8l6jFx1xuL
tt7Gs7HsZ1JzlDFlDY8xZ7F23GR/S/oLV5gUm1fGGlj7Wmo7lsQTdhnb1VeO
nfeM8XNY8u6fNTu9XvfBOqapoq+cT8wBq+xAhxmbF2vHIm7oKM8ev2U+2+56
GefpKYw7xlTWlrJzj118fvEUnZQ1Npjx4xhLWWeTvx1HR2WecfjZZQ2zw9Vw
NVwNV/vGlTYaV+UXx2LeNFKvMbyzcgVpKx3hvD6IefNJr/+4vvQVxpQRt9aW
2ARHyrG9OIP8DjSW88mbgytxfBrFtezHH3Sac+IPbNH6q/fiTHwjYwTi/uLR
zmG+4w5naqx52ddryft3bsUVcOP5wR9N5XqxePmNxBlwh8PEBxIryNhx9ibz
HIYrLGGGPdkIM54FcRxzihN7wQkNaX6b+VaeG+fFzfWXrqU5o68yn8kzJGae
fAp8KS7Dfjjyb0SO2ZbdHWedKbvlmJ0dsz+m8lm4chxeMhcrP/jJD27pMrwm
Zk+rDVfD1XA1XO0LV66nH/Dh+xhXYgvaq3/Z95mOcKxNbGZsunPHnSp9pR6a
CJ++l+Uf4ANzj/VR3bgSZ7dWVfvYyXs2e3i/9i6tj67lA/f1zi7Wr2/8xY89
T/aOak/nmruluOBH+gXb/IQR88HMt8IVvdRjCa2v6CljzRmDxpUYgxxFnTf+
3MPMPcYM7RSu+J1GYheMZf2sMfGsITIvKuMCxoE9H+ZU00rs7Lw4iWfQc8Q3
dJPxY/1lGzqLZkluPX5ja/enY5JfKJoGV+zvOXceL2xPO7On8/oRppyPtnJ9
4vDYosfCTcabd2Pru5oqsXnl08bhargaroarfeDK92/iw+4breW8vmLIMcbY
QT/4jIbRDu/ftIz2x57aZa2NuUPi6nmPxRXOPvD+r6p+eK/2o3/m2Bo/zd6X
yZXEd44T89fOjv3eWTH/zsNzW+lA8W0xADpQe5c88RVHT+53fzdH59YYdK/f
uegQlzgTY+hc7xeXJlNnYuz8sbu+JvOTjSdkrRBNhCV2wIvxC1pU/7K2CBPY
orH0S120oZgMm2KZH5Njlo8xYm2QvtNN4h/hDX/KqJe+CzvJzxB+3IuPk3fI
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
3u4+jmkqvOEqe3Lglt6jp7DFptjgc9qKhup8R8cqByC7tdbq3Ef80ja7vXzh
fV+7jbmLl9OI4ujq8wzxP63CLvzFJ+ac0SY+84xhz7PJr53Tt2Pu+Kaf+Nea
2sQU8CyfhLVEfLk8B9V28Y+MBWhn78t5ptouRqAu98UKVuk1zwjNtMuJmALd
57OME2i/2IjfuHI9zcUmrbnOrWN6Sy5h98QzOy4a9YCNW3cdq722PWNiVsPV
cDVcDVf7whVbZd2HebD5jP8Su6W18u7tHA6zTj8xB3OCk+vbnC5ahN8z5wpX
9BiuxBMcY4pGosfcwzU0lfP+Fq/AOs6w5x4+k9sBh97v6TJ6habRn+Tyo2WS
q91vdug5VxeXHbxz86N9WugWsfPOt3RvaSfPlvFWc5Yyb0rf6Rfayb28++NB
WefF3H3mPJ/zFd+IU2PF2ll+EbvHkt/ujxXnMWRsnJ7SRvqFPzHlXd5nvb/1
84p/uk2MHkvu6X5iHWIAxhbUR/PoPzaUcS1+lNVvfOFbe9S57PFZ4/DahTNt
03brdfMsJgbhWTZ+oA2eKfER8ZLhargaroarfeHKe3Ty4bBh8pfSGHnfxg9m
6Ci/lWfXXEtr4YM2ozXE0V1Pe5knRWuJhdNX2fvXsWvwgzHcKZOcftFjymMr
fGY+sxgGvrVNjJk2MheJvfiCPuAHORc6nvBlFVvHXfZt8X7uuP/+6O1+KMbV
9Ylm0x96KutSvZfjx7iEexpT5g/6JUzTP3yKJdpO/dqTMVzto0f4aHlXr3Fb
7V323Kyx3CV3RPnUb3XRTO6LJzFyvGDN55igd3oP63PqM5xpI72HY2XFPnCE
F1wtsfJDmk8MIXt+9v7Yj6+y9Kd66ETxE3OgceLfFLqbTjPWkjwPw9VwNVwN
V/vCFS2R3DLOZz8p79e4MPYaxtjY+eQDx4QyvmPNL1JP9hd27Lx4Qfa2oLuw
gTNsZDza/GEcJW6QY+tejfVmzSnNp7zzyR+HbTamczBBr7CrWDR7+cEaG/Mt
XxuP9ltMInODkzuBNmAHeoG9vJNjUJzZfcQV+FP8gL0zR4leEyPwOX/5LU7t
GEvJEch3GOhcEOdXO1vzXbndO6XniJ0oTaVc4gD0kXozL0t9nhf14dgcMyxk
LBlT7KIsfaiv2FrW1tZ17q9/2mrOVWu505Xnnq7UZ0xiib39O+I5FjuJFsWO
uEs0s397hqvhargarvaFKwz4wYr3aP4XK+C37LVB9yirbsdhKfF1HPJ/yuNG
Xeqkf/ier5KDwfU0k2PXiKO7XhszbxmnydsgvhDeXIOvxNg7v+019c5MB/Et
bcCmbNV7ZrauYLfEnLFEI4kvsJO6sk+09opdmCeVPTf5q687v96x+cI5nIjv
44fvzU/CSeutzgHf+5V1LkBaj899bv2p8p4FvBxb/pNzPnFs7/LhSlsSf1jy
LS35548V2875zQaYwx9tJ87hXsp75jwLt9Ye1pfVGL32+BxH7pexAP2nJTMX
AUueO37Al9gTH/m3IvPraObhargaroarfeKKPx13PoPHlz9pKcfZWwR3zmEm
nJiblP1+xR9wGH3lvrk2x+bk0mPRau5Jd3l3x072TBRbzzwuugvHOMq4dvLh
6h+NY20kLWBOrHNs6f29+ThV8QG6xA/ucCQ2z2bWx9AP1sSYB0UveJfWFnEG
ZbxfY4j92ZqO8Zuv+ZBmSRzBcb+v31FciBOI8dMr1q/gxW/6xnwtfuRDc8Cw
cOuyB7Vy+oRf/scd/uhCbIih03O4Vp/fyuKreTm7xqzVgR02WWxVrHvePAu0
F5t53vS91yDfV7EM+jLPIRt45mlqvqaj+AxP5qjzJd9k7oB/U4ar4Wq4Gq72
hStzm+ghDOQ9HivJpRc2fGdmP1/ncYI9Wglj4gK48L2LBZz6/lWfNvnMfVyL
K21QL06MRed+2hWtZe4Vzp3XdvpOvzp+fFnpBv7MOpPkMeBnMQTxgN4H7M2l
sTAmdsCfYgrZIwWDxkvZUzwZ18bhlcUQ/9BDWZPJ1uqn65rVnhPMX3wn3k6T
Zd9MmkYdPtNm/NE42MIfDuk2jImtt775uOKDnurPb6iYA47U77e2YMpv7LhO
/3v+co9ls48Yy7Ifdz1ztGa0p9i7ceiwZB4XtthDXMk5sXVs8ClmzAH3bwUt
zneOs+8zn2JiuBquhqvhal+48m7Il3ytDA6UiW+zBzH/iz/sMua66CLnlcdY
NJrycsHlvDrDX2LtPsu6HHVpG4a01fi1ep2Xv0G9+Z6nh2gj78Vi1OYMYSjx
axzxHR0hjsBe3pXNk2JDv+kczGFD3MQ7Nb2hX+agYS/v7Djp+UoH5S+84Zdv
3BMXNBCd431fG7CubTQZrvia/+kk49Ot164r/s3Xci/6KWPX9Blthk/HuMpa
UKy1njpd87KUxx6t5pz5ZpjWHufcX2xFPEMMBmv6w05iDFhnT5pSvEX8nJ/E
ccxH5zv/TvgJL/zr3we+yvkcD1fD1XA1XO0LV94ZaZvEvZXz/cjnWXMarhyH
JdfSWhljxoV3TW1JDMFxYgvRV8qL0SdGq31Yyvtp3l+xm3U59FrmILves+A7
Xt1Y05aO+d9cGghPfE974MD5JQaw1VriBuILNJexZf0XW8CSusVLxOPFyTGL
j4xj86P6/dAz4vB0kr/FM/gLb8l91PrnrOJNGWz4Wzl6zv35s2Pcl5f/xQnE
HNzfdWL1WKK5nBPPUCa5gZZ1t5WDork+Y+3tYedLetFWZ9JbtBa26ES/zaXz
nCbHHz8n1sQPiUc5NobCJ/696NwVT9zywE/Zk3S4Gq6Gq+FqX7jytzFXcehw
RcM4dn3Gptk9c5Kzbid6LDFz98KY68KM87jUXhxoH66y/ka8Iuty8Ox3jjHj
M0xjzbsuRq3Bybi1cWpznd0z+d3xKyahvdaKmCecuUd++I/O8C4txuBd2zs1
bSXuLJ4fu+OI//iUD/34mwaiXbzbizcktk0riXnzX+Lh4uX01yM5f24oPvGm
LC2W9aVhDF8+x6zYAFbU1+05b9GT5y25Jo5fELaWPAmV8wE/tGVyxYubeMaw
LEZgHRb/Z/8utmJzvuJjnPgd+/MZHtgYJ47jHzzwBzsapx6uhqvharjaF658
H/qtXuOwycWatS/iA+YPy4eAG3V7lxRniI5Shv7BkHvxeeYoY0E5/ch604w7
O8ar89FUjtNW98MLrpVVl37rE6a1jwZzXllxCX/jylxlY6LJ65d6zauW09ac
WjF149aJOWBPXAJbxpp7nvAHlvf8Y6WL8OV39sH0w/di6vyPh8S6/S1unjlQ
WKRzOsfrxy45aDt24L2f1hP7tq5IXEOd2MqcK20Rb0h+BBxlzpa5UclvJGai
X/ohVm58Aa/sJGbg2fdMZ98zuio5JTznnkm88R+/RRvHj/5t8KMePvCbTbMH
NF6Hq+FquBqu9oUrdeqHd+7MsRLP9l3rPVv7Mn9Y/dlbkt+NC2e9jeO8c4Yx
ZfhaGXF2/XLeeys2UsZ1uda5sOT7Pe+07OAYV+rJvid4TBnn/KiDBvCjXnwl
5621ruZy+TG/K+1j/+R8Nd/IvF+aif7BSe8d0vnoeo7vWfW+T++IMYhDON9s
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
DVf7wlX2D4kmCRv5nf0r+dexMuFDvfrv78xxzXrSrJFRJnOI1Zk9mrMmMjna
/e3a5HVXp7Zn/wy/cz0Wfa68+2RtCTaUy95kycm70RXbmDV2tBNj7pP9wpIP
MHmW1KVuvLC99/FoJz9sx/Z0Cb+JLyjX61B7j2fxavmH/NCJ/OKYlhNLF0uh
J+ki66KiWX2mTzQVBvmR9sM5vtjP82Us3/i22IAxYePd4gXWrIYVvu79TY4f
0Ib6oa3ahj8xd/GH3iP7KZlrVc+M58ExXWU83Liy8WjzuOQ9fO+DTy/bep61
z5wvcQ3acbgaroar4WpfuGLPrEvkY7H27MMVbRRNRatEczl2Pnlvsp4UP96D
+ZWfEgdwzE/878c5v/Pun1j57nHuEfb9dg9sOVaODkqOPdfykTizMr7ze++q
zhvAr1nPIv+Eubh8p07+SrvzTOhX5h6Lq2cuVucqqjh77SPiJ3OxzEXiX3Fo
uoPvnNNX9zSHl80wZcyWvbNu1D0xra/iHbQU/2h/1vbi05pV/eo5x1fXuh8+
yRwq/nMsx5F1NeYUY8TY8rLP5qExaDEPY99iE9njRRksyqUkfi7OYh1Q5qxp
+7Fjx9fGBh5495fXfnB5PtncXGnzxIar4Wq4Gq72havdeHPmKLFB4g00ijYn
Jq+PiWVHR2Ew6z79rUzWiNJdyZfgx2e7x8mXgAnHymqDc9qQ83RG8g5pr+90
dvc9n1xyfvgKP9pDc7CVOjFGX+iLd2b+0IfkNKBhkjcJbzhzbyz1+/eJ0lhL
jr6DZcz5gh57fVRpGXONs66FHmE/61Xsl8zO4urZ/8VvbLGR+3h+MWWOdbSm
toq/017iE+IWrjMG7rifz9uKB3XqtzFkTNrP2t/Oiw24Xl1y4VorhCX8d9z9
McWh+D9WtVlOJNrPfLmspdJGfcIKDeuY/Y2PeFbZzLPjuR6uhqvharjaF66S
r4AvM1+JH2LX7NGFKdeqSz1slNx6NFBy/CT/nXqT68ffGHBO+zLu63pt9Dvj
wPRN3qd9n2sTn/tcH/jcu61862IGzmubeDau5FKyrlK9jo2PYpDOMM/WPRzT
FhjCGL+wrXdo48vJxbTEkbdc+ck7+zLOetBjuPfU/Cz+cp01LnQOZpLjN7lk
+S1z2NhR3+ypgiV2olXoKG0UA6BztM0xHdX7ft5SY+Dqzz5ezsuZgA316xfm
+NLaGZpM3clHTCeJB9jrRMyCXvPcuRdNiNte13RLzQ3ruV431/odcRA6zH3x
QTO6B5uLv2NruBquhqvhal+42t0fJL6mM5LLLjoo85d85yeXu3Ymjq79yZOe
tTB3LbnT3Q8f4ci7vvocixO4h89xsnvst7WU4rp4sm8KntgTS+ba4px+EXfW
B/nkaAhtp3Ucq4u/scSH3oMd4x47tBbtwC/Ks5F8QZmH+8jeyY/sq5W9mc1H
oluMKeMTE7QNm7MjlsT8s+5Hmz0z+s+GmV9tvIPOo4/Mk6KpzB82N6rnkd1U
c7faznfU2lU21lb6iW+w2PmMPqvqwhzG9NF592Qr59UjD5FcSNpJT5lXpZ0+
p7eMSXhm/PC7+dKuwSQ7u4d6aDVsqV+7nR+uhqvharjaF66iZ7QruXmwoM2J
Y+c4a1hopeQ5d5xy0VeZK6uMa5ShcdRrXQxNoT2OcaOMzxMzcCyO+8Hf/5qN
j75yoxWeWfHm/u5/dPXB97v3ZNpPX2kC9esXm2tT1ky6j3dfGsX9nKfB3Edu
nZ6re1GtB8WVexgfpmfClPlUGbMVr+YHPqE5xMD9xgN7ejenY/RLfER9GUPA
lv67t+cSg54JHDePF9a8ZvoL72Ll/Ry9qsaEO85ypuLimOFff2ND33ue1BPL
1/zLn8aDxcE9z54v59nB8+UY2+pxLbv1GPZHFxvmidFL6VdiDnSiOIn6zRej
IdXpd49tDFfD1XA1XO0HV9qprugiLPgdTvzOXlkZS07+gjDjetdl3+QwE5Zo
KPfMmkoxZWWcN36pPr9x5LONrqixzcQX9Jv28e5rri2b4cIcI1qCZuADffGZ
+UeO9Q8frmcf/tO+aC33Yltjr9pPq7gHreO9HLdyqRtTxhd2+FmudjoKV1gV
s8cEhvmXLvEMJP+8Z8Jzwlb6w8/GdL3jG9cVp6fZvO/3Ps8fUzEQsQprQDuf
/Y01RtzP7J3FFf96pugi/s3+1O6j7+zCxvyvn85rq+eSP8SKrP1h/6x7UmeO
+dUaqJRJPiv14Apj/Kx+TOPWOfYdroar4Wq42heuEudOfD3v/uEqe48kF15i
8T6Pz7NexP3yWz/V42/1mLuqDufZ2DmfO3YPOuoD7/+q4gpTDz/0jLI/f5kn
u+SVo0MO2YNP+B3nxkn5QFtoAfyoX5zB+YyHOu9ebMxPxoLpCDFl5fmBn73/
44ruMp/YXGM5GcxZwhKfyjnoOvF8791srq7khzAHSp+zPyaNhW06T3zC+DXN
tuihmtclZkIn6qdYDk1lbjBWxRnciw7Elb54dnAl7qBf4gmeP3ZwH3V7Nuki
fQ5jPtM2Y9g4c23W/GadLJYcY92xOpOvWNxGGdeq35gCjtXjc3YYroar4Wq4
2heu9JndMw83Me6wQo/kPCboEN+jGAmDzvs8+kr9ftNM4UwMwTE7m78apsTP
MYUlP8m3LnbOr3Lf8SndIMZtvYtYu7lF7IxvcWDaBhu959h1pTfYj28chytt
oS92uTI+61r6Cq+9fvWOGodVr71IMGztaOY1ZZxaPTQJDeXz7FOWdUb6g9Pe
+/l01vCsen3PedayrtVv/paxXc+BOL/r8Juciriir3qPlttrnNt9xPnxzeba
L67OF/qorfyOC397Zo0Li7PwBzawlLlhyjk25w6Lrs2xfuHKs+5aY8+4Uic9
Rteyc/aYHq6Gq+FquNo3rnZj5okVhKdoMGWUdY+MS+PD377r/Xat48TP/Z3Y
eXIB+RtzmKKpwpQfffaDD+tCMOUdnFYSA+h1JQfbHKpsS1/xv/bgxPivNoil
R19lL2tc/VF9Fa7oK7GEcKV+esG9lPEunbUw/M627MwGyc/LXuwmvoBL7GMy
ekpfxM3lMcCYvvrb+HXnTby+9FbngDpVcQ180n24MvcYV/rFL5lz5b69p8jt
FTPhW4zxA+2TGDtdyJb0lWeDZsQGrYWxzCvGkvPGzfGjHvyoi75yrbbzrzpp
O/dlI6wPV8PVcDVc7QtXYSVxhqx1wZhy2st3Oc5cKt/nfIGllOczNu7+XlLs
8K/f5k5pjznED33wa2ss2Y9jbVM/3/CZ8V6x9F47ctZqyX1XekseAXqF/XCm
zfrh/Vw9yYmgbTQFHZKxVPpK23HFF9qNKzEM7cQVfaX+6Cvv5T6nddjXvcKh
93/ztjwztIi28JP65SDSbmPWcr12P66rvZv1g57yzPR852dXjD36Sh/D1bI/
VrXLde6J7egrcXv95Td6D3/64v5iIs5Ha3mOon/4Qt/Yi3/EEzwjjj0vYYzu
cl7/xNixhE9xE/1kc8+emIZ74Qrrw9VwNVwNV/vCFRbyw/6ud134ynFy2Pmt
bHK8Zj4Vm7qH8vqFI/OH8eKYptIXesqxsWXxBd/z/JkcPj3We7pyAbEfrUGL
aLsxXuOwYtFizrhTP5sZd9YuY680SuYhZy6WmEPGoNmZ/T0TNBhuPAtsgzdz
usKt2AH/upfYgblG3qm1W3+yxojuEWsQF8GINlu7mnU7YgfywC77otTzgjFt
NN9YeXOz9NG4tvnAngOf9TrgNxXnjrP+tMf97675z/5d4M/EUqKv+Mezgzn+
03bM8Zn50XQsfsTMMcF/+HGsfzQV9pXP3LfE8Gk2jBij9ryxubJ4Hq6Gq+Fq
uNoXrtw3XGUOFWa002fqTq5U9eWYfkqM3Xcy32kfhmgt5/ytTnwp/+EPfX3F
EugRc5x8p3tHtZ5z2RPrkL6SB5b2sG5SbJo/+Jf2EH8WB2Bn+1LpFy4TQ9BX
MQdti9aKvgpXdIHrwxW9xEfe08Uf6Bysea83zyrxbX6he7TdsT71HKVrVs3K
pavEEvyXfH50ls/oJnt8iV/I+4A7bdFHz5Jx5+wR7dnBiP52TsQ3Fudi79rr
OWoNfFftH63vuNJ3NmEH/uUffTRekblnnkPHvebn4SqfPLr6lX26MSY+j0tM
8BVeHXvOjXljwrXq9++J59o8geFquBquhqt94cp3YuZI0RjhRpmMH7O/n8TP
HeNGe9SLJcfOWT/K3llLY4wZTz5jK0yI7dIEtAMbYgk7xmKtgVz2gVzpM7v6
jK7hW393Xru7SvNoY+LtsWHiCdFU2GZPzOinMuLqWaOqrqzxNIZLJ9Fv3uu1
WYyDDfXDNRikxfiBLzuecLL2rEweWzkcep+Q48WVtuLHeht9p8GcX3JFbedf
YQd74WrzTNZY8+78q3ClHdpJk+lv76d19Tb27tnIeHS0ND2VsWm8aH90EY2U
OczG8jGGH89txq/VFW3GJupxLRtiBo/D1XA1XA1X+8ZVcgxlXnHGodWrDseJ
J+CHbTGWz8UNaCg/yR+knHq8jybGKybOtuYi0QTep9lTm+wHIgbtfdg8Kyzp
g/U33t29B+MPi8lBp75drrLOVGw8868Se6claBR98a5MX+1yJVbAfmyyyxWb
JBYtDm8OEp3RbT+/2rzsdVm6Sj4HMRJsZb6Vz3FMD+Kk16FWfr+DZc1nza/G
FU3HPmIa+mvsvXPo9noccQZtxGnnRbyt2tlzvM/UMbsn9o4T622Vy/pTjDlO
3gblMSbPYOxG27Kt+Do9xtf86Hmir4wruIfnUZ3axFaeNc/AcDVcDVfD1b5w
xbaZQ5V8CVhRv+v97TPxZRpJefoJV8aNaY78xhXG8l7r/dy4qbyudAfbiJfT
Tr0nxtPLhr6nzTOyDiWaiu7SXnnQne+9n28orrx3sw3bspu+Rl9hRnycrcKV
vtMAztMANAab66+2iuuzScadaUDtwy2fGofN88H+7pcctpjp/O7Hap6Y3O6d
y/34BfqdcqlP+zvX7ONKX3W7Lqx9wIxh48IzZY1P9NVunMG6VLqJpqKvtF1s
omNFd28ZY//oTO1NTEn8wTMTrrKmlR3os+glWisa1TEGMOY4cXvssa16tMmc
Pffi5+FquBquhqt94Yr2yLyq6Kj8YApPjjN32I+x4935w4mfm5sqVksXJFbg
Oz9jx+6JGSz5zmdj79S+k8Wj2dd3uWP7R+LKHF36Clfez9nZHGD2YE9tV5cY
BH1FL+FHX5L3nHaiY/hGzAF74gl8gRN18ZF24Eq+1ug3cX71+OyRvR+Tv/bY
Qe9lfDp7fB0YV6apOqfD2WIDNQfLPZY8EKt+5lpT0W39rB0/FOfXp3DlOaJH
9dfzQZ9hjFZL7j79UG/PG3hrHfOp+EHG3z230Vr64Xlnt+Sz9Qx61sR4Mpc7
61sxFq0V3YUx9tQP17Kne9N7Gbsfroar4Wq42heuMpdK2Y7ZPmW7R5bfftQp
po6prCGlp/TROCw9wn/mTrEb/ZC9gTPPlp7gH3rLXonahRn8Jc+6+IJ3V7l6
5DDAlZzrrhVnYCfv3eYm0Qj0hnbqizFpfYi+Ylv34A/aiU0yR1cZeoNNjJOy
rTnQ7O9aOkcf+Ki14f3FSvYwMZ8KP62vTomzFz89vnxWjZnjrvc3OVHXJIeE
Z8azw07KiVl41sxRFt9Y8gWuOs/tDZWfAWNiJ+xF7/Gbvvf63Tev2Kj/bXhr
safvfJ41SmLnruFHGlLfnA9XynduvzN1TC/tMib+4Nowhhn2zHxj55XfjdUM
V8PVcDVc7SNXmXfsxzksGTcWP8CSeAJfiKe7j+u9U3bsvG1AL/XehpcXW8Yn
xRDYytgx29BO3tmVwZU+8aGYO64c0xx4Yz+6y9zY6A02p1ewyA7hKrkXdmML
3rVpJ8fRkzQYXcJu7rHMdy6u9Kf38jxdPsKQmAEthR95i7CCe+2irbCUfEb0
1xJ/OKALjT3jSh+1X39wFW0pbm1MgabqOWnX1jPleaVT2dD4gn6wjxy2ng92
0GY+wCqf4oI+U4b/M0dLv7JWlxb17NCZtFbGIDCGt8zlth4Jq9rtOGuXxDLE
odhTXMJ5x4nbi1fwzXA1XA1Xw9W+cIUR8XP84En8wFpROiqx9Ogp5/i315A8
XCxl7Jh/8OBvc3boBMywG70kft65wE+UPxwrj0Xf1TQCnaFdeFvGp6s83SXm
LZbgMzZnQywlvxCWEjdgt6y7cV5/k5Mhx97V2VZ5sQVxbPanSfjXdWIaNBJm
5JZ1nLFkfcMFbjAhjkJj0WJ006LDyjbiDNqIE88Cf9Kiu8+X/Urs9axPuDLn
CkviEdqmT541mkrbd7ny3NKQedaUoYkyRyt7rHjW9JFWwxjdFZtoX/a/5gP2
xQwb9l4mn7+sQ713y1J0V88heyRWr8xwNVwNV8PVvnDFL8qJJ4QtP85pnz6J
A1uXwQbaTg/43qdr+B1LdJR+0ADGaMWqrT+xzt93PhvjbcnzWsw4jxljmI4X
PxZjeOs9Ma6oY7lz2Cbv2tlLkjagAdg9faejHOPfMbvlOPoKS2xOSzivTu/m
tKL3fb4TH8nYMWb4fllXeqj/5hLjCmPYau11Tu0BJuaAG/EDsXfPIe2EIfdk
B7ZiNzakxaxLDVdiOPzfcZsn1DPBVvSStrEV/+gHrjqHRsf08cPn6nIsHpD9
v/TRsfI02HKP+neC5sx4tJgF22prjv3bgbfYM/O1xHMcq7/zxN89XA1Xw9Vw
tTdcaVvGna3BVMZ3qnJ8TQc45muxbvfnW3alnfiB343Pshs70GBLPrkVHvGm
fHijGTDjWprB+g/ziaK1zCFSD5u7r2P6KjlkxZ/1NXuX0CuZa0Qb7OZhyLpU
/fVOzZ40lWPPjPgw2xrbZX9tEsdQf/IJYUdcHVeOcaJv0VK0Dv1Ig0Vz0VdY
W/aDvkB97LYbP9EvzxTWXP/K6x+35SoxdveJvlLes5A4A02FK7oUG8YgPIed
b/jeeu5yTNv1uuN7iyvXOmY3NsFbxiP4WMxBefZRr/KJOeR51CfH7Iw3Yxb6
psxwNVwNV8PVvnBFM/XY8EfVdfquL/yw7GdV/LADm+CE7fUFP1jyvW+tqfb6
3rd+BQPOK6O8OrHnGFfmaTlWvzw3uHKMa3OLcIi92F/+VLbBVfYgdk3y7GUN
TrhKPMF53/vO0yjezfXTeXFs8We2pWe8g7uH87QHvxjzpptwRS/1WtNjh54B
Wqv1U+8FbV6ZMmLuvRfmuTW/2Bwt8QAxdp+zNWbZU7voI1rNWh99V8YcMPZk
E2twlvW15cfsoRmu1IsB/vQc9v6kZ+q56zzD91T8JIzRqVhy3rF6xAncT/0Y
c7/sF+Ye2Q/avdlQjMIxluhsTCqTudzD1XA1XA1X+8KVcV59NHYpH5u2+O62
fwV7Y8teVRhwnn/d3zyqV73yk+t7n6+V5xP9leuUT9ierXJs3DkazLwj92I3
MQe6y/s6vaE9bIs9Gi9cua97WbPJbnzADthgH7b1vZ+9rnzXO9Z3LDmW3yDx
ef5iB7w5T6c5zh5hPff3Y2qOMDY8G2IIWBFrMd6c/Hv6gSMxFDH5JWftKut0
ljhIxdW1VzzA8yUW7jcW6U+MGqOXMxALeNU2sRD6lq/FA/grMQdcOW+snL8c
Zz8y2tIzuGjZ4oc/orWS/zbH7JkYjnENOoudPWviGHyGK/WwOZY8g3yvPfrT
/74MV8PVcDVcDVdHgasea77osNfdXLSNn9NE4gx4wIj24ixaCX+uNQ/LtepK
PELcJvPTvMMbi1CvdZ+J8dsXM7ncswaHduU7/LA//9I10Vo0nPO9P/dbKq6B
md31qmIpS/7fYiDzt+klmtN4N33kWvndaUDPCTYci6XwhXaKo5irljlyNGG0
8XA1XA1Xw9VwdTS4opE6/8LxC3rucY8pswWump/Lt/F2uos+EptwbeLt6Svm
+I1WWspt1+1af8R+jo19sBWu+Iud2ZDfsYQxbXZeW4xN02Cud6xevuv9Ze7e
jkfTRexmrhqW2M0cKseJM8S2yZWkfmPxzmmPfEr6rH+OsWNcQjvFOdhiuBqu
hqvharg6GlzxvflW1uPQDTiit8QM+J++YrtoKnY1H23Zh2zJz3DywHiw89b0
6Ic+ic9jRL3q4nP2MN/L2AQdxCZ8t8TFa68xdnbcueRfU7Z1TB85NpeMBsse
KBjDu36xm7bgSh93czgk5yHG1EuPiTnwDZ0m5uBaWg7DfIHbsIfbjLkMV8PV
cDVcDVdHgysaAhtY8i5NQxl77jxDnbdIn7P3SvIq4YTOcG2vS720dAdN5t2e
LY1p63fmdWHMteL7clmI4/vM2D3G2OQnXvUp5YvoLiywj3zv7C8WYC4Zv4t5
0GPi87jSx4xN9z5rD1RcPfOTtYvWytpVXCmj3sQuxBTYTf3LvISyZeIebOy+
w9VwNVwNV8PV0eAKC/SOeDiukqMh861oKjqm9yW57lD7XGM8Wn/8lreB5sCo
a/VVnAFD1u/iC5/spE5xDHOaXINj89CMR+NY/IFvu13nb+dr0V1si3fz02gt
/hWrF4fHe+IP7Os4uX/117iz6+mojB1nz1B14YrW4rPdethN/dqXNUTYGK6G
q+FquBqujhZXeNAmOgorjjFAF7GLsWL6Sj/DmL7lvL71ns/HKy4h5uBvuim5
DflY/ca1xch7/e6VleMdu+7Lhnzo3uZ7e+8XC8FYcmK84cZP3+4Bmvx+rqF/
aCTlMCAfA/s6byw8Oir7ROMn87XYKuyxlfbxX+IYfOZYfAP3w9VwNVwNV8PV
0eCKz2icJd9Q6allj67iIroLDxgTB88enbQOrrCUfE7i9nST8nK+4yLsGsvt
Os87FD9Qj3vpK8a0w3olttcW/sr18lfwJ62GKzbXFlzxkXvixJi3+7Bb9gLL
mlY+ZjfHS/yi7MwO4uq95+hNVQ/G6Crzk3uc4HTZ05xknA1Xw9VwNVwNV0eD
K1ope5fQNK9e9ufic0xhgy/5nBYKS/jT7tZLJw47FnCqYu/GrHuPl4srLhGd
lriC9T54MXYtRkErZU80PscR3uSyyPVZy4M3uSzYUDkxef3mOwxk7BgbWbND
U1lrwzeZf5W1q5gxDmCsGSv4cWxsWpwiezqLTSQHFNsNV8PVcDVcDVdHg6vk
38NS4uU4wYtz1p2Km2NvGZ/ezk9echIVf1mviqXMO3Y9m2bMOrqr98ZsRtRD
N2VPlCXve60PEttWXu4I7W07XXcoLyL/uId1PcmPgbHExo1TY8T8ZBoMr/yh
71hiK7bFh2swxs7Z+4zdxBqMTYuDGB+Q153P5PIbroar4Wq4Gq6OBlfRV/RM
5lV1TOBR2z28sl+JH7Fz5fEQHeVvfk3OW/1xHgPOY6Nj+k/aarMlj2Ed00PZ
J1SZzIt2nDWzbEGbbVg94FOaz2fJgS9eIpdUxqPNbRZzUPep16+LKz7AW3IW
mbulruQpsl5IrIF92Nmx87hSznxmY+Q+G66Gq+FquBqujgZX9BWfe8ff5Sox
9ZzHFI2UY1qIjqK1wgwuOqftxcUP3vQNP7SXY/XiQ//dSz00EH2GP/YQu3ct
PYZNjNFdYWzZL6WOjS2rhwbrvU0eU/EN9tA+95IvMXn47R/KR73X5nk1Zr3k
n6j5WuyMPfOy6C7j13h7W+/jvd37crgaroar4Wq4Ohpc7e7XnDgDn9Er0V18
pUxi8lm/ow+dp+FkxR92ucKSz8IS7ZW9UZznY0yqM3ObnddPus19+CR7pbBN
4vB87n7q5HP8Kc/n5iOre3PPdWuyi1cvfcknbHMC85d+K8e/uOQb87s61n9t
xSuwIw4vhi/eHq7E283fGq6Gq+FquBqujgZX0Vf8tXscxpqnc8q3tJbztFLG
ppPXKJwoc2vnqS/G9BNv6nQex7hUfndfsOwZrQ+0Fs0k9s2utJoYN1upg/3p
IutP5dNjKz6gkcTIza268ac/bRtXF08wjkwvWctjjSo7OMaPY2tdjS2rl93Y
3Bi2eVly0Is5WN+qHcPVcDVcDVfD1dHhKvF2DCT+HX2V+cnRRM5HK9FF2evS
ez0N1vuhXLhd3xqWErv33h+unMfnrUtOpCWOccDemHNvbeQ3sQ15jdhnWetT
Y8psJ88e/vjPvtX0kvU44u04Ymvx9pTZ+GC7v4k9xcQm2E0epOxvwm7Z00S8
nT3N5cJY9vwaroar4Wq4Gq6OBlcZE6ajsuYm8QSMhbeszVEGP/RQ4ui4ih6L
Xsr8K3bJPKvE4dWpzz1+fWHN0VpiHQdsoF7s6Z+1NezGR3whPoCZrEXFmHgA
rYUrY8ji545x5Vhuh6xXpaOyRwmusheYOVpZu8pWuHE/85nFNbJOJ8fD1XA1
XA1Xw9XR4Ire4WfMJPbuJ/533HHus5dx4nO2uss5bIgthDF6iR4Sc6CvjEdH
t5kXpS7aSx4j9amf7uo5z8cvYCef403bccVW1uOws/FnOf267Zf+oWN7hGUe
MpbECeQEpK8yJ1n8IXkbcJW9wIwvix+EKzGH2DPHWZf66tnPa7garoarPeLq
/wJdvFnk
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3X+w/1tV3/fbhCY0TVvbpqlNTWvaJDVtY6gxKQ3fcw4maWpbm1LTGpuY
BIwaY0ljEmbazLQzV0W9KFGCiIiKV0QEg3BBQMQLXn6IBFGviHBBxMvvHwKi
AaMGbc9jv8/63uc9gzOd6T98ZjYzx/P+7rPfa6/1Wq/rXmvtH+8/9IV/93O/
5Hfccsst/+CBl//ncx/xf3zW3//7j/iHf+l3+ccXP+KRf/IzHvk7Lx8fdfnz
xMsfzz/1k3/x4o7n/ImLp333f3zx/vf97Yufed3nXvzTV3/2xdvf9oj1/Jp/
+t9e/Nyb/8rFz77+f17P97zxL1+84Wf/l4sff81/t/7u/Ve8/M9e/ORP/A8X
r/3x//7ih1/8Zy7u/qn/cT3/4Av/9M3n597xoNWXjOc8+9PX86t+9L9e/T2/
8hV/7uLFP/Rfrb4vu+uh690fe9VfuPihFz149ff35//An7z4vmf+sYsffeWf
X/Ke/j1/5OIld964+O6n/kcX3/qkT17vP/lb/72Lx33jv3Hxoh/8Ly++6fH/
1sVjbnvgxQue/5nr9//zW791Tu7XfPW/fPHrv/Zr58/+/j9+8c9/9VfP33bv
vecw8Pefff3rz5/33P9iPb/xDW84/96n/9GL9733vecvu+uu+7W3f+VUfset
PtWz+teu2lscik9xu47n4Fz865f6q36sf+v38qE8KX+e9C3/7sLqp37yJ883
rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzav
Nq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82
rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzav
Nq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82
rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzavNq82rzav
Nq82rzavNq82rzavNq82rzavNq/+//PqQx/8OxfvfMffvPj5t3zBkmO84ZLn
4Rj5ZPzCW//6xet/5i9d/MRrP+fizW/6X2/aRh96/8hLz1ffn777Ycte/fRh
F3zIgxWbXv6yz1r+1+euH7lYz+yBNZ+8+sf+m4Unvb0HZz7U5wee9xk3Ocb3
3/Htn3Jx5w8/ZNn2jx77ey9e+II/dfH1X/d7Lr7qK3/H6vuVX/EvXXz0Ix85
9/wvfuM3zn/pQx86/yff959e/OL737+4YQxtP/LSly7+6PuKl7/8nG8++IEP
nL/kzjvv197+lVP5Hbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5cl1
/uAbHTevNq82rzavToVX3nvTPZ+/fpM/86s+5BvbO6/76f9pybn3F/7Geib/
LT/3V2/Oy/p7fulLzpY8fTyTayxYkuXH/E629/jNM3y+/1n/+fq7Of+Zz/i0
pTv8vuv2T126+rs4hB7P+N7/ZMUr9HjKd/zBi697zL+y4o7H/+N/c8U2sNdm
voc1X/M7TPn5p+++e7X/8oc/fP4Tr33t4oDnH37xixcHyPjRV75yxUj6e257
+1fOdfkzbvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/LH3/Sbf29e
bV5tXm1enQKvzKP6m3fNy/7tN7vYY/73zhvf8HmrbWQay7O/XY+vpi9bjK0v
LLTPs/fEDfAyvhxZ/AIDcYK4wvjiCjksPcQx3/yE37fGuP07/8PlC2N8yxN/
/8VX3HrL6vsN/+hfW/GQMcQz73n3uxc3piYAa/78mde97lz/8bv23/zYxy79
/OrVrj+e0Aln1Bnafr1/5Yz8jlt9qmf1r121tzgUn+JWPIvzdfzHL9fjq/Fj
/Vu/lw/lSfnjN47i4+bV5tXm1ebVqfBKLql++r73fumSIWc0R8pbzZNT3x0d
prY+dV3zr3Z9yaUbufpM3KVNfEFffWFEHr3gQCfzufgFDvCRY2sXP8BXG/zU
qclQo37s1/+rS49ve/IfuHj0V/3O9f43fsO/vvxljPEjWfL7N91zz4qL+F1N
eOoGP/6a16z2qSEMlzyLd37uzW8+f86zn32/9uv9K2fkd9zqUz2rf+2qvcXh
Oj6DW/EszsW/fqm/6sf6t34vH8qT8sfvD37gkZcYffnm1ebV5tXm1cnwSl7p
3+9595esPtr9eP7F93/ZejZnvuudX7T6mN/pbQw5qjH9Zjfd5dl0Me+LA+hM
P3M6PczT+pq74aCGTBas5Mhk+7satHHJFFfAU0wx8YY45Gu/5nctXOXl/EoX
/uFHuIh/JvefZz6YugHfTOykXc1c/Zw/1MuHP+94+9sv46YX3q+9/a/LGfkd
t/pUz+pfu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lyXX+4Ne73/XFm1ebV5tX
m1cnwyvrjNq871n7e9/zt9Zc7O/+Nn1mDrXWaA7Vpq/f5tzJN+nMB/CmN3zU
h+ksT4Xx1Hj93dzOVvGDPoMheeKF73zKf7DkinXsWTLHW6f96kc/YOEHe3m+
2OC2r/3dl/q+9RxGcndxDnmtCfAhDqiH/7Nf+ZXFDTp5/rFXvWrl/vrorw8u
6d/29q+cyu+41ad6Vv/aVXuLQ/EpbsWzOBf/+qX+qh/r3/r9Oh+GJ+UPjunz
jrd/4ebV5tXm1ebVyfDKjz7Tf+Sb3/1bX3Pt2+59+OpL/jz7kW92Xp28U7v3
6W1ON3+zxx5b66xsZi8cxRj+LWYQJ8DqWf/kP1vPfCb31uep3/WHVg4OMzVq
tWw+0ibW8Sw2+fm3vOVc/mw/sFq38edZH7n/xDn8jhvwFyOJi8qZ/y/tlVP5
Hbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un5g9v6v/Xn/9rm1ebV
5tXm1cnwSk5Klh9zrn/7++zH8m9yvG8OpQs5fubfsw9V/6nFGt+/jU9fOuqr
3+wbskZr3rdfFgb25bIfZmrQ4gR9vudpf3i9I4f+9m/791eN+Inf/O8sX4p5
+MhZGDGM/N2aL/mHf169/GU/MF/zBf/qY23Vs71S+uvD73QQC+lDvthneDjt
7V85ld9xq0/1rP61q/YWh+JT3IpncS7+9Uv9VT/Wv/V7+VCelD9+cGr2JG9e
bV5tXm1enQKv5tmPfvOs5uodP+ZWepE7v/1MjEVX86rf+s8cToZn8ujFRn3o
ZT6efa7qzGIGtWq4OKtiD5Jn67NHnfpzFp7+Jje3J3f2HtvLJD6BLR+pY4t/
rP/K/fnxqMe/dPl94h95/fBhagLqAHJx50xbQ1Bjb3v7V07ld9zqUz2rf+2q
vcWh+BS34lmci3/9Un/Vj/Vv/V4+lCflT9s2rzavNq82r06FV+378eIu7ebp
OXvh9zwby4+/jxzP5mN608fcTgZ7yWYrzDzryyc996Hd+qhYA17ih3/8uE9a
Z07UnuesjThk7luYnF2sMnGLdj51XkYOPmdn+GF8zb84o73xUrmED7ikntD2
9q+cyu+41ee6nqN/7aq9xaH4XMdt8CzOxb9+qb/qx/q3fi8frvNk+IOzm1eb
V5tXm1enxivjTnykfX70m595z1w749KTLsb0PG3smjaxBvv6DBN7hjyLD+wZ
InvOA6kJz30Bcl7vqknL2SfeUF8Wz1i3tV9JbOL+BPhbs3WPkD28fK2d7469
yS9aPrWObD/V8AEH5O/qCeoA2meNeOoDUyuY9uv9R07ld9zqUz2rf+2qvcWh
+BS34nkd58G/fqm/rvtx/la/lw/lSfkzNXux2ubV5tXm1ebVqfBq5kS/p+7g
3Vlf9G/z8rw/dVpjz5zMhtHRGidb5cxiDfqa57Xrq31igzlD4nnuyTEOWXCl
19wpxzY5ubiDDfpaZ7XGKg4Rx4hB7Bl2dsa667ve+c7z595xx7pHSD1bu31M
7kjga9wQ86gbGE/MI16i9/Bn9h7jTNvbv3Iqv+NWn+pZ/WtX7S0Oxae4Fc/i
XPzrl/qrfqx/6/fyoTwpf+b/T/nZvNq82rzavDoVXrGlP97Xbzjnff1nT83k
rXSZ2q110bmrja70YoP8l36j/9g09wbARjwyuMGRPHGB/F4f2DgTQ6+5c1U9
GQZ8bizy7E0ij8/ELvbs8h0/8tsPPO9551/96Eefi1n4mt/dYafP1CJmvzEd
5+yMmvnU2Nve/pVT+R23+lTP6l+7am9xKD7FrXhex3nwr1/qr/qx/r3u9+FD
eXKdO/29ebV5tXm1eXUKvJr66cRU7T+55MiWs9Jt7jWdWrw5ftY5zdv0GT21
6yMHnrt0Zn4Xl8AKDrAUj3gPPnJx7xpn7tiZ2MMzGfYf0ZNMvrVnSA49Mu1X
sl7rt3wfN/iaz7/5CU84P/b1vv4yJnr+On8q7xfz4NLUDfisZ2qmvf0rp/I7
bvWpntW/dtXe4lB8ilvxLM7F/7pfxl/1Y/1bv5cP5Un5M/WIrt9sXm1ebV5t
Xn2i82rWHc3D3p/a69w/qn32Y2kfHejpeb6BMWub2vWfPNbz5Lfks3e+l8Hu
uV/OM2z15T/5tWdYwU3coV1Nmgy4OnsycuxLYmt9YR1XO6zs6RXTwF1coxbg
7Iv15Gc+4xnn9vv6/dGPPGrVB/AIN/hyauZtb//KqfyOW32qZ/WvXbW3OBSf
4nYdz8G5+Ncv9dd1P45/6/fyoTy5zp/r69mbV5tXm1ebV5/ovNI2NVbjjHw/
czfp5KN0nVx19Jx5eXQefaYPPbV519jyXTGLdnGCPNqcPXfNGWvuJPd3bfwy
37fiT5jPXT1zJ4H9u2TL8913YHx485HYAD/ELdZG9eejuUfdWq96uLjpG7/h
G87JUg/4iltvXfug1Ne/49u//X7t7V85ld9xq0/1rP61q/YWh+JT3IrndZwH
/4/HsfFX46vpU7+XD+VJ+fOWq3Op/rvZvNq82rzavDoVXs2eVP3mHAa5s/90
vs1Evvl69vuY4/WlFxvImntUyVfTnXvd2QsL/b079s79cXOvjpzZO/CXk9PL
mGIOOkxOPT7iC3qKYdxlwE4+FO8Y310+9u5qF7/Y4wsD+4nJpw+fzL0H5Dkb
499q6t/91Kee44vf73rnF523vf0rp/I77nV9Rs/qX7tqb3EoPsWteBbn4l+/
1F/1Y/1bv5cP5Un5M/e9Dz83rzavNq82r06BV+bVqa9O3uhdc7f+dBUzzJ5X
f6ebcb0j/4UpvbTNd0nYxF52zf3hZLBj1knpf+fVNzXM4bPPin3eNZ7fYhEy
+Ys/+M5Y8y0Pe3wnPpm9u+TI+e3zpS+fq4UbRxs+sE+fY034C2/ehwAH9x+o
F4hj3N+uhtD29q+cyu+41ad6Vv/rdo29xaH4FLfiWZyLf/1Sf9WP9W/9Xj6U
J+WPflPH2LzavNq82rw6FV7NXDnxlXeMOXtyPM9cap6e7zvN9xDJo+vUitk+
31ec+4XM7f7mXX+TV5uDYcA3Y6+8ejCZb34ZZ+rJsCGXPt4Ve4wvPGuXZ/Ml
7Cf+mXsPrPmSyVd8yh7fjcQTWMyzuw7wafip3f7jtrd/5VR+x60+1fO6/mNX
7S0Oxae4Fc/iXPzrl/qrfqx/6/frfBielD/e9dNYffNq82rzavPqFHg1ddXJ
Ec3T5tLJOf3db3rqM3YZR7s4YPbKmqPJ0ibHphNbYOo9scTk+Ow99jF93prf
/Y1N2tSzzdXGgTM74Cz2mDvM+c+49FKj1g57Mc/k7+rb7JfHz93v6ta+rUVf
NW+cYYfviTiD6hkXnJGhm29qTZ9pb//KqfyOW32u61n9x67aWxyKT3ErnsW5
+Ncv9Vf9WP/W7+VDeVL+zJ1Wm1ebV5tXm1enxit9yPJv8y5dZy8r2zzPmiYb
6T/7ZunGhqkJs4vM2Rekv7x2OAYbubp81XvzvZK5c5XMwdO4Yoa5q5xs+LDH
u3xEd9jI3+Ez95yLWyaGYatvgvA9Oerf7tQTQ7j3bu76c/8rzrD/Mbc9cJ0j
5UdcOr7ddV97+1dO5Xfc6lM9q3/tqr3FofgUt+JZnIt//VJ/1Y/1b/1ePpQn
5Y8aPpvptXm1ebV5tXl1Krxi45zl19/vOdtoXjU3mzs9T+3X3MvGqQOLDSYv
nm9ywY2NYgz6ijnYMn3IZ6vYhR3+zn/2Asl3xSJ0nLx7vncM8/mOh3Vb+bvc
3zN7+Igv1AdmXPpM3VsfbfihrixGct4Gdu5bcG8e+ThznKX5C+tbIs6Utr39
K6fyO271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPyR61ivpe5ebV5
tXm1eXUqvPIumVPLhaN2uplb6TH13pnTyRc3kDO2m9/Vfa29wmHiB3P3PNNn
1mfpM3uNzOnsgAlsxRr8R1e58hO+6d9efdSHYcL22e/kmQ6z5qu/PU78dd2/
at1001c8xBZ1cvuH9ccN98TSa75fyW7307qbve3tXzmV33GrT/Ws/rWr9haH
4lPcimdxLv71S/1VP9a/9Xv5UJ6UP7M3zH8nm1ebV5tXm1enwqup5fo3mZ7N
ofJieeh8C3jm4sln6UMmGTDVPvuR9IcJ+6e2PDmvPnAwFky8K2YYDKcuzQcw
NM74xd/tC5bbsk/NGZ6Tj4slBn9YGV9sxI9yfbVxeloTPrjysBXLeCZfHORO
IvEL/ztbyv65f6/t7V85ld9xq0/1rP61q/YWh+JT3IpncS7+9Uv9dd2P49/6
vXwoT8ofMaQ+4q7Nq82rzavNq1PhFbv81s4u86nx6DPfUoQJGXTzbL6Fnfl3
dDD/Tj3ZuPrTEw76zH7dsctYs/ZqrDm3oj8bjaXP7NEdX/CT+R/e1nlnj5NY
xf6oORPKLv4RA/Gv/jigRmyflL3F831Jz7CddWR1Az48YqnPXlxyB1/b279y
Kr/jVp/qWf1rV+0tDsWnuBXP4lz865f6q36sf+v38qE8KX8mNrvevnm1ebV5
tXn1icwrWNHTfD0yPVtLHJn60B8mYompD8/5SrabV+nu21TmXO3stRY5uS1b
pvZLjvquWrH+8lqYzrOx5LP0kf+KJegDK+/6rQ+/i1P4nv70mhyf7rd97e++
uW8KH/haXOTOWRhMDUE8Y8+UWjo54iB38/GvZzFV29u/ciq/41af6ln9a1ft
LQ7Fp7gVz+Jc/OuX+qt+rH/r9/KhPCl/2IjPZG1ebV5tXm1enQqvZg3UvAlD
uap3rR+ab2EHK7EBvGBFR/Ve8tkydrERRmNjbZ+9T2TyjXY6zx5duumj3Vji
DboZi0w40xcW7hIXm0yNGk5kzhqx9V/6q39PTUC7vVJTKxAv0cc4OKBWrL+9
VZ7FONaU4Tm8anv7V07ld9zqUz2rf+2qvcWh+FzHbfC8jvPgX7/UX/Vj/Vu/
lw/lyXX+zH8Lm1ebV5tXm1enwqupzU793FjslP92LOdKxndTNzZHz3qrd+fc
pXnWu3QmZ9ZJpw89tdNfjGGOJp/O8tbmzvRRN4aDscjna3rxn/7a58zpxC38
LnYQ/0wsxO/kyKHxQ65M9zfdc8/igxjJNyU9W092J7u1Vn09t739K6fyO271
qZ7Vv3bV3uJQfIpb8byO8+Bfv9Rf9WP9W7+XD+VJ+YNjs3awebV5tXm1eXUq
vPI8Y5kf6Wzutv7o2bje1VeOLAawzjl7hukztQXjTy7PVudTYDIyrWPKT831
+sib6Q1zOpqv+ZFf/Jtd8IcP3fSn55x5oYNn8YKx2aKPv/GR3/SwP2jiIhzg
NxzgF32O7yvfWDxRJ5cra/P9keGS/m1v/8qp/I5bfapn9a9dtbc4FJ/iVjyL
c/GvX+qv+rH+rd/Lh/Kk/FHf8C6dNq82rzavNq9OhVdwo+fM7+ZNua1n/Y1n
PjV/sh+G+puvxQD6ajd36zM5L31gYa3SnC+nPvLbu9f3H+nFL2wTF7DPWU7r
l/zCfvuO6Eim+R1+xhYPsImN1nn1ZTvdpl0MQ7f578Vv8QNfWyumhzr0cR/D
q9Y68tTG9VFTt99YHv8zr3vd5e9n3a+9/Sun8jtu9ame1b921d7iUHyKW/Es
zsW/fqm/6sf6t34vH8qT8ofO+pO/ebV5tXm1eXUqvDJvqvGqn5q7zdHWEGHF
Rj/2mcKDDuIH9sp5zfvmUz/Tbiz7ceCgD5te8fKXr28ie/btD8/WReFnLDHB
v/iN31h/92++4xsYqFWLb/jGt5LtB/be8U3mF58f652vO/eNSbrzrW9ryXe9
+553v3vtPab71B/4RYxhvdg4vlNCf7EQOXCYM6f6qA3Qu+3tXzmV33GrT/Ws
/rWr9haH4lPcimdxLv71S/318fyoT/1ePpQn5Y/+2uZbM5tXm1ebV5tXp8Ar
e2TFC9ZJvaN+DC9/Z4fcdtYzzefmb+3mU+/AxBzvHfbO39Wkzft0sjZLtljC
3EtHc7RYwZxsrma/udk3Qn7itZ9z/tWPfvTC4jG33XaJ6+1rjO99+tMXzmT9
+Gtecy7HZ5N6tvH5jj3Ghd/4BebuV8AHcY6/zd4nv/lMDYGeL7nzzrVGzIbD
90e9nZ1tb//KqfyOW32qZ/WvXbW3OBSf4lY8i3Pxr1/qr/qx/q3fy4fypPzR
5r8t9m5ebV5tXm1enQqvLvNGup9djr++WXWZX162f8H5dz7lKefve++XLjt8
u/H4ntVTL/34fesbj/T42q/5mmUf27/p8Y+/1P1x53CBww++8IXn5v7Zi8RO
+4nEAHzCZnjAwBxOPxh8yxOfyE9rTN8Oedu9D1+y6W4sOohd6GBc8Q78+Xpi
lVlrhhHZx5mi167cX97Nj7DWx9mZ2VcsF594CR/Ipyu8XvD859+vvf0rp/I7
bvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/LnW5/0pLNL/p9d6n62
ebV5tXm1eXU6vHrS2U/f/bDLn7vPLse5/Pmks/e9971nP/SiB693fMvYfP6S
O2+cf9uTn7z+/VVf+ZUrR758d835cmf92fucZz9bHn2p5wPW3+moP9/Am21i
Dftx5b/qzGTRW1zhfXaKW/xbndsarnmdr/SXY8MAXvYDmdPhq0YMN/O72rAx
YcjXE8/wBT+R664BPMEN+bK/00u8pL92fcQk+re9/Sun8jtu9ame1b921d7i
UHyKW/EszsW/fqm/6sf6t34vH8qT8udld91141L3y5+Hb15tXm1ebV6dDK8u
+z3k+Lnlxnfd/qmrn/mRnMuceeW3l7n2mkvJJ9tc+vVf93XLJvM0HOgBK3Vi
uvobrMzX3/O0p61n+IkbzP1++5vc9dd/7f9c+pu7X3bXQ5ftv/mx/2vZdRkf
XMYhj1wy5jfMjHtpx7m1Vr9hKYaAMR2sy8rr/VstWCzDv9aR+UBOra6sLs1H
9lPxM9nWXvmfX62repfubW//yqn8jlt9qmf1r133t/c+HIpPcSuexbn41y/1
V/1Y/9bv5UN5Uv7Q61J3/Nq82rzavNq8OhleXeJwNW/ecn7L5f/8/bLfjRc8
/zOXTPpfyln6m3fNyZ7NyfSlD4xg6t9ybfGFfBj+o6ecVpv36M8274kv5Lps
hu1lbu7vZ5PD0pFNdHjuHXecPfeOB13GJ49dNsuDxSNy5Mu/LRlvuufzV0zH
5/N3+MJRDKS+PfUPZy7FFMa1h4j+MJaraxOTqLGro5PX9vavnMrvuNWnelb/
2lV7i0PxKW7FszgX//ql/qof69/6vXwoT8ofe5/9N2a/1ubV5tXm1ebVqfDK
2qX6L33ImNzymc/4NGcslyy2GI9M9dSjPvHJCxeYqBXTy/x/xBjPWvrT05wr
NqCb3PSXP/zlCyt9vCM3F3+oNdMBTt49zsLctXLYy5hhjWc+Z5/3tdH1Ut7S
j25q4vTx+6jXf9pqNw6M1IvFPcbmE/uNxCNq5cd/Y89a/sUf7fraszT7ptre
/pVT+R23+lTP6l+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+XD+VJ+eO/KfUR9ZLN
q82rzavNq1Phlf2mziOaZ+XF9rZav1Rjtl4qLpDbkm9sOaYful7VWM/ECv5m
fHrCi/1ybHaSI96A8aXNy0bzMRvMz2q92rxz3B/06rUGyxb9jG9t83I+P/Nv
+Po3eVe57lr35AN/P2KzJ91cM+VTMtSp5criE5jDUdwhvrCnyLh0tV4r/8YT
sZN4as6lTnv7V07ld9zqUz2rf+2qvcWh+BS3++N5H87Fv36pv+rH+rd+Lx/K
k/LH2vfc87B5tXm1ebV5dSq8Ujd23kPebM1STiyW8K737OURX7CDbsdcf/eZ
8dRk1WLt1TnwuWXVgNWV2WAs8QcsyZw1TrbC/dJXZ3SHp3jA+/L22Xc0+a+4
wFqnGMM4xr/Mma19rvHsTSLX+7NWAF9yYUVHGM4+Is9+87O1WLm9eoBxcYGt
/s5vcnJ2qjO3vf0rp/I7bvWpntW/dtXe4lB8ilvxvD/O9+Ffv9Rf9WP9W7+X
D+VJ+XOpyzrj6kzP5tXm1ebV5tWp8OpXfvnvrbOF1lSd5fDe3AHgXTmj/UJi
CnOp3HJqxXR3htL4clDY2wMEF3M8zMUW8mz94A4LuPDF7H0eHNk5+bW/DZ72
6U5d1/i3XP3vUk8xyMrV4U0fcY6xLn2/MJ98+YgHH7b2D/Gjft/8hCfcrEPA
lk/YJhfnc7m0sY9c/6H3a2//yqn8jlt9qmf1r121tzgUn+JWPItz8a9f6q/6
sf6t38uH8qT8+eAHHrnOBW1ebV5tXm1enRKv3vmOv7me3StgfnSXjX7mTefs
7Z8171qzlGvaWzT7f7WbY+WWsDWXG5edMDVn05194hEYW0s1d/ONfuzjH+c7
/Ga7GrF4Bd5w/+hHHnU+7+gv7rDmCX8YXOJxBktxg31Q8CHP3/2Wr1/KvnFf
Pn3P8tvk/+IOvuMTzzAVr/jNZhyCf9vbv3Iqv+NWn+pZ/WtX7S0Oxae4Fc/i
XPzrl/qrfrzu3/F7+VCelD/uPtJmXWLzavNq82rz6lR45T4Be22dKfENX8/W
Wn0jwzlMfdScjaPGap+Psa0vWr8cHehq/lfLFV+oJU++q+5rz+uxr/ZYY2Ur
TNnNP7CZ847q1X7zj7qzeAKO8BJfeE8N2m/+O/o9ePlV7MBnMIWj2MK5EbVo
sYU28sVMs5eX7vbu2rOrtj5nL2GKQ2SJh9re/pVT+R23+lTP6l+77m/vfTgU
n+JWPItz8a9f6q/6sf6t38uH8qT8cYet2Mt9RZtXm1ebV5tXp8Irc6J2OaO5
0b2r9pM6g6nNj3fcVeOsidzTvh/1VbkpjNRk6c4e9Vx7a+XN6r3HHqkPr7le
nGH/6rHH596Flb8dccHda3/RnHWEpWcxCjz196yfWEScYY1XjKD+bb+T+EPb
cAG28BaPqGOLjegjH4cxLvCn2MU74qQD60eufJtfJmfHk7a3f+VUfsetPtWz
+teu2lscik9xK57FufjXL/VX/Vj/1u/lQ3lynT/zvHm1ebV5tXl1KrwyP7o3
fL5T7w5T8shRN3Xn3DybW+2xsd+UXHtxnat0zpKu4o6DS69d87o5/biv52kL
vwPve29c2rz2+FzqwP4zOfHccSOmUJuWr+uvRg1DfeTg/nbUgh+7cLIfyBjw
gDlfwstv78/+3olHrN36Oz6on4tv9Jkf8Qm/jL+MZ18ufrS9/Sun8jtu9ame
1b921d7iUHyKW/EszsW/fqm/6sf6t34vH8qT8sd3UvwdFzevNq82rzavToVX
9ss4e2muvMxT13zpfXOl7/561t+7+rl3ztj+Pd99ch5DzulOb/LtS7VXFmb2
6sxd5dYw3T3ArsFCHKC+rC7tnD+/+TdfyolhdNSVH7v8w4dzH97Vt1RWLCN3
Fl94Xz/xztyxM3VpdWuxjHfgq04wNWkxjVhErs5Xfvjt0OeO5dO2t3/lVH7H
rT7Vs/rXrtpbHIpPcSuexbn41y/1V/1Y/9bv5UN5Uv6ouatNzHdIN682rzav
Nq9OgVee3Sfum77mUD/+7VtO1hONr37qt/nUHXT2pNLHfDx3Edh/Y03SmRW1
WbkpOWq11lfh5QyjO7+tcdrLM/fxwGP2Hsmn5/z/7DWaPF/dGtbOxqgRH3ew
H7m3vPm4O/WTly/UtacOwS/q1+oC/DW1aP3I9HcyyBp5U+eY2sdRK7+vvf0r
p/I7bvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/JnvgGNr5tXm1eb
V5tXp8Ir3+mQG5pjzZP22dhj6puM9thoM99ac9SPDOM+59mfvmQ4n2nfjnmY
Dcd3ID93/fbj+8LeM++av61zqi3T233m7LGGC2O1aPlxOPaQeVaH5i/xiL1D
1oDtD9IuhrEuLJ7Qbn+TPse67F1X+4XvWfHa4fvfu2IjtQH1g2PP7gNW/i5+
mXvntBvPuMe3Q+5rb//KqfyOW32qZ/W/btfYWxyKT3ErnsW5+Ncv9Vf9WP/W
7+VDeVL+iLW0ubd+82rzavNq8+pUeGWeVF+li3fljsa69xf+xuKEOdO7vjFs
HHOtcfXxnpzSeUXzL/n6eE+91lzt2W/fhmKXfNSaJj3M/3Lgy1hi3W0HEzVn
ebm8/Zb8T94Oc/m4OrF1UvmyOEbd2l4me4XVud0VpP9xp86dyz/8zs/2N1mj
9Zvv5PwTv+GA2EdMpJYw+33FNvq2vf0rp/I7bvWpntW/dtXe4lB8ilvxLM7F
v36pv+rH+rd+Lx/Kk+v8cUZVfLV5tXm1ebV5dSq88i6Z9p16nm/Zk6Hean6l
p/fNq+Zp7zmbwRa6e59M65N+3vH2L1z9zeFqs/JV8641SnEA+eZq785dSe7A
sWZLpjz7uNvhQVd7lh6w/jb3C8z9OXJzfzv2KH3pwlusY4+Rv3n3uM/gAWra
az+weOXY+/v553M30HFWdH2jY+1j8p66+txfgENq4m1v/8qp/I5bfapn9a9d
tbc4FJ/iVjyLc/GvX+qv+rH+rd/Lh/Kk/FGP9+z7KZtXm1ebV5tXp8IruaH9
N3S1p8bffWvRuN5Vi73EZq1Hyi3veM6fWHqor5qz59u/7CLX2Pe88S+v32qz
1ivNz+ZdOshtrX/qQ4bcWF/fwXJG0nhqw8c50E9ZOFmPFW+IRezhva8OcXw7
Q/xznGl93M17kq7uPl8+PfYvffhszm/yE574N3/N/t/Z32uPk/1Oxzc5ju+G
zF0L097+lVP5Hbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un588Y3
fN76nrQ17M2rzavNq82rU+HVu975RWs+Pc6Z/pX1nj7ySX3YY71x7iqdeVm+
Kteko3xVH3+zDkl/z+Z1+ax82PctzOtyWWui7GWHvUJyWHmxsfW1Z8jZEHtj
1abtabJf1m8xidzdmqv7DPht7nqdc5dq0DjgRxvfiF+0q21b5z2+B/LwtS/K
O+TgCVlTNxD3qKm7Dx0n2t7+lVP5Hbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1
Y/1bv5cP5Un5466GibU2rzavNq82r06FV3JSutDTXGq9Uu5qfnUuRH3XNzrY
Z5+tPNR7bHMuw/zKDjmpf5vb5aT+Tf85o0EP87TcVJ35rT//19Yap5zUeX+1
W/M0PeXIdDWfqyFbX5UHzz3q9tSKUeh23Dd++w1xj32+1nbpyb9zllTebg+U
vUnqARMf6X91f9D53N0g3pk+x5nSO86OmOqhZ21v/8qp/I5bfapn9a9dtbc4
FJ/iVjyLc/GvX+qv+rH+rd/Lh/Kk/BGP0UXctXm1ebV5tXl1Krz6zY99bO2P
hZMcFRZXe47WnO78CBvmbh05pPMn7iKgn3VPMj/yz/7BmuPN1R/64N+5Wau1
39U6p/2u8ln2zjkg+Ngzqz/74AIfe3/oR0/Pvo0MF+cq2SiOgJm9TFM3V/c+
zrXetrggvuFnevKheIbe6tziHHuW5vvIsNNX+7Hn6u4z98GqlR/fD7nr5r3x
097+lVP5Hbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un5I976eO2b
V5tXm1ebV5/IvDIf2/cDG3ttzI3OhNDTGM5yqKOac4/vHH/Bema//FXf40zo
g9c+IHPuB37xf7t5fh8mbDF3w0Peak2TrfJX41/m4jfPesxdcGq+zo+o/zqn
aR7XpoY8e42O+f5Tli72LPGVmoAffpo6+dWdsMtH4gP30LqbB17WeWGFL95z
p4Fncc/Vv1dtQV297e1fOZXfcatP9az+tav2FofiU9yKZ3Eu/vVL/VU/1r/1
e/lQnpQ/zgSxT21m82rzavNq8+pUeGWeNoeqC5uD5Yz2sspt2arGa+6Fjb21
9uI44w8/e3Hsq/WNDTbZWyumMJbYwPkS87v6LfzYR1cYyH2Noa810MmH7RF6
y8/91ZUry39hBh+1ZdjKv8UF9FZPFk+IC5xhofd8/9ja7WWccuPq/OaKf/hZ
PCPOOfZrfXjdBSR2Ou6/u/XmvT98jkNzP57Yqu3tf38598nvuNWnelb/2lV7
i0PxKW7FszgX//ql/qof69/6vXwoT8ofa9diMBzbvNq82rzavDoVXrlPYM75
Ww9V9/WsLnxVO75xnLG8a7WLJey39Y79r2rI3jGGfmIRusMT5jA77rV74Dk8
5KvmbGug1kTZDiO5r9oxPN79ri9eccB8K0M8oL+/Wz/98C/93ZVTkzVxgro0
3O3PVbdW35a/08eaMV3YctQJ7r2hfn58D+uTVv3cj1gJV67O0Kw157nr3L0K
bW//yqn8jlt9qmf1r121tzgUn+JWPItz8a9f6q/6sf6t38uH8qT8ce/7cf/8
PWebV5tXm1ebV6fCK/Vg7bCY85DmVFiqo6ofH9/UuG3hOHmy/mSM/Kvve6z7
4syv+sw5yqv7xM+O70B/9tLP2qVc2D5a8YOYwLwNQ/t7xATOksDIHiF595yF
1O58iZhBvGEPktry3MnDX377DpV44IiJbl/3Gqhxz113Yqfj+Y51puZKz7U/
WO0cp+Dv32KOtrd/5VR+x60+1bP6167r9g4Oxae4Fc/iXPzrl/qrfqx/6/fy
oTwpf7qXevNq82rzavPqVHglN1TTlTe+/31/e9Vv1Xed8YCD7zzNNxPnLoJZ
NyXTv+XXc18eXeWcc/5EnyMOueXGffufHnqmVksvdogRxAWwhfPb3/aIte8V
nvJtcYP9sX5bI51YQ83ZfiQxCl9Zg5WX27c7MYw1XJjQSb5/3O267kW/cZyv
+fD6Npb4Ye6hhfl855jdx13qt9yvvf0rp/I7bvWpntW/dtXe4lB8ilvxLM7F
v36pv+rH+rd+Lx/Kk/InMdjZ5tXm1ebV5tWp8Opyzl15qzVM+3N+6UP/+8VH
P/Kom3fLWn+EC33Nr1d7cRam8lbzOH3VZtmjhisGOc61PO7MWMf3NW694Szl
2GAN0/qs/Na+o1kHhp+ar7iC/vSSW7NDjMEn4g64qkfLtcUVvr/4C2/966vN
GUz1YTi4/4dufl99U/nmN55njfmoH9y1sBRnTIzkR39/P+oV97W3f+VUfset
PtWz+teu2lscik9xK57FufjXL/VX/Vj/1u/lQ3lS/tjzpa4hdty82rzavNq8
OhVe+Wa9tUn23HLLrauW/Su//PdufrPJHK6OKt92HsT6JF3dtSOndY+OH2ua
cmhrqfpcfc/xzLkOe1rpKHYQB+gvL549P8fe2Wes8yvwdybz+ObU5618Gu72
34ot6CrOsE/I36yZzrlLuvKVtVDxibtY7Zk1/8PQGH7gr07sGyCzh+qqbn71
XZBjz9WsN/ODv7e9/Sun8jtu9ame1b921d7iUHyKW/EszsW/fqm/6sf6t34v
H8qT8kcdxF5p+8Q2rzavNq82r06FV+ZJ5zmsd5r35bxz96w9P57FAM4lsp0t
zmC4M8e5D/qrG9MNnnJxNWN3rjqTIk6Qm8qvYfXPf/VXV76q3W9rnjBXI2aX
PbTWeOXoYo6pE9AbdmTD/tL2dc+OerM1V7qS6X0+M9+rY8895HT23eI5dyJe
OO5N/6Srbykvbq170nHn6i6+xbEj/37c2bX2m/0rp/I7bvWpntW/dtXe4lB8
ilvxvI7z4F+/1F/1Y/1bv5cP5Un5I/bz34717s2rzavNq82rU+GVdUxzvvMV
R95+59Lh2Nvz6nVew7xpjrVHiA5iBnbJdc3z8lfzrvzStzPMt0d94pXrG1Jk
iwnM0eq2sGCvM/76wHa+R6XdWNZ4jSUPFj+IEzyb9+XfxhBvyMHf8+4vWb4g
37kTds7drXAi370Dat7HHYV3rzjEvXd8NN9PESfhCQ5Nbj736R3nb+5rb//K
qfyOW32qZ/WvXbW3OBSf67gNnsW5+Ncv9Vf9WP/W7+VDeVL+4Jv6O25tXm1e
bV5tXp0Kr4xrrp38131s1hDN7fbHuqvGOUTY+XH+gy3mY+uk5mH7ccjR1906
8mIxhX5slG8f9+z8xSVbu3OOsNNuPxG9xAHksMPZzOMbKq9ce5bEGPbT2itE
hjjCfiJrsGyzPmt+N7Zzm/QUA9iPS08+tT7LZ2KPiTesBYtP5lvL9hf1+1lT
V79aT77Z3v6VU/kdt/pUz+pfu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lSflD
Pr2vt29ebV5tXm1efSLzyvl9+33EAHJJ87/8VzwwOaZn+4XMm+bQY43z9yxM
yDeXO/uvzkqmPUX6jHzrkfqTQwftbKGDd9lODnzEGH6bv8UP5n1roeIRtWW1
48NvD137fz1be3XPnVjFGqg4wrts5kt5vPVbPh27xBlq12IGfoQrjP171mbV
pYdT9lO1vf0rp/I7bvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/KH
TL/db7t5tXm1ebV5dSq8cue2v9PJOqf+3lWzFTfoZyzfLnROhMz5noU+80ym
evKckbE3yJz73vf8rSWfDdqNaY6nj3iAf8g0b5vfj/Mmb164iRPsJbI2etxz
9Ox197m8+Pge8u9b66Lq3GIe+FkrlTtbDzWePbwwsaZr7Rb+4gb5NB35Us4u
LsIT+TyO8Kc72d2lbk0Zv9re/pVT+R23+lTP6l+7am9xKD7FrXgW5+v4j1/q
r/qx/q3fy4fypPzBW214uXm1ebV5tXl1Krwy16sJ0+MX3/9layxjm3PJ1I8c
NvccqGcy9TGWvanWRL07tlh/JN+8zC4ytZnHvSv/VSMWM8BH/ixfhpuYg4/k
185A2vsjxrBX1nqnmrA9t1fxxNX3RR62vjUpFhLTiA2MRzfxjLxcjCOusUdJ
vgwrsYTvfqgtG8veJJzhO/uJ7TWeuw2nvf0rp/I7bvWpntW/dtXe4lB8ilvx
LM7Fv36pv+rH+rd+Lx/Kk/KHHH+Hw+bV5tXm1ebVqfDKfh/zqbzUXhprivqb
K8kRC3jXfXD0s4+oz6ODdz3TjUzrj/bZetffzel081ssQge1YnVgc7p6NT9Z
f7VvyDquuAKe4gq+4s+ru9JX7OHMCLx8K8T+J2u0991L9Mnnc8ceX3hffZtd
xlM/9lvs40yoeEhtQBzj37N/ScxEvr1KbW//yqn8jlt9qmf1r121tzgUn+JW
PItz8a9f6q/6sf6t38uH8qT8EePNN6Y3rzavNq82r06FV/b+iBXMzeZNeBlX
XKC/edO71k/JmX2nxtJujp74yrtiEDksmfbkkkOGuq59tseYh+3HNzBe746D
m3uH7K3VBl9+kYfD09qrtVx5vnOZ1njFJXRVh7b+67f7AY67dW69eUeQfUVi
E9wwrnhH/i/eULPmT36EFdzkzHPmRbwgj7eXqe3tXzmV33GrT/Ws/rWr9haH
4lPcimdxLv71S/1VP1737/i9fChPyh/jwgjXN682rzavNq9OiVewm7Vj+bA5
39yqptq5GIbOI8KTDp7loce5/C9bOSydzdEzz5pzZ66XF7ubR66uXXwCL3GC
+rO7C+TUfCd+gKeatDvnBmd7cScOcaeA2q74RI1aP3GKmoD9w+5TUC8Xx1g7
ducqHNlHj9/49X+47LQ+rJ5sbGdO4AgbXGKTvbdinba3f+VUfsetPtWz+teu
2lscik9xK57XcR7865f6q36sf+v38qE8KX+MhVe4vnm1ebV5tXl1Krwyb1pj
hNfUZufuPu/SiQ7mVhiQSb73javW6ll/+20fc9sDV7wh72Sb/Ff9lc3qtzPv
24trfHVj/rD3VWwBtzlf6Rme4hT7Y/W1N9ceJuu91n/hok28IpbhP76Tq7t3
1V4mZ0jn/IxvjPCh/vwiXlEjEG+wU2ykRmBPERvUDvjXec62t3/lVH7HrT7V
s/rXrtpbHIpPcSuexbn41y/1V/1Y/9bv5UN5Uv7glb74vHm1ebV5tXl1KrzS
x5xr347511xpLdOz/JF+xlKnpR/dxBnySjLn/lXz7HGG5GMrZiPfnO7Zd3/J
158uxmU7HNSzneOQy/uusNqy+GXu9hEvOCNpHRZm6s/WZ+dbyld3La1atvMq
7lPgT2dExSm+qXXfPXwPupnr+5/xDh8/emEur7bnyLP4xhkZ+6ymvt329q+c
yu+41ad6Vv/aVXuLQ/EpbsWzOBf/634Zf9WP9W/9Xj6UJ+WPuM4eMPf/bV5t
Xm1ebV6dCq/UaY1Fv5lzp791SGuZxiLnONN47HF1RnHmU3MrOce+mw8sG83b
M78fZ/fferMmLG/3fHz/6RkrTrCnSGwhpx7crLF2/xWcP/qRRy1ewZiP7CWy
R8k6rjhDbMOP4iH+cr7l+F7Hrcu/c8+sOxaGZ+42lyfDlf6/9Zv/9/rvhF7G
dR4FJm1v/8qp/I5bfapn9a9dtbc4FJ/iVjyLc/GvX+qv+rH+rd/Lh/Kk/MEr
fNy82rzavNq8OiVeyZPNmZ7Nm+rFk5OaN2fPsDqreZkOsHDHjdyWbu6nI3/u
AZhzjmOL7xXDQv+pCYtLnKdUQxYn+PvUk+nCD9Zu5xyKHN96rztV4a/Nnqar
M5POdZ4d5zvXvXm+tby+Y8wvs+/JHUPuW3D/Ot9ffaPyxnFH34NXfu99+6Xs
NRJPWNudWnTbr/W/KafyO271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8f
ypPyB1b+W/PfwObV5tXm1ebVKfGKfHPx1GPJtO+UzImdjDXPMxfTQQ5rXh89
zbP0keea+7XTxbhsl49OTVitGA7iBGupcmznLukiZmh+7czLxBvWer2nfk0X
MYv13eMO189ccQvZzraoV7tXdu6cdff6cdf6rQ857mW/5ax31eIA/OBMbz61
Dqu+3Pb2r5zK77jVp3pW/9pVe4tD8SluxbM4F//rfhl/XfdjY+bxe/lQnpQ/
8x04/w1sXm1ebV5tXp0Kr8yt1hLNud4139OJDjPPzlie6TD5qXflre5z02fu
R2Wjefb4DuLDVz4KF3uWvCfP1seYYgb6OFMy+2zFImrS9vraWyQugbM76uTq
9inBEv7iHncY8B29J1aBF3m+a+W7k/zNd9Z9xTx8L/65+jbXjeM+2luu7q2d
bzw+7sy6s7o0e9re/pVT+R23+lTP6l+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+X
D+VJ+SPewyvx1ebV5tXm1ebVqfDKWN4l07N3ySTnOpfkoXQ2n+rv+bgT7t7V
Z/T0rhqtOEK72q2x9KeLtVE60wVW8DH/f9PjH7/iGX0nprL/13mV497XF637
Cuxzkmf75qKc39qsPb7yYX6zv1e92Z5e673Hd0Yet/ZC2ffk71e8WH4X5xz7
tG5d3Jhvldg35V3fqpwzPtN+//73yan8jlt9qmf1r121tzgUn+JWPItz8b/u
l/FX/Vj/1u/lQ3lS/tiHRj6dNq82rzavNq9OhVf23mhXd7We6Fm+qZ1MuSud
jes+HHLssfEsn6UbPZ1JNHfPeRA1Xvt3zbnmd3O9+1fpZW2UDuwQT7jXji4w
14cMcYW9RnLlN93z+et8ivqz/bz2P9mH674fdd9Ln6+YhL/k8dZt6csv8Lc3
2BrwVR1+6gOLY3MPEVnyfbESnmi/iqPw7CFiqba3f+VUfsetPtWz+teu2lsc
ik9xK57FufjXL/VX/Vj/1u/lw3WeDH/EWuoVYsnNq82rzavNq1Ph1eSP7WM+
lUse5w6PM/5yyeObFl+03mUDOfSRt9LZPD41fLaICdSE5xsf4gGy2WuN0vj2
FA0+7iLQRx4NN7VlGMjD7UGCrfzcN5Gv7m84VwP3LWXf+4CTuxAu8/VzevEL
+fyv7i3fFyuJa/iaL6/O8Zz5/jE/44G4aNaMPeOMu2Xb3v6VU/kdt/pUz+pf
u2pvcSg+xa14FufiX7/UX/Vj/Xvd7+XD8KT8mbrE7LvbvNq82rzavDoFXskl
1U71IX++T2zOVYMl37M5t/t2PJuj5c9qvuZ3czqd6S/PnW9OyUfnmWzY6T81
aDg4dwkf8QDcrLeKE9jt21nqzGTLz53fHPzth3XnuViGjnAVh9BLrMJn/CeP
VwM/9kvdtWoCuIETeCOOsTcYT/j46vzo2awde257+1dO5Xfc6lM9q3/tqr3F
ofgUt+JZnK/jP36pv+rH+rd+Lx/Kk/KH/OOe+LdvXm1ebV5tXp0Mr8y/5lD9
PY8c8/XkmMZVR7Vvx7xMBzkp3egpV9XfvCom0N8z/engWWwxz8546kOe+rB3
4aPufJyBedX94ivYTs2ZL17w/M+8ib99QHzlLCe75fH6s0F9WkzC51ffZX7I
xETiH2N4T+xE7sRG+KPP8NCzunrb279yKr/jVp/qWf1rV+0tDsWnuBXP4lz8
65f6q36sf+v38qE8KX/cWci26bN5tXm1ebV5dQq88mzPDJnyVrmn+Xu+/+t5
vhvFBnLoYD+QseSXM1/LR+fOHDrPs3ZroNY0jS//pbPxrZkOPmrQ5M83Ip09
MQ48X/mKP7fq1TB3Jsb+I/GLnFh8IdYRF9iHe9QlXrvk6XPcifCpa5+wf6uJ
+7e4Rpzk/Iv1XbGTeEif40zpLWf2C4ub8Krt7V85ld9xq0/1rP61q/YWh+JT
3IpncS7+9Uv9VT/Wv/V7+VCelD/64KH+m1ebV5tXm1enwivP8k3zr/7kG8ta
p7yVbtZAjztcb1/j0mfuTW28NM9yT3I8y0/lne7S0d9+H5h6doZD3XlyZ/ho
l+9aS3UXgX1Dzma+9CVnF7DhP2dj+NI+JbVkNeljvfeWda7Tv8Uj8nIxEf/O
eRl3BamZH986WfcdzF1G6w49XBHTqBXgBH9bR/Zu29u/ciq/41af6ln9a1ft
LQ7F5zpug2dxLv71S/1VP9a/9Xv5UJ6UP/RhD35uXm1ebV5tXp0Kr5yFlPNa
I/XNCneJy4/dUWr+v8qd1zO8rIeaP+XM1iLNs/JhOpMpT2aLGq+zk3Se85J0
YK93zeliDveT09P8LGagG3y0z9kTtWXfiZy7zZ2PpKdauBz40P2OMzVfOTtf
iA8m/9fPfij+nVgGP/hWLIMf2tUN+BdHpk5+rDU/7Ow4d3Nfe/tflzPyO271
qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPyR0yIg+zavNq82rzavDoV
Xrkbx1ytruyZveICZ0P0YdfcmQMX868c1t/svaGP+dT+Vc+zz8f8qw8c2AV7
66dyYTGAZzEDTMQP4g/y2QUrGNJTu5ze/bHWbenjXhzv2fNEnvjEMzzEIOIT
cQAe8DF7pu4tLvJ3tYOpc8PK2HiCD8ce47tuxkjH/Qu3PqTt7V85ld9xq0/1
rP61q/YWh+JT3IpncS7+9Uv9VT/Wv/V7+VCelD/0VOeAxebV5tXm1ebVqfDK
uPOuOZpu5k7zshzTOqZ5We7pnh17UOlgvXLO/suH6Wm9kp5qsHTzrloxG+Ht
TKXYQF4shzWfw+q4E/3F69mdePSR09P5qh68vq0sLrDXCTZ8ZF8UjM3nx3dA
XrRq0urexnafnjM09jYd9yTcfoPd2sVC8JhYSA2ADPESeVf8Elesd53HaXv7
V07ld9zqUz2rf+2qvcWh+BS34lmci3/9Un/Vj/Vv/V4+lCflD96ybeLAzavN
q82rzatT4JU5Wg4sP6WD/ublyVXlkOTLSb1vLp6zjbOvVa6qfqvPfI9y1kDF
A+rD7HLfDvlycfeTkyd3NS+zCdY/+MI/vb4LYh73XSnYyuHdFaSurV7NF3ym
Ds7m2RdFD/ZZK+Zr87wYyG/+tSdK/uxdfhSLuEvIHqrj3qDjHiI5s1iJTDGE
d3Gp7e1fOZXfcatP9az+tav2FofiU9yKZ3Eu/vVL/VU/1r/1e/lQnpQ/6h74
ON+k3rzavNq82rw6FV6p01rvnPx0auPm1tkr5U4B87d5dtYWzdfWK+XD3rUv
1T07laNWTP7cNUSGccUJ3uMf51Bm35H8mu584BvD9OI/e3zM20e9944Vm8z3
QfiHf/lI/s43+uKEfP8qJlv3J4gJyPZv8cfxPZE7zmb/lBgJf+YuBn3FO/q0
vf0rp/I7bvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx8qp/yZM0TzTerN
q82rzavNq1Pg1eSh00dt1rvay5nZt0P+fEfYfGoN1fxLpvP9c++QuXi+RWIu
Nu4rXv5n11qqeAQm/g573wmRv8rpfT9ZX/g6689nfEMvMYV4xXviGeu/4g4+
5m8xjFxebEPu8Y3lW1f93Fqu+EcePhwQ40w73xhTnOOZfOMOr/Ch7e1fOZXf
catP9az+tav2FofiU9yKZ3Eu/vXLdX+NH+vf+r18uM6T4Y9n9Y2JwTavNq82
rzavToFX9pcedd67lxzvmi/VUc2ndDLPqtPKJ51btGfoKr9dz/Je65XzbSly
rK1am2SXnFWswF46qhX/wPM+Y8UJR679hxc+fOisv/lZLGJM2IoxjGe/z3F3
0GOXT8Qh8x7fG4Nf3KV+fG/rRatOLubgXz41Njn+Jl7S/zh3+tArmXdcrRff
te4j4jPjX903dLO9/Sun8jtu9ame1b921d7iUHyKW/EszsW/fqm/6sfr/h2/
lw/lSfmDV/Yk49nm1ebV5tXm1anwar7JK7e0nmjNce5n8N1C/eWe3lUPnv05
cxbDGY2JweYMiLFmjVJN2FwtBvFdLH+Hw5w9mW80y8/FDGw67lq4bdWlj/vT
v3zhby13cvar/dFn8x6fWgsWp/DXkXvftWrd8y0T+6jG1/7GB+SIYfgQR7xL
3nyHS6w03y5pe/tXTuV33OpTPat/7aq9xaH4FLfiWZyLf/1Sf9WP9W/9Xj6U
J+WP87DuKbKevXm1ebV5tXl1KryytiiPVd8l0/l6OSSZ1h+Np51M86narLHo
au5mp3zTuqcx7Xdly9RgnSsxb5vrv+3Jf2DFBmIIY8P9uA/hzoW/OxCu7jVf
51/EC/MtkMGMbyY+Oe6J/fL7rR1PLj/nQ/nu6m6gm7n/7B9W78YZcvzde86R
Tl38GPe4f8/f2t7+lVP5Hbf6VM/qX7tqb3EoPvfH7T48i3Pxr1/qr/qx/q3f
r/NheFL+uNf9Kd/xB9ddfptXm1ebV5tXp8Irc6t275PpHjb5pHbnQzzbw+Pv
clT6zJ02d/3IxdLHOqq9sv5u7n7Osz/95rqn7zbOnQNkiEXsZbJeKpa47HOD
zXP20/Ps+yVL/fgqFrm511efiWE8w1bcA9dj3/Edq33umJ14ZvYYH3usDl4d
99Qed7bPN7lm/xSZE1+JZ9p+vf/IqfyOW32u6zn6167aWxyKT3ErnsW5+Ncv
9Vf9WP/W7+XDdZ4Mf+xntkbub5tXm1ebV5tXp8Ir64/6yy3JtN/GfOpbw/JI
+abz+Oqs5uKnf88fWft8rGl+yxN//9L56vzJhbiBbcc3ND7t/IglXr98IQa4
+o7HwkGcMJiIK2AMK+ug5M29B+ISuMvTyTm+3fwFqxZtLM/wv4pdll/Gj/ww
e4bFPMc+qgdd3T37uJvPYpupkcvlyx/x1cdrv95/5FR+x60+1bP6167aWxyK
T3ErnsW5+Ncv9Vf9WP/W7+VDeVL+WL+eb19uXm1ebV5tXp0Kr9Rg1Uu1y0O1
qa/az3PUdp91/sIX/Km1V8f8625V65D2tX7v0//oOgNydWfNxTHHP3ztm/J3
ehqT/WrCdJGHizPM31M3lgfPNz/oLS7Rf/b0yu3J4iM4zzdEtI8vyJyYRLtx
xo9kH/cl3L5q5nO+5rjL7/YlU/wxcdTUE/Tr95rb3v6VU/kdt/pUz+pfu2pv
cSg+xa14FufiX7/UX/Vj/Vu/lw/lSfmDV+rt9m9tXm1ebV5tXp0Kr+yrcYe4
nNH+GTVVa5PONlpLNL8630GOb0p5dobRszzU+qN59uUv+6ybdVpzsVqsPTzu
czOm/UDP/v4/vuZr5yLVZMUK7FfDtX9XzOF9sYSYAGbzrWRYzB1B3uFv/jv6
3LLw1D7fHRm/iH+O74ncd+/Q8Q3nW1fsdLUf+SZnDn4cMRWZv93z9f6VM/I7
bvWpntf1H7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un543wrPTavNq82rzav
TolX6qW+7Wsvjv7zrQr33sz3LHxbSo5Khx995Z+/+f0LdVq2mefVb+llP88P
v/jPrHnZuQ/3vE0fc7S1Tva7h0dM4GyKNVO/5ej2zMJU/nvcd77y9xvw4i9x
i/x48J8zL57n3OjEPMf3Rx56Nt+clF9PLCNumVhm4qXZbzx1bu1Tb6dH26/3
HzmV33GrT/Ws/tftGnuLQ/EpbsWzOBf/+qX+qh/r3/q9fChPyh8cm29+bV5t
Xm1ebV6dCq/sR5WXmjedN7R+SHd7cuasIvnzTSjz7HzDwp0Ac86RzvRUm/Vs
rdIzG+Wj5nq2zBnJ73vmH1vnROSzvoXojIi1Vdjw0+ytusrxbxzftlx3CN2s
V8NafDH7lKZG3b1Sx5mdm/X4tW9K++wxnjM1c9cCmXO2ZvZZHWdxbr9fe/tX
znX5M271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPy57d73rzavNq8
2rz6ROaVPvJHc2ifrSfKF4dX800o+emc6zcvz15Wusk73THnW1Sz39X9cuZk
836fnR+R+1ovtacVPvBW2xV7wFO8cez1vfUh7vXhC/jaP6S2PPuRJu4RZ8jl
xS3jU/EJX/ORHF9+P3HR1Tehl9zxJ/lTY59n7TjT9vavnMrvuNWnelb/2lV7
i0PxKW7F87fDvH6pv+rH+rd+Lx9+O87MudQfOr7HuXm1ebV5tXl1Erz6fwFT
NGg6
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3XnU/mtV1/GTldo8z4PZaKMNVmac59EGm6hIy6wsxSlr0crKtaq1+sMB
BNQcAXFGnNDocNADIh7wcEAgOCAeEA6jjIcDgqlhGdrwvL4P+/A+d/zRWvUH
9zr7rHVzX8917+++9v7sz49rX/u6vt/vh37qP/+4z/yAG2644V998NX/fNyD
//XH/Mt/+eB/+/Ef6I/PePBD/sQff8jPv2p+ztXnMVcf7R968d+4vPlJH375
rd/yuy7f/rZ/cvnSOz/u8j89/y9fvvENDz7aL/hPf+Xy1a/6+5c/8rK/fbTv
esXfvXz5j/ydyxe+4K8ev7v+2bf/ucsXv+ivX97xwr92+f1P/6jLl/zQ3zza
3/vUP3Vv+8k3/9FDlo4n3fRHjvZzf/AvHvLaz3n2n798+vf9mUP2Wbd99HHt
8577sZff97SPPOT9fsv3/InL7/rO33/5g8/5C4e+b/+233P5jFsfcPktj/+d
l1/z2N94XP+1X/ObLr/8y37F5dO+909fftVX/urLRz7igy+fcstHHN//63/+
zwt6v/Bhv/Dyv//Mz1zc9B//8OV/+6//9eINr3/9BQz8/iMve9nFdz/5jx3t
V7z85Rff8e2/9/Jt99xz8azbbrtPf+Wrp/o7bu2pnbW/ftXf4lB8itspnoNz
8W9cGq/GsfFt3MuH8qT8eexX/4YDqx968YsvllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV/zuvfvyd/+zyzW/6
tMvXvuaTDj3GGy5pD8fop+NHX/ePLl/20o+/fNEdD7x81Sv/3r2+sYfdP/DM
i0P2h1/yoMNfcmT4BR/6YMWn25/1MUf8ydz2A5dHmz+wFpPnP+8vHXiy23Vw
FkMy3/Pdf/xejon9N3z9b7289fv/7OHbv/+SX3r51Kf8ycsv/qJffPkFn/8B
h+znf97Pu/zpd73rQvtn3/3ui//84z9+8R++6w9c/tjb335wwxj6fuCZzzz4
Q/bZt99+ITbvfMc7Lp5x66336a989VR/x609tbP216/6WxyKT3ErnsW5+Dcu
jVfj2Pg27uVDeXLKH3xj4/JqebW8Wl6dC69c98q7PvH4pn/mVzL0G9s1d/7w
3zr0vP5HP/lo0/+aV/+De+dl8trPfMaNhz4y2vQaC5Z0+Zjf6XaduGnD5z8+
8Q8dv5vzv/MJH3bYDr9vftzvOGz1uzyEHU/4jt935Cvs+MZv+G2XX/TIX3Tk
HV/5Fb/qyG1gr898D2uxFneYivMPv+QlR/9P/sRPXLzojjsODmh//9OffnCA
jh98znOOHIm8dvsrXz2n+mfc2lM7a3/9qr/FofgUt+JZnIt/49J4NY6Nb+Ne
PpQn5Y/fyM3fy6vl1fJqeXUOvDKPkjfvmpf97Ztf/DH/u+YVL/+Eo290Gkvb
b6f51cjyxdhkYaF/2q6TN8DL+NbI8hcYyBPkFcaXV1jDskMe8+hH/dpjjMd9
04ccsTDGVz/m119+3ufecMh+6b//ZUc+ZAz5zFvvvvvgxtQEYC2eL73zzgvy
E3f9/+Pnfu4qzs8/+snjCZtwRp2h/afy1TP6O27tqZ21v37V3+JQfIpb8SzO
p/hPXE7zq4lj49u4lw/lSfnjG0fxcXm1vFpeLa/OhVfWkuqnb7vnsw4d1ozm
SOtW8+TUd8eGqa1PXdf8q58svWyjl8zkXfrkF+wlCyP62AUHNpnP5S9wgI81
tn75A3z1wU+dmg416i/54l9y2PF1X/ubLx/6BT//uP7LvvSXH/EyxsSRLuv7
V95115EXibua8NQNXviCFxz9U0MYLmnLd179qlddPOmmm+7TfypfPaO/49ae
2ln761f9LQ6n+AxuxbM4F//GpfFqHBvfxr18KE/KH9/vfMdDrjD67OXV8mp5
tbw6G15ZV/r7rXd/5iGj30f7x97+T4+2OfMtb/70Q8b8zm5jWKMa0ze/2W6d
zRbzvjyAzewzp7PDPE3W3A0HNWS6YGWNTLff1aCNS6e8Ap5yisk35CEP/8IP
PHC1LhdXtoiPOMJF/jNr/2mLwdQNxGZyJ/1q5urn4qFePvx50xvfeJU3PfU+
/ZU/1TP6O27tqZ21v37V3+JQfIpb8SzOxb9xabwax8a3cS8fypNT/uDX3W/5
jOXV8mp5tbw6G17ZZ9Tnem3997z1Hx9zsd/9NjIzh9prNIfqI+vbnDvrTTaL
AbzZDR/1YTZbp8J4arx+N7fzVf5AZjCkT77wTd/42w+9ch1nlszx9mkf9tBf
cOAHe+t8ucEjHv5BV/a+7gJG1u7yHPpaExBDHFAP/y8/9VMHN9ik/bznPvdY
+5MhTwaXyLe/8tVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27if8mF4
Uv7gGJk3vfFTl1fLq+XV8upseOVDZuRHv/nd32TNtW94/accsvRP28d6s/Pq
rDv1u57d5nTzN3+csbXPymf+wlGO4W85gzwBVk/8D3/waIuZtTeZx3/zhx5r
cJipUatli5E+uY623OS1r3nNhfWz88Bq3cafNhlr/8lzxB034C9HkheVM/83
/dVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27iXD+VJ+YPb5F/32n+4
vFpeLa+WV2fDK2tSunzMuf72+5zH8jc9rjeHsoUen/l7zqGSn1qs8f1tfPay
kSy5OTdkj9a877wsDJzL5T/M1KDlCWS+7Vt/93GNNfTXf91vOWrEj3n0rzti
KecRI/fCyGGs3+350n8dn+cf8XIeWKzFQnzJ2FvVdlaKPBlxZ4NciAz9cp/h
4fRXvnqqv+PWntpZ++tX/S0Oxae4Fc/iXPwbl8arcWx8G/fyoTwpf3xwas4k
L6+WV8ur5dU58GraPuSmrebqGh9zK7vonW+fybHYal71TX7mcDq06WMXH8mw
y3w851zVmeUMatVwca+KM0ja9mev69QPPPD0m7W5M7lz9thZJvkJbMVIHVv+
Y//X2l8cr+vxzzziPvmPdf3wYWoC6gDW4u4zbQ1Bjb39la+e6u+4tad21v76
VX+LQ/EpbsWzOBf/xqXxahwb38a9fChPyp/2La+WV8ur5dW58Kqy7yvv0m+e
nnsvfE/bWD5+Hz3a5mN2s8fcTgd/6eYrzLTJiknv+9Bvf1SuAS/5w1d8+a88
7jlRe557beQh87yFWbPLVSZv0S+m7pexBp97Z8RhYi2+OKO/+VK5hA+4pJ7Q
/spXT/V33NpzaufYX7/qb3EoPqe4DZ7Fufg3Lo1X49j4Nu7lwylPhj84u7xa
Xi2vllfnxivjTn6kfz7k5jPXmWtnXHayxZja08ev6ZNr8K9tmDgzpC0/cGaI
7rkfSE14nhdgzetaNWlr9sk31JflM/ZtnVeSm3h+Avzt2XqOkDO8Yq1f7K7P
Jj/tiKl9ZOephg84YP2unqAOoH/2iKc+MLWC6T+VHz3V33FrT+2s/fWr/haH
4lPciucpzoN/49J4ncZxfmvcy4fypPyZmr1cbXm1vFpeLa/OhVczJ/qeuoNr
Z3/R3+bluX7qtMaeOZkPY6M9Tr5aM8s12Gue109W/+QGcw+J9jwnxzh0wZVd
80w5vlmTyzv4QNY+qz1WeYg8Rg7izLB7Z+y7vuXNb7548s03H88RUs/W7xyT
ZySINW7IedQNjCfnkS+xe/gzZ49xpv2Vr57q77i1p3bW/vpVf4tD8SluxbM4
F//GpfFqHBvfxr18KE/Kn/n/KZ/l1fJqebW8Ohde8aUf15Mbzrme/JypmXUr
W6Z2a190ntXGVnbxwfqXfWP/+DTPDYCNfGRwgyN98gLrezKwcU8Mu+aZq+rJ
MBBzY9HnbBJ9YiZ3cWZX7MRR3L7nu7/74mEPfeiFnEWsxd0z7MhMLWLOG7Nx
7p1RM58ae/srXz3V33FrT+2s/fWr/haH4lPciucpzoN/49J4NY6N72nchw/l
ySl3+r28Wl4tr5ZX58CrqZ9OTlX5WUuObmtWts1zTacWb46ffU7zNnvGTv1k
rIHnWTozv8tLYAUHWMpHXAcfa3HXGmeesTO5hzYdzh+xk06xdWbIGnp0Oq9k
v9a39T5uiLWYP/pRj7q4Ptf7squc6Jbj/lPrfjkPLk3dQMx6T830V756qr/j
1p7aWfvrV/0tDsWnuBXP4lz8T+My8WocG9/GvXwoT8qfqUd0/2Z5tbxaXi2v
3t95NfuO5mHXT+11nj+qf85j6R8b2Kk978CYvU395Gcdqz3rW/r5O+/L4Pc8
X04btmTFz/paG1Zwk3foV5OmA67uPRk9ziXxtbGwj6sfVs70ymngLq9RC3Dv
i/3k73zCEy6c9/X90+/6nKM+gEe4IZZTM29/5aun+jtu7amdtb9+1d/iUHyK
2ymeg3Pxb1war9M4Tnwb9/KhPDnlz+l+9vJqebW8Wl69v/NK39RYjTP6febZ
pLMeZeusVcfOmZfH5rFnZNipz7XGtt6Vs+iXJ1hHm7PnWXPGmmeS+12fuMz7
rcQT5vOsnnkmgfO7dFvne96B8eEtRnID/JC32BslL0bzHHV7verh8qYv+9Iv
vaBLPeDzPvdzj3NQ6uvf8PVff5/+yldP9Xfc2lM7a3/9qr/FofgUt+J5ivPg
/744NvFqfjUyjXv5UJ6UP695z32p/t0sr5ZXy6vl1bnwas6kkpv7MOid86fz
bib6zddz3sccT5ZdfKBrnqNKv5ruPNedv7Ag79rxd54fN8/VsWZ2Dfytydll
TDkHG2ZNPTESC3bKYTzLgJ9iKN8xvmf5OLurX/7ijC8MnCemnz1iMs89oM+9
Mf5WU/+Wxz/+Al98v+XNn37R/spXT/V33FN7xs7aX7/qb3EoPsWteBbn4t+4
NF6NY+PbuJcP5Un5M897H34ur5ZXy6vl1Tnwyrw69dVZN7rW3E2erXKGOfPq
d7YZ1zXWvzBll755Lwmf+MuveX44HfyYfVL23/qed2qYw+ecFf9cazzfchE6
xUs8xM5Y8y4PZ3wnP5mzu/RY8zvny14xVws3jj584B+Z6z3hT733eQhw8PwD
9QJ5jOe3qyG0v/LVU/0dt/bUztp/6tf4WxyKT3ErnsW5+DcujVfj2Pg27uVD
eVL+kJs6xvJqebW8Wl6dC69mrpz8yjXGnDM52jOXmqfn/U7zPkT62Dq1Yr7P
+xXn+ULmdr+51m/W1eZgGIjN+GtdPZjMO7+MM/Vk2NDLHtfKPSYW2vqts8US
9pP/zHMP7PnSKVZiyh/vjcQTWEzbsw7wafip3/nj9le+eqq/49ae2nlq//hV
f4tD8SluxbM4F//GpfFqHBvfxv2UD8OT8se1Ps3Vl1fLq+XV8uoceDV11Vkj
mqfNpbPm9LtvdpIZv4yjXx4wZ2XN0XTps8ZmE19g6jq5xKzx+Xt9jukTjvnd
b3zSp55trjYOnPkBZ7nHPMNc/IzLLjVq/bCX88z6XX2b/9bx8+x3dWvv1mKv
mjfO8MP7RNyDqo0L7pFhm3dqjcz0V756qr/j1p5TO2v/+FV/i0PxKW7FszgX
/8al8WocG9/GvXwoT8qfeabV8mp5tbxaXp0br8jQ5W/zLlvnLCvftGdPk4/s
n3OzbOPD1IT5ReecCyJvXTscg421uvWq6+Z9JfPMVToHT+PKGeZZ5XTDhz+u
FSO2w8b6HT7znHN5y+QwfPVOELGnR/3bM/XkEJ57N8/68/xXnOH/Ix/xwcd9
pOKIS9fv7npvf+Wrp/o7bu2pnbW/ftXf4lB8ilvxLM7Fv3FpvBrHxrdxLx/K
k/JHDZ/P7FpeLa+WV8urc+EVH+defvK+595G86q52dypPbVfcy8fpw4sN5h1
8byTC258lGOwV87Bl5Ghn69yF374XfycBbLelYuwcdbd875jmM97POzbWr9b
+2vzR4zEQn1gxmXP1L3J6MMPdWU5kvttYOd5C56bRz/OXN9L87HHu0TcU9r+
yldP9Xfc2lM7a3/9qr/FofgUt+JZnIt/49J4NY6Nb+NePpQn5Y9axbwvc3m1
vFpeLa/OhVeupXNquXDUzzZzKzum3jtzOv3yBnrGd/O7uq+9VzhM/mDunjZ7
Zn+WPXPWyJzOD5jAVq4hfmy1Vn7UV/2aQ0Z9GCZ8n/NO2myYPV/yzjiJ12l8
1brZRlY+xBd1cueHyeOG58Sya95fyW/Pp/Vs9vZXvnqqv+PWntpZ++tX/S0O
xae4Fc/iXPwbl8arcWx8G/fyoTwpf+ZsmH8ny6vl1fJqeXUuvJparr/p1DaH
Whdbh867gGcunvUse+ikA6b65zwSeZjwf2rLs+YlAwdjwcS1cobBcOrSYgBD
40xc/O5csLUt/9Sc4TnrcbnE4A8r48uNxNFaX22cnfaEr7nyoCOX0aZfHuSZ
RPIX8XdvKf/n+Xvtr3z1VH/HrT21s/bXr/pbHIpPcSuexbn4Ny6N12kcJ76N
e/lQnpQ/ckgy8q7l1fJqebW8Ohde8cu3fn6ZT43HnnmXIkzoYJu2+RZ25t+x
wfw79WTjkmcnHMjMed3xy1iz92qsuW+FPB+NRWbO6E4sxMn8D2/7vHPGSa7i
fNTcE8ov8ZEDiS95HFAjdk7K2eJ5v6Q2bGcfWd1ADK9zqb98cMkz+Npf+eqp
/o5be2pn7a9f9bc4FJ/iVjyLc/FvXBqvxrHxbdzLh/Kk/Jnc7LR/ebW8Wl4t
r96feQUrdpqvR6e2vcTRSYb9MJFLTH147q/ku3mV7d5NZc7Vz197kbO25cvU
fulR31UrJm9dC9NpG8t6lj3Wv3IJ9sDKtb7JiLs8RezZz65Z47P9EQ//oHvP
TeGDWMuLPHMWBlNDkM84M6WWTo88yLP5xFdbTtX+yldP9Xfc2lM7a3/9qr/F
ofgUt+JZnIt/49J4NY6Nb+NePpQn5Q8f8Zmu5dXyanm1vDoXXs0eqHkThtaq
rrV/aL6FHazkBvCCFRvVe+nny/jFRxiNj/V9zj7RKTb62TxndNlGRr+x5Bts
MxadcGYvLDxLXG4yNWo40Tl7xPZ/2a/+PTUB/c5KTa1AvsQe4+CAWjF5Z6u0
5Tj2lOE5vGp/5aun+jtu7amdtb9+1d/iUHxOcRs8T3Ee/BuXxqtxbHwb9/Kh
PDnlz/xbWF4tr5ZXy6tz4dXUZqd+bix+Wv92LPeVTOymbmyOnv1W1859l+ZZ
17KZntknHRl26me/HMMcTT+brVu7dmaPujEcjEW/WLNL/Mjrn3tOJ28Rd7mD
/GdyIXGnxxoaP6yV2f7Ku+46+CBH8k5JbfvJnslur5WsdvsrXz3V33FrT+2s
/fWr/haH4lPciucpzoN/49J4NY6Nb+NePpQn5Q+Ozd7B8mp5tbxaXp0Lr7Rn
LPMjm83d9h+1jetastbIcgD7nHNmmD1TWzD+rOX56v4UmIxO+5jWp+Z6MtbN
7IY5G83X4igu/uYX/OHDNvLsnHte2KAtXzA2X8j4TYx8s8P5oMmLcEDccEBc
yFy/X/kBB0/Uya2V9Xn/yHCJfPsrXz3V33FrT+2s/fWr/haH4lPcimdxLv6N
S+PVODa+jXv5UJ6UP+obrmXT8mp5tbxaXp0Lr+DGzpnfzZvWttrkjWc+NX/y
H4bkzddyALL6zd1kZs3LHljYqzTnW1Nfr29fcrz/kV3iwjd5Af/cy2n/Ulz4
79wRG+k0v8PP2PIBPvHRPi9ZvrNt+uUwbJt/L77lD2Jtr5gd6tDXz2N47rGP
PLVxMmrqzhtbx7/0zjuvvp94n/7KV0/1d9zaUztrf/2qv8Wh+BS34lmci3/j
0ng1jo1v414+lCflD5vJ07+8Wl4tr5ZX58Ir86Yar/qpudscbQ8RVnz0cc4U
HmyQP/DXmte8bz71mX5jOY8DBzJ8evbttx/vRNb27g9t+6LwM5ac4Gff/e7j
d3+LndjAQK1afiM23pXsPLDrrt/J/PSL6/3OOy+8Y5LtYuvdWta7rn3r3Xcf
Z4/ZPvUHcZFj2C82jveUsF8uRA8c5p5TMmoD7G5/5aun+jtu7amdtb9+1d/i
UHyKW/EszsW/cWm83lccyTTu5UN5Uv6Q1zfvmlleLa+WV8urc+CVM7LyBfuk
rlE/hpff+WFtO/uZ5nPzt37zqWtgYo53DX/ndzVp8z6b7M3SLZcw97LRHC1X
MCebq/lvbvaOkBfd8cCLhz30oQcWj3zEI65wfdwxxnd8+7cfONP1whe84MIa
n0/q2cYXO/4YF34TF5h7vgI+yHP8NmeffIuZGgI7n3HrrcceMR+uY39db+dn
+ytfPdXfcWtP7az99av+FofiU9yKZ3Eu/o1L49U4Nr6Ne/lQnpQ/+vzb4u/y
anm1vFpenQuvrtaNbL/xavzjnVVX68ur/k+6+KZv/MaLt93zWYcf3t14/T6r
x1/F8buOdzyy4+Ff+IWHf3z/qq/8yivbv/wCLnD43qc+9cLcP2eR+Ok8kRxA
TPgMDxiYw9kHg69+zGPE6RjTu0Pe8PpPOXSz3VhskLuwwbjyHfiL9eQqs9cM
I7qv7ym641j7W3eLI6zJuHdmzhVbi0++hA/0sxVeT7nllvv0V756qr/j1p7a
WfvrV/0tDsWnuBXP4lz8G5fGq3FsfBv38qE8KX++5rGPvfGK/zde2X7j8mp5
tbxaXp0Prx574w+/5EFXn5fceDXO1edX3vi2e+658fue9pHHNd5lbD5/xq0P
uPi6r/3a4+8v+PzPP9bIV9cec761M3n+Pummm6yjr+z8BcfvbCQvNvDmm1zD
eVzrX3Vmutgtr3A9P+Ut/lbntodrXhcr8tbYMICX80DmdPiqEcPN/K42bEwY
ivXkM2IhTvR61gCe4Ib1st/ZJV8ir5+MnIR8+ytfPdXfcWtP7az99av+Fofi
U9yKZ3Eu/o1L49U4Nr6Ne/lQnpQ/z7rttgdc2X71+ZTl1fJqebW8OhteXcn9
2evPDQ/45sf9jkPO/EjP1Zr5WN9erbWPuZR+us2lX/xFX3T4ZJ6GAztgpU7M
Vr/Bynz9bd/6rUcbfvIGc79vv1m7/vef+TeH/ebuZ9320Yfv/+Pn/t3h11V+
cJWHPOTQMd8wM+6VHxf2Wn3DUg4BYzbYl7Wu97dasFxGfO0ji4E1tbqyurQY
OU8lznTbexV/cbWv6lq2t7/y1VP9Hbf21M7aX7/u6+97cSg+xa14Fufi37g0
Xo1j49u4lw/lSfnDrivb8Wt5tbxaXi2vzoZXVzi8Z9684eKGq//8fiX3gKfc
8hGHTvZf6TnsN++ak7XNyexlD4xg6m9rbfmF9TD8x05rWn2uYz/fXCe/sNbl
M2yv1uZ+v3HWsGzkExuefPPNNz755j96lZ98yeGzdbB8xBr56rdDxyvv+sQj
pxPz+R2+cJQDqW9P/cM9l3IK4zpDxH4YW6vrk5Oosauj09f+yldP9Xfc2lM7
a3/9qr/FofgUt+JZnIt/49J4NY6Nb+NePpQn5Y+zz/6NOa+1vFpeLa+WV+fC
K3uX6r/soWPWlt/5hA9zj+Whiy/Go1M99bo+8RsPXGCiVswu8/91jvHEw352
mnPlBmyzNv3Jn/jsAysyrrE2l3+oNbMBTq69vhfmtmMNe5UzHOOZz/nnen1s
vdJ32Mc2NXH2+L6u13/Y0W8cGKkXy3uMLSbOG8lH1Mqv/4098Ygv/ugn68zS
nJtqf+Wrp/o7bu2pnbW/ftXf4lB8ilvxLM7Fv3FpvBrHxrdxLx/Kk/LHvyn1
EfWS5dXyanm1vDoXXjlv6n5E86x1sbOt9i/VmO2Xygusbek3tjWmD1vfU2O9
Ua7gN+OzE178t8bmJz3yDRhf+Xz4aD7mg/lZrVefa66fH/T8Yw+WL+SMb2/z
aj6/0d/w9Td971nrHvueYuD369zssffumYopHerU1sryE5jDUd4hv3CmyLhs
tV9r/Y0ncif51NyXOv2Vr57q77i1p3bW/vpVf4tD8Slu98XzvTgX/8al8Woc
G9/GvXwoT8ofe9/znIfl1fJqebW8OhdeqRu738O62Z6lNbFcwrWuc5ZHfsEP
tl3P9S+50Xhqsmqxzupc43PDUQNWV+aDseQfsKRz9jj5CverWN3IdnjKB1xv
3T7njmb9Ky+w1ynHMI7xr9bM9j6P8ZxNotf1s1cAX3phxUYYzjkibd/ibC/W
2l49wLi4wFe/i5s1OT/Vmdtf+eqp/o5be2pn7a9f9bc4FJ/iVjzvi/N78W9c
Gq/GsfFt3MuH8qT8ubLluMfVPT3Lq+XV8mp5dS68+qmf/BfHvYX2VN3L4bp5
BoBrrRmdF5JTmEutLadWzHb3UBrfGhT2zgDBxRwPc7mFdTY5uMMCLmIxZ58H
R37O+tpvg6dzulPXNf4N7/nvyk45yLFWhzd75DnGuor9gfmsl6/zwQcd54fE
kdyjH/Woe+sQsBUTvlmLi7m1tLGv1/offZ/+yldP9Xfc2lM7a3/9qr/FofgU
t+JZnIt/49J4NY6Nb+NePpQn5c873/GQ476g5dXyanm1vDonXr35TZ92tD1X
wPzoWTbkzJvus3d+1rxrz9Ja09miOf+r3xxrbQlbc7lx+QlTczbb+ScfgbG9
VHO32JDjn/i4v8M339WI5SvwhvtPv+tzLuYa8vIOe57wh8EVHjfCUt7gHBR8
6PO7b+v1K90PeO96+q4jbrP+l3eInZhow1S+4pvPOAT/9le+eqq/49ae2ln7
61f9LQ7Fp7gVz+Jc/BuXxqtxPI3vxL18KE/KH88+0mdfYnm1vFpeLa/OhVeb
X21+tXn78mp5tby6P/Nq6+1bb999nOXV8mp5dX/m1Z6/2vNXe65vebW8Wl7d
n3m19+Ps/Th7n9fyanm1vLo/82qfz7DPZ9jnfiyvllfLq/szr/Z5ffu8vn0O
5PJqebW8uj/zap/fvs9v3/cCLK+WV8ur+zev9n1e+z6vfU/c8mp5tby6//Jq
3++873fe94Yvr5ZXy6v7M6+sl/mmNgzDq7XooYNNrvf5/qd/1JEXsNG9FurL
zp8+77kfe+nskc/0u4ffmSU4kuG39S9stNWltWEuBzCWM63mfL/7m7/W3O7z
ECv+qAtPXFznPkqfyVXkOWy/5sJzjtjNuSk+sp1+zxGQc8hl5EvGgQX74UQP
HOQ98CEjD2J3+ytfPdXfcWtP7az99av+FofiU9yKZ3Eu/o1L4/W+4kimcS8f
ypPyh7w+OpdXy6vl1fLqXHhlX9VZIvOpOdqcrV9bjdj9FXe88K8dc7hzNfZe
yasZuweRrH7PqCHDBs+wgYU53rqbb9bk5Ky54WbutudqPjd/m9vN+/NsCPu0
tz/rYw4c6JQ38NfYz779zx3+wVEuQVadmW3TL89hG1xe/KK/fnyL1fc97SMP
DrADVtpizEcYsIPMe+7dPPaRxV29u/2Vr57q77i1p3bW/vpVf4tD8SluxbM4
F//GpfFqHBvfxr18KE/KHzaTp395tbxaXi2vzoVXL3vpxx/ygz/7+Gbe1Obj
2MP3N77hwcc8TM/rXvsPj3Hcl0iGT/x8/vP+0uG3HONVr/x79+p8xcs/4dJZ
Vb6QMUfLEeQkcIOjuZud/jbvs9Halm3k2Wld73c2aPPb2Hwh4ze++2aHWMuF
Ji8SF3u4MCTDTuepxMUaXw1B3/U9QR99rK/nvtTpr3z1VH/HrT21s/bXr/pb
HIpPcSuexbn4Ny6NV+PY+Dbu5UN5Uv68+lV//7iWTcur5dXyanl1Lrxy7c1P
+vBjXjSfmjf1myvJOx/EL/ayQ/tx3/QhR1s+MPfju5YNxjV3z1j0kJ/5mgx8
9MsPzP3iQj+f73rF3z1sZgNM2GPNKwcwFv1ixC7xI68fDnIY+E89AU6zB023
ujY94iLeOMB2HMAfPFEzHi6pTU+9Xbv9la+e6u+4tad21v76VX+LQ/EpbsXz
FOfBv3FpvBrHxrdxLx/Kk/IHx9RT6F1eLa+WV8urc+GV9lNu+YjjjJJ5U93U
fG2PlSybzcvuvWSnsdjPzhfd8cB7x4KDsdisrV/eYFz95nr5A53s1D/7mi//
kb9z3CczNQpjzdxtLDrlAM4VWdvKAdR46TIW/wYH39bU7IeT87lz9knNGh/m
TBJ7jDNxJ2+PVrt5kWvpaX/lq6f6O27tqZ21v37V3+JQfE5xGzxPcR78G5fG
q3FsfBv38qE8OeXPk276Iwcvl1fLq+XV8upceGWOZpv9QvqtT7XhSca1ZNg8
9pCXH5DhO5vN0TCYmoN+eL3+Rz/52LNkq3Wo/VH6x8dZz/KRX9M21mte/Q8O
e6yf4Tw2u9Y3GRjCRizZP3mLXILt1siwmto4rOCEA/aL5UhzThhm8h96xERt
HVbDq/ZXvnqqv+PWntpZ++tX/S0Oxae4Fc/iXPwbl8arcWx8G/fyoTwpf/io
FkPX8mp5tbxaXp0Lr6xbncuxn2k9a81s3UjGnuX1PSUP/D90WktbL7PfvMsX
8uw355K3dpUDkOEDGePCyljG1G+sWTtPzmAsMq61bhVftvBdHGEp17H+9bt8
4613f+bxmxyFX3IDmIg1eWdm7fO6d0adnK/OU2lbO5O1Zwwr6298EPfJl9pf
+eqp/o5be2pn7a9f9bc4FJ/iVjyLc/FvXBqvxrHxbdzLh/Kk/KGfD6f9y6vl
1fJqefX+zCtzrvOj069N12tf80nHHOzZA/Yx7bPCwf7j2ABbPrJTP33sJz9+
sYdutk1tVt3YWNaqrpVLkLdnCQcy5mvnjowjlvIZv8OdX3IGceLX1HgnFrN2
nrqx+IoPDrATZtf50IOOPEKbfnkRDkytYJ694Nt54PZXvnqqv+PWntpZ++tX
/S0Oxae4Fc/iXPwbl8brNI4T38a9fChPyp9X3vWJhwyeLa+WV8ur5dW58IpO
54T0W89aG9Nl/rXnyk/zr/nUvDtzqPUtrNhg/cseY7KH77O2Zdu0+QhDMvA0
5ux9wwQOMJx9UjXtwZ/MYCiOarx0ag8O4kheriIusMcD45KduJC1xufL7LeS
l/vYV2bXdW71/CN3mhpC+ytfPdXfcWtP7az99av+FofiU9yKZ3Eu/o1L49U4
Nr6Ne/lQnpQ/7PSNo8ur5dXyanl1Lrxij7XuvKfet/lRH/3mUNdqq6Py3XzK
H2061XnpmbmYHuPDRC4xtV+2jQz91sgwsafp9znbLI8x98OBLeTFYnyHrfHl
NOI19eHZA4WtuX7GnfjKh8hMfNUNcMP+rzX03HNKv7ippc8esecstL/y1VP9
Hbf21M7aX7/qb3EoPsWteBbn4t+4NF6NY+PbuJcP5Un5g59sond5tbxaXi2v
zoVX1rb2FNWVyfNHzdjcqk1G29wKS3O6a82j5m762M0Xa0zzOp0wIkOezXym
gx/WvLOenTUy3WRmbWtONy7b+ci+WY+L9WDOdjGSc/Bx8gfr4qkni0vPgKlP
u5dT7iAPcn8Kn3DGWSn+44WzVTATNzLtr3z1VH/HrT21s/bXr/pbHIpPcSue
xbn4Ny6NV+PY+Dbu5UN5Uv7Y4+Yzu5ZXy6vl1fLqnHhFzlxKPxn+Gddcq+13
3+ZXMnSYg+GjH0b0sQ1GdOkbLpmT4eM6ts/eJfvHLzb6TRz1qTlPLRdG/Bo8
2aNt3jcuu+QGU1tWQ566tBjJMdxXIs9hm1zD2Sn2irl9Xn7MPvKcm8IZtslZ
Rmb6K1891d9xa8+pnbV//Kq/xaH4FLfiWZyLf+PSeDWOjW/jXj6UJ+UPGXr9
vbxaXi2vllfnxKv5zTd/4PGjr/tHx3ja+ulkI518k1Oou1pbWveab9WH5QDm
bb7wy1zLX7+51m/sZJecAdZk6FD/pXP8mnqvGMy6mF72zLpb3kJGW//kMNbv
c9/lnHGae1fFzd4wf9TJnZeCy7Sdj7L2J6M+oB9n2l/56qn+jlt7auep/eNX
/S0Oxae4Fc/iXPwbl8arcWx8G/dTPgxPyh/X+iyvllfLq+XVOfHKuD70ktWm
lx7zpfXrm9/0acfYxvC7+rJxXWN+N0cbQ5/2+Gt9yxbzOIwGE7+Zh83PU7Pl
J6zEUQxcO3VgvtNp/hezicWsteeMLlvJDh/kGnOP5NS9jaNPfPk3+7NveuOn
3nseCQ7W6HiCR84Ue5dI+ytfPdXfcWtP7az9p36Nv8Wh+BS34lmci3/j0ng1
jo1v414+lCflDzm5oH9zy6vl1fJqeXUuvDI3km+u5Xd2ut61vsman2etOfMv
+/ip1uo3/rCFbfzhl/nZHE/etXwjw0bXGpsMf+cMjxxgasLyADb4ffZJ56zR
rN+t5+f+yrmnUu3ZGSf9c9+K2InX1DrmvBP9k//42/POvTPEOeB5h1X7K189
1d9xT+0ZO2t//aq/xaH4FLfiWZyLf+PSeDWOjW/jXj6UJ+WP36cGsbxaXi2v
llfnwivjwsLv5ka/6/cxZ069nX5z+eij31kgcytZbdezT3tk+KLPtWxj+/Bq
9jTN3cYRG2PBQF7jd33q17Cwnp53r5BRoza29fScZZKDzHMG4K++/YbXf8qR
g4ilnGHuCWUH3jg/rH7t3R/e5UjXk2+++XiXMTu8n8S7Httf+eqp/o5be2pn
7a9f9bc4FJ/iVjxPcR78G5fTeE0cG9/GvXwoT8ofY/EZZ5dXy6vl1fLqXHhF
n9/YYm7UNk+aM61p9Rt3+l3rGvZoj37t2jnrzfpCPxvN1/Q5CwQT/XMuiKy5
HW7a1r9zP6x+mE+tWIxGjzyGP+Jhna5tbT3njuZeTmt9dQL3lspvvFNLDUH8
fP/0uz7neFeme24e/ahHXeCFc8fX7z5+b3/lq6f6O27tqZ21v37V3+JQfIrb
KZ6D8/vikrg0XqdxnPg27uVDeXLKH3I+y6vl1fJqeXUuvKLH/Oibvz70mSfN
3z7+Jus6WE19dWxgj+v8zla1aGOxdeZads5ZVv6Tg5U48HnW1LMuhq9rjSO2
c1ZWLAZPeQs76YTt2+75rHvP79JpLW7P1/f1vTXPPd5PjCO4cV1feNnFU265
5eL6HNjLL550003HuWLP5JM/yVHcZzP3qE5/5aun+jtu7amdtb9+1d/iUHyK
W/EszsX/NC4Tr8ax8W3cy4fypPzBO9/Lq+XV8mp5dU68It/PyHuWOB2uYc+M
od+17JszOeycmuvsOZrT1XbNu/qse+HA19knhY99UrrJTH0YJtbec1YWVuwi
Yx19z1v/8ZF/wNRY9IktfXIZ+c31XvIbL9QFxNq7kh/20IdeWN979p7YiyWZ
63cqf9R7nr9+23H/KS6preOSZxHhRvsrXz3V33FrT+2s/fWr/haH4lPciucp
zoN/49J4NY6N72nchw/lySl3+r28Wl4tr5ZX58CryZ/mmuZa0/eWN3/6oVff
1FbZa2xzMSxm/Tp7l+Obud5crX/O7MCIHtep32qb2/Ubhy4YDW5zLgt+1tds
n9xDTVr83CMjVmIn51EPd/+oOF7Xvl9/9FuHz/P35COeO4QzxvO8BXkSu507
VmcXY/yRU7W/8tVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27iXD+VJ
+YOH5IeDy6vl1fJqeXUOvJrruo70cc18ph4x9VYfdk3NVXv62Dp91tKzlp02
2+UH2ta+cJizrtpvf9s/ufee/7vf8hnHterGcJyzu2rQ9ni9U9K53uv3M996
vH9ZzmL972yvmoB+OcrUzOUfePK9T33q8YyFqRvgxs+++91HPUH/8Ef7+rmz
d9yn/1R+9FR/x609tbP216/6WxyKT3Ernqc4D/6NS+N1Gsf5rXEvH8qT8see
u7+HX8ur5dXyanl1Drw63Sc0V/rWN3OouXfOoc642uyZubn72OZl4/B/1q3s
pJufU8slyy/j+N36Vz9M5Abwl4s4uyvPkId4Tqz9W2d7xVvsvJPKc/PEVM7z
0jvvPPrlPFNDkL9oyy3048DwQb+259PKl5wj1v/s228/3tWlzmBfuf2Vr57q
77i159TOsb9+1d/iUHxOcRs8i3Pxb1xOzx1MHBvfxr18OOXJ8GdyrdP+5dXy
anm1vHp/5tXIzB7itI0z19BtjmXPfPuYR31aZyVvnp0arjZ9bFNPnv1OzzoY
XOQF4gE/55DkFJ5/p22f9rrG/cB784157gEZa3H3xMwz98TolXfddfBBTMRX
zXxiLbfwLD35khjIZzybXUyNM7WFqbGXS+2vfPVUf8etPbWz9tev+lscik9x
K57Fufg3Lo1X49j4Nu7lQ3lS/rRvebW8Wl4tr86FVzNv+sw5UtexY+bhqaWa
n615nR/ymb/ZO3Xa8YWN/uajOZ59ZMnNs3PmmavOG8kfPAfW+h2ep+9SdM08
D0FuIQ+Bs1xFjNS15/2S8papD6gDWLPLhcRa3HGAjLxk+NB8iQ3qCWToV09w
bfsrXz3V33FrT+2s/fWr/haH4lPcimdxLv6NS+PVODa+jXv5UJ6UP+8rP19e
La+WV8ur93deuY4O8zM97NA2t86ZUzaZj8nO+ZuZk6fGSgebtNWEZy5XD7a3
CQ97rPZfYWENbn91nlXub/Vm9s/7PLTnOedkPMPAO0XEyz0w4qQGrU9+oj1r
djESX3E3/rTJTP7DJjGUL8l/1ATUE9gip/q/7a+e6u+4tad21v76VX+LQ/Ep
bsWzOBf/xqXxahwb38a9fChPyp+5LxW3llfLq+XV8upceEVGnzl0xnMN/cYd
vvn2G9t+/J3/7ArTzz76Rr8513zOD3O9NTn/4M9f8/48VwcGbJhnE1gbw2re
BWYNP+83cZ5p3vnonSDzDHb42bu1NvecAzmQGD3i4R907NvKYWaPeGoCcht2
Wfs7Pzw1hKmND2fkPPP+SjJz3rj9la+e6u+4tad21v76VX+LQ/EpbsWzOBf/
xqXxahwb38b9lA/Dk/IH58jg2vJqebW8Wl6dC6+06fKb+fWd73jI8dH+sbf/
06PNZteRYbPaq7kXVuZt3/M+Q37Mc+P4zFc1ZTGxJoUjWXmCs0LW0nQ5K+TZ
4nTPs3qMOxia3+EjBurMzi3JUeQY3idyXde+ONbv6tgwnXtn2DRttWmy8iL4
ypFwQP/1O7ueee/ZYzV298A4M+w8Vfsrf6pn9Hfc2lM7a3/9qr/FofgUt+JZ
nIt/49J4NY6Nb+NePpQnp/yZvG15tbxaXi2vzoVXUxfw99TK2WWup3vue2ST
seUG/IcTm+e5AGTN13MuiAxZuub54ewlKz5z74i8YZ6fKibwhJVYTa7W9zt7
txYd1tzW4OxQexYn19ufvT77+5HHO7XeevfdR9yt/cURT+z/ynPoE88XvuAF
R782zujHE205jue3u3em/afy1TP6O27tqZ21v37V3+Jwis/gVjyLc/FvXBqv
xrHxbdzLh/Kk/PGNa3Kz5dXyanm1vDoXXjnnM+tNds2zSc3P9FuvznO559nd
7LbXqu23eU772DCy5nQ4kJ1nDU17nqUz784w78PR/G7+l1sYHzZ9Z7F8wxjy
EGeQjKFGbQ1P1lmmidfE0Rhq2Grd9mbF3Z4veev76W8tYu7BGS7Jndp/Kl89
o7/j1p7aWfvrV/0tDsWnuBXP4nyK/8Sl8WocG9/GvXwoT8of33NOeXm1vFpe
La/OhVeuNW/O+Zp5BuncqzH37M99H9aVc2/j1Hgnj9K2VqWPzLwLAxazzvWB
Pd3znsU5j+UeFL/DQH2YH3ByNpdffvf+SHbIe6zP2WF/dc4ke4763LOjz7MS
1MMn7tbVciFnpfTjDJ7Ii+beGfkKHWoFxp+6QfsrXz2n+mfc2lM7a3/9qr/F
ofgUt+JZnIt/49J4NY6Nb+NePpQn5Y/f5vm2y6vl1fJqeXUuvLLHOOeI9fFh
9GjTby3pOmPbZ5znms5zAk7zK7LmWxiTI+OZduZj+pyftV6VJ8CeDHy04SkG
cJQvyCvUkF1nbS2vICOu9Jjv1Z7t18LOvSrO5eKAfMY6n6zzwOKtLdbq5vIX
NXNxN8Y8j2jqBmoI4iQP8vyE9le+eqq/49ae2ln761f9LQ7Fp7gVz+Jc/BuX
0/xq4tj4Nu7lQ3lyyh8cZuPyanm1vFpenQuvXMNea1j1Uv3DJe3hGP3aM6/O
+55mXjbOPFOOvfPM1WnziywdYqVtjTx1ez7xd+r7roUPPMnP+62GS/Q5awtj
NWp5iOvVp51Zgq885ZGP+OAjBr7neQ7OA8ttxMx9pu6FgcHUBPBH23OExPw6
J7rtPv2Vr57q77i1p3bW/vpVf4tD8Slup3gOzsW/cWm8GsfGt3EvH8qT8se/
FVjZa1heLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXy
anm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXy
anm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXy
anm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXy
anm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur5dXyanm1vFpeLa+WV8ur/1+8
+t/PLcGa
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xn0/2lZ1/Fp1Xbb99RW2zcrK+b7VSu1tCLNpbISt6xDJyvPqc7pDxcQ
cF8AcUfc0GgYFBBxwGFAIBgQB4RhlXUYEEwNy9CW7+P9nWt4zufQOZ1Tf/g5
c805Hz739/5c7+u+rtf1+nFf93Xf7/f7Az/1X3zsZ/7iG2644V+/79X/fOyD
/s2H/at/9aB/93G/3B+f8aAH/9k/8+BfctX8nKvPo68+2j/84r91efMT/+Tl
t33r77t8+9v+6eVL7/jYy//0/I+6fOMbHnS0X/Cf/vrlq1/19y9/9GV/92jf
+YpPvHz5j3785Qtf8DeO313/7Ns+/PLFL/qbl7e/8KMvf+Dpf+nyJT/8t4/2
9z31z9/bftLNf+qQpeOJN/2Jo/3cH/prh7z2c579Vy6f/v1/8ZB91q0felz7
vOd+xOX3P+1DDnm/P/l7/+zld3/XH778oef81UPfd3z7H7h8xi0PuPzWx/3e
y699zG87rv+6r/3tl1/x5b/u8mnf9xcuv/qrfsPlIx7+vpdPefIHH9//63/+
zwt6v/Chv+zyv//sz17c9B//+OV/+6//9eINr3/9BQz8/qMve9nF9zzpTx/t
V7z85Rff+R1/8PJtd9998axbb71Pf+Wrp/o7bu2pnbW/ftXf4lB8itspnoNz
8W9cGq/GsfFt3MuH8qT8eczX/NYDqx9+8YsvllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfL
q+XV8mp5tbxaXi2vllfLq+XV8mp5tbxaXi2vllfLq+XV/zuvfuKd//zyzW/6
tMvXvuaTDz3GGy5pD8fop+PHXvePLl/20o+7fNHtH3P5qlf+vXt9Yw+7f/CZ
F4fsj7zkgYe/5MjwCz70wYpPtz3rw474k7n1By+PNn9gLSbPf95HHniy23Vw
FkMy3/s9f+Zejon9N37D77q85Qf+8uHbl37Jr7586lP+3OUXf9GvvPyCz//F
h+znf94vuvyZd73rQvvn3v3ui//8Ez9x8R+++49c/vjb335wwxj6fvCZzzz4
Q/bZt912ITbvfMc7Lp5xyy336a989VR/x609tbP216/6WxyKT3ErnsW5+Dcu
jVfj2Pg27uVDeXLKH3xj4/JqebW8Wl6dC69c98o7P+n4pn/mVzL0G9s1d/zI
3zn0vP7H/vHRpv81r/4H987L5LWf+YwbD31ktOk1Fizp8jG/0+06cdOGz398
wh87fjfnf9fjP+iwHX7f8tgPOGz1uzyEHY//zj905Cvs+KZv/N2XX/SIX3Hk
HV/1lb/+yG1gr898D2uxFneYivOPvOQlR/9P/eRPXrzo9tsPDmj/wNOffnCA
jh96znOOHIm8dvsrXz2n+mfc2lM7a3/9qr/FofgUt+JZnIt/49J4NY6Nb+Ne
PpQn5Y/fyM3fy6vl1fJqeXUOvDKPkjfvmpf97Ztf/DH/u+YVL/+Eo290Gkvb
b6f51cjyxdhkYaF/2q6TN8DL+NbI8hcYyBPkFcaXV1jDskMe86hH/qZjjMd+
8/sfsTDG1zz6t1x+3ufecMh+2Zf+miMfMoZ85q133XVwY2oCsBbPl95xxwX5
ibv+//HzP38V5+cf/eTxhE04o87Q/lP56hn9Hbf21M7aX7/qb3EoPsWteBbn
U/wnLqf51cSx8W3cy4fypPzxjaP4uLxaXi2vllfnwitrSfXTt939WYcOa0Zz
pHWreXLqu2PD1Nanrmv+1U+WXrbRS2byLn3yC/aShRF97IIDm8zn8hc4wMca
W7/8Ab764KdOTYca9Zd88a867Pj6r/sdlw/5gl9yXP/lX/Zrj3gZY+JIl/X9
K++888iLxF1NeOoGL3zBC47+qSEMl7TlO69+1asunnjTTffpP5WvntHfcWtP
7az99av+FodTfAa34lmci3/j0ng1jo1v414+lCflj+93vuPBVxh99vJqebW8
Wl6dDa+sK/391rs+85DR76P942//Z0fbnPmWN3/6IWN+Z7cxrFGN6ZvfbLfO
Zot5Xx7AZvaZ09lhniZr7oaDGjJdsLJGptvvatDGpVNeAU85xeQb8pCHfeEv
P3C1LhdXtoiPOMJF/jNr/2mLwdQNxGZyJ/1q5urn4qFePvx50xvfeJU3PfU+
/ZU/1TP6O27tqZ21v37V3+JQfIpb8SzOxb9xabwax8a3cS8fypNT/uDXXW/5
jOXV8mp5tbw6G17ZZ9Tnem39d7/1nxxzsd/9NjIzh9prNIfqI+vbnDvrTTaL
AbzZDR/1YTZbp8J4arx+N7fzVf5AZjCkT77wzd/0ew69ch1nlszx9mkf+pBf
euAHe+t8ucHDH/Y+V/a+7gJG1u7yHPpaExBDHFAP/y8//dMHN9ik/bznPvdY
+5MhTwaXyLe/8tVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27if8mF4
Uv7gGJk3vfFTl1fLq+XV8upseOVDZuRHv/nd32TNtW94/accsvRP28d6s/Pq
rDv1u57d5nTzN3+csbXPymf+wlGO4W85gzwBVk/4D3/0aIuZtTeZx33LBx5r
cJipUatli5E+uY623OS1r3nNhfWz88Bq3cafNhlr/8lzxB034C9HkheVM/83
/dVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27iXD+VJ+YPb5F/32n+4
vFpeLa+WV2fDK2tSunzMuf72+5zH8jc9rjeHsoUen/l7zqGSn1qs8f1tfPay
kSy5OTdkj9a877wsDJzL5T/M1KDlCWS+/dt+/3GNNfQ3fP3vPGrEj37Ubz5i
KecRI/fCyGGs3+350n8dn+cf8XIeWKzFQnzJ2FvVdlaKPBlxZ4NciAz9cp/h
4fRXvnqqv+PWntpZ++tX/S0Oxae4Fc/iXPwbl8arcWx8G/fyoTwpf3xwas4k
L6+WV8ur5dU58GraPuSmrebqGh9zK7vonW+fybHYal71TX7mcDq06WMXH8mw
y3w851zVmeUMatVwca+KM0ja9mev69Qfc+DpN2tzZ3Ln7LGzTPIT2IqROrb8
x/6vtb84Xtfjn3nEffIf6/rhw9QE1AGsxd1n2hqCGnv7K1891d9xa0/trP31
q/4Wh+JT3IpncS7+jUvj1Tg2vo17+VCelD/tW14tr5ZXy6tz4VVl31vepd88
Pfde+J62sXz8Pnq0zcfsZo+5nQ7+0s1XmGmTFZPe96Hf/qhcA17yh6/8ivc7
7jlRe557beQh87yFWbPLVSZv0S+m7pexBp97Z8RhYi2+OKO/+VK5hA+4pJ7Q
/spXT/V33NpzaufYX7/qb3EoPqe4DZ7Fufg3Lo1X49j4Nu7lwylPhj84u7xa
Xi2vllfnxivjTn6kfz7k5jPXmWtnXHayxZja08ev6ZNr8K9tmDgzpC0/cGaI
7rkfSE14nhdgzetaNWlr9sk31JflM/ZtnVeSm3h+Avzt2XqOkDO8Yq1f7K7P
Jj/tiKl9ZOephg84YP2unqAOoH/2iKc+MLWC6T+VHz3V33FrT+2s/fWr/haH
4lPciucpzoN/49J4ncZxfmvcy4fypPyZmr1cbXm1vFpeLa/OhVczJ/qeuoNr
Z3/R3+bluX7qtMaeOZkPY6M9Tr5aM8s12Gue109W/+QGcw+J9jwnxzh0wZVd
80w5vlmTyzv4QNY+qz1WeYg8Rg7izLB7Z+y7vuXNb7540s03H88RUs/W7xyT
ZySINW7IedQNjCfnkS+xe/gzZ49xpv2Vr57q77i1p3bW/vpVf4tD8SluxbM4
F//GpfFqHBvfxr18KE/Kn/n/KZ/l1fJqebW8Ohde8aUf15Mbzrme/JypmXUr
W6Z2a190ntXGVnbxwfqXfWP/+DTPDYCNfGRwgyN98gLrezKwcU8Mu+aZq+rJ
MBBzY9HnbBJ9YiZ3cWZX7MRR3L73e77n4qEPeciFnEWsxd0z7MhMLWLOG7Nx
7p1RM58ae/srXz3V33FrT+2s/fWr/haH4lPciucpzoN/49J4NY6N72nchw/l
ySl3+r28Wl4tr5ZX58CrqZ9OTlX5WUuObmtWts1zTacWb46ffU7zNnvGTv1k
rIHnWTozv8tLYAUHWMpHXAcfa3HXGmeesTO5hzYdzh+xk06xdWbIGnp0Oq9k
v9a39T5uiLWYP+qRj7y4Ptf7squc6MnH/afW/XIeXJq6gZj1nprpr3z1VH/H
rT21s/bXr/pbHIpPcSuexbn4n8Zl4tU4Nr6Ne/lQnpQ/U4/o/s3yanm1vFpe
/ULn1ew7moddP7XXef6o/jmPpX9sYKf2vANj9jb1k591rPasb+nn77wvg9/z
fDlt2JIVP+trbVjBTd6hX02aDri692T0OJfE18bCPq5+WDnTK6eBu7xGLcC9
L/aTv+vxj79w3tf3z7zrc476AB7hhlhOzbz9la+e6u+4tad21v76VX+LQ/Ep
bqd4Ds7Fv3FpvE7jOPFt3MuH8uSUP6f72cur5dXyann1C51X+qbGapzR7zPP
Jp31KFtnrTp2zrw8No89I8NOfa41tvWunEW/PME62pw9z5oz1jyT3O/6xGXe
byWeMJ9n9cwzCZzfpds63/MOjA9vMZIb4Ie8xd4oeTGa56jb61UPlzd9+Zd9
2QVd6gGf97mfe5yDUl//xm/4hvv0V756qr/j1p7aWfvrV/0tDsWnuBXPU5wH
//fGsYlX86uRadzLh/Kk/HnNPfel+nezvFpeLa+WV+fCqzmTSm7uw6B3zp/O
u5noN1/PeR9zPFl28YGueY4q/Wq681x3/sKCvGvH33l+3DxXx5rZNfC3JmeX
MeUcbJg19cRILNgph/EsA36KoXzH+J7l4+yufvmLM74wcJ6YfvaIyTz3gD73
xvhbTf1bH/e4C3zx/ZY3f/pF+ytfPdXfcU/tGTtrf/2qv8Wh+BS34lmci3/j
0ng1jo1v414+lCflzzzvffi5vFpeLa+WV+fAK/Pq1Fdn3ehaczd5tsoZ5syr
39lmXNdY/8KUXfrmvSR84i+/5vnhdPBj9knZf8s979Qwh885K/651ni+5SJ0
ipd4iJ2x5l0ezvhOfjJnd+mx5nfOl71irhZuHH34wD8y13vCn3rv8xDg4PkH
6gXyGM9vV0Nof+Wrp/o7bu2pnbX/1K/xtzgUn+JWPItz8W9cGq/GsfFt3MuH
8qT8ITd1jOXV8mp5tbw6F17NXDn5lWuMOWdytGcuNU/P+53mfYj0sXVqxXyf
9yvO84XM7X5zrd+sq83BMBCb8de6ejCZd34ZZ+rJsKGXPa6Ve0wstPVbZ4sl
7Cf/mece2POlU6zElD/eG4knsJi2Zx3g0/BTv/PH7a989VR/x609tfPU/vGr
/haH4lPcimdxLv6NS+PVODa+jfspH4Yn5Y9rfZqrL6+WV8ur5dU58GrqqrNG
NE+bS2fN6Xff7CQzfhlHvzxgzsqao+nSZ43NJr7A1HVyiVnj8/f6HNMnHPO7
3/ikTz3bXG0cOPMDznKPeYa5+BmXXWrU+mEv55n1u/o2/63j59nv6tbercVe
NW+c4Yf3ibgHVRsX3CPDNu/UGpnpr3z1VH/HrT2ndtb+8av+FofiU9yKZ3Eu
/o1L49U4Nr6Ne/lQnpQ/80yr5dXyanm1vDo3XpGhy9/mXbbOWVa+ac+eJh/Z
P+dm2caHqQnzi845F0TeunY4BhtrdetV1837SuaZq3QOnsaVM8yzyumGD39c
K0Zsh431O3zmOefylslh+OqdIGJPj/q3Z+rJITz3bp715/mvOMP/Rzz8fY/7
SMURl67f3fWe/spXT/V33NpTO2t//aq/xaH4FLfiWZyLf+PSeDWOjW/jXj6U
J+WPGj6f2bW8Wl4tr5ZX58IrPs69/OR9z72N5lVzs7lTe2q/5l4+Th1YbjDr
4nknF9z4KMdgr5yDLyNDP1/lLvzwu/g5C2S9Kxdh46y7533HMJ/3eNi3tX63
9tfmjxiJhfrAjMueqXuT0Ycf6spyJPfbwM7zFjw3j36cub6X5iOOd4m4p7T9
la+e6u+4tad21v76VX+LQ/EpbsWzOBf/xqXxahwb38a9fChPyh+1inlf5vJq
ebW8Wl6dC69cS+fUcuGon23mVnZMvXfmdPrlDfSM7+Z3dV97r3CY/MHcPW32
zP4se+askTmdHzCBrVxD/NhqrfzIr/6Nh4z6MEz4PuedtNkwe77knXESr9P4
qnWzjax8iC/q5M4Pk8cNz4ll17y/kt+eT+vZ7O2vfPVUf8etPbWz9tev+lsc
ik9xK57Fufg3Lo1X49j4Nu7lQ3lS/szZMP9OllfLq+XV8upceDW1XH/TqW0O
tS62Dp13Ac9cPOtZ9tBJB0z1z3kk8jDh/9SWZ81LBg7Ggolr5QyD4dSlxQCG
xpm4+N25YGtb/qk5w3PW43KJwR9WxpcbiaO1vto4O+0JX3PlgUcuo02/PMgz
ieQv4u/eUv7P8/faX/nqqf6OW3tqZ+2vX/W3OBSf4lY8i3Pxb1war9M4Tnwb
9/KhPCl/5JBk5F3Lq+XV8mp5dS684pdv/fwynxqPPfMuRZjQwTZt8y3szL9j
g/l36snGJc9OOJCZ87rjl7Fm79VYc98KeT4ai8yc0Z1YiJP5H972eeeMk1zF
+ai5J5Rf4iMHEl/yOKBG7JyUs8Xzfklt2M4+srqBGF7nUh91cMkz+Npf+eqp
/o5be2pn7a9f9bc4FJ/iVjyLc/FvXBqvxrHxbdzLh/Kk/Jnc7LR/ebW8Wl4t
r34h8wpW7DRfj05te4mjkwz7YSKXmPrw3F/Jd/Mq272bypyrn7/2Imdty5ep
/dKjvqtWTN66FqbTNpb1LHusf+US7IGVa32TEXd5itizn12zxmf7wx/2Pvee
m8IHsZYXeeYsDKaGIJ9xZkotnR55kGfzia+2nKr9la+e6u+4tad21v76VX+L
Q/EpbsWzOBf/xqXxahwb38a9fChPyh8+4jNdy6vl1fJqeXUuvJo9UPMmDK1V
XWv/0HwLO1jJDeAFKzaq99LPl/GLjzAaH+v7nH2iU2z0s3nO6LKNjH5jyTfY
Ziw64cxeWHiWuNxkatRwonP2iO3/sl/9e2oC+p2VmlqBfIk9xsEBtWLyzlZp
y3HsKcNzeNX+yldP9Xfc2lM7a3/9qr/Fofic4jZ4nuI8+DcujVfj2Pg27uVD
eXLKn/m3sLxaXi2vllfnwqupzU793Fj8tP7tWO4rmdhN3dgcPfutrp37Ls2z
rmUzPbNPOjLs1M9+OYY5mn42W7d27cwedWM4GIt+sWaX+JHXP/ecTt4i7nIH
+c/kQuJOjzU0flgrs/2Vd9558EGO5J2S2vaTPZPdXitZ7fZXvnqqv+PWntpZ
++tX/S0Oxae4Fc9TnAf/xqXxahwb38a9fChPyh8cm72D5dXyanm1vDoXXmnP
WOZHNpu77T9qG9e1ZK2R5QD2OefMMHumtmD8Wcvz1f0pMBmd9jGtT831ZKyb
2Q1zNpqvxVFc/M0v+MOHbeTZOfe8sEFbvmBsvpDxmxj5ZofzQZMX4YC44YC4
kLl+v/IDDp6ok1sr6/P+keES+fZXvnqqv+PWntpZ++tX/S0Oxae4Fc/iXPwb
l8arcWx8G/fyoTwpf9Q3XMum5dXyanm1vDoXXsGNnTO/mzetbbXJG898av7k
PwzJm6/lAGT1m7vJzJqXPbCwV2nOt6a+Xt++5Hj/I7vEhW/yAv65l9P+pbjw
37kjNtJpfoefseUDfOKjfV6yfGfb9Mth2Db/XnzLH8TaXjE71KGvn8fw3GMf
eWrjZNTUnTe2jn/pHXdcfT/hPv2Vr57q77i1p3bW/vpVf4tD8SluxbM4F//G
pfFqHBvfxr18KE/KHzaTp395tbxaXi2vzoVX5k01XvVTc7c52h4irPjo45wp
PNggf+CvNa9533zqM/3Gch4HDmT49Ozbbjveiazt3R/a9kXhZyw5wc+9+93H
7/4WO7GBgVq1/EZsvCvZeWDXXb+T+ekX1/udd1x4xyTbxda7tax3XfvWu+46
zh6zfeoP4iLHsF9sHO8pYb9ciB44zD2nZNQG2N3+yldP9Xfc2lM7a3/9qr/F
ofgUt+JZnIt/49J4vbc4kmncy4fypPwhr2/eNbO8Wl4tr5ZX58ArZ2TlC/ZJ
XaN+DC+/88PadvYzzefmb/3mU9fAxBzvGv7O72rS5n022ZulWy5h7mWjOVqu
YE42V/Pf3OwdIS+6/WMuHvqQhxxYPOLhD7/C9bHHGN/5Hd9x4EzXC1/wggtr
fD6pZxtf7PhjXPhNXGDu+Qr4IM/x25x98i1magjsfMYttxx7xHy4jv11vZ2f
7a989VR/x609tbP216/6WxyKT3ErnsW5+DcujVfj2Pg27uVDeVL+6PNvi7/L
q+XV8mp5dS68ulo3sv3Gq/GPd1ZdrS+v+j/54pu/6Zsu3nb3Zx1+eHfj9fus
HncVx+8+3vHIjod94Rce/vH9q7/qq65s/4oLuMDh+5761Atz/5xF4qfzRHIA
MeEzPGBgDmcfDL7m0Y8Wp2NM7w55w+s/5dDNdmOxQe7CBuPKd+Av1pOrzF4z
jOi+vqfo9mPtb90tjrAm496ZOVdsLT75Ej7Qz1Z4PeXJT75Pf+Wrp/o7bu2p
nbW/ftXf4lB8ilvxLM7Fv3FpvBrHxrdxLx/Kk/Lnax/zmBuv+H/jle03Lq+W
V8ur5dX58OoxN/7ISx549XnJjVfjXH3e78a33X33jd//tA85rvEuY/P5M255
wMXXf93XHX9/wed//rFGvrr2mPOtncnz94k33WQdfWXnLz1+ZyN5sYE33+Qa
zuNa/6oz08VueYXr+Slv8bc6tz1c87pYkbfGhgG8nAcyp8NXjRhu5ne1YWPC
UKwnnxELcaLXswbwBDesl/3OLvkSef1k5CTk21/56qn+jlt7amftr1/1tzgU
n+JWPItz8W9cGq/GsfFt3MuH8qT8edattz7gyvarz6csr5ZXy6vl1dnw6kru
L19/bnjAtzz2Aw458yM9V2vmY317tdY+5lL66TaXfvEXfdHhk3kaDuyAlTox
W/0GK/P1t3/btx1t+MkbzP2+/Wbt+t9/9t8e9pu7n3Xrhx6+/4+f//eHX1f5
wVUe8uBDx3zDzLhXflzYa/UNSzkEjNlgX9a63t9qwXIZ8bWPLAbW1OrK6tJi
5DyVONNt71X8xdW+qmvZ3v7KV0/1d9zaUztrf/26r7/vwaH4FLfiWZyLf+PS
eDWOjW/jXj6UJ+UPu65sx6/l1fJqebW8OhteXeFwz7x5w8UNV//5/UruAU95
8gcfOtl/peew37xrTtY2J7OXPTCCqb+tteUX1sPwHzutafW5jv18c538wlqX
z7C9Wpv7/cZZw7KRT2x40s033/ikm//UVX7yJYfP1sHyEWvkq98OHa+885OO
nE7M53f4wlEOpL499Q/3XMopjOsMEfthbK2uT06ixq6OTl/7K1891d9xa0/t
rP31q/4Wh+JT3IpncS7+jUvj1Tg2vo17+VCelD/OPvs35rzW8mp5tbxaXp0L
r+xdqv+yh45ZW37X4z/IPZaHLr4Yj0711Ov6xG87cIGJWjG7zP/XOcYTDvvZ
ac6VG7DN2vSnfvKzD6zIuMbaXP6h1swGOLn2+l6YW4817FXOcIxnPuef6/Wx
9UrfYR/b1MTZ4/u6Xv9BR79xYKReLO8xtpg4byQfUSu//jf2hCO++KOfrDNL
c26q/ZWvnurvuLWndtb++lV/i0PxKW7FszgX/8al8WocG9/GvXwoT8of/6bU
R9RLllfLq+XV8upceOW8qfsRzbPWxc622r9UY7ZfKi+wtqXf2NaYPmy9p8Z6
o1zBb8ZnJ7z4b43NT3rkGzC+8vnw0XzMB/OzWq8+11w/P+j5xx4sX8gZ397m
1Xx+o7/h62/67lnrHvueYuD369zsMffumYopHerU1sryE5jDUd4hv3CmyLhs
tV9r/Y0ncif51NyXOv2Vr57q77i1p3bW/vpVf4tD8Slu98XzPTgX/8al8Woc
G9/GvXwoT8ofe9/znIfl1fJqebW8OhdeqRu738O62Z6lNbFcwrWuc5ZHfsEP
tl3P9S+50Xhqsmqxzupc43PDUQNWV+aDseQfsKRz9jj5CverWN3IdnjKB1xv
3T7njmb9Ky+w1ynHMI7xr9bM9j6P8ZxNotf1s1cAX3phxUYYzjkibd/ibC/W
2l49wLi4wFe/i5s1OT/Vmdtf+eqp/o5be2pn7a9f9bc4FJ/iVjzvi/N78G9c
Gq/GsfFt3MuH8qT8ubLluMfVPT3Lq+XV8mp5dS68+umf+pfHvYX2VN3L4bp5
BoBrrRmdF5JTmEutLadWzHb3UBrfGhT2zgDBxRwPc7mFdTY5uMMCLmIxZ58H
R37O+tpvg6dzulPXNf4N9/x3Zacc5Firw5s98hxjXcX+wHzWy9f54AOP80Pi
SO5Rj3zkvXUI2IoJ36zFxdxa2tjXa/0PvU9/5aun+jtu7amdtb9+1d/iUHyK
W/EszsW/cWm8GsfGt3EvH8qT8ued73jwcV/Q8mp5tbxaXp0Tr978pk872p4r
YH70LBty5k332Ts/a961Z2mt6WzRnP/Vb461toStudy4/ISpOZvt/JOPwNhe
qrlbbMjxT3zc3+Gb72rE8hV4w/1n3vU5F3MNeXmHPU/4w+AKjxthKW9wDgo+
9Pndt/X6le4HvGc9fecRt1n/yzvETky0YSpf8c1nHIJ/+ytfPdXfcWtP7az9
9av+FofiU9yKZ3Eu/o1L49U4nsZ34l4+lCflj2cf6bMvsbxaXi2vllfnwqvN
GTYX3Vx0ebW8Wl7dn3m1NeTdm9i9ieXV8mp5dX/m1Z4p2rNqe1ZtebW8Wl7d
n3m195jsvUt779Lyanm1vLq/82qfObDPsthnWSyvllfLq/srr/YZdPtsw322
4fJqebW8uj/zap9Jvs+632fdL6+WV8ur+zOv9h1V++6zfffZ8mp5tby6P/Nq
31m878Led2Evr5ZXy6v7M6+0zbv0uOdE/8yb1qgwde+9ud9cbY3Jf2Owbc7b
XK2XL691P+feuZseOYJ7H33Udsd+97W4lk3k4Ww8Z3vlGsNh1/vd3+q98NO2
7tZ25ofvzgizX13YcwSe99yPuHRmyGf6yfzA0//SkUdM/gZ3HzjwwVh8FAO1
Z/L66Gx/5aun+jvue7OHztpfv+pvcSg+xa14Fufi37g0Xo1j49u4lw/lSflD
Rr7G7uXV8mp5tbw6F159/9M+5PKeezovbn/hR1/KBczPsKLH2GS0rT1f/KK/
eeDGdvMvbPxt/xGu/JAb2MtU7332bR9+b7/8AJ7O79z2rA878OTDPOPANfIS
45v35Sr2SuUhzj8ZHz7Wv/y21vW8HJjKRTwnR95Bp3tJ2eY6thlTjZmPZPTL
W9Sa3W+jLXdxjf1T8rBgM3n621/56qn+jlt7amftr1/1tzgUn+JWPItz8W9c
Gq/GsfFt3MuH8qT8sU+Nt+rty6vl1fJqeXUuvLJmNH+Sd66G/dakxmWn38yn
7LenSY+51XwKTzJsfdlLP+7IN/xtTQoXOGjrYwebybBbvgFLa3JzNAzImdN9
w+X5z/vIQ15O8YqXf8KlM8Fwe9Ur/97BObiQMT47xciY/H3da//hEWf3kb7x
DQ868ho2TBxhK5egB7ZsG518wRN2vvpVf/+4lk3tr3z1VH/HrT21s/bXr/pb
HIpPcSuexbn4Ny6NV+PY+Dbu5UN5Uv74dye/m/udl1fLq+XV8uoceDVtNV9t
8urIdJpjycgN2G88e47GV7flI5ysLc3R/JIf3PmKTzwwnDzEuR/20aMf/jCU
n1hfk4cnu9kPP2PIE+QTdJrTxQtu+h/7ze9/5C1ylYn1yNAvr5jnKsCcPDy1
6demx7Xscy172CDuNz/xTx45EPytw+ltf+Wrp/o7bu2pnbW/fp36OzgUn+JW
PItz8W9cGq/GsfFt3MuH8qT8mXr7cGl5tbxaXi2vzoFXdM58qu1ae4rmYvM8
/a6ds0FzVkd91p4jeedRYajfGpk9fPW3HEONWizkGM4VWdOKF6zgKV7uezTe
y3/044/7QGYNPvu47KGDTv0wnHqCuFyvyx949NP5ots/5j6xNpZ4yVWMRSf7
6YSjnEQdXd7Ctqc8+YOPs0j6n3jTnzjifdo/8tVT/R239tTO2l+/Tv0dHE7x
GdyKZ3Eu/o1L49U4Nr6Ne/lQnpQ/OOxaepZXy6vl1fLqXHjFX+05Xwob86w9
RHOoWius+EQne6bWKjeAqzU1PTNfs4F/k1OJCdz4OzF6zav/wbGOttYdPIvt
4A9z41nv23+1d/r6H/vHx14vHMnDEF5yGFjKFfiof7gnFuyTn4jR1NvZwwf2
s4d+MuSv92k/9jgLTFf7K1891d9xa0/trP31q/4Wh+JT3IpncS7+jUvj1Tg2
vo17+VCelD/+rS2vllfLq+XVufEKDtaj9FjbGt/+onWlczVqqvYr3YuhbSw+
OcNq3Wp+d81b7/rMS2Oby62LrZHNx/rIm4ONKzeZmjncyE3OwDc+du1sb1UM
4Cy+MCLv2snTYGj9TMberbhYR5ORVwwHrJm1hwPGIs8mY/FZHYFfzkUZm34+
nPZXvnqqv+PWntpZ++tX/S0Oxae4Fc/iXPwbl8arcWx8G/fyoTwpf/B28rHl
1fJqebW8OhdezVpy1pjmUzrNy+Zfc6p9VdhoG5e9dMJt6snji/mbnVOj5q+c
gd3024dlt/NCMGYTfMRHLiE3gCc5mFvLw3xq3erJsIUzPO3PDv7sJAN/vsPc
tfonpuTtm8Lzta/55CPX8VwBYzlDLMbG0jbGK+/8pEMGn9pf+eqp/o57as/Y
WfvrV/0tDsWnuBXP4lz8G5fGq3FsfBv38qE8KX/479v55+XV8mp5tbw6F17x
43pufP7BK/OmfUS+zD4p+9k8a1J5wdjPJ3rZw05zNxsGT2016qkJDCbqtOMX
TGa/lQwMZz+afXAwLkyGG7MeZ9u04cC3yanYYN09OZI1uTxHriDvkcPYK3W9
dbo1Nk7ggHNIxmanb5xof+Wrp/o7bu2pnbW/ftXf4lB8ilvxLM7Fv3FpvBrH
xrdxLx/Kk/KH31OLWF4tr5ZXy6tz4RXb2KV2au079xhaP7rWviSdp+OaX+Ue
UxOePVm+G3fqzPTDQZsvgy2b5SzyEDmDeVquYA+UvrkXxpoahmI3eYvcYMZl
j1jAEP4jA0McUKfWlguxAzfEWo2bfm05Ej1iwyZ6/OZvfGATve2vfPVUf8et
PbWz9tev+lscik9xK57Fufg3Lo1X49j4Nu7lQ3lS/sxetuc7LK+WV8ur5dW5
8EpN1XXO0rCZjLM35krzqnst5p4O90Kyf84IWV9P3RhWkxvYY2Wzud9Y4yM9
s86Vh8CBz7M2n5yETjjOOh3m8heYzRpcjMhYR/PNPC8W1vvGoFPcXU+eb2SM
S5cxtMXA2PDUhgedfGCvvWA+s6v9la+e6u+4tad21v76VX+LQ/EpbsWzOBf/
xqXxahwb38a9fChPyh/8x3cyy6vl1fJqeXUuvJrzNmS0Zz8RBnTbr5QzmGfn
vK77QeZMrLmdzVMrVkPWL8eQS+jnu3yD74PD1K4nf4CDmjCs2AoLmPPBb3zU
Z20Mc7kM3NgGHzgbl92wgxt//Ean643HHv3sE195j7/JwF3buOToJkOvv9tf
+eqp/o5be2pn7a9f9bc4FJ/iVjyLc/E/jUvjNXFsfBv38qE8KX/YJgccmeXV
8mp5tbw6B145h2PtaX+RHjVVZ274OG12sovMnOGhy7p17q/k+8zR5mvzMR/1
z/p31tewm7r01K4Hf/mDtbN6tLi5ls9slpPAhQyc1ZT10Qd/OY4+OQadagR0
uZbdxmMPDvDvx173jw6bYKmfTdMeDrnWZ3g1/ZU/1TP6O27tqZ21v37V3+JQ
fIpb8SzOxf80LhOvxrHxbdzLh/Kk/FGv0L+8Wl4tr5ZX58Qr11rLknnTGz/1
3nNBcobZ94SDtalx1V1bbyczZ5/gRD/f50zs+DI1BLnE1KKtqV1DD9/8DRPj
wcq8b/6Gy2AIUzLme9gNzq4VV2PJW8RQHqJNht1+e/ObPu3QZXx84Cfb4UAO
rr596CAnd4Fl+ytfPdXfcWtP7az99av+FofiU9yKZ3E+xX/i0ng1jo1v414+
lCflD345p+ydKsur5dXyanl1LryiwzPCvRODTPOlObfDNnbKAcz1faaQGrAz
PHPfpT3NWbdar/J3zg7Rz3fz+9Sc5RJzxol+uYu5nBxs+Q879sB2eEVGLkKG
HXSojRtPPMiLn2unBgBfNuCIsdnpb9yY3Imsb/axxe9TU2h/5aun+jtu7amd
tb9+1d/iUHyKW/EszsW/cWm8TuM48W3cy4fypPxx7nnejba8Wl4tr5ZX58Ir
vz/p5puPdxGr23oHhfck8oecc6dyhrmH8Q2v/5Rjbp8cic3qtHw2X6vJso38
zONwUuOFg/WxeRk27JwzP2TMz3IVePoNnrOHCxNjDM5iZP53BokdYqotF/Kb
tnxi+DAyUy93rd/kPcZznd/0iS9MXWcsPuNC+ytfPdXfcWvPqZ0jU79O/R0c
ik9xK57Fufg3Lo1X49j4Nu7lQ3lS/rDDe068R3N5tbxaXi2vzoVXrnEvxaMe
+cgLdlgj/sy7Pud4x7B3Pfnb+tI60j2HsJp7IWFtTWw+1uaP9Sz8nSnSP7Xl
uQ9FrjFng627JwfQzy65zJxHGj3w0k+XHOK9cUks4T/x0p64a4vpxJFeOYKc
xBpbDOmffrLa00/O57T/vemp/o57ak95NfbXr/p7isPgU9yKZ3Eu/o1L49U4
Nr6Ne/lQnpQ/+Og88vU7tZdXy6vl1fLqPHhlfM9aM19en+95+cUTb7rp4no9
+bLjnfVqr2Rda815fe/Fc49zp/62R/m2uz/r3vOv5mj+zPlbvpiv5yzu+CIn
mbNJ8gP+0zlrZHjDis4560uXaydear+uFzP9xnDdxHTyq6mTix0ekGOnfMXH
tT5+d608yje++HZN+ytfPdXfcWtP7Ty1f/yqv8Wh+BS34lmci3/j0ng1jo1v
414+lCfljxzM/Tpzj+ryanm1vFpenQOvjKmtZsqm6+e133rcd+/+Qu9VtB71
DDZjGMu7gx/6kIdcXO9BvvHCOpN/5mTzMTzpYsvdb/0nx3wPC77LI6ZuwHc2
zl6qNa24kJn9Vnrn3k+2zn40manDyy3UjKcW7rc5E+VvzzAXV3+L48RePzlc
mVrC8GQ++vp9+hv56jnVP+PWntpZ++vXqb+DQ/EpbsWzOBf/xqXxahwb38a9
fChPyh8c8+winFxeLa+WV8urc+KVc6PqpPPOevOo+dzzZ8hY385z2K5r7q8/
5lZ1V/cjsoeNxtWv1ss+92jAf+Z6uQo8rIsHHzbCXw5hfLGRg7hGGybqy3PW
Sb/cQy4xe8oTg1mv64e5a1w/NXLYv+XNn36MN/nR8GE+eDB5km88IT/cmf7K
V0/1d9zaUztrf/2qv8Wh+BS34lmci3/j0ng1jo1v414+lCflD+7im1xrebW8
Wl4tr86FV/Ykp9+1P/fudx/rRP2zfjSvk/++pz71eEbN1FSdaSXzjFtuOd7z
a662/nR29fo9wLdcqPnaq/QORPbM2de73vIZBybqyW9/2z+999kHc4Z37hW1
5p42bOUTs0a3ThaLaYvfxGxq3v7WP79NvWDqB/OZOoHP8EJM7L36e/g1/ZWv
nurvuKf2jJ21v36d+js4FJ/iVjyLc/FvXBqvxrHxbdzLh1OeDH+0r59nfPvy
anm1vFpenQ2vnDMl/+zbbjv6PXfUvDl6rCvNoeZWOs3f5mf9bNCvzQZz7kvv
uOPo964qz3Ozn+lMq/HM9+Z3zzvllzne2Ve5AQwnl4CPdfecWZo9WfjKP2b9
Tk4+I85zRrj7w5PTTHxnT3naZCdH8m0M36OnudZp/6n86Kn+jlt7amftr1/1
tzic4jO4Fc/iXPwbl9N4TRwb38a9fChPyh/1DnUG+9PLq+XV8mp5dS68sjac
Gikb1E7NlXwwL3sWt/neM9umpjpj0cP2GZfNr7zzzmP/0b0a5vK539+z3mA0
876zPvY5jaetj4w8gj9wcu//4KhuPPu1ch6Yipf21LKnBi5m8iEff8t15v4Z
cZ6/XVOu0DlcmXb72l/56qn+jlt7amftr1/1tzgUn+JWPItz8W9cGq/GsfFt
3MuH8qT8KceWV8ur5dXy6lx4Zc1onWie7bxp/i6vtMlYw5KZGoV5e85xzXxt
7mazuq253/w+z4Gf+/rtu867INkAB/f5OyckT/BcVPrnGa3W0bClA+ZyEXET
C/iL3dS3xULe4hq/+3beyGdq6H4Xv8nL5rzx1Apagz/No3wqXz3V33FrT+2s
/fWr/haH4lPcimdxLv6NS+PVODa+jXv5UJ6UP/SrP7h2ebW8Wl4tr86FV9aV
5kTzo3nWGtM6kTxb9KvhzjxrT5R+Otk8bTKzhtX2PgvzODvdy3Ft90cdzwbw
m1jM88O1530b8/w5dWLf9kvdS2LP1P4oTNWb2cFGNefJUcRPPKY+PrXyOV+l
T8ymLReaM8i+xVUu4ze6tF9zz32puNX+yldP9Xfc2lM7a3/9qr/FofgUt+JZ
nIt/49J4NY6Nb+NePpQn/yf+LK+WV8ur5dW58MqcOO8lrMysGa03rSXJOHc6
a8zJqWbPkQ0Pf9j7HPub1rbu+zfXWp/Cwx4n3LwjY94V5XyPM7DzjHHPyrGW
hpVzQGI6zxSY5/Ow0d9wlm+Y69k371am1zjiPXEXu5945z+/8vmzj/jpE1tx
F9/hiT7XjIycCFfI4EX7K3+qZ/R33NpTO2t//aq/xaH4FLfiWZyLf+PSeDWO
jW/jXj6UJ+UPmTmfvLxaXi2vllfnwqs5O6pGqoZ7/Y6vZx5nic2VZPS71rzJ
t96/M23zr3Wr+q353XsuXKM+7NyPuVweAje+wWowUWueZ+nIT5w5mme8O2dk
zWwNDxdyMFY75tM8xw7W8/5JNsKKTb7hb4w5c4UX4iu/+fG3/7PLd77jwUfb
tw8u4cTITD502j/y1VP9Hbf21M7aX7/qb3EoPsWteBbn4t+4NF6NY+PbuJ/y
YXhS/rgXyNlm57WWV8ur5dXy6lx45Qwq+emnR1u/9gtf8IKj376k+Zd+a0/2
0OldT2+9665jLPuezrCyUw2Y3ey39rW+nfcOe+fT5BbyBDj4je55nit9cw/K
vJ+LLmPCfJ5zLreBnXwB5vIMv4nRPNfAb2TYJW706pd7uGbez2W9P/eT4s/k
SPgiR2p/5aun+jtu7amdtb9+1d/iUHxOcRs8i3Pxb1war8ax8W3cT/lQngx/
5HSe3+5enuXV8mp5tbw6F17ROfdQ2LfsGtN6VN1VP/32FvlGXj87xx7yzvaw
U36gxmvtyi/zu/M/887imfddIx+Qh8gv5l0b8g32zrN65jl19j7neQXTnndm
3XLPOz4mpvZxXS9Oc9bKNfM8dtf4sINd4jbPnvU9dQDfc+64/ZWvnurvuLWn
dtb+U7+mXRyKT3ErnsW5+DcujVfj2Pg27qd8KE+GP8OxqTMsr5ZXy6vl1Tnw
yjzrWmtJ8+bci6F2qj1rT/Opszf6R788gL3u4Z/ne9Nl/rdf6jfYmHetb+Hn
XhHvPoQDH+YZ73xTZ57zRuS0572PZHz4BGeYwkmuIm+xfpefyGPmPZLarlcf
mPs9ez/L3BND73Bg7p+h17ff5rm07a989VR/x609tbP216/6WxyKT3ErnsW5
+DcujVfj2Piexn34UJ6UP8afusTyanm1vFpenQuvZv1onaieO8+ZMT+rqdJP
j7H8pu0MqmvoNC9bl8LC/R/Ox5rf1YDtd/LRNc7P8ss6Vj4gXzA3G5MM3+Z9
lHDjh3W7/EFbHuN6esiIi2fIiYV8Bwan+dU8z8de8Dw/Vq3ANX4TX/Ggd9ri
YK94zgvPs/XYeNo/8tVT/R239tTO2l+/6m9xKD7FrXgW5+LfuDRejWPj27iX
D+VJ+YP38jXPeVheLa+WV8urc+KVdaLn1ZCfNSab3G/o3g1zvLOp5lE+POLh
73vI8c287W+4qO8688NXNV7zO1/g5EztvGeKj3CDA1umTm2cwZ4+bWvqqVeL
4eRarqF32q4V23lm3bwzZN4DIg+CMQ6IJV04QE5bHV1bTFwHC2t22Ms71Jzb
X/nqqf6OW3tqZ+2vX/X3FIfBp7gVz+Jc/BuXxqtxbHwb9/KhPCl/cPY61751
ebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJq
ebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJq
ebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJq
ebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJq
ebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr5ZXy6vl1fJqebW8Wl4tr/6/8ep/A8sy
wZo=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.94749185701971*^9, 3.947509730897337*^9, 
  3.947613335340671*^9, 3.947666585103239*^9, 3.948071341434903*^9, 
  3.94898555132882*^9, 3.9494374624884*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"ad8a116f-9d01-480f-98d3-8b89f0568732"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Wallpaper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "80", ",", 
       RowBox[{"5", 
        RowBox[{"Pi", "/", "12"}]}], ",", "50"}], "}"}], ",", "1", ",", 
     "lena"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[383]:=",ExpressionUUID->"82fcfc86-ee4c-498f-ade3-d7ae26fa5459"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3Xv47llZ3/fdxFp6zLS1LT3Znda01J6mSWqt/H7Pb6dNLaWJnRprraV2
a5vUWosUMaI2ubaKOCriFhXRII4nREQdCSoiktF4mCDBwSAijjocxEMQJpxR
xPxea33fz3xnLvjryZWruWbt63r2s37fZ33X4b7vz1r3uu+17vXHP+NzPvEv
/ZErV6587iMu//vET//8P/PEJ376F/yFD/fHX/z0z/5Tf/Kz/+hl8kmXn2de
fqTv/tn/5uLrv+5fvPiK2x9x8dM/9Wcvvvpp/8zF37v//sNLfvS/uPiqr/yn
Lt74hjcc/tbdj7n45m/6Vy/+8AMfOPztV/y5i+d8y7958ZQv/aMXr/i5/+7i
W579b1x88Y0rD0r/7M98/MWzvvFfuXjfe997KP2Ot7/9oK5vetYjL971zneO
8pX386985eGn/uZ/Ner/u7/zO4d7fv6/v/iGr/+Ii6/8in/y4q+/8E+Otvzm
m998UPbP/szPHH76p37qoP6/8wu/cPil17zm8PSv/mcvfuwlLzn4PPXL/vHL
d154+NEXv/jwbXdcHe9qg/zqV9+3f9sfv/j93/u9g/Jf+IP/6YX3/e7vv/Gy
l1327xXjt7/5kz850i/9sUdfPPMb/qXR/5f9+PnFX/vmf+3i2X/tXx99/M7v
+HfGp+fy/NhLPm7QUx9e/CP/+cXX3rxlfNBWH9Slj9/7/I++eMH3/gcjv2fK
fMbX/vOjzb/9W791+O7n/rsXX/LF/9ig0U/+xJ8Z76IdmnzN0/+5Qa8fvPPW
kcYLZf7A9//HF/r367/2aZft/y8vXvTX/9TFL7zqf7j40Rd/7MX3PO9RlzT7
xMs+Hka9b3rj/37xi6/+pAu0/403/R8Xr/vl//ni5X/rv72491f+l/Fc/37p
NZ988fOv/IRRlmd4jB6v+cX/caT1W/lkQhuV72+//fJrP+Xitb/0P428yu7v
X/vV//XiV+993PhbXb/yuk8d9bz+vuvj45k80r7lk7/3tPuNb/iM8fd9v/6/
jbRn8r/h9Z9+ydsvvKThEy5l6bNG2WSXrOn3d3z7vz3ohU7oR7a//KkffknH
Ow9f+iVfciB/3/D1X3941T23Hd7z7ncfvu8FLzh8xe23H175t//8oCVeX7ly
4+IP3v//XfzuWz77kufffPjamzcPl/Udruz+veqee84vZfD82+644/yS94df
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
IV9fZ98m7tPvruKBkQVtsf/pzo3fjd+N3/vxK/b65B75k3NAa11O1tmt1sbW
3OiAV/5/5N5YNJk8xs8LM+U3Hn/0qyMO3cNaO9MR5uVie+uLswDGwlYwXmMw
P5Mxcmhu53PvPDSbrL1vcpCtVSwI5XCAD9111bb3ir+vrXB0zi/je378L7xo
rzPS+VTO+Okne1Ff+UHKESb+e/sGcIwf3WfuDBj7hn4Tf4i9Dxcwgh/KdNQR
W/Y6d1gf3qP3+O/5G/hS5Fxji9Of6sKu8fJ1hV/jwnvYFNcvTNBvsINv+Fre
6XwpnSvzvP2F4kyor6/ltO78dXduj5zc7/7sww9Xf8kTPU9uySCd2b1adqOx
wQ6+eA5TsEOnFk8+HNF9Z79K2Mme1GY4Uicc+UZ2Jtyxt9GEfoIT8xZ9hE/Z
jWTWeok+wzf8Is/8h/SBevB5nNFb6y5YJPvWh9qj8+RBp7+ss2DM/OT//I98
S+qTCfhlw5rT4NG3+aGOcwwLj+ZT7W38bvxu/N6PX1hkX+o/rOAbvrgLwmYM
R/+VscO/c1k0Q8uJUTBxCrI9/HQutT3fYj683st9uN1/NQ62WvGS2GTdy1Um
22fsqNP5LnzIJmRLty+gTrjozJj6sNZeO7oWP5B8d7cIr8hcdTzzo40wpN1z
/ku+kPJuZyd63x5Jug1G0Jn+Gj/WxN0bX9T311lk/OQbYaOjn/ruotKJ7BY2
PVub7rTO10/fYI+Js1tsrGI8kgV+LTYmOabn2IwTU+IPt1yZdOz4Sd6/5Zsu
ttI5x/RxX/bxdZyJn6699fYV4Chbc/YZVizeFVOCziafxV2ZfbDrstPIJ17C
ATk0juTf+iA6GpMyjMAOTMFkZzzUpx/54ch/Zc+7Z+S5c2twYL6hy9ns5ia6
SF/hF53pHfXpK/RGd7Ltt74WK7i5C7/8LbY/PvptPqJr/I0HeB5P6BVrNOtH
a7mJFfzF+ptO9EwbcIp+sKpsnoNlfdj43fjd+L0fv3CGX/5X/IGxMS+rzL50
Vhav8eTIWbXsBGvysTMfrtmHfALFssXf7iyar7P13Fli43Rmujyi/M35RdQJ
O/wq7DH1yt9d7tJiCRafsDupxaT3rnI49b0wpa62uj/bfn0+lXBUzCa+nWJQ
FJPJj70YPMVLNgk9QadZq6O/PW/2If1EJ6H7+NhXzpP3/B8N7QPjKVobgzas
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
8Xs/fv8DcAPWdg==
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3Xu4futV1vddtW16Ts/ndtvaNj3ZVG1ry97rF1tqT9Smalvb0jbQak+2
tmoVQb0SRIwYYIsBUREjIkYMAREQMWJQDAghbhARwxZjQERFRERIwsGuz5zr
XvubdSV/Lf+cv+t6f+9c833mM5/DuJ855hjjuceP/cif99N/zo966qmnfsFL
bv/76R/xi3/Kz//5H/FLfsbf5o+f/RE/9yf+hJ/7o28Pf+Ht59NuP46/+qv+
oyev/3X/4JNf/dqXPPkjX/mhTz7xdX/3k7/6Pd9z82W/79998ms+4e988m3v
fvfNH/3q//jJb/wN//iTv/EjP3LzdW//sCef+Zv/6Scf9yt+9JO3f+1/9uQ3
f8Y/9eQ1r37q/Y6/6m0/9cmn//p/9Ml73/Oemx3/te/93hv3+g2f/o89+evf
931H/er7Y+94x81X/uH/4Lj/X/qLf/Hm+T/2Xzz51Nf/Q08+4Vf/HU9+zxf+
hKMtf/47vuNG3V/1trfd/JGv/Mob9//j3/ANN3/ym77p5pM+8e958vu/7Mtu
fD7+V/6tt9d84c3v+9Ivvfmtb3j6uFYblHd/9/us3/pjn/zg+953o/4v/N3/
5hPX+93ff/DLv/y2f28/fvvDf+gPHcdv+f0f8uTTPvUfPvr/5X/g2Se/6Tf+
E08+4zf9k0cfP/u3/fPHZ+eV+f1f9u8d46kPX/p7/50nv/a5lx4fY6sP7qWP
v+tz/5Unb/pd/+pR3jl1fsqv/fuPNv+F7/zOm9/xOf/ik499zd9yjNEf+oqf
clxr7IzJJ3/S33uM1+/+gpcfx+ZCnZ//5h//RP/+zLf+j7ft//effNHv+YlP
vuHr/8snv+9Lf/KT3/nGl92O2U+/7ePNcd9v/7b/+cmf+Maf+cTY/7lv/1+e
vPNP/bdPvuaP/idPXviW//44r39/8pv+6yd/7B0/7ajLOXNsPL7pT/xXx7F+
q59MaKP6/e23P/XNP+vJN//J/+Yoq+79/a1/+n948qdf+PDjb/f6lnf+d8d9
/uy7XnV8nFPGsW/llN912v1t7/7I4+93/Zn/6Th2Tvl3/9mPuJ3bj74dw//n
Vpb+j6NuskvW9Pu3fdY/d4yXcTJ+ZPtXffzfdjuOX3DzKz72Y2/I36e+/vU3
X//8K29+4Pu//+bz3vSmm1/92tfevOPr/vNjLM31U0+9+skP/9AvffKXv+vn
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
a2GM3jp8wu/ut/gy19DTYMd57SUz1tlT737tMV7GZPF52/9lLPnEraOwNR2S
7mitN34wAg/WJOu8dx34oofTWfkElIULfityKC7a2kBu7Q+CfTKqv9pmDrTp
9DWd/gB2SrIyudoz63wePX3Iz7kmP3esrd5P/O19R7nzHeIVN3u2+WbXVNee
feqcLdT9zneMtx5lyLbrrN3ei+ilfmdHs17zkdCFYQh2zKX1xViYUzqy8TLv
MHjupbjwe+H3wu9j8Qtn8Kc/7Kjk0ffp53/FMy/aD775uM/sHXBLVsmgYzKk
zb7NUe0ww2CPzdvsyA+xuWPzRi+wTjhPZ3AtPcexMTTOZJbdA3a9l2sPfOsT
/ZDeRo/zG+zBA9zC92Kd9c2788bnjP176bPTF4z5iak3HHtOXPtiPMQr7mPg
p6M6tibMD6t+ZcwNvPp9e6vpX/Sbu7j7Y67ppude7Jc+u7WKj4O+BCdw8UM/
+DGHDcFYbE8ZHBsj/SXjfEp0PWNlHNnVlKFn+9DfyC47B9k2H9aSO18zHB19
MCd+o5eJD2OfgTt+arIL92wv5mM+jum3s+04P9sO/JIBuqp1YMfWCvX61m/1
WUtgFr6VsVY4v5g8WN+1jqdDO3Zv64i1YvYiPn/ntYM+P/vR9GP3gmm2F7Yx
YwbX/EHOG1u2MM8Ca4NxsS6bb+8Y1g9jaKxmIzWOniXKkT8yc+61OHFJzqxB
ng+eE+Lqdo3y3pP4/eHTmk2WrP0Xfi/8Xvh9PH6rp1V/q15Xfa96YPXD6o3V
J6tnVv8sdj6Y7lr9tnpv9eHqydWfq1dX364eXv28env1+er51R+qVzzUN6aH
VD+p3lJ9pnpO9Z/qRdWXqkdVv6reVX2selr1t+p1D/W96YHVD6s3Vp+snln9
s3pp9dXqsdVvq/dWH66eXP25enX17erh1c+rt1efr55f/b/vBX1f6HtE3y/6
3tH3kb6n9P2l7zV93+l7UN+P+t7U96kLvxd+L/w+Hr+129eeXzt/7f/1C9Rf
UD9C/Qv1O9Qf8YFwNF/G/Br1d9QPUv9I/Sb1p9TPUv9L/TL119SPU/9O/T61
J9fOXPtz7dK1V9eOXft27d61h9dOXvt57eq1t9cOX/t87fa159fOX/t//QL1
F9SPUP9C/Q71R9RPUf9F/Rr1d9QPUv/IQ7/JsFM/S/0v9cvUX1M/Tv079fvU
H1Q/Uf1H9SvV31Q/VP1T7++3etGfVT9X/V/1i9VfVj9a/WsXfi/8Xvh9PH4b
x9X4rsZ9NR6scWKNH2tcWXHUOLTGp30g3bL6pGsfxr+tTOPlGkfX+LrG3TUe
r3F6jd9rXN/DeL/FATa+qHFHjUdqnFLjlxrX1HinxkE1PqpxU42napxV468a
l9V4rcZxNb6rcV8P48E2/40fa1xZ480ah9b4tMatNZ6tcW6Nf2tcXOPlGkfX
+LrG3TUer3F6jd9rXF/j/RoH2PjAxg02nrBxho0/bFxi4xUbx/j+8Y0vxj02
HrJxko2fbFxl4y0v/F74vfD7Nwe/29fT/T7dB9T9Qd031P1E24ernd1/1H1J
D+0t28fU/U3d99T9UN0n1f1T3VfV/Vbdh9X9Wd231f1c3efV/V/dF9b9Jt2H
0v0p3bfS/Szd59L9L90X0/0y3UfT/TXdd9P9ON2n0/073dfT/T7dB9T9Qd03
1P1E3WfU/Ufdl9T9St3H1P1N3ffU/VAP90lt/1T3VXW/VfdhdX9W9211P1f3
eXX/V/eFdb9Y95F1f1n3nXU/Wvepdf9a97V1v1v3wXV/XPfNdT9d99l1/92F
3wu/F34fj9/yPJT/obwQ5Ysoj0T5Jco78ZCPYpgqf0V5Lcp3UR6M8mOUN6N8
GuXZKP9GeTnK1/GQx2P8HuX9KB9IeULKP1Beggd8Bfc8BuU3KO9B+RDKk1D+
hPIqlG+hPAzlZyhvQ/kcyvNQ/ofyQpQvojwS5Zco70T5KMpTUf6K8lo85LvY
GlJ+jPJmlE+jPBvl3ygvR/k6yuNRfo/yfpQPpDwh5Q8pr0j5RspDUn6S8paU
z6Q8J+U/KS9K+VLKo1J+lfKulI/lwu+F3wu/j8dvef/KB1iewPIHllewfIPl
ISw/YXkLy2dYnsPyH5YXsXyJ5VEsv2J5F8vHWJ7G8jeW17F8j+WBLD9keSPL
R1eeuvLXldeufHflwSs/XnnzyqdXnr3y75WXr3x95fErv195/8oHWJ7A8geW
V7B8g+UhLD9heQvLZ1iew/IflhexfInlUSy/YnkXy8dYnsbyN5bXsXyP5YEs
P2R5I8snWZ7J8k+Wl7J8leWxLL9leS/Lh1mezPJnllfz/fk2X+ThLD/nhd8L
vxd+H4/f8sCXH7688eWTL8/88pQtNmy89OWrL499+e3Le18+/PLklz+/vPrl
2y8Pf/n5y9v/mvfj83+R57/8/80L8DBfwPIIlJ+8vOXlMy/PefnPy4tevvTX
hEe9/OrlXS8fe3nay99eXvfyvZcHvvzw5Y0vn3x55ss/X1768tU/5LEfv315
78uHX5788ueXV798++XhLz9/efvL51+e//L/Ny9A8wU0j0DzCzTvQPMRNE9B
8xc0r0HzHTQPQvMjNG9C8yk0z0LzLzQvQ/M1XPi98Hvh9/H4bV6w5gtrHrHm
F2veseYja56y5i9rXrPmO2setOKoedOaT6151pp/rXnZmq+tedxek/xuzfvW
fHDNE9f8cc0r13xVzWPV/FbNe9V8WM2T1fxZzavVfFvNw9X8XM3b1XxezfPV
/F/NC9Z8YR8oj8ryje27+ciap6z5y5rXrPnOmget+dGaN6351B7mWVtsWfOy
NV9b87g1v1vzvjUfXPPENX9c88o131zz0DU/XfPWNZ9d89w1/13z4jVfXvPo
Nb9e8+41H1/z9DV/34XfC78Xfh+P3+aJbv7o5pVuvunmoW5+6uatbj7r5rlu
/uviqPmym0e7+bWbd7v5uJunu/m7m9e7+b6bB7z5wZs3vPnEm2e8+Yub17j5
jpsHufmRmze5+ZSbZ7n5l5uXufmam8e5+Z2b97n5oJsn+mHusId5patLLg/1
8lM/zFvdfNbLc938182L3XzZzaPd/NrNu9183M3T3fzdzevdfN/NA9784M0b
3nzizTPe/OPNS9585c1j/prkN2/e8+ZDb5705k9vXvXmW28e9uZnb9725nO/
8Hvh98Lv4/GrrfRKz2OYgg9yO58vzJhfOi6dlPzAhzbpP+yoE474g9W7Y/c2
Du6xfbg7np45H8Rwp352B+NChtgNtMm96LnaMbsSGxPdGUbYpbafCHa8E29v
8/wJsLF3abiYj50OqezirpU5Y9TfcK+b+Ocdm/5AFyTbt3N26HFkAn5ganoj
nBgvvm62EusBW8oZK//j7/d8WifNlTmivxkLY/CD7/voAzPsImSPHggbMAEn
3/bujzxk1W+OyWZxo/y+fYYR96Dz+U356ZS+4WDf5Ht+AfM2O8pynzlHlmHF
8Xzl0xvdy29kgU7rHnCnvfPXL+6Avqh+vgHyC9uLwSaHxovPZPFjZIasOjaO
2kSuyCL7irWZLLEfkh32SLYt8gZ36vQscV8y5lq/eVbBlY/y5A0G9NP6T0b1
xzz77Lw69d+aqAzMkE3PtDNf4Jcfx4ujdy/98fzxu7/hRpvpzdoMO9biPddc
55nhs3dA7yIXfi/8Xvh9PH71zXVwpn/OuZ5s+IZF/dMuNpbpivDifRhe6KbD
jnarU/1wPuxMt9Te8TK5F0wZBzYD9SyOmoy5l7FQjz6SRdicvYhMipWl59Ed
YemMfz73X8GP3/nW6YjTM+GEXrjydMbtLZkt5swvfXJZnbaUtz5Df5lPly1l
+tDWEmuT+bYOWZuMG8xPHzZuZMC4mQf9nBx5Z4AbdhMyTt7ojbOJkEWYIo/O
scGT+WEFPoYxH9fsbzING8MQmXXs+sWR+YYB3z7mytz5JtOOFxdNDv3N1kcP
VMaxdqnTvGnv9ujOdkL2yRXMkXfX6j9dUb+2n4hs+51MuB9ZXm5Tx+RAGe8g
xs09rEXkbPu4zYN+ssOYt8V4KE9vJatwuD1uZNGxa82n/imvDfqtvDWdHq2s
8/qljDa5l2eY+tkhPX+8WykHN55f1giyb961l8x4jxsXhucHLHieqlOb4ci9
zcFwasyUJVsXfi/8Xvh9PH71xf1hTz2+YUybybj3UM9NOGUXH47gZTjim5hd
BRbmL5j95CGm5o/QJ/Inbg2O2SFmV1mdsAx32kqH9Y5MV6P/kf3lKjtjFM79
VvRLn9Mn8Pzdb59+xIcVO+qgN7KrnHngDp6JoxwMKbN3dGVnn9C/6VDm3bzo
lz6YL2O42Lnt+YQ3c+pd3dgOU+o0H8YYbuafIFeLC3OtbxgjG/RAmBqO/FY9
srYSx3Ay7Ezu1UkmJud+N1e+/U2vnU99uZ7VY36MgTbo93Rcx7O3LPfZYqTd
T/+GF/O68/BHPthL5p8iD9Yr40bGYMLYTg9UfvJ/vg/91EOejbv+WKOU0V9y
6Lxj5x0bA3jZ88Lzicyp37F77blmHdRH18KdvmqntiljLSTDcAE33iH0cXVa
t8QEkN/tR9Af+rS2aKc1AY78PVyQE21TXjvNh9+1wTEcu/eF3wu/F34fj19j
s/hU2PT7fO7wBBfGBl4m/8MF/Hq2zqfQfUbzFzien306FVy4l3Yt1/b86cYW
xo2nPmkX2du+R/5OuuK51/Vdh34oBpk9hN4IF+wnJ/fEqw+9EG5OH/nTh491
fLkwsrgy9W0/EVxt/6z7smuxTdH3+LWNGTkjA/rJ3qXNxoEtYDFg5JwOpQzs
GAfjThaVgyvY4DtgG6H7TYckq/4eLva3eZwNZfYQPmrX0xn93jY6T+aMsToW
I22czat59vviqLcHaXk53ROO2I+0xTzPFjOuQfNKFsgVDHm/UUY/p3PuvHNk
2Jg4NgbGxfXmm+w65l+AH7JtrPgU3Af+4Ef71aecvnrfMA9w4Xs8FX4no9pg
LtSvnfYqaYM+qG8Y1DbvMMbI/c2XY3h0rL/jtdgeOriz9gyb22dHDlaGDE/v
JdPapn4YM2/6rg3GVXvgxPy4l/rNkXZ5ninvPPxc+L3we+H38fhVZnsX9Wsc
R4s9ozfSCxYDt31GcOTYGCxnWTko5k/Xr8VdO08vdC+62Hzo5sy92GrYWOCX
nd7f7EnsKDBkT4hYLLaSu7xtBxbGsyRuaHFFMHbm0Xr5XV7PN97nDV8cNty5
ZjaX8ecGS88YV2uXfpKr2VLoPOZUP82/NYHNh/6/+TJu+m6c+QzMy+kTPv0B
ZMGxOuFCvb7hwfd8A47Jtu/Fis1fUHy5jkzBwjgdrM/GfflZhh3tHK62t8hv
MOxDfums6ja3i4Mmr+TNnMGIcuaY7KuTnOnr+JDIunLjA3RMJq2n7m0cnYNl
dZPv8XMYr9lv4AgujC2MTBf1rqXf5Mb9dqy/i0tZ7m/z5d7uS38VU+k8u5Z5
JP/mi/wZs+n/xpEMWB/dd1gzXjDo2ed4tiBj7zxZHy7It/Pz3xtzfZpN1b3I
hra5lzrN6dYBc6Lf6nIvuB/GL/xe+L3w+zj8Oj990jirz7uka8mGd8bZQ8j/
9MMdu+84eIcjbZsPXf3dS0umZkvRXlgxPrNFGLszb9VXHv4D+p+9qHRI9pPT
/nFy7cJGcTT+xnEynvlWXn3PwXvHOXhcd7eH9sDPuHSHn/EPwOv0PHJET5vP
WB/Jkvkg35NVcmTMrRfmVd/1mcwqQ1b4BuCD3C02bDHL0xdnM3EdOd/HdYsN
G7Zgh2wMM4uXNvbDIHl3jeund46DwvnpsOoY57s5NWdk12/m2/qn7PbBKucc
GZ2fHGbor86Rue2XJa+Op++Rc3IwjqblcHHf6Z/64xwcbT/uuCxgdzYcdpvx
OLmHsddm2FC/fsEdfGqz+sioMYJFx+rZ2qiMvpz+vVce5eFEGXWYX20xv7Ox
OE+Ozal5JgfGXn/Vv2clXO1ZCY87di9t1h54M0fDvmt9K2NdW8zJhd8Lvxd+
H49f7/HuqV/Gd/tc5uOm1xVH5sMxfVL9OzYOw5c2z5+uT+RoPnTYpaM6ry3+
NpbbV0uXpTvyIZy5VF5xz6kLF8uHQv594Gj2E+XPvbavvechPH3nL7nPe73v
E0evuvMjHPt1D36CM3/Kdx6xYuJxxZT5vO+9v+Sw/bMvwMHsH+SUXWOxxeNK
N57+1mdyM55bYzNskgXf8w+oY5iFqcWDbd+s4/kOtido+pN6lbP+KQPz8zk4
Hn6mj6p/3EzaOduIeYEB7VZ+eb/G1UQXHScuGXIMK2TMPFbfI2cwtjXH78qT
62FqeLG27zf3ganmOLP+bJ2AmXEojg9/dRl/39qhf8rCIQySc/qqvmiX+xpL
ZZxXv7Ln3rsPu8fUsEYfhlPz6ZlhvJW3bqpfeTYXc6OM8VFmOrR7uafz7jVb
6N4N3UsZ11qLxk29NRkemzPXu8mF3wu/F34fj99hbe+Gs6POBrI4MWPGbjCM
wIu2FTuzt3jmGlfljd1irowTHXWc8+7pXtYOOiQ/vj2PZ06YDz30yO0ngp3T
T3DEit3n3ISV6YKOYQo22EvGNzF/wqk3fk/2IL1qHEsHV8HJK//WZ4zZ8mOK
r96HPMIDPwPswJJz8GQ+zNvsD+TZ74vpUn62Dzia/ja90fXWotlGxo0LL36f
3X/7g/y+mDJzpT730AaYYROZ3re6xwUBC9pA/mBQufnF2Xi0YT72xZ2ROzLj
45rZOsaTZLxmbzHP2qQ+121/Epk3LspP9/b7sONvGHBv5dWjLa53nXs57/rt
5XWsf8ro1zAId8qrX1vHieXv+kHm+4AZ69bivY3jcsFoz7CzfLJk1nn4I/fK
73lnvtUNg/NlzI5k/XCteVOezcccKwNLxna2uMUlep7poz55zhmT2e4u/F74
vfD7ePxqFxzRLbUDLuh45t5zEh6Lo8WnwYv53rHy6qZ/zjdBL9MW9fHdG//Z
c6wHbDBwKl75jCF77p5v74wF+8k3Z77ndx22EZg4/Qcvucsp9urDn7446e3D
PfXOl93l/n7+OL99uLOlzA9xxz3/7O6p3GRPX3/kh3/ZPY7gwv7Y9/zAL773
C9Ax5wOYX3x2Db+P14E9ZnuChov6FNxv9o7t3dm51e1v9aze6bWLQVP/4sYW
V7ZcleQDtsyTeXjvez7qKEOupiOduW5edcjneOPJ53jiybK6/E5uYMbv/qaT
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
VmuEa+e/gEl1Wsu8A+7ZN7//9lZc+L3we+H38fidjwAutseQ/302FvtilVmc
m/suZ/Dsq2Rg8TzG1nPac1g5bZldfNx0s0krM7477VQH3Wq+1e13de3ed8uR
Xt484zA9QdnZNcZDu/fn2fan/y3ma3MwHc7xxnjv95v3zelyQ09OyMN4ksiM
upyjhyrjPDypzzcZ9Bu/PcyOexdezQd+fHF4dF2yLwZAH+h49EN98RvefsfW
AlhyvXUP9rRveqN70Sflu9N+Oqh7WIvlLoAR98WBDJ/WG2uUePTy9uPfX2w8
mfKuY16sNTBEt3Teh43NPJlP80sft55oiw8MGitj47fF9KnH79YnH+er29f2
xa8F+z6Lob/jVn52+7Lv8rgccRfW1dnZlvPuzFF35i5X3jp/7tt+1XE8m97D
tV0Za5trx3ti7BbrL25k8f/n3u4zZpL9bvkjjJ13L2uZ5xRbJZ0e/qyH5gZm
xuE5zHp+Xfi98Hvh9/H4fahDTreszvlQF52OWt21Om113erA1Y2rM1eX7jO6
z+4+0/usrw5Q3aA6Q3WJ6hjVPaqTVFepDlPdpjpPdaHqSNWdqlNV16oOVt2s
Olt1uep41f2qE1ZXrA5Z3bI6Z3XR6qjVXavTVtetDlzduDpzdenq2NW9q5NX
V68OX92+On/fBfqO0HeHvlM8fNfYO0jfTfrO0neZ4qjvPn0n6rtS36H6btV3
rr6L9R2t7259p+u73oXfC78Xfh+PX7I/rtH6Gh76IOabqM+ivoz6OOr7qE+k
vpL6UOpbqc22ttzaeGv7fWgTnq24NuTalmtzri26NurarmvTrq27NvDaxmsz
ry29NvYPZoevrb42/Nr2a/OvL6A+gvoO6lOor6E+iPom6rOoL6M+jvo+6hOp
r6Q+lPpW6nOpL6Y+mvpu6tOpPlkfUH1D9RnVl1QfU3FUn1R9VR/Mn1WfV31h
9ZHVd1afWn1t9cHVN1efXX159fHV93fh98Lvhd/H47cxZg9jzxqTtli1xrA1
tq0xb42Fa4xcY+caU9dYu8bwNLanMT+NBWqMUGOHGlPUWKPGIDU2qTFLjWVq
jFNjnxoT1Vip2sQbW9WYq8ZiNUarsVuN6XoY67UYsMaGNWassWSNMWvsWWPS
GqvWGLbGtjXmrbFwjZFr7Fxj6hpr1xi8xuY1Zq+xfI3xa+xf7SqNFWwMYWML
G3PYWMTGKBYjHyim0d+NgWxsZGMmG0vZGMvGXjYms7GajeFsbGdjPhsLeuH3
wu+F38fjt3uOuhepe5S6d6l7mrrXqXugujeqe6a6l6p7rLr3qns6uteje0C6
N6R7RrqXpHtMuveke1K6V6V7WLq3pXteuheme2S6d6Z7ah7utdkenO7N6Z6d
7uXpHp/u/emeoO4V6h6i7i3qnqPuReoepe5d6p6m7nXqHqjujeqeqe6l6h6r
7r3qnqzu1eoeru7t6p6v7gXrHrHuHeuesu41e7gHbXbL7lnrXrbucevet+6J
61657qHr3rruuetevO7R69697unrXr/uAezewAu/F34v/D4ev+WgKDdFOSvK
ZVGOi3JflBOjXBnl0Ci3Rjk3ysXRPf7d+19OgHIFlEOg3ALlHCgXQTkKyl1Q
ToNyHTzkQBg3QjkTyqVQjoVyL5ST4YPxNpTboZwP5YIoR0S5I8opUa6JclCU
m6KcFeWyKMdFuS/KiVGujHJolFujnBvl4ihHx8P82/PLlOujHCDlBilnSLlE
yjFS7pFykpSrpBwm5TYp50m5UMqRUu6UcqqUa6UcLOVmKWdLuVzK8VLul3LC
lCvmwu+F3wu/j8dvOQnLVVgOw3IblvOwXIjlSCx3YjkVy7VYDsZyM5bzrVxw
5Ygrd1w55V4I11w56MpNV866ctmV467cd+XEK1deOfTKrVfOvXLxlaPvIXff
OP3K9VcOwHIDljOwXILlGCz3YDkJy1VYDsNyG5bzsFyI5Ugsd2I5Fcu1WA7G
cjOWs7FcjuV4LPdjOSFrSymHZLklyzlZLsri6CF35eLQynVZDsxyY5Yzs1ya
5dgs92Y5OcvVWQ7PcnuW87NcoA+5sscdeuH3wu+F38fjtxz15a4vp732juu+
HPjlxi9nfrn0y7Ff7v1y8pervxzgD7nBh+tyiZdjvNzjD3MrV1d8yx2HebnN
Z4fRv3KhlyO93OnFYLnWy8FebvZytpfLvRzv5X4vJ/xbwhU/DLpnueXLOV8u
+nLUl7u+nPblui8H/vTCxZ7PRlIu/XLsl3u/nPzl6i+Hf7n9y/nfXADNEdDc
Ac0p0FwDzUHQ3ATNWfAwl8FyHDT3QXMiPMyVsBwKza3QnAvNxdAcDc3d0JwO
zfXwMAfEjvscfJhL4sLvhd8Lv4/Dr74tZ1lzmTXHWXOfNSeafi82uznUmltN
mfnum4utOdqau605oZorqjmkmluqsVjutVxU+vWWuxxVzV1lnuY7aK6rr08O
rObGas6s5tJqjq3m3mpOrubqag6v2nCa86u5wJojTF+WO2x2GNhprrHmIGu8
nPLz8zeXWXOcNffZdEQYbK60xlqrezaV5lxrLrbmaGvutuZ0a6635oBrbrjm
jGsuueaYa+655qRrrrrmsHuY224575oLrznymjuvOfWaa685+Jqb72HOvuXy
q++vuf++PjkBmyuwOQSbW/DC74XfC7+Px6++LYd1c1s357X5WC7s5sh+Ibmz
m1O7ubZduxzcxno+hebsbi7v5ghu7mD1zN/RXMPNQdzcxM1ZrI/LZfxCchw3
93FzIjdXcnMoN7dycy43F3NzNDd3c3M6N9dzc0A3N3RzRr+QXNLNMT2/hOte
SE7qh7mql8Ozua1nzzBmD3NhL0d2c2e7zz7DpPPzKQxPy83dnN3KLZd3c3w3
93dzgjdXeHOIN7d4c443F3lzlDd3eXOaN9d5c6A3N3pzpjeXenOsN/d6c7I3
V3tzuDe3e3O+Nxd8c8Q3d3yfg801f+H3wu+F38fjl0yJy/ZshC/2leml5Nrf
xoYswKcxI4/TA43DcqXRS+mf0y2Nj/PkhK4Mm+pQ57A2jJApuHDs/PKKOg+P
2uZe/BfG273Uqf3qtO4Yf3IKU4sZoGc6P+yTc7I/nz6Z3N5hx+bZfeEOJsno
9D0yPFsH3BgHY6lOMjLeSDhSbrozO5JjWKEPa4/7jP98e7LIt99gePYW183+
4B5sIWTJWM4m4rrpfMZvsjt8bB/VsKK/MGYOjOtsHrDzwh2f/vzfMLE4sWFs
/gif+RS6/3h7l12r3fpmnMiGcZstTjtnuyMj1trlft3ayLc//mOyQAasjcON
GGu42V5asdDsJvRF+4PghE1kXC+n/+Bdh87IB6HsctkVR/CpTjYUOiPbCX++
Z5u9X+LVyQu5815mrsi13613ngPsn7NhwpS51Xe/Oa9/3tGGC89B5/XPc9Dx
7KXGzTPttu33vsXlSLrwe+H3wu/j8QuXfPfGcfqkcWHnOHnmf9ohy9Mtnd++
XTI/f/psKWTPuLkHedB3dZJDY0b+nZ9f3vwaI9hZmekb7gXn5nt+EMfqd6ye
Yc212qMN82Usx+LmS9u2Dizmbdz+i7s292R88WzmVL2LAYAjsj4cOZ5OCNcw
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
XJNPDkDvJ/72vqPc+Q7xipthw/ddvvdnhx11zpZyclO85Fhnx9PrOmu39yJ6
qd/ZSqzXfCR0Yfgg/+bS+mIslhvCeJl3a8MZi/1hR38X22mtJW979g1TO374
HOy7obV9HGuzl97Zdw6boGeH/pN1a6LnHYzBo/XyfD/8cTcnB8crby78Xvi9
8Pt4/LLrjrdbfe6jHjKrDWSf/sgfqhx9Dl7JO5zBm/gk/dXP0wb8ipszRvYV
R9kzd/Arb/YurA7zD090EL/rP90R9smCdppzuiGbiHddfWULdt47O5vK9C3y
Rm+cnYLPmSyycSxvFn2BzDpP7h1PF3RMp4MjcrVYNGPlvPFe3mz3ggdlrXHL
azYMLofLbCzzs8PHfBPTS9lS1Os8fzQZhW/xYcuFbT6Nx91YHTlLyJZzxpC8
wAY7CuzQ733ojeTH2Fl72M7ppOTB3BtbGN1eG2V+6Ac/5j4/Jr2RbG1PrHsv
5uHcA/vSO73tDQd2zjzPrzr0SHIOW8rAzvhyzfP85nvXuMPgfYy0Z8L86Oca
+4bjHtMr4cj5M/bsrH85N1272HrPAHLn+eG9Qn/ZlPSFjHuv8SxyDsbMg7WZ
fY+ebwy298GxMSMv9OjlQtrzrs8+MjD/jTLDWo/Jrmee54Vng7Hw7dnkmaM9
s3ve2ciOtUFfz/iCVxz7jC/8Xvi98Pt4/Pb52Odmn6d9zvb52+dyn9d9jvf5
3ud+9YHqCdUfqlc81Demh1Q/qd5SfaZ6TvWf6kXVl6pHVb+q3lV9rHpa9bfq
dQ/1vemB1Q+rN1afrJ5Z/bN6afXV6rHVb6v3Vh+unlz9uXp19e3q4dXPq7dX
n6+eX/2/7wV9X+h7RN8v+t7R95G+p/T9pe81fd/pe1Dfj/re1Pepvmf1/avv
ZX1f63tc3+/63tf3wb4n9v2xz9YP9u554ffC74Xfx+O39tLaUWtfrd219tja
aWu/rV239t7agWsfrt249uTamWt/rl269urasWvfrt279vDayWs/r1299vba
4Wufr92+9vza+Wv/r1+g/oL6EepfqN+h/oj6Keq/qF+j/o76Qeofeeg3GXbq
Z6n/pX6Z+mvqx6l/p36f+oPqJ6r/qH6l+pvqh6p/6v39Vi/6s+rnqv+rfrH6
y+pHq3+tfrf64+qnq/+ufr36++oHrH+wfsP6Ez/Qc3C+yPk1Lvxe+L3w+3j8
PoyfWVxN420ah9P4nMbtNJ6ncT6N/2lc0MN4ocURNb6ocUeNR2qcUuOXGtfU
eKfGQTU+qnFTjadqnFXjrxqX1XitxnE1vqtxXw/jwRYn1vixxpU13qxxaI1P
a9xa49ka59b4t8bFNV6ucXSNr2vcXePxGqfX+L3G9TXer3GAjQ9s3GDjCRtn
2PjDxiU2XrFxjO8f3/hi3GPjIRsn2fjJxlU23rJxmI3PbNxm4zkb59n4z8aF
9jnYONLGl36gd8O+D7r2wu+F3wu/j8dv91N0n0X3X3RfRvdrdB9H93d030f3
g3SfSPePdF9J95t0H0r3p3TfSvezdJ9L9790X0z3y3QfTffXdN9N9+N0n073
73RfT/f7dB9Q9wd131D3E3WfUfcfdV9S9yt1H1P3N3XfU/dDPdwntf1T3VfV
/Vbdh9X9Wd231f1c3efV/V/dF9b9Yt1H1v1l3XfW/Wjdp9b9a93X1v1u3QfX
/XHdN9f9dN1n1/133ZfX/Xrdx9f9fd331/2A3SfY/YPdV/jQXrp9iN2f2H1P
F34v/F74fTx+u7++++67H7/79Lt/v/v6u9//IQ/A+AHKG1A+gfIMlH+gvAQP
+ArueQzKb1Deg/IhlCeh/AnlVSjfQnkYys9Q3obyOZTnofwP5YUoX0R5JMov
Ud6J8lGUp6L8FeW1eMh3sTWk/BjlzSifRnk2yr9RXo7ydZTHo/we5f0oH0h5
QsofUl6R8o2Uh6T8JOUtKZ9JeU7Kf1JelPKllEel/CrlXSkfS3layt9SXpfy
vZQHpvww5Y15yCczDJZ/prw05aspD8aF3wu/F34fj9/yrZWHrfxs5W0rn1t5
3sr/Vl648sWVR678cuWdKx9deerKX1deu/LdlQev/HjlzSufXnn2yr9XXr7y
9ZXHr/x+5f0rH2B5AssfWF7B8g2Wh7D8hOUtLJ9heQ7Lf1hexPIllkex/Irl
XSwfY3kay99YXsfyPZYHsvyQ5Y0sn2R5Jss/WV7K8lWWx7L8luW9LB9meTLL
n1lezffn23yRh7P8nOXtLJ9neT7L/1le0PKFlke0/KLlHS0faXlKy19aXsQL
vxd+L/w+Hr/l3y4vd/m6y+Ndfu/yfr/m/fjAX+QJL394ecUf8o2Ph7z85OUt
L595ec7Lf15e9PKlvyY86uVXL+96+djL017+9vK6l++9PPDlhy9vfPnkyzNf
/vny0pev/iGP/fjty3tfPvzy5Jc/v7z65dsvD3/5+cvbXz7/8vyX/795AZov
oHkEml+geQeaj6B5Cpq/oHkNmu+geRCaH6F5E5pPoXkWmn+heRmar6F5HJrf
oXkfmg+ieSKaP6J5JZpvonkomp+ieSuaz6I8+Rd+L/xe+H08fpuPqXmamr+p
eZ2a76l5oF6T/FDNG9V8Us0z1fxTzUvVfFXNY9X8Vs171XxYzZPV/FnNq9V8
W83D1fxczdvVfF7N89X8X80L1nxhHyiPyvKN7bv5yJqnrPnLmtes+c6aB635
0Zo3rfnUHuZZW2xZ87I1X1vzuDW/W/O+NR9c88Q1f1zzyjXfXPPQNT9d89Y1
n13z3DX/XfPiNV9e8+g1v17z7jUfX/P0NX9f8/o131/zADY/YPMGNp9g8ww2
/2DzEjZfYfMY9jnYvGkXfi/8Xvh9PH6bn7d5e5vPt3l+m/+3eYGbL7h5hJtf
uHmHm4/4K5KnuPmLm9e4+Y6bB7n5kZs3ufmUm2e5+Zebl7n5mpvHufmdm/e5
+aCbJ/ph7rCHeaWrSy4P9fJTP8xb3XzWy3Pd/NfNi9182c2j3fzazbvdfNzN
09383c3r3XzfzQPe/ODNG9584s0z3vzjzUvefOV/NnnMX5P85s173nzozZPe
/OnNq958683D3vzszdvefO7N8978780L33zxzSPf/PLNO9989M1T3/z1fQ42
333zaF/4vfB74ffx+CVD3hth1lh7TnpW773UO6pnL4x4r91+ItjxTry9kfMn
wMbepeFiPnY6pLKLuz65A770wNtT+ecdm/5AFyTbt3N26HFkAn5ganqjsaAD
8HWzlVgP2FLOWNsff7/n0zibK3NEf7PWwOgPvu+jD8ywi5A9eiBswAScfNu7
P/KQVb85JpvFjfL79hlG3IPO5zflp1P6hoN9k+/5Bcjy7CjLfeYcWYYVx/OV
T290L79ZX+m07gF32jt//eIO6Ivq5xsgv7C9GGz4M158Josfs4aSH8fGUZtg
zjrOtmBttoazP5Ad9gy2LTiBO3WSRfclY671G1knrz7KkzeY0E/rv2eD/phn
n51Xp/6TY2Xgg2zCxJlv7MuP48XRu5f+eP743d/wqM30Zm2GS2vxcOE6zwyf
6ZDeRbSdXgkPxsS1njuL2VC/sTZO5JFsuY81BaaMGbzql3gO7dixNphb99g+
+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
Y94aC9cYucbONaausXaNwbvwe+H3wu/j8du9Ht0D0r0h3TPSvSTdY9K9J92T
0r0q3cPSvS3d89K9MN0j070z3VPzcK/N9uB0b0737HQvT/f4dO9P9wR1r1D3
EHVvUfccdS9S9yh171L3NHWvU/dAdW9U90x1L1X3WHXvVfdkda9W93B1b1f3
fHUvWPeIde9Y95R1r9nDPWize3TPWveydY9b9751T1z3ynUPXffWdc9d9+J1
j1737nVPX/f6dQ9g9xZ1z1H3InWPUvcudU9T9zp1D1T3RnXPVPdSdY9V9151
T9aF3wu/F34fj9/u/S8nQLkCyiFQboFyDpSLoBwF5S4op0G5Dh5yIIwboZwJ
5VIox0K5F8rJ8MF4G8rtUM6HckGUI6LcEeWUKNdEOSjKTVHOinJZlOOi3Bfl
xChXRjk0yq1Rzo1ycZSj42H+7fllyvVRDpByg5QzpFwi5Rgp90g5ScpVUg6T
cpuU86RcKOVIKXdKOVXKtVIOlnKzlLOlXC7leCn3SzlhyjVRDopyU5SzolwW
5bgo90U5McqVUQ6NcmuUc6NcHOXouPB74ffC7+PxWy64csSVO66cci+Ea64c
dOWmK2dduezKcVfuu3LilSuvHHrl1ivnXrn4ytH3kLtvnH7l+isHYLkByxlY
LsFyDJZ7sJyE5Sosh2G5Dct5WC7EciSWO7GciuVaLAdjuRnL2Vgux3I8lvux
nJC1pZRDstyS5ZwsF2Vx9JC7crGI5bosB2a5McuZWS7NcmyWe7OcnOXqLIdn
uT3L+Vku0Idc2eMeLCdhuQrLYVhuw3IelguxHInlTiynYrkWy8FYbsZyNl74
vfB74ffx+H3IDb7z5RIvx3i5xx/mVq6u+JY7DvNym88Oo13lQi9HernTi8Fy
rZeDvdzs5Wwvl3s53r8+3O/lhH9LuOKHQfcst3w558tFX476cteX075c9+XA
n164eOfZSMqlX479cu+Xk79c/eXwL7d/Of+bC6A5Apo7oDkFmmugOQiam6A5
Cx7mMliOg+Y+aE6Eh7kSlkOhuRWac6G5GJqjobkbmtOhuR4e5oDYcXH0MJfE
OOrLXV9Oe+M6rvty4Jcbv5z55dIvx36598vJX67+cvhf+L3we+H38fhtrqjm
kGpuqcZimYflolLPW+5yVDV3lXma76C5rr4+ObCaG6s5s5pLqzm2mnurObma
q6s5vGrDac6v5gJrjjB9We6w2WFgp7nGmoOs8XLKz8/fXGbNcdbcZ9MRYbC5
0hprre7ZVJpzrbnYmqOtudua06253poDrrnhmjOuueSaY66555qTrrnqmsPu
YW675bxrLrzmyGvuvObUa6695uBrbr6HOfuWy6++g+b+M2fTIZsrsDkEm5vM
XC1nWXOZNcdZc581J5r5XGx2c6g1t5oy8903F1tztDV3W3O6Xfi98Hvh9/H4
be5g9c9e2lzDzUHc3MTNWazNy2X8QnIcN/dxcyI3V3JzKDe3cnMuNxdzczQ3
d3NzOjfXc3NANzd0c0a/kFzSzTE9v4TrXkhO6oe5qpfDs7mtZ88wZg9zYS9H
dnNnu88+w6Tz8ykMT8vN3Zzdyi2Xd3N8N/d3c4I3V3hziDe3eHOONxd5c5Q3
d3lzmjfXeXOgNzd6c6Y3l3pzrDf3enOyN1d7c7g3t3tzvjcXfHPEN3d8cdRc
1eZtOayb27o5r2FnubCbI/uF5M5uTu3m2nbtcnAb9/kymrO7ubyb4/vC74Xf
C7+Px6/zZA0eXWvM+S+Mt2eo5zdMuK92axs5Ve98jvRM54d9ck7259PXz+0d
dmye3RfuYNL4TN/Tl9k64AYuxwlARsY7ZxyVm+7MjuQYVujD2uM+4z/fnizy
7TcYnr3FdbM/uAdbCFkyTrOJuG46n/Vmsjt8bB/VsKK/MAanxnU2D9h54Y5P
f/5vmFic2DA2f4TPfArdf7y9y67Vbn0zTnQb4zZbnHbu3d9aQjaW+3VrI9/+
+I/JAhkgW8ONGGu42V5asdDsJvRF+4PghE1kfCen/+Bdh87IB6HsctkVR/Cp
TjYUOiPbCX8+bNj7JV6dvJA7ep25Ytvwu/UOnthPZgMh/+ZW3/3mvP55RzOX
w5Hz+gdHjmdvMW4wcdv2e9/EciSJy6bbmkvnp5fCtb/JCPl1D3NNbvceZzyX
Kw2mzNHeDbXbeXMDa2unOves3DPO3HiuOXZ+eUUv/F74vfD7OPySL7YW5ZSZ
HdWxeXFM3oY1cg6Drp8vQ/vI0+YLLrYOLOZt3OCLuzb3ZHzxbOZUvYsBgCOy
Phw5nk6oXzBuLBxr29pQf8f2INcPsjwr6lOGDqVP7Apk1riSK/Kt7Oz9y6fp
HsZ4HByOhydjRraVo8/S0/TZHG5P7HwD40uanggX003de9/bdzs7iLaJEVOf
/hkrYwG3xsN8qW+xFn63LrIzGPdxemmTsVGGX2Ft/aq3ve2I4cKNcYehD2FL
WTw1bI0jwt/0vvkVTv/AK4+YbP702U+2D5eeyed++tWfO3TIu1jqZ90XlvB4
mGf6mjXcOGszmTem4v3IufmwJuiX+bSOjuPaOJDn6Y2OzetwZO63z8icnXyZ
7ztwYQ2GO/MKv+p3L7jkuzdG0yfNJ+yceSJ+2oGPvRs6bx0z1+R68TCzhcII
uXYP7bR2qZMsknF9d35xNdZncu7ZtzJ7X7jwe+H3wu/j8GseHStnnuiAzpM9
Mutdkmzr2zi6HdNbyM6wSdZcC1+O4dGxvjivrdqsL86TNbhZzuLtmdJ+uHEv
Oo8x0TZ6q3bO70kGlB83HRw6z26j3vnDx0O+mHJ9XPz6dLjxuxojsjke9sVI
W4OWh2u5rJVXRv/mF3d/WFic9XwHiw0rR9XsMsuTTYctr5RrYGf7hfgA5p/X
Dv2EHfLDbuDa6f/67rxx077ZIvTTeBtba0fj+Y2FuYWRky/ppYct5fQjnLlc
6X7LXwAX47SEn+ELtlwHR+c+o3PvLdw5dzuPN9uze8aOvfS4H33QflrcWOaT
TMGF+SBrZJg8jMNTGfI8vgj9Iv/mZrjQH3LovPLkBy7IGLyoE76MFb3RmHqO
8eMbW9ex6RhPYwhXi0/zN5mAcWuXY+dgx32V0Ye107zAr/sqB5u+tVUblCf3
9H/vWPMtDmvKbP8UmXFPfb/we+H3wu/j8UsWPFv9rQ3qp3/MHjv/Arxox+Tf
NeZle//37Na32X/0QV9cCxvTe7XDmrDy2mwczfWOyYYyswWNc8O86wvdQjvU
Tx7G6WGM6FLs5eTbPWePN2aTdzhc7Pbi4vTf/R3PT7+9v+Ndd2wM1N2YLuuX
fk8XnO+9HBHbCzQczbcwfozxS8HU8OM3+h5suUa/m3PZGjWdf5jSh8VcGXff
9LXtpxG/bJ/RbCnmyXpFXtlQ7ngHn1l8NCzNh+5csUM/vIsRO/RGuuWZs+AV
sHH4Jlb+tLu87MDanY/i4EDmT/CeYf4X6+XdBRasffr3be9+933OvumQZJCs
jztie2m3t6iYgiOyCi/DkXqGI7Ya4+a62/4cGIRluqh5dy9/q9M4wbO5gC1j
TVZ2Xtvc1z20ebmVvM/AqWvgwFycHM0vO9qun6fd8/nDrsSXRm9dTkPPNfNO
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
/Y4b1zisn2g1YuMhhLHy+rK7+ZnTQdtx9u18OPI9w9pyDX7Pd863XD59XPF+
w+fHc+u7Yc21sGn2LXZlLI3X4uSOs137avtz4yrHY17ZENtw/3wk+3Lfbc5g
hl8qZm2s+NXWo+lksQHro5jS6umd73qdZ2z54bDkd+HStfH/Vs/w6HG94v+L
k8DO9iP8wsM5+J8rFzCtMeuv184Xb2EHMOH1zoEr66zXJ7b26YNnST2I74c5
tmFPc/IZn6811jpgbsZxZP4dd7/jpmb/63GbP2k9Go52jnk3nqtVY5PLuRtD
69de+6x12e/Cy9YtNm09tN+ypokdun5rzGNM349e6F8/ak4829yzZ8ojtvih
V7M1aXrd67c68aYrrnXZjfvl83u+eTaOv9H+7HA2/nS9Z911jdYa9uVc6zNM
skXPwRu/N35v/L6OX3t9OQQx79WJwY+9rvuDQdiBGz6MsTA2/CE+4vgAzS+b
ZKtskt1O82uc6e5rWjDDER9yNWXiKsOU8x13vhgL2/Z9zp9+muO+U2za+auh
9t7iHr4LbsZPsd5cx/lvvtf5q11yz4eb9m8Pfr2/X/F5NgIrxlccxDiIFRgf
/gibWSyFfcvLsgXzZk7dl7gTTMlLLFbAb2UncARTYtzmXW2Ya54WuXtmQ/b6
8kaPfNOH38h2ly9g5+zd/09NxeEWPLVlp1+IrbAHOIGpaW36ezTFTs5oOBoH
L3yun+jhd16/9eAZvK7LGm4ddH/WWesJGxazsK6JpfCZlx9fvfSwM14v87E+
7l/D1HqOjKfzffZHODKv/H3PH2Po+bCaSj60mKb3rZX+woTXsGPcjK9njTFz
78Z1dgFn4+k3TsbDHtB5i1vyU33v6kg3X2cOfre+5o/aF89AtudcWNvehX1t
/fL7N35v/N74fR2//ukJgRv2s9ipuhrjwC9Yr+f4vd0jf0t8ez4c7IyPnp24
t/HSe5+/ufiJ48UOf8/x6XvyPWFk+PB7/Kn1zAwr8yfHdT/Nz+XZ93urL/MZ
fhrsOO56rRFHy/tfVx2BfbQxWX3e+r/4FXLi5gG25kPyHdmK8YOR8T2wE74S
fB2+9T9cOQHnwoW4t3lXF21t4IfqD4J9tuJ+XZs5cE0n13TyAeIcsDPe3Nn8
see3Cy9nTT4cgPYn/s9fct7ZQ3x+Hzb8fehF/zzs+M7FUg43xW+udXY8vT5n
7eZX8Uu9L1ZivZYj4QuzcTZsLq0vxmLc8sbLvMPCqcX+43W/qw2z1rK3YWeY
2utnHNW3tLaPo2nxlkd854oJena4f7ZuTYQXzyr1lHBx/Mvfvh8Oji/vG2fr
E9vwPsw4X2wF7ubLqy1Y3g2e9hxUJ7F46cn5neclXMKyY/7Cs3GHczZn7v3W
epph3zWxSfuXG783fm/8vo5fc843FBOx13WvYsGO27OLqczfYm/8xsUp5JzZ
ohjHdLP4C2zWcXbv9XxBr/l0cMSuVotmfBw33tPN9lvw4FxjNF2zYXAaLoux
LM8OH8tNzC8VS/G9jstHs1H4Vh82LWxzYt74Gg9+88u2HLMmsRfYEEeBHf69
f/xG9mPsrD1i53wX9mC+jS2MrtfGOf/7758/9DH5jWxrPbF+ezUPpwf2p4ff
9suFnaPz/KfLj2TnsOUc2BlfLhtY3nx7jQcGP2qk2dTy6GeN/eX6jfmVcOT4
qT073z/NTZ9dbT0bYmvsz77C/YopuRdYsa9hy47BmHmwNovv8fONwWqnvTZm
7IUfPS2V4aXYYQPL3zhn+Hp+vTiMZ4Ox8NezyTPH9Sxu8oiRXWuDez31BZ+v
PmN5mfHuWw+sE+4NDo2nZ5f9n3oG55k7eDUucAZv6guNp/E9OZzP76fG/fN1
7tH+/vK+WJbvsH6zvYdNXtjm58K+tdy93/i98Xvj93X81q949jfmh9Q/qd9S
f6Z+Tv2f+kX1l+pH1b+q31V/rH5a/bf6dc/+3vzA+of1G+tP1s+s/1m/tP5q
/dj6t/V76w/XT67/XL+6/nb98Prn9dvrz9fPr//ffUH3C91HdH/RfUf3I92n
dP/SfU33O90HdX/UfVP9sfpp9d/q19Xfqx9Y/7B+Y/3J+pn1P4vNX/Nd69/W
760/XD+5/nP96vrb9cPrn9dvrz9fP7/+/43fG783fl/Hb+PMjT83Lt14dePY
jW837t14eOPkjZ83rt54e+Pwjc83bt94fuP8jf83L9B8QfMIzS8079B8RPMU
zV80r9F8R/MgzY88502GneZZmn9pXqb5muZxmt9p3qf5oOaJmj9qXqn5puah
mp/6Pm/1LZ/VPFfzX82LNV/WPFrj843bN57fOH/j/80LNF/QPELzC807NB/x
Ixwtl7G8RvMdzYM0P9K8SfMpzbM0/9K8TPM1zeM0v9O8T/NBN35v/N74fR2/
rTtqPVLrlFq/1Lqm1ju1Dqr1Ua2baj1V66xaf9W6rNZrtY6r9V2t+3quB1ud
WOvHWlfWerPWobU+rXVrrWdrnVvr31oX13q51tG1vq51d63Ha51e6/da19d6
v9YBtj6wdYOtJ2ydYesPW5fYesXWMX5f3/it7rH1kK2TbP1k6ypbr9U6rtZ3
te6r9WCtE2v9WOvKiqPWobU+7Ue+Zf1Jn32uf9s5rZdrHV3r61p313q81um1
fq91fc/1fqsDbH3gjd8bvzd+X8dv+1Dan9K+lfaztM+l/S/ti2m/TPto2l/T
vpv247RPp/077etpv0/7gNof1L6h9hO1z6j9R+1Lar9S+5ja39S+p/ZDPfdJ
rX+qfVXtt2ofVvuz2rfVfq72ebX/q31h7RdrH1n7y9p31n609qm1f619be13
ax9c++PaN9d+uvbZtX+nfT3t92kfUPuD2jfUfiLrkOPObf9R+5Ke4y3rY2p/
U/ue2g/VPqn2T7Wvqv1W7cNqf1b7ttrP1T6v9n+1L6z9Yjd+b/ze+H0dv+Ul
eOIr+OAxKL9BeQ/Kh1CehPInlFehfAvlYSg/Q3kbyudQnofyP5QXonwR5ZEo
v0R5J8pHUZ6K8leU1+KZ72JrSPkxyptRPo3ybJR/o7wc5esoj0f5Pcr7UT6Q
8oSUP6S8IuUbKQ9J+UnKW1I+k/KclP+kvCjlSymPSvlVyrtSPofyPJT/obwQ
5Ysoj0T5Jco78cxHMUyVv6K8FuW7KA9G+THKm1E+jfJslH+jvBzl63jm8Ri/
R3k/ygdSnpDyh9z4vfF74/d1/Janrvx15bUr31158MqPV9688umVZ6/8e+Xl
K19fefzK71fev/IBliew/IHlFSzfYHkIy09Y3sLyGZbnsPyH5UUsX2J5FMuv
WN7F8jGWp7H8jeV1LN9jeSDLD1neyPJJlmey/JPlpSxfZXksy29Z3svyYZYn
s/yZ5dX8nm/zGw9n+f3K+1c+wPIElj+wvILlGywPYfkJy1tYPsPyHJb/sLyI
5Ussj2L5Fcu7WD7G8jSWv7G8juV7LA9k+SHLG1k+yRu/N35v/L6O3/KWl8+8
POflPy8vevnSv4ZHvfzq5V0vH3t52svfXl738r2XB7788OWNL598eebLP19e
+vLVP/PYj9++vPflwy9Pfvnzy6tfvv3y8Jefv7z95fMvz3/5/6sLUL2A6ghU
X6C6A9UjqE5B9Quqa1C9g+ogVB+hugnVU6jOQvUXqstQvvfywJcfvrzx5ZMv
z7w58b7rKi99+erLY19++/Lelw+/PPnlzy+vfvn2y8Nffv7y9n/9js//G89/
+f+rC/CsFzAdgeoL3Pi98Xvj93X8Vseq+lbVvaoeVnWyqp9VXa3qbVWHq/pc
1e2qnld1vqr/VV2w6oX9SEdlemP7Wz2y6pRVv6y6ZtU7qw5a9dGqm1Y9tWed
tdWWVZetem3Vcau+W3XfqgdXnbjqx1VXrnpz1aGrPl1166pnV5276t9VF696
edXRq75edfeqx1edvup/VResemHVEau+WHXHqkdWnbLql1XXrHpn1UErjqqb
Vj216qxVf626bNVrq47b1+i7VfetenDViat+XHXlqjd34/fG743f1/FbXePq
HVcHufrI1U2unnJ1lqu/XF3m6jVXx7n6ztV9rh50daKftcOedaXrS06HevrU
z7rV1bOeznX1r6uLXb3s6mhXX7u629Xjrk539bur61297+qAVx+8uuHVE6/O
ePXHq0tevfLqmH+Nvnl1z6uHXp306qdXV71669Vhrz57ddurB12d6OpHV1e6
etPVoa4+dXWrq2ddnevqXxdH1cuujnb1tau7XT3u6nRXv7u63tX7rg549cGr
G1498eqMV3/8xu+N3xu/r+P3/ySl57o=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.947491860105118*^9, 3.947509735719404*^9, 
  3.947613338494587*^9, 3.94766658814054*^9, 3.9480713443234453`*^9, 
  3.948985554496825*^9, 3.94943746544383*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"9b6d7719-a494-4dad-b19c-9c7daf3b7e2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wallpaper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"#", ",", "0", ",", "80", ",", "50"}], "}"}], ",", "1", ",", 
     "lena"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "6", ",", "7", ",", "8"}], "}"}]}]], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"8573ca17-2aa0-46e0-9894-fbfd9509ff64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xm4bclZ1/GrOMS5neN8VdR2RnDOOftcFGfENjiL2KDihBOoBKM+zdxA
AhdIIMyXAKGBBJowhcFwwQ4gQ7gECAgNNAHCDCEJSWcguD9V63t6Nc+Tv7b/
nbrPc+5ee+1aNbz1+1W9632r3vrd7/ofnvxuv/DatWvv+YTjf09+l/d62/d4
j3d573f8Jb78i3d597d563d/i+Plfz7+ffTxz/VXv+gvXTztQ3/FxTM+6tdf
fNIn/o6Lb3nJSw4/8eM/fnj/93uLi894znMOX/PVX334sR/90cMnfsInHL7k
BS84/J+v/drDB7z/+x8+9dnPPnzmAw8cvu+Rew8f9ZEfefiYj/7o429/9fDh
H/ZhB3m99jWvOTzzGb/h4gVf/GcuPvmTfufFV7zwcPFZn/kHLz7s6b/q4ou+
8E9dfPD9T7j4vkceOT73my6+8Ru+4fDFX/RFhze8/vUjr4+4efPw9V/3dYcP
+sAPHGUp97M/67NGHdRPGT/4A/981OGTP+mTDj/yw/9qXLv39Kf9ysN3P/xO
h4991hM9d36sw/H6WecffP/958e6n3/l7dvn33znzvmP/PAPnx/rf35t+/cz
r3714UUPPTTKeuR7/+nF13z1X774yts3Ll74v84vnvPpv+/iEz7+t1181Ve+
7cVzP/sPX3zKresX3/s973zx9V/318fvP/xD//LiO77971983f/5a+P+t7zk
yRfk+j3f/U8uvvVb3vHiKJeLl37b3734phe/w8X//qq/MK5f8s1/e6T5v9/x
Dy6+/aV/7+LF3/g3R9o73/S3LtNL8w1f/zdG3v32Xd/5j8Z3v8v/4e/6x+Pz
O//vPxx/vsvTn+/H/hl/2nSUz8XLvu9dRh1f/oP/YtyX7id+/N3Hd3m/6pXv
cXGU57j+8R/7t6McciAPcvioj/x1Qxbf/7KXHb7ihS8cfaY/jvkcvv2lLx2f
x749fn7H4adf8R9HP8DC85773MPrHn3KARbu/6BfOvr+J3/i3426kNurX/We
ozz11+/yed5z/8jhm+/cc/4pt26dHetw9rpHHz3/vAcf9P38A97/Fx30pb49
5jX68tgv5907fp7p49nnN87f575rh9Id6zbw4O9LXvBnx31pP+gDf8nA4je9
+MUH/QS/H/5hv3q0/UM++JddwMhD//svXhzLHvXXTx/3sb/l4pj36L9bn/y7
Lj7wA37xaA8Zve/7/ILRlx//cb91XH/jN7z94Jg0OPC93/M9hy/8gi84fOmX
/LkhT9iDiZ994xuHLF0r61WvfOWRH3/64qd+8iePGP+Bw6d/2luOeh5xfFj8
Xfxd/D2dv5/xnN8/+EgeRwxewPN3P/zw4SM/4tdeyI8Mfu5Nbxr48uzND/81
F7hIFt/1nd855ENmn/s5nzNw/7++/MsHHuHb78f6Hev0VSM9HqvnRz/zN17g
xPu97/selP2Jn/DbD+RybP9Bu/BRfr4fZXb4oZe//PA+99030sv7OJ4cyzk7
fPzHfdxIr6/8fuTf+UfcvGvIhCz1Ac6Q6bHux797LzlErupkjNBeYxFZGEs+
53l/dIxdx7xGHxuDPvuz/tDAGBx+27f+nYsf/ZF/PbBmbDvy9uJY1uAIHMD/
ix56u4HRruOBfsCDeOc5vNNX8opH7nvWPeX581t8kZ+y/Pked+JPf+omjbr+
2I/+m8El2H3Nz/yX0QbXeIzT2mmMhQN9ZTyGh5959X8+fNu3fuvgBY7oD9fG
KPI71nX0HzwZ9464PXzoh/zyiyPmj58fgg9j/JQWd7X3y770z1/yV7uM3bh5
7KtDnDC+4Y5+06/GSDzBo+N3Y/roZ/f1a2Ol56VX159+xStGGv2NP56VDiaO
mDl7+tOeNuoLT8Z5HDGHGDNhHbduf8XF4Ar86xf3ccrYZ0w1r+3nQWMfHMmn
a/f1pXFEnl/w+W9zQab4o7/xzDhEFu/3vr/wAm+kIRP3zU3mLen1k/TSLf4u
/i7+ns5f7f385z9/YJ5u59N9+qs2hX16nu+f/mmfdtQ33318wrO6+q4uZPmz
b/zvQ29QLzoe/ZMueJTHmKd9J1P35IGnOIN3rvFE36mDe8pVf1zRb/rliMuh
M8ajI8aO9bj/QPZkRpZHGT1p/l07S/fwp410A7I6Pjv4QT/CH7whL/iFd+MQ
XY3syJJOBr/44hq299yRBl6l0Q/phHRp2ClNvPCse9Lj2td+zV8Z1ziFY67h
Wz7y1W8wVxr3/MkjDsn3B77/nw2+w+xP/eS/v/ihl7/b+EtP9PyzP+V3XzS2
4Qg5G7/o63hDZvqLnI9yPIdx/UxHJz/pP+/BtxpjovcOOj1dG37gST2VQR97
5U//p1G3dGntwNmwAjvGOToj7tDvjjylJ54ZY/ECl479O/rReIk76iJd7wb0
RryJU8cxYWCmcTNd0/dj3d1zPfBnPjCWmj+0T595zzK/6Et4hEPtgBf48X6Q
HLXJNd6Z+8yJOOmdw9wnvfHx2J4xz9HRjR1krK+VY3468ubCuI5zxnI6u7nJ
WKSu+EvOnpXP4u/i7+Lv6fzFOe/F9EX5eZ/NhkI3oBOYc2FXOm3xbkuGsK1u
sKzO2k/ubCLy0ke4Qbbqx/ZCR9zzgg2Fnuu3OQ58+eAXW5BP/eV5fYybU8e8
Pq7pl1/4BX9y9LU+0Qd4Q0/wTj71zGuH9EM2ged/3p8Y78L6l5yyQaXrPfi5
f3zoOHSxdDxj1ud+zh+7tItIE3fYVehj0tGRsp98+Zc9afDPfXx1z7W+cl95
nnUdT5UXp6SVFx7hIH6ki7ofj3w37rLt4E/6Yfl+5gN3jzHZWOydwjhhTCNf
eH/mM54x9EPjk37UZ/rd+Cit38nwWR/zm8eYTNbaIA8Y0Q72B/nRXelkysEd
cwC7Gv5qA2x6P4Cjyc9rxrvBHfifY920gUzbyI1z/RtPspW5P7lx39AL6YnS
G0fxTt03e8rAJd3T/e3d4hxu3Jef8RNGtVv9YITNT//h07FeB/LVRnMQ2ZOl
Och48KnP/j1jvtNfOOVaenpm8yD5Nw/2rP6WN/4pV/nercgZ7s0h7Fj6xm/G
e5xWN/OQ+cbYtvi7+Lv4ezp/teko64FDvgoy9Om9WVnu44z3W/qjstVR+6at
/p5zv+ENLvBHKMM7NO6Yp3EBVr3rmv/lR1/RXm2SxrP4Ii29BZ/wWX3kST+g
UyhfvfBK3dTde71+wa1sLg98xh8YOqI6GEO8C7MPHcseHMKffAF0cNcwDNtw
DCuf9qm/d8gKd3ARlul5/CM4BMuf//y3Hs+5jy/uhx9cMPYdZTWus9HAN17h
nc+ucSZOwac+w518EK7Z4NlGlJl/QD/T5dRXm8kLR/SjP3I0rpIBvHiXMMaS
Bw6xpegf4xkdet4b7wtDx/YOQK+GmTlev/Owv+hn9XJNp2KnMebgkno2hqiL
sVi/wjo9H3eyh+hX1/iAG+EDZ4yZ+QNwYdpVrg8e0SvxCP7SOeEBrozpnsVP
aV1LYw5gByQTmFM/GDGm6oPGVv2PT8Z2fYo7xpV0cW3XPjLfX5vv9L80rvW5
OVEa7wvGNO9qeIqjZI2/xiU8xWN8MH/Jz3089Zv75igc0R46/OLv4u/i7+n8
pZ/ls8YNczlMbraJ4adWz9rk033p1Hm+r4734mEzwR86A37glt/JgH7neXO7
3/QbP7+66mtp9S/e4AceNf/TccnOHxkpD4+kZROQD70YlrRRm+mMbFT0HJg+
8m+8Gx95PLhBTvGI/GDceIRzeADLruEZj/AvXwHuwHu2l/RM12TbffiWHo/k
E9fyNShPnumW+dONl/RVZXieHZ6uJm9cUxeYJm/9Ziwks+zk7sMuOxibGPny
8RiXYQg2tJ+OxK4mb3jAGXopPwtZ0auNR8ZgfDWG6182JXq59xLp1Vc6sqWH
45Jy8VLd6H+tZ5jj5/3D/p+dBJ56H6EXwhX88wXAHx4Zf11Lz94CBzjhujR4
ZZx1PfHLt37vZqO5d+QPy7ABr9OfcWOMscYBfaPdbC36333thRdjhflLX2tr
+qTxKE6VRr+TJ941J7ZmhgyNX57z/qc/jMvKNd81bsG08dD7ljGN7VD9jTGb
TIc/b/F38Xfx93T+wre8YVW5yvd+ze6rbDyD5813OXzZdEjpsnvQB+krrUOT
n7rLD2+1Sx/nO8ch+q60dJd0H5iv/cr3rs+HwObdOjH8oUdrHw7iDt7QYciC
bORJR6SHswfoX5iEVZiEWzJLP4R5Y5Rn9jyiQ7amjF0lTknvvvRsLLAtP+np
mN2XJ9u09MpXlt+ye8gLb/SN/mQnka/79Df5St/aQ23Gk3QnMqyfyA9m2UHI
ga2AfLxPwEy2FPg2/sKCcdeYrF3sTjjFL5GtgN4KJ3iEU3xUMGNtmDqz2WR/
gjO2On6jzd90qTeGB5iHcxjyfa6p+NrBl7m27M7gAsxM7Dw4OIV7rTHT9nxG
8Qgu8yngVOsK57h9c+TPBqRexnDjoPYZZ40nuMPmaFxjS6Ezt77FXGb8ijv6
ENb0Bx4Zc97cnOhZ+ZCn9J5tHjSWwTe/mH7FH/MPGeJRayrp0GyafjdW+sQJ
1/iz+Lv4u/h7On+VoU3aB+P0zy/70i8d67fYVvAjXYBvMru9/oxH/KzZW6bP
YPKNLHDZPZ/4TKb4Rpdl11GW9NoMB2wkxgb6j/r4HW+Ul+/DeihyoBfACu7A
AwxqI32LfTsdDnf0Oz7ACRmRJbuF3+mb2U/c33OHvuc+ewhe0D1xJH4ojz6l
P5QbV9InPYtj9Nb4ib+V1/oyz9DTcMd99TVG6Kepd98/5EUmrc/DCffJkk/c
OIpb6ZB0R1ghPxzBB2MSnNCV8IseTmflE5AWL6zlgBProo0N9NBr1+4b3Mcr
7VU3faBO09c0/QHsHLASrsL8xPP1gZ85Jt8cY6v3E9+970g33yFuHOKGT3YR
ecUdeWZLUd58x7g90tBLPWfs9l5EL/U7W4nxmo+ELowf8K8vjS9koU/pyOSl
340Ncy3224/2koMxw1gLb819carrnz8P7t8Nje1znfZzDtM2eSP7zrAJmjvc
g3VjovkOx/DReDnfD99y2I5wZfF38Xfx93T+suvih0/5KUc+MKsOsE9/5A+V
jj6Hr/COZ/hmfZL2aue0Ad84zDWyN0ZafJr8mO/C8tD/+EQH8bv20x1xHxbU
U5/TDdlEvOtqK1uw+97Z2VTSt+CN3pidgs8ZFtk4YDg7Bsy6D/eu0wVd0+nw
CK5ai0ZW7pO3+zinLHyQ1hiHHz3bNd5lY8nPjh/5JtJL2VLk6z5/NIzit/Vh
nlWO/iSPTVbqOrDlHhnCC26wo+AO/d4fvRF+yM7Yw3ZOJ4UHfU+2ONpeG2ne
+IanDpsJ3ZHeCFvGh8by1jzoR7aRbR304A7s0nPpkXCOW9LgDizhjH7Ob967
xsbByzXS5oT86HOMvTXKSK/EI/fn2rOZP5sJ/ni2tfXmALgzf3iv0F7vYdoC
495rzEvu4Zh+MDaz79HzyaC9D67JDF7o0eTqfvPdfu6Dgfw30sS1/TXsmvPM
F+YGsvBpbjLnqE92z81GNsYGbZ3rC26caefi7+Lv4u/p/F365NInlz653gcX
fxd/rzJ/l39h+ReWf2H5Bxd/F3+vMn/XerO13mytN1vrRRd/F3+vMn/X/qO1
/2jtP1r7Bxd/F3+vMn9XPIoVj2LFo1jxZBZ/F3+vMn9XfMIVn3DFJ1zxRRd/
F3+vMn9XvPoVr37Fq1/nTSz+Lv5eZf6u88vW+WXr/LJ1/uDi7+LvVeYv3c57
MPzwGadn0p/wThp6FVzTD+WFX9K3/4XOB8f0PLjn41YumcEO3zbM4RLe4JY6
4rS82VzoK8pVHt7jtrrO9/xXj+/SaRebuTmdbRf33fddXsYWeWgHzsvDvWkj
eHhr5/OH3uu9Pn+/Z/O34IYxDV5gmZ+cTgTT/BPah1PGBXYuGIc1v8Ej7LGR
sG/AKY74bO0aHY9+aFyMI+QjDXl5Fgdaq92z0qdLKiNdUn57HvnuD0b3uiW+
xT28wqn0TffVxbXnXFs/xh7jnv1HbDSeecVP/YdLPRmuyEn/wJL+gg+yhA1c
gB02GTqgPocXY5/3Hc+aF+SPw2TWXi4+bJxgA8GLbS330APpiXMv8M3Bi3TI
rr0/GC9xrrXZeNgeubjj2njrvr1u07dy/4E/yVzSmk/48F3/4Rudmp7p/lzP
Pt/13tw82PptafCQ7NwjL/nAsDnLHJOfzbP5OOCFfH2Hs7C6+Lv4u/h7On9x
p3VrMIGL9Kp0SzoCHVAZ/rQ53tGrPAvH0suPDYbNlZ4RZz3v92m3feHgn2v2
Ftd8mvrA3AzDxg3yNY+Tpb/uS+OdnM6avqot/vSrNigL7owF9D/p3ZMne5E6
s/ewoxir1BkvPGt9NpngK5239WlkKE/y1T5Ya601TPFV4Hf+ZOXCRP5xuhws
4wVcuq99dMn0TPdwlTzwxLV2Z19Rx/wUfsOvdMtsK77jBH74nk1FOemW8ca1
T+mk7zn1/v6Xvev4jm+u3ZMej97w+v82OMZOI2/jNexrt7GNvMipPdJwx8bC
LubdhO+eLSY9E26NNWSpr3HqOMYNPZftzPsF3fTa7t+MPfGCSxtL667zsdMt
28+Ed/kZcI8Npb3f7Vfym3cjXGPno/PiAYwa1+BNe2CM3QmGtJn9SBvTLWGp
977sonDVXsKuPeu9DR/kKW1juN/xThr5mQNgSPnk19oGHFr8Xfxd/D2dv/oO
vqTTx/AI92Qijfz0cffNrfBs/ZF+hX94hjfleIYs6YD0Q9iCVfqGd3K2HHxk
58ElNiC4wEm6JpzQQ+VJn1I3z6mbMrUBhqRxHwbxAf7bG+IZ+p30+rS1CvJX
FvsAfbF9lHghjXrjElmVHj/UBRa6xilpPKsOMNx+Jboe2amH/HFCumwtOIpT
7bmFSzjOx44v3glwVjtd+2xdt2tp9Ik8/eWDcE0G8pan73FIu3ECh3DNtbEA
V6SJM56LY9qlfvkh1Bt3cIqe6Td8Yg/xTOMHuWkrTuh37TT+tbYBpozb5O7T
2K3/ipfBxpJerp8eWwNx39m0sYhBMdfhs7vM2Cp3Ltdmb/u+h67oPn2Uz50O
2jo0v1mjXfr202WnyX6I+8Zq/W++0E/GYvNE67TxCBdgwTuY9sJg74Dq375C
+DJuez/RVuMImWx70MfaNpglC+VKSz7SuMYfuMJXc9ri7+Lv4u/p/CV3XIB/
/QhHvtMRYEQ61+7BJGxIg3f0ITJj04AruJWO/uQT35QrPZnpTz5sWNRHOEY+
0iifrqG/lUmm+oZ8tUGf6Rd1iHf6A97kg+PqVp7aAr/qCSeeVSfX+sa1/nVf
PbUFd9yPj+qdXioNbGiHsqzr07/qxu6inr0LwL70rd2mW7lPN5Rv8Sfcz36i
T7RRm/2WfcQ1POFJ+5Ly6ZMDruif9Ex8k14a7Wt9mfJxQT7S7W0u2VvyN7jG
FenUAXfk6R7OeAaP4lN+As+ph3biS9zxrLELTrS9PdLqR96utZO8yTadmtyz
A+nbnQ2Mfjk41BpseiW++I2e2Vq1OLWt4xjr0+iM0uNY++nca0/dtld4lKM8
ePVOxhanP2HK3JBdxXsdPKg7u1G8gOH9O6C+gQsc1F68bB897BtP5CNvNkzp
ycdvZGqekp5s5ef9cfF38Xfx93T+wrx2uCbj1iXTOWADbrXdHIqH+sd97SVP
uCAX6WGYXPQlvOFGepo821dFnu2roh+SfZgvjfxhpTgS6i89jrmWf7qKZ9XP
s+qjDjBgnxBuwBE9Tr7F1aFz6ht2H/2l7fQG32GOfiyd/OFdvjDs3Z8ub9zw
u3q41nb5ky3M4JhrdasOuCJfWPVb+3m7r73Ka60a+WoT+wKMG2/gmN4nLezi
iT7UR63TVn/95BoGW6fNPiIdvY8vXZtx0P3sMdlnrB3Y21yUlV+iz/z36Zbq
xgchP+0jK7LAKfLQX/LTF2Ti99a2kbtx2/uFOpGNNPTV6mqeYJfb1j6etZ93
8uFZl3xpHRqOFB8Yn6bP/vrgjLXk9FF6pt/ZW+iYMzbwjJ049wg/cq5c6z+s
89DPsAzD5KzOxk8yzf+uP/Cmd0P8wDvXrZPJP8iv1pzYtbR8YsYjac19+tM8
5Rn9ilvyX/xd/F38PZ2/2lssGrJub6p+gEffyQjWtItsw6H+wRH4z15hfqU/
wJp52P384u0jlqf7sJn9JBuFa/flqZ5xRN2URe7wlH6i/vLEWbzwXk+XUzd6
nrV17uMCHub3p0fCDtuQfu6azTidkO6Ld/pd+7NzaFtxF/BInjiIt8qla0rn
T5nGGdfFSywulHrQsXHCdzz1Gx7hE354rvXdyqDbwS5Z6hd/xa6QjvzkGX+M
UXHKNdlpL14UUyMfO6y2llsZ2VnSbeWfDz9fhXJ99zz+sIf47tqz7T0mJ9gg
N/1lnFTPxjcYMWabD8hPf+lH3MzGAgutrcCZjUtnxTgsTq81h/hDn2y99bSb
PHA+7TGPbPEd5zkNrUfEweI4sbFscQ3PccieN2vg2C/ZBdld4AXu+En0FVz7
nS6cL568YRyn9G37JmBGerzzbO93rvHRe6U+JrN5FsGNyzWarRHl41j8Xfxd
/D2dv2SrvmwU2pw+qZ/yLeoHeIBzMg+T5Atr3ofjhTRdw38cISP9QG8gB30E
F+QiPUziLUzhaGOF+3ENftUPtsk9/0IyV3/1kb800s/1Ak8eeJSXOuMejuUD
18/Fsy+OPSzT89p3C3swyC/S2rP0QPXvrBb5wIH85Z2+2r5ePKfPqTO55J9P
1zWG+g0/2g+sznjlN+XqP/XUrmLuS+OZfOjFpvAd3uE8LuzXb5NZfNO+uEI2
+RjkoZz+sr24jwvpna1hc80n4fk4LW/9Tdb6t/cF/a9/lRnHjSXaTYZ0ydYo
4KYyNt/+FrP47mFjiVebb2DohK2z9nuxfLd499v5LzPOJg653vOoGL/b/t5h
b2G/4W+gp9qDbGyY8f4furRhwq3+xy+cKwY+OyFZt4dXG5sH3W8O7V3P+x1Z
eTfkkyOb4moZ+/IhLv4u/i7+ns5fsmxfifdj7SxWrb6lA7RPv31SdLR8BHAi
XTokPOuTbCzSwBrZaX86lvSeTS+FHTYUaeCRfPWlNPSPOEIfcx13lNX+UWXh
Ar1Ou+BO2fLXBvf1qzSegT9c2Mfd9b2Yf/my9a9nOpsMHvzuurPPcCPuxK/u
4U7YwLH85Orne/qq9LhlrChmMPkUe8kY6brz2OQnnfJ8zyajjcVmyqce9uES
vnHMdT4Bcje+tkcYV/NBpKtmc5F369nij9994q88w7xnizNcvdVXv3ZWgHay
47S+PDuNZ/guPI+X1qD5e/3r3nvMH/xRc539jDsyY1ncu/kdbp91zgJe5Ivf
9ikdHotb8YRDe3PnXuJpb7FeHB+njeaJI83UR0ec6OJgDHsLX4R+bN+ufsEP
c5C2+vTu5r7xw1wGM73fkUNzpX7OVgNz5ky+wuyurvP102MXfxd/F39P568+
zW4fR+iRZNk7L/nBDr61jgivyLp3ZPKCU/obOeKLdDAMRziSzZ+dgUxhDRf0
S/wiR2ngp/MTPet+nJK+M1bIuvXP2fA7d2xvzw+3sOWzdVzxQhvpgtrX3ll6
p/R45JpMpIE39XEfjuOc8ioHf6TzXPEJpfe7T+VKl/1EPsV/0k6yzYYjHd4X
41efKZO9QZ3UBe7y38OwdPIoJoZ2+dROn7jERpNtBo7JNX95MfPb7+Re/gzf
5dte4WwycTXdL/02X4V0OLJfC6ct5CSt59RB+uJI+cMjfgbrsfszpnbe6La/
aIs7cu/5/HvkLK5Mm8v0MxTTqbgV7uMO7rlON6UvdjYoTk3/xFi7drlfyd5w
9hZ/MEq35MvThziEU/rVu5T3OphtrR284iFfSTZP3/WT+dQcpw+NqZ7Vx+YQ
19laW9ex+Lv4u/h7Gn/JF/bxkOzwiA6pH8Kta7jIBhJH9H+802f5zaXBnfzv
sIyPZJePlbyyq+iPrvNlp0OqQ3td6YTsNfqMfkeW+qJzpvVZ54fBGfwqWz19
knnnpaSDxYU+O68Tnl1LEx+Kree7Pu9szrCqTGlaMy3PzqTWFt+LSe+7Z4tj
L088ULa2+ex53PO79MqRTj1wQbrOYisG8esefcqQF/7hinrqH+V0PlrxD4sr
JS9509tg2DV7Bq62L4l+qN3K8pnumY0lX0Nr2PDOd/m016n89Jt72XdcV0Z+
Crqkutj3++hr3+viTT/7Py551JigDfOc0LnPtjgTfAfZWPgPOn9o8ufu7Yz1
O5f7cHGt5/GQ3jjPSptnas84wfOs7Xlu9yPnxXH0u/Xic43azRGn0Z6D9rVl
n4RLn2ye+jibJ2x6F+SzgA/vdvws2tY6k+IDs3nqT1wxfy3+Lv4u/p7OXxjI
5p9vGub1d/b84hG51rdhm9z262PpMnRBuJFfe3/YWPQvmaUHttYr+z8e5Psu
DbzByDzTea5NVg8YxanWg7mmQ8oH7tRJPulqsKJO8oUfOJVGGz3buWN7nTOd
Lx3TtftwK137Z9VFu2CL/LJ7uNbX2unPPZ/ZOvIN7K8rI677VIY2uJaOrlVM
Qc+Sh/eH4gWJb+U37wvWH8KwMcTYaF8PvMszW0jrsNOJu1Y+G4k/z8BzZ8bA
e3YP+FGf6hSnipORvWXPRX/t++275+NPcaOsXcNrcX7ZU9T/5970Py/e+Ian
Dj1T/Apc4/+2T1c8rnk22s3BBRjfx6DYXxersDNCpS8G/hbD9zDjGN645JHf
5jlBd0Y+dMv8Dsqnp7LZFOPa2jh4Mq+Zv+DPPGPfRGta2nvovvnR2N2eelht
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
g9/DeHtP22vqU/7yaW1VsWvdhwn3spkrA36sJYYVWGAnYAOzb6wzVsWNhWV6
vDPA4Jw82NGd960uxj98kb+x03116L6ycAfX6H0wx2clPT6KvTftVi8d8ffo
rmws03Z+78AY/Wpi8Pqw921nQY/YgH6bZ6fcPFc+XHh/URadT7twKPnhlL6F
KfXMH2EMKb1n44j64wwdu3Vn/siuNMYY+xb8zTrN88s7y7r11a7NQ3wEccf9
zsme73NPHPyZvHnFpb2lZ8XB6Mw08545Dq/k0dkxj8UHnnYb5VeH1oXjiX4g
cxyjxzuTnX/OWOhsVP1ibGA761w38xdMGft6p1v8Xfxd/D2Nv0ufXPrk0ifX
++Di7+LvVebv8i8s/8LyLyz/4OLv4u9V5u9ab7bWm631Zmu96OLv4u9V5u/a
f7T2H639R2v/4OLv4u9V5u+KR7HiUax4FCuezOLv4u9V5u+KT7jiE674hCu+
6OLv4u9V5u+KV7/i1a949eu8icXfxd+rzN91ftk6v2ydX7bOH1z8Xfy9yvzV
tnWe9TrPmtzXedbrPPrF38Xfq8hfbYNHeqr+1YdsL7CRPUd/wD6ukREM+05X
gG12D3oFm4c0XeOeZ2GDTkzW+RTIOFuK9HwFeAdfsGM8aV8wzsonfwf546my
pIlTcU3+0kif/wJ/5aXOdDb4xlNYxDH54ApM63t4bA25OuELPuGffOE6vqg/
TvlNPrgRp7QXTorjgVOwr87k0loDY5E645bf4Ei+nlNnHPGbcmFcPfNLeE6a
9Ld81q0lwJv2UrVXK3sGmWlj40U+cbJpHXo2k/7ipPv5FOJT8Trg3vOtLZC3
/iZr/WvcJ1f933oPadqD1prD/PnpqHFWXIi5L/3uQzrgtgd328dwc9g+4lFr
zPjT2VTwAmfyI7jGIxySHtfk4flj3pd+BHu0ZsyKtzpYs+kd8EUPPTTmMviF
W/1vXeerXvnKYRdtjiNrbTe3aaN3OFx037X0xkrPsp2SVbZTsjHPmkNbXyrP
xd/F38Xf0/kLU/wP+Jjvnl8ebuHad7KBBXodmcFjeiA54Js+p5fSP9Mtycd9
OMFh3JSHPONaHIEpvHDtvjz1sfv4qG7K4r8gb2XJU/3l2XpyOMWp1gzQM92P
+3AO+/n0YbK9w671s3LxDidhNH0PhrN14A05kKU8YYS+qlw8ki7dmR3JNa7Q
h9VHOeqx35MF337D4ewtnsv+oAy2EFgiy2winkvnI7+wGz/aRxVXtBfH9AG5
ZvPAHc/5y/+NE60Ti2P5I/zlU9jvP27vsmfVW9vICTbILVucema7gxFjLb9Y
+9v0I9++PJUDCzBgbIw31ljjTXtprYVmN6Ev2h+EJ8VQmvrg/YNf+MIHIe1c
g3b/43iEn/JkQ6Ezsp3w55ur7P3iy4MXuPNepq+ay4x35gH2z2yYOKVvtb05
onnQs97VcNI1Plo7qo/JrLWmvT/qS896x1z8Xfxd/P3/w1+8pH+SY/okubBz
aBucwHK6pfvt24X5/On7WE/kpgx40HZ5wiGZwb/7+eX1LxnhTmnSN1onoL/z
g7iWv2v5xDXPqo865MvQZ/BUf6lb40Br3nBE21t3re9hvPVs+lS+rQHAI1iP
R67TCfEax/V1MR2rw97f0R7kvR9Ee7ONSEO+2sSuALM4AFfwLW32fn2oj5SB
L8XgcB2fyAy2paPP0tO0GR/bE5tvoNhS6Yl4kW6q7D7bd5sdRN2sEZOf9pEV
WeAteeiv4p+Qid/1v3Ge3FsbqU5kIw2/QnUVS9EaTD61jUNPmnGi5npq3CpG
hO/0vvwK0z9wz1iTzZ+e/aR9uMUqnH71m0OH3PZCnCsXl8Tx0M+wDMPknA0z
u6V5Sn/gjXbpT/zwXte6d3jWx+Y+awKNLcaPrqVlL/J+Iy2fo/40Bnumd0b5
L/4u/i7+ns5fcoU7mCdvNhLftUUabW/vEk7BnjQwr2/wTp76Hk+l068+6QP6
Xnp4oz/Q0fJNqBMdQxrlsxfDlTLZfPQjHuG5fqIDqoM0MMsWBNvywTt1K09t
iZuw5ll1co2PrmHWffXUFv3mPpngjXrLvz1TcKkdyqLzwIa60VvVs3ULMCB9
8Rjx0H3jmnzzh7tfbA1c0sbWr6fDuS4GI2yqj/StkTYG6Z/2QhknpC+mcX5x
5eNC66zzHbQ2bB+jKruMdOpAh93HlfIM7rRfqJjE+Sq0E3eMr2yAnk3/13b3
yU39siVqJ3mTrbFjv57/4S2mM47MeEl3DVvK9CPcGPYOuh/90G94gWePxbue
/MItz+HR3Gc0997inXviIrdnd679vGuUN+NWv/ggNpb+hClzlf6ANXMQPKi7
97h4kb9Pu8xf+gYu7Jto7jPHwQvs46t85M0PmK3Vb2RqHpOebHt/XPxd/F38
PZ2/5Eq38ps+cF9b6BywDav6rPvaDiM4472SHJRDH8JTz9Af8WDGk717lIkb
025yZ7yXssWbl+kP8QIn9QM8Z29RN8+pmzLpH+QsTf4FfIHj8O8Z/VLsDnWW
Xv7Zf3BJ33gWN9J79aUxofTwoC76umvYkCZbUDE39DvMkp16yB8eiumBh3Qp
9nL4Vmb2eGNJeMfD1m63Lk77le86P317f33Xj8Xql/d+TZfxS7vTBfO972NE
tBcoHuVbKD5G8aVwKv74jb6HW57R7vaptS4xnT9OaUNrJsndp/Ff/01/10sO
9hllS9FPxiv4Y0PZ4g6etT4al/Khu7fnDv1wWyM29Ea6Jc7QFf3GdlL6aXe5
e3Bt81GMeMX8Cd4z9L95qzUq5jJj334PICz0DgiD5ip9o/440JxovPVOoq3P
e+5zx7zGXqNMafL9KVda8pHGNf7AFb56z1r8Xfxd/D2dv/qVn0F7YEib+A2n
f/olB3HM8Qf2/eGeWLDebWHfs/KXHpdxlXyUgyfelz3vd9+9F4ut71qcddew
ho9kTRfBU1wwd+sLf92XRv3xHqa1kYz9wbY2KCs9UL9K7548yUCd+VPgG8fb
5+VZ/Ukm+GdcKGYRDMiTDqh9cNV6731sDdgNT50BQ7/OV5xPfNoJHoslJa/i
8JMHDLnW7mJgqGN6o9+K9VT8i763XyjfQFzKJ5Avvj1B2U56Tr3ZRuJWcXOl
xx0xIPAHpzaf9/AhaLexiLzIifxgDAbFi4BJ7wzPfMYz2PkO7PLmAbqbMYcs
9bV11daVsSeJp29Pnn22j4+Zf+e8fUPF9mQPwanpb7g+9MUtTu8Z3hR3gn9+
xiK8Pvgkvd/Ev6ZX4hau4wGM4k5rTmCseC/abN7QRjKAzd4p4A1m9u+D+2vP
0kPxQZ7tndfffsc7aabN5sXD/ql88oND2Mehxd/F38Xf0/kLv/ECfrSNHgiD
dFuchFHnZ7HVmPPFQZceB8hA7DvxXsV2NQfTpfCETpZfm05BznQN2McBNiR5
5xtRrvLw0TzN14LLyvRdOn2U3z6fq/u+y2uuw7022kEnkId7xhLjzGzn88c7
8rGvDrt39SGPxiJ6DN7BLLtJa8yMC9oH0/wL7RGmv/otPYjsYQ9GYaQ1xfjS
ei7cKOZh+3nbp5S9Be96Vvr2A+1j+7X3tbVh+cL3tpO9/ST/QGub41UxoYqh
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
q8Xl8i5hjCUPHGJL0T/GMzr0vDfeF4aO7R2AXg0zc7x+52F/0c/q5ZpOxU5T
nA71bAxRF2OxfoX19s9mD9Gvruf65/su8THXk10/5A/AhWlXuT54NPfL3h5+
h3ROeIArY3pxCOf+pOtDLzUHsAOSCcypH4wYU1tHDRv6vzMB9SnuGFfSxbVd
+8h8f22+0//SuNbn5kRpvC8Y07yr4WnrPPHXuISneIwP5i/5uY+nfnPfHIUj
2kOHX/xd/F38PZ2/9LN81rhhLofJzTZxed5Fbeq83/ZrzPfV8V48bCb4Q2fA
D9wq/hv9bsZ8u2v8pt/4+dVVX0urf/EGP/Co+Z+OO89mvF6c1MEjadkE5EMv
hiVt1Ob2etJzYLq4FtZQFRcpHpEfjBcbFw/aT9QaseIQ4tg+ri/cpWd2Dlr3
4Vt6PJJPXMvXoDx5plvmTy9WvDI8X5xbeeOausA0ees3YyGZZSd3H3bZwdjE
yJePx7gMQ7Ch/XQkdjV5wwPO0Ev5WciKXm08MgbjqzFc/7IptZ5eevWVjmzp
4bikXLxUN/pf6xm2Pa7D/p+dBJ56H6EXzpiDrxi+gM4aM/66lp69BQ5wwnVp
8Mo463ri99plnCXrQeQPy7ABr9OfcWOMscYBfVOMMv3vvvYWm9r81R639Enj
UZwqjX4nz9aqwWRrZsjQ+OU573/to1eu+a5xC6aNh963jGlsh+pvjNlkepjn
/S7+Lv4u/p7KX/iWN6wqV/ner9l9lY1nxfnGAXWlQ0qX3YM+SF9pHZr81F1+
eLvti7z0neMQfVdauku6z7aXeDynfO/6fAhs3q0Twx96tPbhIO7gDR2GLMhG
nnTE4gHqX5iEVZiE2878Kma6MaqzYOIRHbI1ZewqcUp696VnY4Ft+Unf+Wnu
y5NtWvrWUPstu4e88Kb4FO3NdZ/+Jl/pW3uozTM27QNbfL0HL/uJ/GCWHYQc
2ArIx/sEzGRLgW/jLywYd43J2sXuhFP8EtkK6K1wgkc4xUcFM9aGqXNnkWsz
nLHV8Rtt/qZLvTE8wDycw5Dvc03FjC0415bN/UIwM7Hz4OBUZ236nGeKTZ9R
PCoGL362n2jTO0dZW5zBUS9juHFQ+4yzxhPcYXM0rrGl0Jlb39J+h7hTXC/9
0T7uNzcntmeQPKX3bPOgsQy++cX0K/6Yf8gQj1pTSYdm0/S7sdInTrjGn8Xf
xd/F39P5W3xT7YNx+qd9GNZvsa3gR7oA32R2e/0Zj/hZs7dMn8HkG1ngsns+
8ZlM8Y0uy66jrPZEwgEbibGB/qM+fscb5eX7sB6KHOgF7fWEBxjURvoW+3Y6
HO4Ujx5OyKi49H6nb2Y/cX/PHfqe+53vSffEkfihPPpUe2biSvpkse478zM/
e+W1vswz9DTccV99jRHzLO87QybkRSatz2v/F1nyiRtHcSsdku4IK+SHI8V7
gBO6En7NeOtvN3wC0uKFtRxwYl20sYEean8Q7uOV9qqbPlCn6Wua/gB2DlgJ
V2F+4vn6wM8ck2cMQO8nvnvfkW6+Q9w4xA2f23nv53FHntlSZmyKJ4xxtji9
njN2ey+il/qdrcR4zUdCF8YP+NeXxhey6GwI8tLvxoa5FvvtR3vJwZhhrIW3
5r441fXPnwf374bG9rlO+zmHaZu8kX1n2ATNHe7BujHRfIdj+Gi8nO+Hb3mY
MTjuOSz+Lv4u/p7OX3bd4nbLTznygVl1gH36I3+odPQ5fIV3PMM365O0Vzun
DfjGYa6RvTHSzrOD7zn0LiwP/Y9PdBC/az/dEfdhQT31Od2QTcS7rrayBbvv
nZ1NJX0L3uiN2Sn4nGGRjaNzs+gLMOs+3LtOF3RNp8MjuGotGlm5T96dm60s
fJDWGNe5ZnGwM1yyseRnx498E+mlbCnydZ8/Gkbx2/qwzsLWn+SxyWqcWQJb
7pEhvMwzCW4P7tDv/dEb4YfsjD1s53RSeND3ZIuj7bWR5o1veOrl+Zj0Rthq
T6yyW/Mw98DetelttwZ35jnP9w49Es5xSxrcKV6ufs5v3rvGxsHLNdLmhPzo
c4y9NcpIr8Qj9+fas5l/Z256trX15gC4M394r9Be72HaAuPea8xL7uGYfjA2
s+/R88mgvQ+uyQxe6NHk6n7z3X7ug4H8N9LEtf017JrzzBfmBrLwaW4y56hP
ds/NRjbGBm2d6wtujH3Gi7+Lv4u/p/N36ZNLn1z65HofXPxd/L3K/F3+heVf
WP6F5R9c/F38vcr8XevN1nqztd5srRdd/F38vcr8XfuP1v6jtf9o7R9c/F38
vcr8XfEoVjyKFY9ixZNZ/F38vcr8XfEJV3zCFZ9wxRdd/F38vcr8XfHqV7z6
Fa9+nTex+Lv4e5X5u84vW+eXrfPL1vmDi7+Lv1eZv+s863We9TrPep1Hv/i7
+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
egM56CO4IBfpYRJvYQpHGyvcj2vwq36wTe75F5K5+quP/KWRfq4XePLAo7zU
GfdwLB+4fi6efXHsYZme175b2INBfpHWnqUHqn9ntcgHDuQv7/TV9vXiOX1O
nckl/3y6rjHUb/jRfmB1xiu/KVf/qad2FXNfGs/kQy82he/wDudxYb9+m8zi
m/bFFbLJxyAP5fSX7cV9XEjvbA2baz4Jz8dpeetvsta/vS/of/2rzDhuLNFu
MqRLtkYBN5Wx+fa3mMV3DxtLvNp8A0MnbJ2134vlu8W7385/mXE2ccj1nkfF
+N329w57C/sNfwM91R5kY8OM9//QpQ0TbvU/fuFcMfDZCcm6Pbza2DzofnNo
73re78jKuyGfHNkUV8vYlw9x8Xfxd/H3dP6SZftKvB9rZ7Fq9S0doH367ZOi
o+UjgBPp0iHhWZ9kY5EG1shO+9OxpPdseinssKFIA4/kqy+loX/EEfqY67ij
rPaPKgsX6HXaBXfKlr82uK9fpfEM/OHCPu6u78X8y5etfz3T2WTw4HfXnX2G
G3EnfnUPd8IGjuUnVz/f01elxy1jRTGDyafYS8ZI153HJj/plOd7NhltLDZT
PvWwD5fwjWOu8wmQu/G1PcK4mg8iXTWbi7xbzxZ//O4Tf+UZ5j1bnOHqrb76
tbMCtJMdp/Xl2Wk8w3fheby0Bs3f61/33mP+4I+a6+xn3JEZy+Leze9w+6xz
FvAiX/y2T+nwWNyKJxzamzv3Ek97i/Xi+DhtNE8caaY+OuJEFwdj2Fv4IvRj
+3b1C36Yg7TVp3c3940f5jKY6f2OHJor9XO2GpgzZ/IVZnd1na+fHrv4u/i7
+Hs6f/Vpdvs4Qo8ky955yQ928K11RHhF1r0jkxec0t/IEV+kg2E4wpFs/uwM
ZApruKBf4hc5SgM/nZ/oWffjlPSdsULWrX/Oht+5Y3t7friFLZ+t44oX2kgX
1L72ztI7pccj12QiDbypj/twHOeUVzn4I53nik8ovd99Kle67CfyKf6TdpJt
Nhzp8L4Yv/pMmewN6qQucJf/Hoalk0cxMbTLp3b6xCU2mmwzcEyu+cuLmd9+
J/fyZ/gu3/YKZ5OJq+l+6bf5KqTDkf1aOG0hJ2k9pw7SF0fKHx7xM1iP3Z8x
tfNGt/1FW9yRe8/n3yNncWXaXKafoZhOxa1wH3dwz3W6KX2xs0Fxavonxtq1
y/1K9oazt/iDUbolX54+xCGc0q/epbzXwWxr7eAVD/lKsnn6rp/Mp+Y4fWhM
9aw+Noe4ztbauo7F38Xfxd/T+Eu+sI+HZIdHdEj9EG5dw0U2kDii/+OdPstv
Lg3u5H+HZXwku3ys5JVdRX90nS87HVId2utKJ2Sv0Wf0O7LUF50zrc86PwzO
4FfZ6umTzDsvJR0sLvTZeZ3w7Fqa+FBsPd/1eWdzhlVlStOaaXl2JrW2+F5M
et89Wxx7eeKBsrXNZ8/jnt+lV4506oEL0nUWWzGIX/foU4a88A9X1FP/KKfz
0Yp/WFwpecmb3gbDrtkzcLV9SfRD7VaWz3TPbCz5GlrDhne+y6e9TuWn39zL
vuO6MvJT0CXVxb7fR1/7Xhdv+tn/ccmjxgRtmOeEzn22xZngO8jGwn/Q+UOT
P3dvZ6zfudyHi2s9j4f0xnlW2jxTe8YJnmdtz3O7HzkvjqPfrRefa9RujjiN
9hy0ry37JFz6ZPPUx9k8YdO7IJ8FfHi342fRttaZFB+YzVN/4or5a/F38Xfx
93T+wkA2/3zTMK+/s+cXj8i1vg3b5LZfH0uXoQvCjfza+8PGon/JLD2wtV7Z
//Eg33dp4A1G5pnOc22yesAoTrUezDUdUj5wp07ySVeDFXWSL/zAqTTa6NnO
HdvrnOl86Ziu3Ydb6do/qy7aBVvkl93Dtb7WTn/u+czWkW9gf10Zcd2nMrTB
tXR0rWIKepY8vD8UL0h8K795X7D+EIaNIcZG+3rgXZ7ZQlqHnU7ctfLZSPx5
Bp47Mwbes3vAj/pUpzhVnIzsLXsu+mvfb989H3+KG2XtGl6L88ueov4/96b/
efHGNzx16JniV+Aa/7d9uuJxzbPRbg4uwPg+BsX+uliFnREqfTHwtxi+hxnH
8MYlj/w2zwm6M/KhW+Z3UD49lc2mGNfWxsGTec38BX/mGfsmWtPS3kP3zY/G
7vbUw2pr8OCp+a55UL8v/i7+Lv6ezl/tyZ6vX9LryBqn6Ig4G3fgKHuLPoA7
fZmtg44HQ/LEn+whOELvay/PPoYDmeOq/iZ3/amMzuzyfLHepVGuvJThGuaV
nS8ABrKTqG92bvXa29dbkwXf2VeUhTf5INQh2316I85lG/BdmvbEZo9vb4/f
9tfFhygGUvVyTx26r335uNUXruAMttzXTn/GSXxRH+OWeJXyxCmxG7XFe4lY
kq3b9xt8FicKPslI2eSSnu3ZZNsY4Td1yf9NX4VlOl/8yp4Sv/Ldt24tHpFH
fovWBuCr/HH2qK+NespbDAzl8C289jX/dfxGv3TfuQfiXbBziEE/z3y9dbad
PTNwjy+tz54+gttDd8SL4lTEKTaWaVMZn2dzfrt1eX4e/bNzZHz6vq3RPlP2
PB/3ieMPl8xjrfk0vrGN6gv9xUcCr52VBuPFu4BB86c07QH0nql/W6u5+Lv4
u/h7On/zC+BINn+2ffeL4d5Zl/Q3uI0v2fDzy8M+HwT5wDJMFqvBbzDtHlsM
nNAB8ZH+AsM41dmVOKzfcNhv8vS88orvrn6tNd7HONrbPdL35LuPzwAX9bff
wlFnkuEQWShb3bW3WILKy06Q/hRW+g7zYSQ/dzj1mS2ePNWn2MDFf/A7zsA4
O4n48jDrvrrpIxg3fsKPfF2L8Q+Hxlo+YGW4FhMQZ3AK18g6W1yxp6zxoK9q
H7kpTx201fdkqx/0t/Kl96fO0vMFeEZ90kfJYR/7onFsH2PRZ3Ycz8iTT8Gn
fLXfNXn429tYtMM7mPmm8+u2s+wGR9pbWwzf1p65tmYtrsURemO+Brzsfuux
6aJ415l92Vnm+Qj3DH22+FH277KVmhvxoBgp+rwYv63/NPe5bp1M622KyWYM
bH+BtW7eIxZ/F38Xf0/nL52hfa/ak24JE/CEI+5nP8nugQPZ+fUDOYTz4tay
V3SmZWu92msjTXtR3ZMffukb9+io8uwcTc8WH74YDrgYLo0N2b67jkutv2ov
zl4nTEdqP016X+u1yKfY9Wwy+Q1af5y/GT4e3mLFqxM+xBv4yIcNC8U7go/9
dXtZ6Uqwwm4AP/s1dXjtncAeGG3gOxIjWd31oWt54cU88+bdxvuFa32KK3RL
fcIOJz07nLFanGX2PDYK194lYMHYLU91k1/y0W7jJTzoy/blGkPogHigDb5r
d34Gumh7f7W5sTBZpoOrL17SI9lWcIxcyIdtJR7xb5lT/Ilrv8X0PWudNb7Y
i7T3m8ev9uFuZ/5c6pPTb3Bz2Fj213uuybOY+MVIVN5cxz34/CRl5bMwp1kj
Y42ctvL9mePIlA2TnOHL/WJxdw3X5jFpWguqjxd/F38Xf0/nb/EBWusFv+QG
562pjlPZTPQlTmb/94x8YK49rbDW+c5wqN/iWvaD1iHHu/aeKIs+CSetXZYm
30A2b+X33q7u2fjxzWd+5LiDA+lv7u1jEaXz9K4fP9tTml3A9d6W7k/e6ZP7
/ajyVVe61j6ukTTZz+HFNcxlM2BD1246H+7wI4kJ5Cww7beGgi1B/tb9WXOo
Tt4jxFBWjncFceOV5z6dUznsbOIqaL8xGI+UwZdlbw37ROurpq/6Xjb2M2Xg
Ll10vwZb/njh0/hn7PSpH42hysEp4wEu4CNu+SRPdWrPVGerFRd4fx6pa7+n
T7KnxCPzC1udv7k399p21svt4vQO/Od33/OoNdXtUSquxYz/dHPYaOiWrWHb
fIHjutgX06cx58E4m91Gms3nf6ZvxOkXD9i8Zw+EMQ0m1d18p+2ttyTn1qXg
E44aK/Fg7x9c/F38Xfw9jb+wyfbPD9u+V/707C3sL2TRmjE47BzofAHk1pou
fUL/oetJR0YwjmPF64tH0tBDpFEPedBH8mdLrz9ao+VZOCque2eB+Y476ZDS
+lQ/dYk72pfdO90F9tNh9GV6UjaP1hy3tioeea5zouNI3KE7wZW83KMTSeM+
TMnPJ974jQ8ZHrKnwA5dT6x2axDpS3jAj6wNM/7xAwdt8ZuY6q7hCR88byyE
e/VLt1QW3dJZc+pPj1SG8c65BHiqXPFpYQ2ONjvE+eNjxd9zud4Y370f6Bf4
Nh7Q99z3x2+kn/Sn/qUb4pS6+DNukBXZ7NeXycfvuOMvv0P65N6uwlZoPPG3
7cUtnu95e2zxonVluJONpfPL5rlo87zsdEX38Mf1/uzseNTZMcYbzxbzguxa
580X3xrvuW94rltT187cM6c5t8F3mNu/37XOU3+Zv/ALBvYx0BZ/F38Xf0/j
bxzhX4BXuuGMS/oOQz64gwfF2iuuAn0VD/C0NWPS0HPhDOb9ls+YXQCWWrv1
8BZ7ld4JV8WVTT/zW+dgqkv8kCa/gWf91h6W4ta6ly6491Xv96Pu/crtvcnX
iz/pqfke/B7G23vaXlOf8pdPa6uKXes+TLiXzVwZ8GMtMazAAjsBG5h9Y52x
Km4sLNPjnQEG5+TBju68b3Ux/uGL/I2d7qtD95WFO7hG74M5Pivp8VHsvWm3
eumIv0d3ZWOZtvN7B8boVxOD14e9bzsLesQG9Ns8O+XmufLhwvuLsuh82oVD
yQ+n9C1MqWf+CGNI6T0bR9QfZ+jYrTvzR3alMcbYt+Bv1mmeX95Z1q2vdm0e
4iOIO+53TvZ8n3vi4M/kzSsu7S09Kw5GZ6aZ98xxeCWPzo55LD7wtNsovzq0
LhxP9AOZ4xg93pns/HPGQmej6hdjA9tZ57qZv2DK2Nc73eLv4u/i72n8Xfrk
0ieXPrneBxd/F3+vMn+Xf2H5F5Z/YfkHF38Xf68yf9d6s7XebK03W+tFF38X
f68yf9f+o7X/aO0/WvsHF38Xf68yf1c8ihWPYsWjWPFkFn8Xf68yf1d8whWf
cMUnXPFFF38Xf68yf1e8+hWvfsWrX+dNLP4u/l5l/q7zy9b5Zev8snX+4OLv
4u9V5q+2rfOs13nW5L7Os17n0S/+Lv5eRf5qGzzSU/WvPmR7gY3sOfoD9nGN
jGDYd7oCbLN70CvYPKTpGvc8Cxt0YrLOp0DG2VKk5yvAO/iCHeNJ+4JxVj75
O8gfT5UlTZyKa/KXRvr8F/grL3Wms8E3nsIijskHV2Ba38Nja8jVCV/wCf/k
C9fxRf1xym/ywY04pb1wUhwPnIJ9dSaX1hoYi9QZt/wGR/L1nDrjiN+UC+Pq
mV/Cc9Kkv+Wzbi0B3rSXqr1a2TPITBsbL/KJk03r0LOZ9Bcn3c+nEJ+K1wH3
nm9tgbz1N1nrX+M+uer/1ntI0x601hzmz09HjbPiQsx96Xcf0gG3PbjbPoab
w/YRj1pjxp/OpoIXOJMfwTUe4ZD0uCYPzx/zvvQj2KM1Y1a81cGaTe+AL3ro
oTGXwS/c6n/rOl/1ylcOu2hzHFlru7lNG73D4aL7rqU3VnqW7ZSssp2SjXnW
HNr6Unku/i7+Lv6ezl+Y4n/Ax3z3/PJwC9e+kw0s0OvIDB7TA8kB3/Q5vZT+
mW5JPu7DCQ7jpjzkGdfiCEzhhWv35amP3cdHdVMW/wV5K0ue6i/P1pPDKU61
ZoCe6X7ch3PYz6cPk+0ddq2flYt3OAmj6XswnK0Db8iBLOUJI/RV5eKRdOnO
7EiucYU+rD7KUY/9niz49hsOZ2/xXPYHZbCFwBJZZhPxXDof+YXd+NE+qrii
vTimD8g1mwfueM5f/m+caJ1YHMsf4S+fwn7/cXuXPave2kZOsEFu2eLUM9sd
jBhr+cXa36Yf+fblqRxYgAFjY7yxxhpv2ktrLTS7CX3R/iA8KYbS1AfvH/zC
Fz4IaecatPsfxyP8lCcbCp2R7YQ/31xl7xdfHrzAnfcyfdVcZrwzD7B/ZsPE
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
ile/4tWvePXrvInF38Xfq8zf/wcDH+6z
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xm4bUlZ3/GbyZC5M5P5mpikM5t54Jx9bhIzG9Mhc2JIa+bETGoUJcnT
4tQq6FXBEMcrKrYK2iIaRIJXbZzFKyoaRW1RcVYEhGYQsz9V63t64fPw185/
p+7znLvXXrtWDW/9frXeet+qt97+3f/T4//Vz7927dp7Peb43+Pf7X3//Hu+
57u93995O1/+5bu9xx//Y+/xC46X7338+7jjn+uvfPFfunjKR/yyi6d97K+9
+ORP+m0X3/zSlx5+/Md+7PBBH/gLLj7zWc86fNVXfuXhR3/kRw6f9ImfePji
5z//8DVf/dWHD/6gDzp82jOfefisBx44fO/D9x4+9mM+5vA/P+7jjr/91cNH
feRHHuT1+te97vD0p/26i+f/7z998Smf/NsvvvRFh4vP/qzfd/GRT/0VF1/0
hX/y4sPuf8zF9z788PG533DxDV//9Yf//UVfdHjTG9848vromzcPX/e1X3v4
0A/5kFGWcj/nsz971EH9lPED3/8vRh0+5ZM/+fDDP/RvxrV7T33KLz9818vf
9fC/nvFYz50f63C8fsb5h91///mx7udfdvv2+TfduXP+wz/0Q+fH+p9f2/79
9Gtfe3jxQw+Nsh7+nn928VVf+Zcvvuz2jYsX/Z/zi2d9xu+++MRP+C0XX/5l
f/7i2Z/zBy4+9db1i+/57idcfN3X/vXx+w/94L+++PZv+wcXX/s1f23c/+aX
Pv6CXL/7u/7pxbd889+5OMrl4mXf+vcuvvEl73LxFV/+F8b1S7/pb480//fb
/+HFt73s71+85Bv+5kh75xv/1mV6ab7+6/7GyLvfvvM7/vH47nf5v/w7/8n4
/I7/+4/Gn+/y9Of7sX/GnzYd5XPxiu99t1HHV/7Avxz3pfvxH3uP8V3er3n1
e14c5Tmuf+xH//0ohxzIgxw+9mN+zZDF973iFYcvfdGLRp/pj2M+h2972cvG
57Fvj5/ffvipV/3n0Q+w8JxnP/vwhkeeeICF+z/0F4++/4kf/w+jLuT22te8
1yhP/fW7fJ7z7D94+KY795x/6q1bZ8c6nL3hkUfOP//BB30//+AP+oUHfalv
j3mNvjz2y3n3jp9n+nj2+Y3zD7jv2qF0x7oNPPj74uf/mXFf2g/9kLcbWPzG
l7zkoJ/g96M+8leOtn/4h/2SCxh56Cv+4sWx7FF//fTx/+s3XRzzHv1361N+
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
HMWtdEi6I6yQH47ggzEJTuhK+EUPp7PyCUiLF9ZywIl10cYGeui1a/cN7uOV
9qqbPlCn6Wua/gB2DlgJV2F+4vn6wM8ck2+OsdX8xHfzHenmHOLGIW74ZBeR
V9yRZ7YU5c05xu2Rhl7qOWO3eRG91O9sJcZrPhK6MH7Av740vpCFPqUjk5d+
NzbMtdjvPNpLDsYMYy289e6LU13/3Pfgfm5obJ/rtJ91mLbJG9l3hk3Qu8M9
WDcmet/hGD4aL+f88B2G7QhXFn8Xfxd/T+cvuy5++JSfcuQDs+oA+/RH/lDp
6HP4Cu94hm/WJ2mvdk4b8I3DXCN7Y6TFp8mPOReWh/7HJzqI37Wf7oj7sKCe
+pxuyCZirqutbMHum7OzqaRvwRu9MTsFnzMssnHAcHYMmHUf7l2nC7qm0+ER
XLUWjazcJ2/3cU5Z+CCtMQ4/erZrvMvGkp8dP/JNpJeypcjXff5oGMVv68M8
qxz9SR6brNR1YMs9MoQX3GBHwR36vT96I/yQnbGH7ZxOCg/6nmxxtL020rz5
TU8aNhO6I70RtowPjeWtedCPbCPbOujBHdil59Ij4Ry3pMEdWMIZ/ZzfvLnG
xsHLNdLeCfnR5xh7a5SRXolH7s+1ZzN/NhP88Wxr670D4M77w7xCe83DtAXG
zWu8l9zDMf1gbGbfo+eTQXsfXJMZvNCjydX93nf7dx8M5L+RJq7tr2HXO8/7
wruBLHx6N3nnqE92z81GNsYGbZ3rC26caefi7+Lv4u/p/F36xpovrPnCmi8s
/i7+XmX+Lvvz8h8t/9HyHy3+Lv5eZf6u9UhrPeFaT7jWEy7+Lv5eZf6u/Slr
f9naX7b2ly3+Lv5eZf6ueAUr3siKN7LijSz+Lv5eZf6u+HUr/uSKP7niTy7+
Lv5eZf6ueObrPIJ1HsE6j2Dxd/H3KvN3nW+1zqdb59Ot8+kWfxd/rzJ/97ql
+3FPWTiVvum+vFzLy7W1Pewx7tl/xEbjmVf95H+6fM/ClTrqS3oGOek/uDBX
xgUyNXenA8IBHYPs6EuehSv54zCbUHtB+EnJkA0EL7a13EMPpCfOvaI3By/S
Ibumf5A3zrU2Gw/bYxN3XOsv9+2Vmb6V+w/s0bDYmjG6ie/4hW90JHqm+3M9
+9QV3xaPWr8tDW6QnXvkJR92C5iH0ez0ns3HQQciX9/Z2PMtuMeuAj98xumZ
9Ce8U4Y66gP6IbzpH+nbv6Y/4Jiep/183MpRV2O/viADXMIb3MIx9ZS3utON
las88oAHPJt2uteO79IZl/i86LV8M7jvvu/yMrbIQztwXh7uTRvfy7d2PnfI
hw0of79nkwluGNP0AZzyk5vTeCeRnfbhlHGBnQtXcM5v3ifeHWycsOg9Y4z0
2do1nNEf+rN3HPlIQ16exbf2WvSs9M0FldFcUH7796Dv/vBw8Xfxd/H3dP5m
U6GzplvGG9c+pcUn1z49/32vePfxHd9cuyc9Hr3pje8/OMZOI2/9DfvkTDZk
BYftsYQ7NhbzaroN3z1bTHqmvlRXvMIdnDrKaOi55t70E7rptd2/GZvg+Zc2
ltZd52OnW7afCe/yM+CeOX17R9uv5De6Fa6xE9B56SdsCmRKx9Ie+Ge/gG1t
Zj/SxnRLNoz0xuwq+qq9SF17lt5HJ5entGHA7/RJaeQHQ8Yr5ZNfaxtgHXda
tyZvXFTvdEv50AGNEf7wPN7RqzwLx9LDv/L4SeiGcdbzfp9+lxcN/rkmG9d8
0vis/epv3IBhOp3+9Nd9adjUyDN9FQf8kYM2KEsbjQX0P+ndkyd7kTqz97Cj
GKvUGS88a302mcAgebU+jXzlCZfa513RWmtc46vA79aDKBfmW99iLuZdZIzE
H/e1D6+aJ7qnj8kDF11rd/ZRdczP6De8a26YbdT3eOj74u/i7+Lv6fyNQ9Li
BA7hmmt54Yo0cQan4hhu4k1+CGMB7sifnuk3fGIP8Uzl0znMS8mPHkEXIb98
ozCq37XHp77X/uJlsLH0XqcXPOpDve9s2ljEoJjreNldZmyGO5drs7d9o0NX
dJ8+yudOB20dmt+s+S19+3Gy02R/wH19bSyAN5zSl3DWOm080o9sTnQ47dXn
6ZDq374kfa3f6Tfaahwhk20P61jbpt/JQrnSko80rtlSjDlwiBP6WVm+G6PJ
Ce71BY6TNbx0X93g2bo2dYZ/eIY3uPOMsVD59EPYUnft1D7l4yM7Dy6xAcEW
Tup3OKSHytN8SN08p27KNAZpozTue4fgg/5vb5dn6HfSk0VrFeSvLHYSuGgf
NBxJo97ki4+lJzd10X9dw6E0nlUHOG+/Et2S7NRD/sYI6bK14CgetGceB3Cm
NTL625wAZ7XTtc/WdbuWRp/I018+RNdkIG95+r74u/i7+Hs6f1s/oz9xgdzV
ZW9zyd6Sv8E1rkhHv8QdmHYPZzyDR/EpP4HnyJHuoM5xx7Pabu5MVu2x1Hb9
6JrcyEBfp1NrV3YgbdrNoemXg0OtwaZX4ovf6JmtVYtTmx94rE+jM0qPY+3H
ca89Odte4VGO8sieTmcuT0eCWdjKrkIvtE5M3dkapNGHsLjXIWEJhnFQe/Gy
fbj0RHyRj7zZQKQnH7+RKZxLT7byo3+SpzTwr5+V5Tv9Fkbg37V7MEmO0mhD
9dQvcAW30tGffKqrcUN6WDUe82GTBwzgmPZLo3z1hBllaru+ww/9a8w1rqpD
vMNx7wv5kJ26lae2wK96wrBn1ck1DrmGH/fVU1twx/34qN7ppdIY27VDWeRs
fFM3dhf1bC6gP6Rv7TYd1H19IN/ix7if/dOYqo3a7Lfsm67hH+/aV5hPnxzw
Rf80T9Tn0kujfYu/i7+Lv6fzFwZbp80+ogzvS750nCJj97PHZJ/he9zbXPAk
v0Sf+e/TLXGMD0J+MGbOij/6XZ3JV350am32e2vbzN/1O/1EnbRFGvpqdYUz
8/pt7dRZ+3knH55xyZfWoeFI8WPxafrsrw/OWEtOH6Vn+p29hY45Y8fO2Ilz
j/DD58rlP+Yn1s/0KNgjc3UmfzLN/w6H8JJuadzADdf52fMvsMvHqa6lZVPH
HWlxx7gI556BB7iVv7JgAZfJqHXJ+hM21EOf04HxUD7uw5K+hjf1k17b4BB/
4U0Z6WnybF+VtrevSv8ZO8N8aeRvrC+OBPxJDwOu5d9cw7Pq51n1UQdcs08I
BuAXZuRbXCw6J97BDZ5oO/3bd/1CP5ZO/nggX5yCObo8+ftdPVxru/zhFmb1
k2t1qw7edfKFYb+1n7f72qu81qqRrzaxD+KK8QZHcEZanDIu6EN91D4L9ddP
rhd/F38Xf0/nrzbGKde4CNd40Z78fOzq0lpu/MjOkm6Ls/nw81XQFX33PP6w
h/ju2rPtPVZfegKcqBc500+Sj3boc3jyrtd273TczMaiTflmcWbj0lkxDovT
a80S/tAnW2897SYPnE97zMNbfMcZx7/1TDhYHCc2li2u4TkO2TNjDRz7B7sC
Gwi7BKzxk8AzXPidLpwvnrzpX8YH/d66a9iWnp3cs+mHruGOXmo8IbMZq/7G
5Rqv1pixs+vrYknpy/am6nN49N0YB2vK1tfhED7JE/6zVyiPrGFNvd3PL94+
Ynm6D5vZT7JRuHZfnvo+jqibsvCOTJpfqL88yZF82OX0u7rR86ytcx8e8DC/
Pz0S5vQBPHcNa+mEdF+8gzHtz06pbcVNgUt54iDeKhf+pPOnTOOM6+IlFhdK
PWDYeOE7nvoNL/FXX3qu9d3KMDfDK7LUL/6KPSMd+cmz99/i7+Lv4u/p/MUB
eFdOXNiv31ZmfNO+uIJT+RjkQbb9ZXtxHxfSO1vD5ppPwvNxWt7qqp36MH2D
bPWFMuM4ucETOdIlW6OAm8rYfPtbzOK7h40lXm2+gaETts7a78Xy3eLdb+eD
zDh9OOR6z6Ni/G77e4e9hf2Gv4Geag+yPpjx/h+6tIHgiH6AC5wqBj47A1m3
h1cb45H7cTBdkX5IVnRLNn2yKa4WTOaD0G9wx0Yhn/RJmG9tAGzDA5zrqzCp
X2CN/SFeSNM1/McR5ZE7fc04ph/0p/6THia1X59qY2OF+3ENftWPrHAz/0Jj
pvqrj/ylkX6uF3j8wLS81Bn3YCMfODkVz7449t5F5mntu4UrMuQXae1Z8zj1
7ywe+eg/+cs7fbV9vXhu7qDO5JJ/Pl3XGOo3PGg/sDp7L/pNuTChntpVzH1p
PNMamGLLLP4u/i7+ns7ffOphHy7hG8dc5xMgI/3THmH9nw8iXTWbC260ni3+
+N0n/sozzHu2OMOdM6b+6lescfVkx2l9eXYaz/BdeB4vrUHz98Y3vN/AH3v2
XKc74xbMWBb3bn6H22fFaceLfPHbPqXDo3ErHnNob+7cSzztLdaL4+O00Tx2
pJn66IgzWxyMYW/hiyD79u2SP+zAsLb6pPu5j1O4AOfph+QQ1/Rvthq4wDm+
huw2rvP102P1VfvCyA2milVrbKYfFmejfVJ0tHwE+kG6dEh41k/ZWKSBNdzQ
x+lY0ns2vRQX2FCkgUf8gnNp6ItxxHzKddxRVvu/laXN9Drt8t5Qtvy1wX3Y
k8Yz5Ea++7i7vhezs7Uo5OWZzp7Df7+77mw78o078at73n2N7fq5dS7q53v6
qvTGHGNFMYPJp9hpxkjX8UB+0inP92yq2lhstcXfxd/F39P52556HPSprj5x
iY0m2wwcq2P+8mLmt9/JvfwZvsu3vcLZZOJqul/6bb4K6fT1fi0cmeKvtJ5T
B+mLI+UPj/gZrMfuT590HuW2v2iLW3Dv+fx7+CyuTJvL9DMU06m4Fe7jDu65
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
O0fTs8WHLwaL9vVeMTbku+o6LoW39tLtdcLmOO2HSwdsvSX5FLueTSa/QfsH
whwMdtaDOsFl7z24bQ0KHBevDCf21+1Fh084hX3j/35NHV6bE9jDpg18Rzio
7vrQtbz07TzzZvF38Xfx91T+wj79hM4Jh+bp4iooQx/ikfazhdtbwz7R+qrp
q76Xjf3MuijcpYvu12DLHy98kh/Z+yQLfaAcnDIe4AI+4pZP9Van9kx1tlpx
gffnkbr2e/oke0o8gk9zfX9zb+617ayX28XpHfjP777nUWuq26NUXIsZ/+nm
sNHQLVvDtvkSxnWxL6ZPY/Iozma3kWbz+Z+JjytOv3jAeGMNtTENdtQdX7S9
9VrknF9b3xvX8AUe9v4FaVrrBb+4BuetqY5T2UyMxTiZ/b91xTDXnlbldb4z
HOJSXMv+1z6CeNfeMWXRJ2G9tcvS5BvIZ6X87G7qno0f33y2DiTu4EDzL/f2
scSas2Sri5/tCc+u53rvC/Mn7/TJ/X5y+aqrudI+Lpk0+b/wwLV3RjY/PjDt
pl/jFj+SmF7O8tN+ayjYAuVv3R9uqROewohy9K1zBRZ/F38Xf0/nL10l3ZJu
Rrd0VpVn6JHiwZOXuOZ4SscUnxbW4GizQ5xf2/0Ta771xuREvyAf+DYe0Pfc
98fuTN8gf3KnG+KUuvgzbuAgfXO/vkw+fscdf/kd0if3dhW2BuOJv20vbvF8
z9tjixetK8OdbCydXzbPRZvnZacruoc/rvdnZ8ejzo7BE88W84LsWufNF98a
77lveK5bU9fO7MIJcd99h5O9ftg6Mf0F/8Y849M+hhLbv3UU7XvlT8/ewv4C
c60Zk3/nQOcLMO61pkv+9Da6nnSwB+M4Vry+eCQNnVIa9ZCH+UT+bOnzUWc7
gZPOZegsP99xJx1SWp/qpy5xR/vyW6UHkktzEJxonpPNsj0DrY2MR57rnPfe
cXEHFmFSXu7BoTTuw6b8fHrv+c0aEDjMHmrsxyPcsgbRfMd7zDoQbZjxjx84
aIvfxP137X3gfeZ5Y6H31uLv4u/i7+n8TYbsz9pDd5hxZ99l4J9syalYbMXN
oM+Qk35sTZE09CD1IBO/tSbAfF59WttTbF16iXYUN7j3t986J1Fdkp802ZU9
67f2KBWX2L10hf1ahP1+4/26gfZW5csn3/SYbNN+bwxrb3F7iX3KXz6tnSs2
sfs4714+EWUYH6wV1we4zg7ERmJfUWdwigtsrKLnOV/MOEYe/CTOg1YX/DAe
yh+33FeH7ivL2GgspdcbU/g0pDfeiq047RovG/EVzU3Y0KZv5N4xhtCf5xhz
fdiDtrO+R+xHv82zcW6eKx8u6LfKotNrF84kP9zQtzClnvmbvCNK79nGQPU3
JppDta7QH9mVxjvEunZ/s07zfOvOKm/9vGvjFB9QY6P7nYM+9f3HjvFxjouv
urSn9aw4J52JZ1w0Bho35dHZQI/Gf552OeVXh9b944l+IHMcM09zZjf/jXed
s0z1i/GUbbRz+4xvMOXdls6/+Lv4u/h7Gn+XvrHmC2u+sOYLi7+Lv1eZv8v+
vPxHy3+0/EeLv4u/V5m/az3SWk+41hOu9YSLv4u/V5m/a3/K2l+29pet/WWL
v4u/V5m/K17Bijey4o2seCOLv4u/V5m/K37dij+54k+u+JOLv4u/V5m/K575
Oo9gnUewziNY/F38vcr8XedbrfPp1vl063y6xd/F36vMX21b5x2v88rJfZ1X
vs4rX/xd/L2K/NU2eKSn6l99yPYCG9lz9Afs4xoZwbDvdAXYZvegV7B5SNM1
7nkWNujEZJ1PgYyzpUjPV4B38AU7xpP2BeOsfPJ3kD+eKkuaOBXX5C+N9Pkv
8Fde6kxng288hUUckw+uwLS+h8fWkKsTvuAT/skXruOL+uOU3+SDG3FKe+Gk
OB44BfvqTC6tNTAWqTNu+Q2O5Os5dcYRvykXxtUzv4TnpEl/y2fdWgK8aS9V
e7WyZ5CZNjZe5BMnm9ahZzPpL066n08hPhWvA+4939oCeetvsta/xn1y1f+t
95CmPWitOcyfn44aZ8WFmPvS7z6kA257cLd9DDeH7SMetcaMP51NBS9wJj+C
azzCIelxTR6eP+Z96UewR2vGrHjHgzWb5oAvfuih8S6DX7jV/9Z1vubVrx52
0d5xZK3t3m3aaA6Hi+67lt5Y6Vm2U7LKdko23rPeoa0vlefi7+Lv4u/p/IUp
/gd8zHfPLw+3cO072cACvY7M4DE9kBzwTZ/TS+mf6Zbk4z6c4DBuykOecS2O
wBReuHZfnvrYfXxUN2XxX5C3suSp/vJsPTmc4lRrBuiZ7sd9OIf9fPow2d5h
1/pZuXiHkzCavgfD2TrwhhzIUp4wQl9VLh5Jl+7MjuQaV+jD6qMc9djvyYJv
v+Fw9hbPZX9QBlsILJFlNhHPpfORX9iNH+2jiivai2P6gFyzeeCO5/zl/8aJ
1onFsfwR/vIp7Pcft3fZs+qtbeQEG+SWLU49s93BiLGWX6z9bfqRb1+eyoEF
GDA2xhtrrPGmvbTWQrOb0BftD8KTYihNffD+wS984YOQdq5Bu/+teISf8mRD
oTOynfDne1fZ+8WXBy9wZ16mr3qXGe+8B9g/s2HilL7V9t4RvQc9a66Gk67x
0dpRfUxmrTVt/qgvPWuOufi7+Lv4+/+Hv3hJ/yTH9ElyYefQNjiB5XRL99u3
C/P50/exnshNGfCg7fKEQzKDf/fzy+tfMsKd0qRvtE5Af+cHcS1/1/KJa55V
H3XIl6HP4Kn+UrfGgda84Yi2t+5a38N469n0qXxbA4BHsB6PXKcT4jWO6+ti
OlaHvb+jPch7P4j2ZhuRhny1iV0BZnEAruBb2uz9+lAfKQNfisHhOj6RGWxL
R5+lp2kzPrYnNt9AsaXSE/Ei3VTZfbbvNjuIulkjJj/tIyuywFvy0F/FPyET
v+t/4zy5tzZSnchGGn6F6iqWojWYfGobhx4340TN9dS4VYwI3+l9+RWmf+Ce
sSabPz37Sftwi1U4/eo3hw657YU4Vy4uieOhn2EZhsk5G2Z2S+8p/YE32qU/
8cO8rnXv8KyPvfusCTS2GD+6lpa9yPxGWj5H/WkM9kxzRvkv/i7+Lv6ezl9y
hTuYJ282Et+1RRptb+8STsGeNDCvb/BOnvoeT6XTrz7pA/peenijP9DR8k2o
Ex1DGuWzF8OVMtl89CMe4bl+ogOqgzQwyxYE2/LBO3UrT22Jm7DmWXVyjY+u
YdZ99dQW/eY+meCNesu/PVNwqR3KovPAhrrRW9WzdQswIH3xGPHQfeOafPOH
u19sDVzSxtavp8O5LgYjbKqP9K2RNgbpn/ZCGSekL6ZxfnHl40LrrPMdtDZs
H6Mqu4x06kCH3ceV8gzutF+omMT5KrQTd4yvbICeTf/XdvfJTf2yJWoneZOt
sWO/nv/lW0xnHJnxku4atpTpR7gx7B10P/qh3/ACzx6Ndz35hVuew6O5z2ju
vcU798RFbs/uXPt51yhvxq1+yUFsLP0JU95V+gPWvIPgQd3N4+JF/j7t8v7S
N3Bh30TvPu84eIF9fJWPvPkBs7X6jUy9x6Qn2+aPi7+Lv4u/p/OXXOlWftMH
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
+S42uDmyT3hWV9/VhSzZKugN6kXHo3/SBdk+8NJ3MnVPHniKM3jnGk/0nTq4
p1z1xxX9pl/sBaEzxqMjxjb7zvUhM7KcMQpmnIJ0D3+tK8/nW8yHR3251y73
vxqH6GrFS6KTtS/XNWzvuSNN67v0QzohXTq/gDTxojVj0uNavnacKn4gfLe3
SL/BXGnc8yePOCTf/fmXbCGdu52e6Hk+ksY2HCFn49e0Y824e9MW9a5jLTKM
62c6OvlJby+qMdG8g05P14YfeFJPZdDHxNktNlYxHnE2rMCOcY7OOGNKPHx5
VqYxdtpJ7r08b7rYSvszprf9suePxpm4f/jW8yvgUbrm9DOMWLwjpgT8eR8U
d2X6wQ5jnuX9oi/hEQ61o73w5gfJsbOQ8M67zzsRJ1vjIb3xkR3O+4uObuwg
Y32tnGkPPRt+QpwzltPZvZuMReqKv+TsWfks/i7+Lv6ezl+cMy+mL8rPfDYb
Ct2ATuCdC7vSact2lv3AtrrBcmc5kTubiLz0EW6QrfqxvdAR97xgQ6Hn+i2/
CH6xBfnUX54v/sDUMa+Pa/qltbLK1CfbmVVDTzAnn3rmtUP6IZtAsWz1b3uO
08Nxx54lOk5rpjtHlL05u4g0cYddhT4mXed3d3ZpsQSLT9ie1GLSe9Z1PFVe
nJJWXu2fzV+fTSUeFbOJbacYFMVk8scXY0w2FptTGCeMaeQL73ze9EPjk37U
Z9PGPs48ufA7GVq7Z0wma22QB4y0ZkN+dFc6mXJwxzuAXQ1/W39gfgBHk5/X
zjtrDP7nWDdtIO0n0r/xJFtZa63xm17YOfDGUbzL146fcEn3dH+bW4yYEu7L
z/gJo9qtfjDC5qf/8s2RrzZ6BxXv2jvIeMDH5X2nv3DKdXvoeg+Sf+/BntXf
8sY/5Srf3Iqc4d47hB1L3/jNeI/T6uY95H2TP2zxd/F38fc0/mqT9aZwyFdB
hj7Nm5XlPs6Y39If26/RXg22C7/hDS7wRyjDHBp3vKdxAVbNdb3/5Zd/W5uk
8Sy+SEtvwSd8Vh95ts5W+eqFV+o2z9G4Z/QLbmVz4QsnI3UwhpgLsw+1fgx/
8gXQwV3DMGzDMazw85IV7uAiLNPz2j8Ly9YmeK510e6HH1ww9vHTF5e+WLt4
hXc+uy6WffuMOtM0H4Trzk5RZv4B/UyXU19tJi8c0Y/+yNG4WlwucwljLHng
EFuK/jGe0aHnvTFfGDq2OQC9GmbmeP2EYX/Rz+rlmk7FTlOcDvVsDFEXY7F+
hfX2z2YP0a+u5/rn+y7xMdeTXT/kD8CFaVe5Png098veHn6HdE54gCtjenEI
5/6k60Mv9Q5gByQTmFM/GDGmto4aNvR/ZwLqU9wxrqSLa7v2kfn+2vtO/0vj
Wp97J0pjvmBMM1fD09Z54q9xCU/xGB+8v+TnPp76zX3vKBzRHjr84u/i7+Lv
6fyln+Wzxg3vcpjcbBOX513Ups77bb/GnK+OefGwmeAPnQE/cKv4b/S7GfPt
rvGbfuPnV1d9La3+xRv8wKPe/3TceTbj9eKkDh5JyyYgH3oxLGmjNrfXk54D
08W1sIaquEjxiPxgvNi4eNB+otaIFYcQx/ZxfeEuPbNz0LoP39LjkXziWr4G
5ckz3TJ/erHileH54tzKG9fUBabJW78ZC8ksO7n7sMsOxiZGvnw8xmUYgg3t
pyOxq8kbHnCGXsrPQlb0auORMRhfjeH6l02p9fTSq690ZEsPxyXl4qW60f9a
z7DtcR32/+wk8NR8hF44Yw6+avgCOmvM+OtaevYWOMAJ16XBK+Os64nfa5dx
lqwHkT8swwa8Tn/GjTHGGgf0TTHK9L/72ltsau+v9rilTxqP4lRp9Dt5tlYN
JlszQ4bGL8+Z/7WPXrned41bMG08NN8yprEdqr8xZpPpYZ73u/i7+Lv4eyp/
4VvesKpc5Ztfs/sqG8+K840D6kqHlC67B32QvtI6NPmpu/zwdtsXeek7xyH6
rrR0l3SfbS/xeE755vp8CGzerRPDH3q09uEg7uANHYYsyEaedMTiAepfmIRV
mITbzvwqZroxqrNg4hEdsjVl7CpxSnr3pWdjgW35Sd/5ae7Lk21a+tZQ+y27
h7zwpvgU7c11n/4mX+lbe6jNMzbtA1t8vQcv+4n8YJYdhBzYCsjHfAJmsqXA
t/EXFoy7xmTtYnfCKX6JbAX0VjjBI5zio4IZa8PUubPItRnO2Or4jTZ/06Xe
GB5gHs5hyPe5pmLGFpxry+Z+IZiZ2HlwcKqzNn3OM8WmzygeFYMXP9tPtOmd
o6wtzuColzHcOKh9xlnjCe6wORrX2FLozK1vab9D3Cmul/5oH/fbeie2Z5A8
pfds70FjGXzzi+lX/PH+IUM8ak0lHZpN0+/GSp844Rp/Fn8Xfxd/T+dv8U21
D8bpn/ZhWL/FtoIf6QJ8k9nt9Wc84mfN3jJ9BpNvZIHL7vnEZzLFN7osu46y
2hMJB2wkxgb6j/r4HW+Ul+/DeihyoBe01xMeYFAb6Vvs2+lwuFM8ejgho+LS
+52+mf3E/T136Hvud74n3RNH4ofy6FPtmYkr6ZPFuu/Mz/zsldf6Ms/Q03DH
ffU1RsyzvO8MmZAXmbQ+r/1fZMknbhzFrXRIuiOskB+OFO8BTuhK+DXjrb/T
8AlIixfWcsCJddHGBnqo/UG4j1faq276QJ2mr2n6A9g5YCVchfmJ5+sDP3NM
njEAzU98N9+Rbs4hbhzihs/tvPfzuCPPbCkzNsVjxjhbnF7PGbvNi+ilfmcr
MV7zkdCF8QP+9aXxhSw6G4K89LuxYa7FfufRXnIwZhhr4a13X5zq+ue+B/dz
Q2P7XKf9rMO0Td7IvjNsgt4d7sG6MdH7Dsfw0Xg554fvcJgxOO45LP4u/i7+
ns5fdt3idstPOfKBWXWAffojf6h09Dl8hXc8wzfrk7RXO6cN+MZhrpG9MdLO
s4PvOTQXlof+xyc6iN+1n+6I+7CgnvqcbsgmYq6rrWzB7puzs6mkb8EbvTE7
BZ8zLLJxdG4WfQFm3Yd71+mCrul0eARXrUUjK/fJu3OzlYUP0hrjOtcsDnaG
SzaW/Oz4kW8ivZQtRb7u80fDKH5bH9ZZ2PqTPDZZjTNLYMs9MoSXeSbB7cEd
+r0/eiP8kJ2xh+2cTgoP+p5scbS9NtK8+U1Pujwfk94IW+2JVXZrHuYe2Ls2
ve3W4M485/neoUfCOW5JgzvFy9XP+c2ba2wcvFwj7Z2QH32OsbdGGemVeOT+
XHs28+/MTc+2tt47AO68P8wrtNc8TFtg3LzGe8k9HNMPxmb2PXo+GbT3wTWZ
wQs9mlzd7323f/fBQP4baeLa/hp2vfO8L7wbyMKnd5N3jvpk99xsZGNs0Na5
vuDG2Ge8+Lv4u/h7On+XvrHmC2u+sOYLi7+Lv1eZv8v+vPxHy3+0/EeLv4u/
V5m/az3SWk+41hOu9YSLv4u/V5m/a3/K2l+29pet/WWLv4u/V5m/K17Bijey
4o2seCOLv4u/V5m/K37dij+54k+u+JOLv4u/V5m/K575Oo9gnUewziNY/F38
vcr8XedbrfPp1vl063y6xd/F36vM33Xe8TqvfJ1Xvs4rX/xd/L3K/M2mQmdN
t4w3rn1Ki0+ufXr++17x7uM7vrl2T3o8etMb339wjJ1G3vob9smZbMgKDttj
CXdsLObVdBu+e7aY9Ex9qa54hTs4dZTR0HPNvekndNNru38zNsHzL20srbvO
x063bD8T3uVnwD1z+vaOtl/Jb3QrXGMnoPPST9gUyJSOpT3wz34B29rMfqSN
6ZZsGOmN2VX0VXuRuvYsvY9OLk9pw4Df6ZPSyA+GjFfKJ7/WNsA67rRuTd64
qN7plvKhAxoj/OF5vKNXeRaOpYd/5fGT0A3jrOf9Pv0uLxr8c002rvmk8Vn7
1d+4AcN0Ov3pr/vSsKmRZ/oqDvgjB21QljYaC+h/0rsnT/YidWbvYUcxVqkz
XnjW+mwygUHyan0a+coTLrXPu6K11rjGV4HfrQdRLsy3vsVczLvIGIk/7msf
XjVPdE8fkwcuutbu7KPqmJ/Rb3jX3DDbqO/x0PfF38Xfxd/T+RuHpMUJHMI1
1/LCFWniDE7FMdzEm/wQxgLckT8902/4xB7imcqnc5iXkh89gi5CfvlGYVS/
a49Pfa/9xctgY+m9Ti941Id639m0sYhBMdfxsrvM2Ax3Ltdmb/tGh67oPn2U
z50O2jo0v1nzW/r242Snyf6A+/raWABvOKUv4ax12nikH9mc6HDaq8/TIdW/
fUn6Wr/Tb7TVOEIm2x7WsbZNv5OFcqUlH2lcs6UYc+AQJ/Szsnw3RpMT3OsL
HCdreOm+usGzdW3qDP/wDG9w5xljofLph7Cl7tqpfcrHR3YeXGIDgi2c1O9w
SA+Vp/mQunlO3ZRpDNJGadz3DsEH/d/eLs/Q76Qni9YqyF9Z7CRw0T5oOJJG
vckXH0tPbuqi/7qGQ2k8qw5w3n4luiXZqYf8jRHSZWvBUTxozzwO4ExrZPS3
OQHOaqdrn63rdi2NPpGnv3yIrslA3vL0ffF38Xfx93T+tn5Gf+ICuavL3uaS
vSV/g2tckY5+iTsw7R7OeAaP4lN+As+RI91BneOOZ7Xd3Jms2mOp7frRNbmR
gb5Op9au7EDatJtD0y8Hh1qDTa/EF7/RM1urFqc2P/BYn0ZnlB7H2o/jXnty
tr3CoxzlkT2dzlyejgSzsJVdhV5onZi6szVIow9hca9DwhIM46D24mX7cOmJ
+CIfebOBSE8+fiNTOJeebOVH/yRPaeBfPyvLd/otjMC/a/dgkhyl0YbqqV/g
Cm6loz/5VFfjhvSwajzmwyYPGMAx7ZdG+eoJM8rUdn2HH/rXmGtcVYd4h+Pe
F/IhO3UrT22BX/WEYc+qk2sccg0/7quntuCO+/FRvdNLpTG2a4eyyNn4pm7s
LurZXEB/SN/abTqo+/pAvsWPcT/7pzFVG7XZb9k3XcM/3rWvMJ8+OeCL/mme
qM+ll0b7Fn8Xfxd/T+cvDLZOm31EGd6XfOk4RcbuZ4/JPsP3uLe54El+iT7z
36db4hgfhPxgzJwVf/S7OpOv/OjU2uz31raZv+t3+ok6aYs09NXqCmfm9dva
qbP2804+POOSL61Dw5Hix+LT9NlfH5yxlpw+Ss/0O3sLHXPGjp2xE+ce4YfP
lct/zE+sn+lRsEfm6kz+ZJr/HQ7hJd3SuIEbrvOz519gl49TXUvLpo470uKO
cRHOPQMPcCt/ZcECLpNR65L1J2yohz6nA+OhfNyHJX0Nb+onvbbBIf7CmzLS
0+TZviptb1+V/jN2hvnSyN9YXxwJ+JMeBlzLv7mGZ9XPs+qjDrhmnxAMwC/M
yLe4WHROvIMbPNF2+rfv+oV+LJ388UC+OAVzdHny97t6uNZ2+cMtzOon1+pW
Hbzr5AvDfms/b/e1V3mtVSNfbWIfxBXjDY7gjLQ4ZVzQh/qofRbqr59cL/4u
/i7+ns5fbYxTrnERrvGiPfn52NWltdz4kZ0l3RZn8+Hnq6Ar+u55/GEP8d21
Z9t7rL70BDhRL3KmnyQf7dDn8ORdr+3e6biZjUWb8s3izMals2IcFqfXmiX8
oU+23nraTR44n/aYh7f4jjOOf+uZcLA4TmwsW1zDcxyyZ8YaOPYPdgU2EHYJ
WOMngWe48DtdOF88edO/jA/6vXXXsC09O7ln0w9dwx291HhCZjNW/Y3LNV6t
MWNn19fFktKX7U3V5/DouzEO1pStr8MhfJIn/GevUB5Zw5p6u59fvH3E8nQf
NrOfZKNw7b489X0cUTdl4R2ZNL9Qf3mSI/mwy+l3daPnWVvnPjzgYX5/eiTM
6QN47hrW0gnpvngHY9qfnVLbipsCl/LEQbxVLvxJ50+ZxhnXxUssLpR6wLDx
wnc89Rte4q++9Fzru5VhboZXZKlf/BV7Rjryk2fvv8Xfxd/F39P5iwPwrpy4
sF+/rcz4pn1xBafyMciDbPvL9uI+LqR3tobNNZ+E5+O0vNVVO/Vh+gbZ6gtl
xnFygydypEu2RgE3lbH59reYxXcPG0u82nwDQydsnbXfi+W7xbvfzgeZcfpw
yPWeR8X43fb3DnsL+w1/Az3VHmR9MOP9P3RpA8ER/QAXOFUMfHYGsm4PrzbG
I/fjYLoi/ZCs6JZs+mRTXC2YzAeh3+COjUI+6ZMw39oA2IYHONdXYVK/wBr7
Q7yQpmv4jyPKI3f6mnFMP+hP/Sc9TGq/PtXGxgr34xr8qh9Z4Wb+hcZM9Vcf
+Usj/Vwv8PiBaXmpM+7BRj5wciqefXHsvYvM09p3C1dkyC/S2rPmcerfWTzy
0X/yl3f6avt68dzcQZ3JJf98uq4x1G940H5gdfZe9JtyYUI9tauY+9J4pjUw
xZZZ/F38Xfw9nb/51MM+XMI3jrnOJ0BG+qc9wvo/H0S6ajYX3Gg9W/zxu0/8
lWeY92xxhjtnTP3Vr1jj6smO0/ry7DSe4bvwPF5ag+bvjW94v4E/9uy5TnfG
LZixLO7d/A63z4rTjhf54rd9SodH41Y85tDe3LmXeNpbrBfHx2mjeexIM/XR
EWe2OBjD3sIXQfbt2yV/2IFhbfVJ93Mfp3ABztMPySGu6d9sNXCBc3wN2W1c
5+unx+qr9oWRG0wVq9bYTD8szkb7pOho+Qj0g3TpkPCsn7KxSANruKGP07Gk
92x6KS6woUgDj/gF59LQF+OI+ZTruKOs9n8rS5vpddrlvaFs+WuD+7AnjWfI
jXz3cXd9L2Zna1HIyzOdPYf/fnfd2XbkG3fiV/e8+xrb9XPrXNTP9/RV6Y05
xopiBpNPsdOMka7jgfykU57v2VS1sdhqi7+Lv4u/p/O3PfU46FNdfeISG022
GThWx/zlxcxvv5N7+TN8l297hbPJxNV0v/TbfBXS6ev9WjgyxV9pPacO0hdH
yh8e8TNYj92fPuk8ym1/0Ra34N7z+ffwWVyZNpfpZyimU3Er3Mcd3HOdbkpf
7OxInJr+ibF27XK/kr2l7C3+YIhuyRdA36HL0RH1BV2MXohrrbUzfuAhX0k2
E9/1Ez7iCGwYUz1rfIFB19lq8gtnt48jyibrbFbkCjv41jpAvDJWZuPSl3BK
f9NX+CKdvoYj7cvmz86g/2ANF/RZ/FJPafCr8zE9636ckr4zVoyVrX/OB9e5
Y3t/XO8dMvHZOsx4oY10Qe1r76x+kJ68XJOJNPCmPu7rnzinvMrBH+k8V3xR
6f3uU7nSZf+UT/GftJNss+FIh/fF6NZnymQvVCd1gf/W3+COdPJY/F38Xfw9
nb+4os1k5v3b+WjFPywuDV6pO70Nhl2zZ+Bq+5Loh+qLMz7TPbOx5GtoDRve
+S6f9jqVHw65l33HdWXkp6BLqot9v4+8/n0v3vIz//2SR40J2jDPCZ37bIsz
wXeQjYX/oPNLJn/u3s7gvnO5DxfXeh4P6Y3zrLR55vKMEzzPYp7nOj98XhxH
v1tDPdeo3RzxA61Zbl9M9g3Y8clmQr/JZgIrdEk+CzigG/KzaFt+6uIDs5no
T/oa/EsP+/KFCzyiQ8JPuHUNF9lA4ojxO96pZ35zabQh/7v64aNyWyOBC9lV
1K3rfNnpkOrQXlc6IXsN/Gi/sVD/d444DHV+GGzDr7LV0ydOdt5Rc6i40Gfn
dcK/a2niQ7ExfYedztbtXaNMadrzIM/OHNcW3ztTwnfPdg6FPHFU2drms+fx
ze/SK0c69YB56TqLrRjEb3jkiUNe+Lz4u/i7+Hs6f2FYHcjWvh51xcNsIa3D
7p3atTqxkfjzDDx3Zgy8Z/dQB3wpzmGcKk5G9pY9F/2177fvno8/xY2ydg2v
xfllT1H/n33L/7h485ueNPRM8Stwjf/bPl3xfObZaDcHF2B8H4Nif12sws4I
lb4Y+FsM38OMY3jjkkd+m+eM3Bn50C3zOyifnspmU4xca+OMZXgB//ABp9Zd
5xNv75L7+KXv25NrrGsNHhzGl3hE7yT/bP75pmEev7LnF4/INWyEbZjZr2+n
m9EF4UZ+7f1hY8EpfZke2Fqv7P94kO+7NPiLC/NM9rm3QD3gC6daD+aaDikf
uFUn+TTXwkd1ki+Z4KA02ujZzh3b65zN2dIxXbuPY9K1/11d4gH5Zbd0jQva
6c89n9kq8+3trysjrvtUhja4ls5cKa54ljz0Y/G+xLfym/mC9YeLv4u/i7+n
81ce9Bqx6Fr3i2/wWZwo+IRlecBw72nP+lT/yvAbjOf/pq/CMp0vfmVPiV/5
7lu3Fo+0Jb9FawPwVf44e9TXRj3lLQaGcvgWXv+69xm/0S/dFzddvAt2DjHo
55mRt862s2cG7vGl9dnTR3B76I54UZyKOMXGMm0q4/Ns8uPW5flb9M/OkfHp
+7ZG+0zZ83zNx44/eMeD1owZ39hW9AWc8pEYszorDV6KdwEv+CdNe4joqfDf
Wi9yzJ6vf9LrYASn6Ig4G3fkk70FduAOtrN10PH0tTzxJ3sIjtD72suzj+Gg
/3DVeK0/YUoZnbnn+eLBS6NceSnDdRjLF0Ae2UnUNz+Veu39Y62phPPsK8qC
23wQ6pDvLb0R57Lt+S5Ne9rzp7U3z2/76+K7FMOsermnDt3XvtaoqC9Me094
N7ivnf6Mk9536gMP4lXKE0fFblz8Xfxd/D2dv/Cp38Sg0z6cwjXtby5f7Bo+
Yvqq9673LI7grXr7nm1W29RLm6X3B+/S8wV4RjvTR8l2H/siOexjLPrMjuMZ
efIp+JSv+Pqucd7f3saiHXQ4eO38q+0srMGR9tYWw7e1Z66tWYtrcYTemK8B
L7vfemy6KN515ld2lhlf/Z6hzxY/yv5dthbcgqNiLOifYvy2fgx3XOdnz19f
TCdjYOuTrXWjT+YXwJFs/mz77hfDvbMu6W9wG1+y4eeXh30+CHWDZZgsVoPf
9Lt7bDF4QAfER3WDYZjq7Fkcxmvt8Zs8Pa+8zmdQv/YK7GOU7e0e6Xvy3cdX
wZ/Ga7/1HuhMMhwiC2Wru/YWC1R52fma/zTW9907qzG+dSq9Z3zmSyNP9Sk2
cPFb/I4HsMrOCb9w7L666SP8MX4a/+XrWox/HMBZazgWfxd/F39P5y/9jH6C
R9LhCt2SHmEeLz6reby+FqeVPYCNwDVdhG6i72GZjie/1rOpP3nrF7JuX646
0AHxgO3DdxzIz0AnaO8vWSTLfPe9w9UXL+mRbCs4hkN0SbaVeMQ+DpP+xLXf
Yvqetc4aX+xF2vvN41f7cLczQy71yek3uDlsLPvrPdfkWUz8YiQqb67jHnx+
nLLyWeAEH7s1ctrKd4AjZMoGQs5w436xfLuGfzyQprVkuEd3at8rmaVbkh08
4Yj72U+ye+BAdn54g51wXtxa9orOtGytV3vlpGkvuXvywy9jq3t0VHl2jqZn
iw9fDBbt671ibMh31XVcCm/tpdvrhM1x2g+XDth6S/Ipdj2bTH6D9g+EORjs
rAd1gsvee3DbGhQ4Ll4ZTuyv24sOn3AK+8b//Zo6vDYnsIdNG/iOcFDd9aFr
eenbeebN4u/i7+LvqfyFffoJnRMOzdPFVVCGPsQj7WcLt7eGfaL1VdNXfS8b
+5l1UbhLF92vwZY/XvgkP7L3SRb6QDk4ZTzABXzELZ/qrU7tmepsteIC788j
de339En2lHgEn+b6/ube3GvbWS+3i9M78J/ffc+j1lS3R6m4FjP+081ho6Fb
toZt8yWM62JfTJ/G5FGczW4jzebzPxMfV5x+8YDxxhpqYxrsqDu+aHvrtcg5
v7a+N67hCzzs/QvStNYLfnENzltTHaeymRiLcTL7f+uKYa49rcrrfGc4xKW4
lv2vfQTxrr1jyqJPwnprl6XJN5DPSvnZ3dQ9Gz+++WwdSNzBgeZf7u1jiTVn
yVYXP9sTnl3P9d4X5k/e6ZP7/eTyVVdzpX1cMmnyf+GBa++MbH58YNpNv8Yt
fiQxvZzlp/3WULAFyt+6P9xSJzyFEeXoW+cKLP4u/i7+ns5fukq6Jd2Mbums
Ks/QI8WDJy9xzfGUjik+LazB0WaHOL+2+yfWfOuNyYl+QT7wbTyg77nvj92Z
vkH+5E43xCl18WfcwEH65n59mXz8jjv+8jukT+7tKmwNxhN/217c4vmet8cW
L1pXhjvZWDq/bJ6LNs/LTld0D39c78/OjkedHYMnni3mBdm1zpsvvjXec9/w
XLemrp3ZhRPivvsOJ3v9sHVi+gv+jXnGp30MJbZ/6yja98qfnr2F/QXmWjMm
/86Bzhdg3GtNl/zpbXQ96WAPxnGseH3xSBo6pTTqIQ/zifzZ0uejznYCJ53L
0Fl+vuNOOqS0PtVPXeKO9uW3Sg8kl+YgONE8J5tlewZaGxmPPNc5773j4g4s
wqS83INDadyHTfn59N7zmzUgcJg91NiPR7hlDaL5jveYdSDaMOMfP3DQFr+J
++/a+8D7zPPGQu+txd/F38Xf0/mbDNmftYfuMOPOvsvAP9mSU7HYiptBnyEn
/diaImnoQepBJn5rTYD5vPq0tqfYuvQS7ShucO9vv3VOorokP2myK3vWb+1R
Ki6xe+kK+7UI+/3G+3UD7a3Kl0++6THZpv3eGNbe4vYS+5S/fFo7V2xi93He
vXwiyjA+WCuuD3CdHYiNxL6izuAUF9hYRc9zvphxjDz4SZwHrS74YTyUP265
rw7dV5ax0VhKrzem8GlIb7wVW3HaNV424iuam7ChTd/IvWMMoT/PMeb6sAdt
Z32P2I9+m2fj3DxXPlzQb5VFp9cunEl+uKFvYUo98zd5R5Tes42B6m9MNIdq
XaE/siuNd4h17f5mneb51p1V3vp518YpPqDGRvc7B33q+48d4+McF191aU/r
WXFOOhPPuGgMNG7Ko7OBHo3/PO1yyq8OrfvHE/1A5jhmnubMbv4b7zpnmeoX
4ynbaOf2Gd9gyrstnX/xd/F38fc0/i59Y80X1nxhzRcWfxd/rzJ/l/15+Y+W
/2j5jxZ/F3+vMn/XeqS1nnCtJ1zrCRd/F3+vMn/X/pS1v2ztL1v7yxZ/F3+v
Mn9XvIIVb2TFG1nxRhZ/F3+vMn9X/LoVf3LFn1zxJxd/F3+vMn9XPPN1HsE6
j2CdR7D4u/h7lfm7zrda59Ot8+nW+XSLv4u/V5m/2rbOO17nlZP7Oq98nVe+
+Lv4exX5q23wSE/Vv/qQ7QU2sufoD9jHNTKCYd/pCrDN7kGvYPOQpmvc8yxs
0InJOp8CGWdLkZ6vAO/gC3aMJ+0Lxln55O8gfzxVljRxKq7JXxrp81/gr7zU
mc4G33gKizgmH1yBaX0Pj60hVyd8wSf8ky9cxxf1xym/yQc34pT2wklxPHAK
9tWZXFprYCxSZ9zyGxzJ13PqjCN+Uy6Mq2d+Cc9Jk/6Wz7q1BHjTXqr2amXP
IDNtbLzIJ042rUPPZtJfnHQ/n0J8Kl4H3Hu+tQXy1t9krX+N++Sq/1vvIU17
0FpzmD8/HTXOigsx96XffUgH3PbgbvsYbg7bRzxqjRl/OpsKXuBMfgTXeIRD
0uOaPDx/zPvSj2CP1oxZ8Y4HazbNAV/80EPjXQa/cKv/ret8zatfPeyivePI
Wtu927TRHA4X3XctvbHSs2ynZJXtlGy8Z71DW18qz8Xfxd/F39P5C1P8D/iY
755fHm7h2neygQV6HZnBY3ogOeCbPqeX0j/TLcnHfTjBYdyUhzzjWhyBKbxw
7b489bH7+KhuyuK/IG9lyVP95dl6cjjFqdYM0DPdj/twDvv59GGyvcOu9bNy
8Q4nYTR9D4azdeANOZClPGGEvqpcPJIu3ZkdyTWu0IfVRznqsd+TBd9+w+Hs
LZ7L/qAMthBYIstsIp5L5yO/sBs/2kcVV7QXx/QBuWbzwB3P+cv/jROtE4tj
+SP85VPY7z9u77Jn1VvbyAk2yC1bnHpmu4MRYy2/WPvb9CPfvjyVAwswYGyM
N9ZY4017aa2FZjehL9ofhCfFUJr64P2DX/jCByHtXIN2/1vxCD/lyYZCZ2Q7
4c/3rrL3iy8PXuDOvExf9S4z3nkPsH9mw8QpfavtvSN6D3rWXA0nXeOjtaP6
mMxaa9r8UV961hxz8Xfxd/H3/w9/8ZL+SY7pk+TCzqFtcALL6Zbut28X5vOn
72M9kZsy4EHb5QmHZAb/7ueX179khDulSd9onYD+zg/iWv6u5RPXPKs+6pAv
Q5/BU/2lbo0DrXnDEW1v3bW+h/HWs+lT+bYGAI9gPR65TifEaxzX18V0rA57
f0d7kPd+EO3NNiIN+WoTuwLM4gBcwbe02fv1oT5SBr4Ug8N1fCIz2JaOPktP
02Z8bE9svoFiS6Un4kW6qbL7bN9tdhB1s0ZMftpHVmSBt+Shv4p/QiZ+1//G
eXJvbaQ6kY00/ArVVSxFazD51DYOPW7GiZrrqXGrGBG+0/vyK0z/wD1jTTZ/
evaT9uEWq3D61W8OHXLbC3GuXFwSx0M/wzIMk3M2zOyW3lP6A2+0S3/ih3ld
697hWR9791kTaGwxfnQtLXuR+Y20fI760xjsmeaM8l/8Xfxd/D2dv+QKdzBP
3mwkvmuLNNre3iWcgj1pYF7f4J089T2eSqdffdIH9L308EZ/oKPlm1AnOoY0
ymcvhitlsvnoRzzCc/1EB1QHaWCWLQi25YN36lae2hI3Yc2z6uQaH13DrPvq
qS36zX0ywRv1ln97puBSO5RF54ENdaO3qmfrFmBA+uIx4qH7xjX55g93v9ga
uKSNrV9Ph3NdDEbYVB/pWyNtDNI/7YUyTkhfTOP84srHhdZZ5ztobdg+RlV2
GenUgQ67jyvlGdxpv1AxifNVaCfuGF/ZAD2b/q/t7pOb+mVL1E7yJltjx349
/8u3mM44MuMl3TVsKdOPcGPYO+h+9EO/4QWePRrvevILtzyHR3Of0dx7i3fu
iYvcnt259vOuUd6MW/2Sg9hY+hOmvKv0B6x5B8GDupvHxYv8fdrl/aVv4MK+
id593nHwAvv4Kh958wNma/UbmXqPSU+2zR8Xfxd/F39P5y+50q38pg/c1xY6
B2zDqj7rvrbDCM6YV5KDcuhDeOoZ+iMezHiyd48ycWPaTe6MeSlbvPcy/SFe
4KR+gOfsLermOXVTJv2DnKXJv4AvcBz+PaNfit2hztLLP/sPLukbz+JGeq++
NCaUHh7URV93DRvSZAsq5oZ+h1myUw/5w0MxPfCQLsVeDt/KzB5vLAnveNja
7dbFab/yXeenb++v7/qxWP3y3q/pMn5pd7pgvvd9jIj2AsWjfAvFxyi+FE7F
H7/R93DLM9rdPrXWJabzxyltaM0kufs0/uu/6e966cE+o2wp+sl4BX9sKFvc
wbPWR+NSPnT39tyhH25rxIbeSLfEGbqi39hOSj/tLncPrm0+ihGvmD/BPEP/
e2+1RsW7zNi33wMIC80BYdC7St+oPw70TjTempNo63Oe/ezxXmOvUaY0+f6U
Ky35SOMaf+AKX82zFn8Xfxd/T+evfuVn0B4Y0iZ+w+mffulBHHP8gX1/uCcW
rLkt7HtW/tLjMq6Sj3LwxHzZ83733bxYbH3X4qy7hjV8JGu6CJ7igne3vvDX
fWnUH+9hWhvJ2B9sa4Oy0gP1q/TuyZMM1Jk/Bb5xvH1entWfZIJ/xoViFsGA
POmA2gdXrffex9aA3fDUGTD063zF+cSnneDRWFLyKg4/ecCQa+0uBoY6pjf6
rVhPxb/oe/uF8g3EpXwC+eLbE5TtpOfUm20kbhU3V3rcEQMCf3Bq83kPH4J2
G4vIi5zID8ZgULwImDRnePrTnsbOd2CX9x6guxlzyFJfW1dtXRl7knj69uTZ
Z/vWMfPvnLdvqNie7CE4Nf0N14e+uMXpPcOb4k7wz89YhNcHn6T3m/jX9Erc
wnU8gFHcac0JjBXvRZu9N7SRDGCzOQW8wcx+Pri/9iw9FB/k2d55/e13vJNm
2mxeMuyfyic/OIR9HFr8Xfxd/D2dv/AbL+BH2+iBMEi3xUkYdX4WW413vjjo
0uMAGYh9J96r2K7ewXQpPKGT5demU5AzXQP2cYANSd75RpSrPHz0nuZrwWVl
+i6dPspvn8/Vfd/lNdfhXhvtoBPIwz1jiXFmtvO5Y4587KvDbq4+5NFYRI/B
O5hlN2mNmXFB+2Caf6E9wvRXv6UHkT3swSiMtKYYX1rPhRvFPGw/b/uUsrfg
Xc9K336gfWy/9r62Nixf+N52sref5B9obXO8KiZUMRRxhd7oHmzzHXjGvlhy
gSljBDnpH1jSX/BBlrBh/TLsHDkxsKvP4cW5C52DZ2yWv/gSnbPXWgj6HX1w
i707OOGvM1M6S4wP3R6krtlV2nu07U96q3gUdEbcaR+u+94T8KvexgFjJyzp
G/jwXf+1Bia7CrzqG3jXFn2mXcZoY4zxv7mhNMXQdo+85APD3mHmD2QEn57F
I5yFF/Lt3RRWF38Xfxd/T+dva8+8L9Mh6ameIQ/cpAPwMcJg8028EfPOO5gP
0plY1sI6P1RecJy+h084BHd0S1xv7Rte4aN4QnRQedEfyF6cRmUp155HdVA/
Zcxz2555EINPn3SWm/VD4vMUR67zG82555z69tAzyJC8009wlf6grGLm4gZO
scPo7+JT0aNhrfj5fNJwB/PuZ0PpHFLjGdynN7Z/VZr28+CatPhS+vTGuLZf
L90Za3Fgz6P2BfmeDqlNdFo8KO5R/gR6m+/yhmV+bdfsJcWLIo/2qZEFnpgb
6DP9YS2WuYdP4xI/Fh1QP6Q3vuGRJx5gga6m7/NLkBtbivLUX7/LBwenb/zW
iD+PB/OcsVtvFXe39dV0yO7hXbHkJ/+uHUqHa8Wt6PwyafEDFo25+gl+jdva
7r0AI8W/Uv/mgO3LM/a+rfeg6+aJ0uCA8V08SeMGecIeTLA1kqVrZeEpO6T3
mnHIGsrOel38Xfxd/D2dv2wL+Ege5ovwTKdif5AfGbA7bGt8ht6Gi2RBvyQf
MnOOsvbT0+ARvv3OfmFuKj0eqye9AyfMs5VtHrv5QflBBh/l5/s8e+SV46xu
6eVNbzU3NueWXl/5fTt7Y8hknmN8z+BM5xtPe/SdLQ7dtVEnY4T2FpvfWGIt
gLGLrqCPjUH0axiDQ7ogm3vroelk+b7hIF2rWBCu44F+aK+rvD1X/H15xaP9
+TLK8+e3+CK/1khnU9nzp7/0RXVlB+mMMPHf8xvgMU63n7k1YMZjeBB/iL6P
FziiP1wbo8iPjWTuYb12Ydxjv2dvYEtx5hpd3PgpLe5qL1tX/NUuYzduissZ
J4xvuKPf9GvnTmdLaV2Z+/kXijMhvbp2pnXrr9tzu53JffbUpzxl1BeejPM4
4h1izGxfPL1R2+Bfv7iPU8Y+Y6r32v492NkQ2UV79zUflCddmkzxR3/jmXGI
LMyr8EYaMnHfu8l7S3r91Lxv8Xfxd/H3dP5qLzsDzNPtfLpfrOCwT8/zXWxw
c2Sf8KyuvqsLWbJV0BvUi45H/6QLsn3gpe9k6p488BRn8M41nug7dXBPueqP
K/pNv9gLQmeMR0eMbfad60NmZDljFMw4Beke/lpXns+3mA+P+nKvXe5/NQ7R
1YqXRCdrX65r2N5zR5rWd+mHdEK6dH4BaeJFa8akx7V87ThV/ED4bm+RfoO5
0rjnTx5xSL778y/ZQjp3Oz3R83wkjW04Qs7Gr2nHmnH3pi3qXcdaZBjXz3R0
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
L6zlgBProo0N9FD7g3Afr7RX3fSBOk1f0/QHsHPASrgK8xPP1wd+5pg8YwCa
n/huviPdnEPcOMQNn9t57+dxR57ZUmZsiseMcbY4vZ4zdpsX0Uv9zlZivOYj
oQvjB/zrS+MLWXQ2BHnpd2PDXIv9zqO95GDMMNbCW+++ONX1z30P7ueGxva5
TvtZh2mbvJF9Z9gEvTvcg3VjovcdjuGj8XLOD9/hMGNw3HNY/F38Xfw9nb/s
usXtlp9y5AOz6gD79Ef+UOnoc/gK73iGb9Ynaa92ThvwjcNcI3tjpJ1nB99z
aC4sD/2PT3QQv2s/3RH3YUE99TndkE3EXFdb2YLdN2dnU0nfgjd6Y3YKPmdY
ZOPo3Cz6Asy6D/eu0wVd0+nwCK5ai0ZW7pN352YrCx+kNcZ1rlkc7AyXbCz5
2fEj30R6KVuKfN3nj4ZR/LY+rLOw9Sd5bLIaZ5bAlntkCC/zTILbgzv0e3/0
RvghO2MP2zmdFB70PdniaHttpHnzm550eT4mvRG22hOr7NY8zD2wd216263B
nXnO871Dj4Rz3JIGd4qXq5/zmzfX2Dh4uUbaOyE/+hxjb40y0ivxyP259mzm
35mbnm1tvXcA3Hl/mFdor3mYtsC4eY33kns4ph+Mzex79HwyaO+DazKDF3o0
ubrf+27/7oOB/DfSxLX9Nex653lfeDeQhU/vJu8c9cnuudnIxtigrXN9wY2x
z3jxd/F38fd0/i59Y80X1nxhzRcWfxd/rzJ/l/15+Y+W/2j5jxZ/F3+vMn/X
eqS1nnCtJ1zrCRd/F3+vMn/X/pS1v2ztL1v7yxZ/F3+vMn9XvIIVb2TFG1nx
RhZ/F3+vMn9X/LoVf3LFn1zxJxd/F3+vMn9XPPN1HsE6j2CdR7D4u/h7lfn7
/wA9aBBe
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Wm0dVl13veKrUik7xOlx2mVXrGVVnXPxYntdE5SwemjJEiJHWJjC0nY
QsMMD0RTIMASIEBYDRSIRgIEVaUCyVBINEWBQZJR0RWyRCeZnqIr+sLJ/u3z
zrf+7xnSp/vNd9UYb51911l7rjmf+cyz5mr22n/gu777wX/q91133XXf94Dt
fw/+zu//w9/7vd/5A3/iG/3xJ7/zYX/oDz7s92+Xj9j+PWv75/rON/3R86c8
+e85f8aP/iPnz/mpf/b8HXfddfjUJz95eNxjf//5i1/0osOb77zz8ImPf/zw
Uz/5k4e/+ou/ePhrb3nL4fGPe9zhp5///MPP/szPHD74gYccfvTpTz/82LOe
tX33nx9+5Id/+EDWl774xcMzn/GPnv/iL/wH5899zj93/su/dDh/yc/+a+c/
/Jf/vvNXvfLfO/+hJz7g/IMf+MB23z9+/qu/8iuHX3jVqw5f++pXd1lPe+pT
D29761sPT7jxxr0t7b70JS/ZdaCfNv7m7/zfuw7Pfc5zDh/76EP3a2V/+Sl/
7+G3fvM7Dn/l2d/svrNNh+362Wc/9MQnnm26n73+da87+/W3v/3sYx/96Nmm
/9l1V/77wr33Ht50xx17Wx94//95/uY7/9j561/3oPNfeu3Z+Yte+C+f/+RP
/NPnb3j9Hz5/2Uv/jfPn3fTA8/e/7/84f9tb/8v9+49+5P85v/s9/9P5W//a
f7GXv+OuB5/D9X2/9b+fv/Mdf+J8w+X83e/6H87/+q/9N+dvfMN/sl/f9ev/
3V7nvXf/z+fveff/eP5rv/pf73Xf/tf/26v11fmVt/1X15S3fuVUftutPqd6
jv61q/YWh+JT3IpncS7+9Uv9VT/Wv/V7+VCelD/lVflWHpaf5W35XJ6X/42L
xssLX/Av7dzd7N/0+vfPP33PPZs9v7PXefzjvuH885/73H799fvuO7zn3e8+
vPqv/kfnv/2hD+3y6fr+973v8MrbbrumvPUrp/Lb7orfFb8rfi8evy9+0b+y
xyPdNlvP6flbv/mbh6c/7R/a/PJrB3r8f3/rb+2y6f3UH/kHzsXiE5/wTed/
4zd+4/BzL3vZ4b133314xctfvtv/2ttv3/GGl+83fA9vfMMb9vriWLvPeuY/
dk7fxz7mMQdt/9RP/jObLd+A71s7/+FuL3n+ft5NNx0+8uEPH37w0Y/e65P9
q7/yx7d2rj/8xI//+F6fz3y/4X32tKf+g1d9+utvv2H38ebr6zfdt38Puerz
H3z0dbtOsGOv3yJYwOzlP/dvnf/Ej/9T55usnXN+g176kn99+z363vMPffA7
z9/1zv/+/OMf+383+//XDcc/fr7x43xra+fwb/6N/23n9pvu+CM75+d6YuGO
N/6nO5eHz+7Dc3wla+JFuXuVnZZP/cqp/LZbfapn9a9dtbc4FJ/iVjyLc/Gv
X+qv+rH+rd/Lh/Kk/CmvyrfysPwsb8vn8rz8b1w0XuDk+8c+5vftcSU+yb3t
5//Q3q/py/jE9/TiP/WVq/Oud75zr9/y1q+cym+7K35X/K74vXj8PvlJf/f5
z9966y5b3+zzxsf/neeP+cG/Y8sjXndVR32vv1/4ghds/erD9k84bP36/veW
c+w2fv2+Rx2+8uVH7vjoo/XXcoWvfPnLB3r5W9+vjAx6sJG9rtlOZzoo0y67
YC83efKTnrTV+SN7bjJxtPl/0+OJG/YP3P0nn9n88u3Hf9ddTy95j39sfNIP
/V3n8oXt3p0vcif8wJet/s47fPQ7JDfDvdf98vmeX+ErHrrGu8aOOripjhxt
8j25De5PHffNvcrUx/O3vPk/26/FyMSG/KXlrV85ld92q0/1rP61q/YWh+JT
3IpncS7+9Uv9VT/Wv/V7+VCelD/lVflWHpaf5e21fL6f5+V/46LxIgeXY4qj
n3vZv7nHsLzbb88v/9Iv7TG7tX8u/sjmU/EnbuXo7qV7y1u/ciq/7a74XfG7
4vfi8SvmjDX1o/TccpGrY0vjzVtuvnnrT5+y26zehomys1tu/tbddpjBZhtj
svsMLsbAZNGBndrUPxvbygUaF8bM8lzfHX8Hbt9tMhfkk13ul1PA5JhrPHC/
lk+88rZv230BH+N8ftv8d/32u3Elb7nuMHnRjz79Hz6/9ZZ/9/zH/8o/ef4j
P/z37+PjmYOaXOzmV/w75x/+m3/y/Dfe+79czfH8Zr3i5f/21XkLdYaT5iHM
c6j3mlf/x1fnN25/zbfvfFSOd8pcy8uUa8+9roe32psYUZcscdTy1q+cU/nT
bvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/KnvCrfysPys7wtn8vz
8r9x0XgRt+LcmM3vysz3mJeSC2v32T/2T5zTX/z7XVMmH+W/z37mM7u8lrd+
5VR+213xu+J3xe/F4/c43/otu13WKtzr87OfefjetnJtbP3zmX6YDvICeBzn
lm8485222GM+Vv9q3M0W41eYwNzYepO766xv16fDUB33sl9d/Tv86E0fMs1b
H8fr37zrBXe60X3TYfcNP8xY/Wde/K/uORAd/IYYPxs3b23vPseDmXuXg7vG
VbzCV3x8wU//i/s8Po7hyMw7mMfGQfz6+Vv/4H6fcrxVbt7ePDdOmgvZsNqv
Z84Cz3EXn33OtZiZGMFbMYC7LW/9yqn8tlt9TvUc/WtX7S0Oxae4Fc/iXPzr
l/qrfqx/6/fyoTwpf8qr8q08LD/L2/K5PC//GxeNF+2IQ+slxmnaFrvwks9a
2zv+prxsj0f9nXJ1/a7pB/VzLW/9yqn8trvid8Xvit+Lx69+eNY6ydL/s/HK
3MS+Tkq2NVP3+FSuHnnHeeUH7X25MS29zQ2zj+6+h5H8wv2bzft37LQ+Kb+l
n7rGqPSlI9yurA2c6cuNzf2Dnfbgr641FnL088a5z3/eH9jXWeU4T7jxG/c9
Bji04XVuXLzhs3MFP4YPeIhHfo9wAe9w1jU+4xW+zDw97uHwzDlMPuYah6fc
Grn6+EzOcHjWArRH5uSE1gp8Zx5FvqcN97e89Sun8ttu9ame1b921d7iUHyK
W/EszsW/fqm/6sf6t34vH8qT8qe8upZv9/Ow/Cxvy+fyvPxvXDRexBQZ1i3M
FclXxaJYlefKg81FaZeufqdgo18z1jP+s8bR8tavnMpvuyt+V/yu+L14/GrP
/XRWd+aAzc3ak+M+dtljRFdrpvpi9Wb8qw83jzP7dsjTv5MnbrdYP9PerJ3D
QL6rrnzYfC2MYH7U/7q9fXPN5p7t9Zl9TXCXR8MDhnzEP/YcWSs1xiVTrmP/
lHkmvsYb3Ntyk50r+DZ5FC7Jv9zTOJJTzZ4s8wzDMfWVq2+eQb5HnvpytCkn
07z+8FZbvjO/MevdYgG/zWVYCyB35vnJVb/lrV85ld92q0/1rP6ndo29xaH4
FLfiWZyLf/1Sf9WP9W/9Xj6UJ+XPtby6n2/lYflZ3pbP5Xn537hovNBRjM++
R9c+xZk9AeZozLtoV8yx1ffi29wQO62ztLz1K6fy2+6K3xW/K34vHr9b7O1t
GV+6R/75mle/et//Y2yp/dlju+l4NvPGxsijj/2pMz49zvke4037Ynn23opn
OrBHH2w8qi319eFi35jbb4M9Q/TxPby1N3O89v/IneUsfMBHxvL8zj9yoc99
9nuu5lh8jXv8a1+VfEvuZN7C9/KgmU9QXi7JtZSbr8AlORTuDU+1J8+TT2l3
uDz5pHtxTP41vMTDaW/2kbnHejeuK6cvztnf1PLWr5zKb7vVp3pW/9pVe4tD
8SluxbM4F//6pf6qH+vf+r18KE/Kn/KqfCsPy8/ytnwuz8v/xkXjxbzLMf+9
YY8XcafeM5/xjKvzLn4TxDTbzOuIRfM22j7OTT7omvLWr5zKb7srflf8rvi9
ePx6LsR9PvXT9qfRn03b5xkd9bfWSNXT34tX92pHe1+49xG7zuZ85a/imDyf
6rLjiMcD9jVNMmDDbvmv7+mkfxb7cgU4yyfkC8bq9srNfljl1lyN0XHEvid8
k8/MvMPv/Pb/tfvU3AGOzfwDzijHJ9eTY7mWo+GDOYbZU4U/ynFMOe5oC1/V
NfeOJ3PvXM88v/ZnnR0PZ21i8jdzJuQq33ixcx1PP/LhP7Xfq52Wt37lVH7b
rT7Vs/rXrlN7B4fic4rb4Fmci3/9Un/Vj6f+Hb+XD+VJ+VNelW/lYflZ3pbP
5Xn537hovJh32WRff/880N17PzPzlfJfMSumXfuNkO/6ZLM+z+9Dy1u/ciq/
7a74XfG74vfi8bvyyZVPrnxyjQdX/K74vczxu9YX1vrCWl9Y64Mrflf8Xub4
XfvN1n6ztd9s7Rdd8bvi9zLH73r+aD1/tJ4/Ws8Prvhd8XuZ43edR7HOo1jn
UazzZFb8rvi9zPG7zidc5xOu8wnX+aIrflf8Xub4XefVr/Pq13n1630TK35X
/F7m+F3vL1vvL1vvL1vvH1zxu+L3MsevPtg40b3WXKd/lE+IO+No+QQ79MPw
JF99Mo7zGTftesgP6GSN1VibPXw7e5fYxm62sk1Mk20MLDfWrvbEPV3hRH9t
+ls989g/+zPfsq/n/vTz/4U99pX7myy/LWSwA0ZkKJMbyAeOdt665xXG2LNe
695Zb8Glm577z+9cwlPr1ealcNp8Ovtwj/+2HGfnLK75zpw8TpsL8Swq3uO8
z9nLJa+Tu8nlZi8ZfNSBl3vN689e6pa3fuVUftutPtWz+teu2lscik9xK57F
ufjXL/VX/Vj/1u/lQ3lS/pRX5Vt5WH6Wt+VzeV7+Ny4aLzAbTPjBd9rz++XT
+p/YnnUzc1VsEJvye7LZ2fLWr5zKb7srflf8rvi9ePyqM/vWYHqM0Tuu9qHy
Un21ZxD9M8c6cuQf7mWf+uw1NrXHVp8/Met+3/vbegc7XBv/urYGTD/rtXxn
LM93chl7nfybcnWsE+vPJ19lv39+W9igLZyChTxJfWVkGi/T2fjbGNk8Mp3x
yr32DcOEP+Uss59KfkGm9Wf2ycdmDzPumXPHC7kbv2oXn/HcXMeWN+2xIS7M
dShnn9xw8kBlOA0P3HfN7pa3fuVUftutPtWz+teu2lscik9xK57FufjXL/VX
/Vj//m5+J7M8KX/Kq/KtPCw/y9vyuTwv/xsXjRc20p18WMNJTmp8px2/KfQX
i+TAAa4zjyc/pXfLW79yKr/trvhd8bvi9+LxC286socP2Ece7K0pmneF95Tr
p9llXxts2UXWnDXgHvmBflr/y2cwlw/Yh2QMSk/zPNo3B8S/bJMT8Lv+n0z5
FN3cRzdtmuvFKXWU4xS/8q9rOYR75E3q4wGd1SdfW+YN5EnyLffCWx16w4zf
pz7e0cWzNHONY+q4lw74O8/pyNlgRw/y+f54BtFxboMfcH6erTWvL/ebfE9u
aEzAR+x03fLWr5zKb7vVp3pW/9pVe4tD8SluxbM4F//6pf6qH+vf+r18KE/K
n/KqfCsPy8/ytnwuz8v/xkXjBQ4+xSLcxCg9/Fa4FntshAE91LnyrPm+70Wc
WudoeetXTuW33RW/K35X/F48ftlFpntgDid/m5OhH31cK4OJe9Vxv36fTcbG
MKeLevIYn/Tjb/VhLheydkt/PmUz/dTRvlwXVtpkv3lyePMp/sgv6DB4shHf
yGEj3UYmW/iLnrjmXjq55nPXMFROT7bwl/LxO70nL1IHT9mhLfv65Bx0Mw9B
T79Tw3f1Z8+yXE253IjcOU9C+cyfyK3YyGbfyRXNm7hueetXTuWftjv6VM/q
X7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un5U16Vb+Vh+Vnels/lefnfuGi8
+M0xdptxnDi1di/u1KEnnMW1uRp+UHZ8BupB+zzRPEc/5a1fOZXfdlf8rvhd
8Xvx+NUWfc3R6CtnH615bLZMPmD8LA75UDkc2AJn41z12aUN8csObU0eQqb8
AW70Vw5/+YOcYTCfOuTr3+d8A7arzy7X5Lsmx730cy996AB/z8rwPRzkWeTS
zby6nACGxuFz1pD829+4J/9Qj3x8JBcHzEPI5fnF9/RwzXby5WvyKxx1TbfR
AffJlQ/6bp7nnXL2am/2qsF3zhqc8tavnMpvu9Wnelb/2lV7i0PxKW7FszgX
//ql/qof69/6vXwoT8qfU14N38rD8rO8LZ/L8/K/cdF48ftDtnUIcsSpuPJ7
Rnd9lt85/Zr1len7rJHM+qDrlrd+5VR+213xu+J3xe/F4xfO9DU/zJZ5xpJ8
bfpbXw8zmOjrixud2TXja/27uXE+mbHwrKfqo8kgUzlbZv5kxviulZPJj8Vc
W3CTM2iLTPqTyR7+NZ8tf6Cb/MmeIOW4AfdZh5W7wMoYW14w19ZkJgeTo/AF
brB/5jnY5vdqeEgmjuGNduVq6vmnTf5yPef1zTlG9JAL4Y2/8dl3OI4PfDZz
LFPe+pVT+W23+lTP6l+7am9xKD7FrXgW51P8xy/1V/1Y/9bv5UN5Uv6c8mr4
dsrD4Wd5Wz6X5+V/46LxMnvPrDfAc/bA0Uc700+pb0+A647j3EtOy1u/ciq/
7a74XfG74vfi8auPZp+xLf2n36SbdiaHhA39tTtYGfvD2Jhz7KqNgwPb9cvG
3fIQuY09vXzKHvXZQm8cYZM+m4+UT6zBhH58DatZX6APG+hPH/LVUf+4Xvrg
nQ9k0RkWfDxr0bgx56zPeew4Kz+b51Nxht/Na8/es8nf6D/vRiEHb8kne/Ku
eZ4Vn8xd0xkus+49ua51Ad/x6TwH2/LWr5zKb7vVp3pW/9pVe4tD8SluxbM4
F//6pf6qH+vf+r18KE/Kn/KqfCsPy8/ytnwuz8v/xkXjRXzNWh4Mxa4+Cy7G
dPNcg98M+Sc54s5aoN+W6Qdb3vqVU/ltd8Xvit8VvxePX7mBfta93pkFmzmr
lq/mGUy6yFnFrxxh1gjor9703drQVsewfAUL9k6uo757Jy9li3GsOnwKH/5S
R/8+vpAvuR5faEt9OmmLr+VL7MI9bZPPBuXyMXXcw4840nN3/W2+YuYzyMcz
98z7v/jP967nHV44PbEz/Jwy3Iab73Ca/mTTz9+Tv6mPA3w2Z+LCp+WtXzmV
33arT/Ws/rWr9haH4lPcimdxLv71S/1VP9a/9Xv5UJ6UP+VV+VYelp/lbflc
npf/jYvGC5zUtycbrp71s67HVnsWXMNPXWs6cDN/I+74YsZ3LW/9yqn8trvi
d8Xvit+Lxy/9Z153ZOpH1Z+5Yu3C2P3yVWNo9xtbs1UM0xNO+nR9NLvUYzt/
sn3mnI332chedvHF4GAOQR048CHb3at8sFV/3iFiLXr2D88c+7x3rPPwwzd8
8Km94RLb2CiPYd88wzpnAMLLNUzUmfP6lOPlcE170w6uque+mX9Q3/c+tave
zJ+QM+chzfNBM9fR8tavnMpvu9Wnelb/2lV7i0PxKW7FszgX//ql/qof699T
vw8fypPyp7wq38rD8rO8LZ/L8/K/cdF4gZP402fR02/Acfx2w/6b55p84zix
NnObc1aMT/u9W976lVP5bXfF74rfFb8Xj19yyBaHytXXh8Jn7HLNDzMHMrrx
58in26x7qsOWWX9nL33YTreJhRkXs3GuZ813ckg6zLOu+nRjY/mG/ET+IZeY
9zEbL8/7uvgCj7RNT598M+85OeXSfM77OnHHtTrDS3rC1N8wn3dnzjlI2lRn
9kyTOe+kZou/5+x5f7t3zpknE0+1zTafc3/LW/9Uzshvu9Wnelb/2lV7i0Px
KW7FszgX//ql/qof69/6vXwoT8qf8qp8Kw/Lz/K2fC7Py//GReNFu+pOP6Ku
uRe2zD4B9eWe9sHQ6zgWfMs+1ps5z5a3fuVUfttd8bvid8XvxeMXtjM3O2uj
dFB/5nvn3B7XZI6N7JI7yAdmX7A+G/bkzbM/xrZsgeHkD7Nnaeb/YTJr31OH
LXxhTmH2GtODj2A++8Fcy1XIgRGdyJnci1/oRC4O8p06bHTvvHesOefkapND
uVaOW+rN87B0YRdOwE+79HDNR+z0T5lPMqYO/Ho9bfSdZLO3esp/r3srv+1W
n+pZ/WvXqb2DQ/EpbsWzOBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8Ls/L
/8ZF42XiyPhNnYkvmOjLrMv73Zln5MkXx9b+Zu3eeRYtb/3Kqfy2u+J3xe+K
34vHr3HuzN/SefpoeLpXHyxmpy14z3iTT+ij7RkjT25AJntmvMx2ecQ829Kz
EeQ2bJAHwIS/Zu561oznnHV1tEuWNlzDQtszN46DMw9AX2uysKPXxz760PMP
fuAh+3kM8hxlfDLzBNqC4cyZ04ENzRvnHKQ5I14d1/5pV1s+/fNdr7XJRli7
Hr2U0WHK2ece1y1v/cqp/NN2R5/qWf1rV+0tDsWnuBXP4lz865f6q36sf+v3
8qE8KX/Kq/KtPCw/y9vyuTwv/xsXjRe2ds+bdQzP/MLMuM1zUmzSx9mTxn79
mL2g8BXf6rS89Sun8tvuit8Vvyt+Lx6/M+/q3pmzNZerfM4on3c2znMoo8/M
IU8/Th9zs3SGGZ3mDATf0VmZMSrb5RT0l1fQk73z7ko20J9tviPT/dqb89rp
B2f5R8846rzH5HuTc7lWD8b2dA03cUB7bBruwELbdJ+9x+7THu7IUfyb2IDx
/P3bH/quvYweZOOq+/HNp7/VhSd95kxcOjlL3vefvufPnd/7+e+7prz1K6fy
2271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPyp7wq38rD8rO8LZ/L
81P+Ny4mXvyO2Lcun6SbHNNeT/qKLev17Jh9L7M/TR9HNznv1Jny1q+cym+7
K35X/K74vXj8yhnmOUc6TF8JazhqS/mMQ2ecy4aZH5455MFhzoM17p53SM5e
r3l2Rp15hlQZeXCQayjT15M575V075yvPmcywHJ4ySbldJrr8aV7J5fq+1CG
e3IQvPJv8i7/1J33aNLBHMKsG8DT/f4Nn+jrbzrh2vDa+UnkuXZmvDZ8/4mP
/+lrrn1+8hN/5vwL9z5ijx/vU/niF/78NeW/172V33arT/Ws/rWr9haH4lPc
imdxLv71y6m/xo/1b/1ePpQn5U95Vb6Vh+VneVs+l+en/J+4aLzMnrR5Vlf8
2cvCHut69nfCda7tWzNXow4MlevjWt76lVP5bXfF74rfFb8Xj1+Y6Gdnrxd9
xRodZm/qyJw5E336zAkb27qHHG3MM63sn/c78wv9xpaZJ5h9wmOve+GrLfkD
LGefsDozl+0cWrK0P/kT3WfunH0+51y/8TWuTD6mTC6FG3QngyzfzTUd2S4X
8zl52dSbfIzsydPco45z4smlqzwQDq7Fgzq+ly/ykevPfubh51/9yg+cf+mL
f2EbC/yl3W55E860vPUrp/LbbvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+
Lx/Kk/KnvCrfysPys7wtn095PvxvXDRe6DvrC9pRJr7YN+v+sJz9cnAw96Nf
0+95BsI7ZFre+pVT+W13xe+K3xW/F49f1+Zi7aWZ5x+tLc740bhRu7OHBybz
PuOZ+9Wnz14jfpdDyBHUYyM92DDn5k0cqSMnUIceZBi/z7qv+nCcPVru7fnt
8y4wf/PR5DDq+qQfXcbX7NMWX04eCDufww+f/p45D3jO3MNwcvgmj/dvODyx
I6fDZ7KUfeqTD9vrKP/Mp797l+dTfPju6/c96vy66x59dT5F7mfPhPdber/I
teX316+cym+71ad6Vv/aVXuLwyk+g1vxLM7Fv36pv+rH+rd+Lx/Kk/KnvCrf
ysPys7wtn8vz8r9xcRov83wTPMTjzO3MvjXyJ//0tzP1vUPGPu95517LW79y
Kr/trvhd8bvi9+LxO/eaL9W2ftOahDrGqdOfzpl3c+6BfJWO4nT23qgjz4Ur
u3w3a8bGpXSbvUzKYaW/5x96wHbyM9/N+yjHL1Nn5q3d6zv5h/bc5ztlkwvO
WrX8Z+b5yZ358pmLGJ7MO08m75m1B98Pl30qw735JJ+cmdO/51N/dpehXO6n
zPeutSE//PKXvn/nupi472t/cZ8DOz7TeXw35Ibf/o7ulrd+5VR+260+p3qO
/rWr9haH4lPcimdxLv71S/1VP9a/9fspH6ZO+XPKq+FbeVh+lrflc3le/jcu
Gi9slauKMbjMs7r00M953sF6hnfKeH8oWbfcfPP+7m56eJ+S94a2vPUrp/Lb
7orfFb8rfi8evyufXPnkyifXeHDF74rfyxy/a31hrS+s9YW1Prjid8XvZY7f
td9s7Tdb+83WftEVvyt+L3P8rueP1vNH6/mj9fzgit8Vv5c5ftd5FOs8inUe
xTpPZsXvit/LHL8wXOcTrvMJ1/mE63zRFb8rfi9r/K7z6td59bVrnVe/3jex
4nfF72WL3/X+svX+stpVe4tD8VnvL1vvH1zxu+L3b6f4VX+9z3q9z3q9z3q9
j37F74rfyxq/2iL7iU/4pt0WvjL3AnP9p1iFIR3dq49mi7+Nl9lu/KtPNyZW
Z6614V4cMMfL3pmbtSY742L1zTGzl89g8IQbv/Hq849zDsDM9/IjfLSlzqkv
yFdH/ZkHhjNZdJYf4RJ/4cbs1+Vr3IC5sf/sIacTvsGNT2feYPhJfzz0HTm4
PDHFXvjPuQe4jct0hsusFfMZnXHPd/Z0keu+lrd+5VR+260+1bP6167aWxyK
T3ErnsW5+Ncv9Vf9WP/W7+VDeVL+lFflW3lYfpa35XN5Xv43Lhovs89T/wVD
47hP33PPAS4z5ylftcfT2h858tDPf+5zB/Hr2hiw5a1fOZXfdlf8rvhd8Xvx
+IWB9QfxOGv31uXJpK+/+ZRP9O/aZcvkgeyYeVr9rP53+m44KIeVGKYbGWSO
XRMjbB88lc8YVjkc6KYt88P8ri0y6U/m7CfHI3bO2qhcQflgxUe4M2v6xtjz
XKdr3NAuPsCaryd/w72Z68BHOMx5BXw6z7zgrXqT4xjvu8Z9+RJ9tDN7q+bZ
GXMIvsPdmT9xX8tbv3Iqv+1Wn+pZ/WtX7S0Oxae4Fc/ifIr/+KX+qh/r3/q9
fChPyp9TXg3fTnk4/Cxvy+fyvPxvXDRe9FnK7e2cuU3jO/poR5/Fh+rbC+pa
rmoPDNymH2x561dO5bfdFb8rflf8Xjx++UpfLf+UJ0y/CSvjV/0lrNg0uaXy
eW6XLbOe3rOe+AdW+EBnMvmLr9mofNY99dHwYdfUIR9fZp8AW2Ze1zX5rskZ
zN1LHzrMnDNM4DZzxXQb3GbP0jyHMvuK+RE3Zj8bbpA7a75zxt3w0PXkeHDm
L7nNnHU3OnS9Y54h7Tw8e7VHnjrwnXmNKT9dNxk5ld92q0/1rP61q/YWh+JT
3IpncS7+9Uv9VT/Wv/V7+VCelD+nvBq+lYflZ3lbPpfn5X/jovEyYzf9FDl+
w/Rn8m66v/fuu/f+y5ju/e97335t/8u73vnOA/zVdd3y1q+cym+7K35X/K74
vXj8updsf8PBWNPf+mj9Nrvm2SUyYagOW9hOPv35RZyqpy2f8gc5g/rskQvJ
TWZtgl36d3W07zkp+GvTWFVfzxZ66+vlLDNehpuxLQ6QAwe6jUy2DObG3e6l
k2v4j0+V05MtfK4cJnCe/U7zbAvc2KEtORpu0k3eRM/Zt4DXM49NLl4q97tG
7uylnjMQZs8xG2d/sLG/NWnXLW/9yqn803ZHn+pZ/WtX7S0Oxae4Fc/iXPzr
l/qrfqx/6/fyoTwpf8qr8q08LD/L2/K5PC//GxeNF/n0jONgL/70WeJXHXrC
Wb9mXY8flL35zjuv9n3qt7z1K6fy2+6K3xW/K34vHr/6SrkAOeKOXmw0d60u
G/XvUw5DetHJ2JpM+ss7xKl79Ofs9swvW8U1fY7zJm8/vObVr96fk9I/G6sO
nmyTM/DXzLfQzX100+bkD+rM+gJ/wX387h78Un+egVKf/Blf8z0M3QvzyUPg
BfOpDyu68Olc27ugzozx5wwE/IM57OhBvnWBOdMAX+VbzkvCOW3OOfH8P+f5
zVzKzHe0vPUrp/LbbvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/Kn
vCrfysPys7wtn8vz8r9x0XiBg095L9z8PtFD3n08P+bOfd/LrEGoYw3Q8xFy
93fcddf2+bJrylu/ciq/7a74XfG74vfi8Qt386Mf+fCHD8e84c7Dm+6443Bc
n77r8J53v/vgfjr6d7zn1n2/N5vcK69VXyyLVfh+7atfPbDT+Nv9vve3d8o4
W9/1G9/whv2az9llnCsnYhdd9ftyDP+mXB25FP3h4LeCjf7xOxu0NXmReW31
lZFp3Exn88P8CXM6w9a9/AsT/oc7/F3jGJlyNPY5f2H2D/dsBH7nA+3OO2Dk
NTiPx3wiV1Tes6TImvPb4WFu3HXP51fe+pVT+W23+lTP6l+7am9xKD7FrXgW
5+Jfv9Rf9WP9+7v5nczypPwpr8q38rD8LG/L5/K8/G9cNF7YSPeZb4GTXNca
jHa8V4n+ck5y4DDPyKtjbobeLW/9yqn8trvid8Xvit+Lxy+9Ro469pDqf2Fg
3lRMsvltb33rwVyN/vnFL3rRXp/e3ivyvJtu2t8Zs+U8h8c/7nEHuQPZ8oBZ
h9Vv86dcAJbatxeA7Fkb0a722CsfsCeALdr0t3r8Ouuo8gX2Kvc3WdZVyGCH
/JoMZX5L/M4c7bz18Nrbbz98/b5Hbfp+w2bDA3Y9nO0xv0XyI77DPfMRs8eM
n9iHV+bV5xlh+ZPvnAsvBuR7+Cz3k3f4hDvumi/BczninA04z/POc0QzfyIu
Wt76lVP5bbf6VM/qX7tqb3EoPsWteBbn4l+/1F/1Y/1bv5cP5Un5U16Vb+Vh
+Vnels/lefnfuGi8wGww4QffzV5Nn+LNGICe8JHLs+EYk8f1QXa2vPUrp/Lb
7orfFb8rfi8ev7NnRr8+fag8VT5BvtiUg3pfqHthQxd6eWfMBz/wkG1c+/TD
jz3rWeJ2f38oWdqdfI8dbOU3fbZYn71v7GfXL7zqVQd9P1lPe+pTD+x5wo03
7m1p96UvecmuA/20cXxv2/MPz33Oc7Zc5qGHeZfbNi7f7PqOw5b3uO9s02G7
fvbZhtvZpvvZ61/3urNtDH625T9nm/5n1135D57yBW3Nmbk4h0vmDXBpzu2R
j8jH5nz1OSMe55XPHMe8j9LvGS5PHugaX9XBdzkizqsrFqZ+34Ey5a1fOZXf
dqvPqZ6jf+2qvcWh+BS34lmci3/9Un/Vj/Vv/V4+lCflT3lVvpWH5Wd5Wz6X
5+V/46LxcnyG6vjOVfM84k5sq+NZv3kOwtzPjO/EHfl09dvyyttuu6a89Sun
8tvuit8Vvyt+Lx6/xsjikW7mdumpfzRelhvQw1iUbHrr/8WieVf9rvUNa/ev
ePnLd/vlFfCGl++Nt41/1RfH2tUn0/exj3nMnoNsOc2en2x+sA6y20uev/X5
xrDe1a0+2fKC195+/f6eS/X5zPfe/bzlBFd9uuVju483X1+/6b79e8hVn295
wq4T7GaeChYws2ZrLC+/wDm/QfIL71Exvy+Hc3a8uX25nLxO7jdzHbg9e8bm
emJh3kE5fHbfnNtO1sRL34dyWj71K6fy2271qZ7Vv3bV3uJQfIpb8SzOxb9+
qb/qx/q3fi8fypPyp7wq38rD8rO8LZ/L8/K/cdF4gdPkmeJKfJJrrkq/pi/j
E9/Ti//UV66O3Fj9lrd+5VR+213xu+J3xe/F49daonEi2fpmn+ZczR9vuFzV
Ud/r7xe+4AVbv/qw/RMOxtb+3nKO3UZj7q98+ZE7Pvpo/bVcwZiYXv7W9ysj
gx5sZK9rttOZDsq0yy7Yy02e/KQnmVPac5OJo83/V8bJD9z9J5/Z/PLtx3/X
XU8veY9/s3921pTnzAf8wBfj6Hn+1e+Q3GzORZJfzXOqrvGusaMObqojR5t8
T24zZ8Or4765V5n6eD5zH2JkYmPOG5zy1q+cym+71ad6Vv/aVXuLQ/EpbsWz
OBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8vZaPt/P8/K/cdF4kYPLMcWReSgx
LO/222O9Q8za1yf+yOZT8Sdu5ejupXvLW79yKr/trvhd8bvi9+LxK+aMNfWj
9NxykatjS+PNW26+eetPn7LbrN6GibKzW27+1t12mMFmG2Oy+wwuxsBk0YGd
2tQ/G9vKBRoXxszyXN/NugibzAX5ZJf75RQwOeYaD9yv5ROvvO3bdl/Axzif
3zb/Xb/9blzJW647TF5kX5I5Yeu05rHn2crJw3HGMzPm5Gfv8rxP0jr0zFuo
M5w0D2GeQ715f/e8S3LO0Z3nVV3Ly+bsefe6Ht5qb2JEXbLmvZpT3vqVcyp/
2q0+1bP6167aWxyKT3ErnsW5+Ncv9Vf9WP/W7+VDeVL+lFflW3lYfpa35XN5
Xv43Lhov4lacG7P5XZn5HvNScmHt2sdGf/Hvd02ZfJT/rPuR1/LWr5zKb7sr
flf8rvi9ePwe51u/ZbfLWoV7fX72Mw/f21auja1/PtMP00FeAI/j3PINZ77T
FnvMx+pfjbvZYvwKE5gbW29yd51nnRaG6riX/erq3+FHb/qQad76OF7/5l0v
uNON7psOu2/4Ycbq1ljlQHTwG2L8bNw8+6nwYObe5eCucRWv8BUf54wFHJv3
Xsnz5vlZ/LIG6z7leKvcvL15bpw0F2Ldes6ZNxbHc9ydZ4jmes6yFyN4O++w
bHnrV07lt93qc6rn6F+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+XD+VJ+VNelW/l
YflZ3pbP5Xn537hovGhHHFovMU7TttiFl3zW2t7xN+Vlezzq75Sr63dt9q21
vPUrp/Lb7orfFb8rfi8ev/rhWeskS//PxitzE/s6KdnWTN3jU7l65B3nlR90
OJ4n9ZZ9rdLcMPvo7nsYyS/cv9m8f8dO65PyW/qpa4xKXzrC7crawJm+3Njc
P9hpD/7qWmMhRz9vnGuvrXVWOY5naOQhODTnG2z4XD3PaPgwZ8/O2bh4N8/p
zB6uOYcQt3qurzmHycfmPWhTbo1cfXwmZzg8awHaI3NywtlLZh5FvqcN97e8
9Sun8ttu9ame1b921d7iUHyKW/EszsW/fqm/6sf6t34vH8qT8qe8upZv9/Ow
/Cxvy+fyvPxvXDRexBQZ1i3MFclXxaJYlefKg81FaZeufqdgo18z1jP+m+fo
p7z1K6fy2+6K3xW/K34vHr/acz+d1Z05YHOz9uS4j132GNHVmqm+WL0Z/+rD
zePMvh3y9O/kidst1s+0N2vnMJDvqisfNl8LoyvPEl+x6ZH7XLO5Z3t9Zl8T
3OXR8IAhH/GPPUfWSo1xyZTrzHl9fI03uLflJjtX8G3yKFySf/VdkPgjp5o9
WeYZhmPqK1ffPIN8jzz15z1dysk0rz+81ZbvzG/MerdYmHMl5pnamecnd975
NeWtXzmV33arT/Ws/qd2jb3FofgUt+JZnIt//VJ/1Y/1b/1ePpQn5c+1vLqf
b+Vh+Vnels/lefnfuGi80FGMz75H1z7FmT0B5mjMu2hXzLHV9+Lb3BA7rbO0
vPUrp/Lb7orfFb8rfi8ev1vs7W0ZX7pH/uk5RPt/jC21P3tsNx3PZt7YGHn0
sT91xqfHOd9jvGlfLM/eW/FMB/bog41HtaW+PlzsG3P7bbBniD6+h7f2Zo7X
/h+5s5yFD/jIWJ7f+Ucu9LnPfs/VHIuv57x1+6rkW3Muve/lQTOfoLxckmsp
n/d7yqFwb3iqPXnenJc7XJ58cs5+n3dmzjr7tDf7yNxjvRvX573SOGd/U8tb
v3Iqv+1Wn+pZ/WtX7S0Oxae4Fc/iXPzrl/qrfqx/6/fyoTwpf8qr8q08LD/L
2/K5PC//GxeNF/Mux/z3hj1exJ16z3zGM67Ou/hNENNsM68jFs3baPs4N/mg
a8pbv3Iqv+2u+F3xu+L34vHruRD3+dRP259GfzZtn2d01N9aI1VPfy9e3asd
7X3h3kfsOpvzlb+KY/J8qsuOIx4P2Nc0yYANu+W/vqeT/lnsyxXgLJ+QLxir
2ys3+2GVW3M1RscR+57wTT4z8w6eReXTOZNh5h9wRjk+uZ4cy7UcDR/MMcye
KvxRjmPzHmZt4au65t7n/V8Tg/NulJnTmHV2PJy1icnfzJmQq3zjxc51PPXO
rHkndctbv3Iqv+1Wn+pZ/WvXqb2DQ/E5xW3wLM7Fv36pv+rHU/+O38uH8qT8
Ka/Kt/Kw/Cxvy+fyvPxvXDRezLtssq+/fx7o7r2fmflK+a+YFdOu/UbId32y
WZ/n96HlrV85ld92V/yu+F3xe/H4XfnkyidXPrnGgyt+V/xe5vhd6wtrfWGt
L6z1wRW/K34vc/yu/WZrv9nab7b2i674XfF7meN3PX+0nj9azx+t5wdX/K74
vczxu86jWOdRrPMo1nkyK35X/F7m+F3nE67zCdf5hOt80RW/K34vc/yu8+rX
efXrvPr1vokVvyt+L3P8rveXrfeXrfeXrfcPrvhd8XuZ43e9z3q9z3q9z3q9
j37F74rfyxy/6sy+NZgeY/SOq32ovFRf7RlE/8yxjhz5h3vZpz57jU3tsdXn
T8y63/f+tt7BDtfGv66tAdPPei3fGcvznVzGXif/plwd68T688lX2e+f3xY2
aAunYCFPUl8ZmcbLdDb+NkY2j0xnvHKvfcMw4U85y+ynkl+Qaf2ZffKx2cOM
e+bc8ULuxq/axWc8N9ex5U17bIgLcx3K2Sc3nDxQGU7DA/dds7vlrV85ld92
q0/1rP61q/YWh+JT3IpncS7+9Uv9VT/Wv7+b38ksT8qf8qp8Kw/Lz/K2fC7P
y//GReOFjXQnH9ZwkpMa32nHbwr9xSI5cIDrzOPJT+nd8tavnMpvuyt+V/yu
+L14/MKbjuzhA/aRB3triuZd4T3l+ml22dcGW3aRNWcNuEd+oJ/W//IZzOUD
9iEZg9LTPI/2zQHxL9vkBPyu/ydTPkU399FNm+Z6cUod5TjFr/zrWg7hHnmT
+nhAZ/XJ15Z5A3mSfMu98FaH3jDj96mPd3TxLM1c45g67qUD/s5zOnI22NGD
fL4/nkF0nNvgB5yfZ2vN68v9Jt+TGxoT8BE7Xbe89Sun8ttu9ame1b921d7i
UHyKW/EszsW/fqm/6sf6t34vH8qT8qe8Kt/Kw/KzvC2fy/Pyv3HReIGDT7EI
NzFKD78VrsUeG2FAD3WuPGu+73sRp9Y5Wt76lVP5bXfF74rfFb8Xj192keke
mMPJ3+Zk6Ecf18pg4l513K/fZ5OxMczpop48xif9+Ft9mMuFrN3Sn0/ZTD91
tC/XhZU22W+eHN58ij/yCzoMnmzEN3LYSLeRyRb+oieuuZdOrvncNQyV05Mt
/KV8/E7vyYvUwVN2aMu+PjkH3cxD0NPv1PBd/dmzLFdTLjcid86TUD7zJ3Ir
NrLZd3JF8yauW976lVP5p+2OPtWz+teu2lscik9xK57FufjXL/VX/Vj/1u/l
Q3lS/pRX5Vt5WH6Wt+VzeV7+Ny4aL35zjN1mHCdOrd2LO3XoCWdxba6GH5Qd
n4F60D5PNM/RT3nrV07lt90Vvyt+V/xePH61RV9zNPrK2UdrHpstkw8YP4tD
PlQOB7bA2ThXfXZpQ/yyQ1uTh5Apf4Ab/ZXDX/4gZxjMpw75+vc534Dt6rPL
NfmuyXEv/dxLHzrA37MyfA8HeRa5dDOvLieAoXH4nDUk//Y37sk/1CMfH8nF
AfMQcnl+8T09XLOdfPma/ApHXdNtdMB9cuWDvpvneaecvdqbvWrwnbMGp7z1
K6fy2271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPy55RXw7fysPws
b8vn8rz8b1w0Xvz+kG0dghxxKq78ntFdn+V3Tr9mfWX6Pmsksz7ouuWtXzmV
33ZX/K74XfF78fiFM33ND7NlnrEkX5v+1tfDDCb6+uJGZ3bN+Fr/bm6cT2Ys
POup+mgyyFTOlpk/mTG+a+Vk8mMx1xbc5AzaIpP+ZLKHf81nyx/oJn+yJ0g5
bsB91mHlLrAyxpYXzLU1mcnB5Ch8gRvsn3kOtvm9Gh6SiWN4o125mnr+aZO/
XM95fXOOET3kQnjjb3z2HY7jA5/NHMuUt37lVH7brT7Vs/rXrtpbHIpPcSue
xfkU//FL/VU/1r/1e/lQnpQ/p7wavp3ycPhZ3pbP5Xn537hovMzeM+sN8Jw9
cPTRzvRT6tsT4LrjOPeS0/LWr5zKb7srflf8rvi9ePzqo9lnbEv/6Tfppp3J
IWFDf+0OVsb+MDbmHLtq4+DAdv2ycbc8RG5jTy+fskd9ttAbR9ikz+Yj5RNr
MKEfX8Nq1hfowwb604d8ddQ/rpc+eOcDWXSGBR/PWjRuzDnrcx47zsrP5vlU
nOF389qz92zyN/rPu1HIwVvyyZ68a55nxSdz13SGy6x7T65rXcB3fDrPwba8
9Sun8ttu9ame1b921d7iUHyKW/EszsW/fqm/6sf6t34vH8qT8qe8Kt/Kw/Kz
vC2fy/Pyv3HReBFfs5YHQ7Grz4KLMd081+A3Q/5JjrizFui3ZfrBlrd+5VR+
213xu+J3xe/F41duoJ91r3dmwWbOquWreQaTLnJW8StHmDUC+qs3fbc2tNUx
LF/Bgr2T66jv3slL2WIcqw6fwoe/1NG/jy/kS67HF9pSn07a4mv5ErtwT9vk
s0G5fEwd9/AjjvTcXX+br5j5DPLxzD3z/i/+873reYcXTk/sDD+nDLfh5juc
pj/Z9PP35G/q4wCfzZm48Gl561dO5bfd6lM9q3/tqr3FofgUt+JZnIt//VJ/
1Y/1b/1ePpQn5U95Vb6Vh+VneVs+l+flf+Oi8QIn9e3Jhqtn/azrsdWeBdfw
U9eaDtzM34g7vpjxXctbv3Iqv+2u+F3xu+L34vFL/5nXHZn6UfVnrli7MHa/
fNUY2v3G1mwVw/SEkz5dH80u9djOn2yfOWfjfTayl118MTiYQ1AHDnzIdvcq
H2zVn3eIWIue/cMzxz7vHes8/PANH3xqb7jENjbKY9g3z7DOGYDwcg0Tdea8
PuV4OVzT3rSDq+q5b+Yf1Pe9T+2qN/Mn5Mx5SPN80Mx1tLz1K6fy2271qZ7V
v3bV3uJQfIpb8SzOxb9+qb/qx/r31O/Dh/Kk/CmvyrfysPwsb8vn8rz8b1w0
XuAk/vRZ9PQbcBy/3bD/5rkm3zhOrM3c5pwV49N+75a3fuVUfttd8bvid8Xv
xeOXHLLFoXL19aHwGbtc88PMgYxu/Dny6TbrnuqwZdbf2UsfttNtYmHGxWyc
61nznRySDvOsqz7d2Fi+IT+Rf8gl5n3Mxsvzvi6+wCNt09Mn38x7Tk65NJ/z
vk7cca3O8JKeMPU3zOfdmXMOkjbVmT3TZM47qdni7zl73t/unXPmycRTbbPN
59zf8tY/lTPy2271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPyp7wq
38rD8rO8LZ/L8/K/cdF40a6604+oa+6FLbNPQH25p30w9DqOBd+yj/VmzrPl
rV85ld92V/yu+F3xe/H4he3Mzc7aKB3Un/neObfHNZljI7vkDvKB2Resz4Y9
efPsj7EtW2A4+cPsWZr5f5jM2vfUYQtfmFOYvcb04COYz34w13IVcmBEJ3Im
9+IXOpGLg3ynDhvdO+8da845udrkUK6V45Z68zwsXdiFE/DTLj1c8xE7/VPm
k4ypA79eTxt9J9nsrZ7y3+veym+71ad6Vv/adWrv4FB8ilvxLM7Fv36pv+rH
+rd+Lx/Kk/KnvCrfysPys7wtn8vz8r9x0XiZODJ+U2fiCyb6MuvyfnfmGXny
xbG1v1m7d55Fy1u/ciq/7a74XfG74vfi8WucO/O3dJ4+Gp7u1QeL2WkL3jPe
5BP6aHvGyJMbkMmeGS+zXR4xz7b0bAS5DRvkATDhr5m7njXjOWddHe2SpQ3X
sND2zI3j4MwD0NeaLOzo9bGPPvT8gx94yH4egzxHGZ/MPIG2YDhz5nRgQ/PG
OQdpzohXx7V/2tWWT/9812ttshHWrkcvZXSYcva5x3XLW79yKv+03dGnelb/
2lV7i0PxKW7FszgX//ql/qof69/6vXwoT8qf8qp8Kw/Lz/K2fC7Py//GReOF
rd3zZh3DM78wM27znBSb9HH2pLFfP2YvKHzFtzotb/3Kqfy2u+J3xe+K34vH
78y7unfmbM3lKp8zyuedjfMcyugzc8jTj9PH3CydYUanOQPBd3RWZozKdjkF
/eUV9GTvvLuSDfRnm+/IdL/25rx2+sFZ/tEzjjrvMfne5Fyu1YOxPV3DTRzQ
HpuGO7DQNt1n77H7tIc7chT/JjZgPH//9oe+ay+jB9m46n588+lvdeFJnzkT
l07Okvf9p+/5c+f3fv77rilv/cqp/LZbfapn9a9dtbc4FJ/iVjyLc/GvX+qv
+rH+rd/Lh/Kk/CmvyrfysPwsb8vn8vyU/42LiRe/I/atyyfpJse015O+Yst6
PTtm38vsT9PH0U3OO3WmvPUrp/Lb7orfFb8rfi8ev3KGec6RDtNXwhqO2lI+
49AZ57Jh5odnDnlwmPNgjbvnHZKz12uenVFnniFVRh4c5BrK9PVkznsl3Tvn
q8+ZDLAcXrJJOZ3menzp3sml+j6U4Z4cBK/8m7zLP3XnPZp0MIcw6wbwdL9/
wyf6+ptOuDa8dn4Sea6dGa8N33/i43/6mmufn/zEnzn/wr2P2OPH+1S++IU/
f03573Vv5bfd6lM9q3/tqr3FofgUt+JZnIt//XLqr/Fj/Vu/lw/lSflTXpVv
5WH5Wd6Wz+X5Kf8nLhovsydtntUVf/aysMe6nv2dcJ1r+9bM1agDQ+X6uJa3
fuVUfttd8bvid8XvxeMXJvrZ2etFX7FGh9mbOjJnzkSfPnPCxrbuIUcb80wr
++f9zvxCv7Fl5glmn/DY6174akv+AMvZJ6zOzGU7h5Ys7U/+RPeZO2efzznX
b3yNK5OPKZNL4QbdySDLd3NNR7bLxXxOXjb1Jh8je/I096jjnHhy6SoPhINr
8aCO7+WLfOT6s595+PlXv/ID51/64l/YxgJ/abdb3oQzLW/9yqn8tlt9qmf1
r121tzgUn+JWPItz8a9f6q/6sf6t38uH8qT8Ka/Kt/Kw/Cxvy+dTng//GxeN
F/rO+oJ2lIkv9s26PyxnvxwczP3o1/R7noHwDpmWt37lVH7bXfG74nfF78Xj
17W5WHtp5vlHa4szfjRu1O7s4YHJvM945n716bPXiN/lEHIE9dhIDzbMuXkT
R+rICdShBxnG77Puqz4cZ4+We3t++7wLzN98NDmMuj7pR5fxNfu0xZeTB8LO
5/DDp79nzgOeM/cwnBy+yeP9Gw5P7Mjp8JksZZ/65MP2Oso/8+nv3uX5FB++
+/p9jzq/7rpHX51PkfvZM+H9lt4vcm35/fUrp/LbbvWpntW/dtXe4nCKz+BW
PItz8a9f6q/6sf6t38uH8qT8Ka/Kt/Kw/Cxvy+fyvPxvXJzGyzzfBA/xOHM7
s2+N/Mk//e1Mfe+Qsc973rnX8tavnMpvuyt+V/yu+L14/M695ku1rd+0JqGO
cer0p3Pm3Zx7IF+lozidvTfqyHPhyi7fzZqxcSndZi+Tcljp7/mHHrCd/Mx3
8z7K8cvUmXlr9/pO/qE99/lO2eSCs1Yt/5l5fnJnvnzmIoYn886TyXtm7cH3
w2WfynBvPsknZ+b07/nUn91lKJf7KfO9a23ID7/8pe/fuS4m7vvaX9znwI7P
dB7fDbnht7+ju+WtXzmV33arz6meo3/tqr3FofgUt+JZnIt//VJ/1Y/1b/1+
yoepU/6c8mr4Vh6Wn+Vt+Vyel/+Ni8YLW+WqYgwu86wuPfRznnewnuGdMt4f
StYtN9+8v7ubHt6n5L2hLW/9yqn8trvid8Xvit+Lx+/KJ1c+ufLJNR5c8bvi
9zLH71pfWOsLa31hrQ+u+F3xe5njd+03W/vN1n6ztV90xe+K38scv+v5o/X8
0Xr+aD0/uOJ3xe9ljt91HsU6j2KdR7HOk1nxu+L3MscvDNf5hOt8wnU+4Tpf
dMXvit/LGr/rvPp1Xn3tWufVr/dNrPhd8XvZ4ne9v2y9v6x21d7iUHzW+8vW
+wdX/K74/dspftVf77Ne77Ne77Ne76Nf8bvi97LGr7bIfuITvmm3ha/MvcBc
/ylWYUhH9+qj2eJv42W2G//q042J1ZlrbbgXB8zxsnfmZq3JzrhYfXPM7OUz
GDzhxm+8+vzjnAMw8738CB9tqXPqC/LVUX/mgeFMFp3lR7jEX7gx+3X5Gjdg
buw/e8jphG9w49OZNxh+0h8PfUcOLk9MsRf+c+4BbuMyneEya8V8Rmfc8509
XeS6r+WtXzmV33arT/Ws/rWr9haH4lPcimdxLv71S/1VP9a/9Xv5UJ6UP+VV
+VYelp/lbflcnpf/jYvGy+zz1H/B0Dju0/fcc4DLzHnKV+3xtPZHjjz085/7
3EH8ujYGbHnrV07lt90Vvyt+V/xePH5hYP1BPM7avXV5Munrbz7lE/27dtky
eSA7Zp5WP6v/nb4bDsphJYbpRgaZY9fECNsHT+UzhlUOB7ppy/wwv2uLTPqT
OfvJ8YidszYqV1A+WPER7syavjH2PNfpGje0iw+w5uvJ33Bv5jrwEQ5zXgGf
zjMveKve5DjG+65xX75EH+3M3qp5dsYcgu9wd+ZP3Nfy1q+cym+71ad6Vv/a
VXuLQ/EpbsWzOJ/iP36pv+rH+rd+Lx/Kk/LnlFfDt1MeDj/L2/K5PC//GxeN
F32Wcns7Z27T+I4+2tFn8aH69oK6lqvaAwO36Qdb3vqVU/ltd8Xvit8VvxeP
X77SV8s/5QnTb8LK+FV/CSs2TW6pfJ7bZcusp/esJ/6BFT7QmUz+4ms2Kp91
T300fNg1dcjHl9knwJaZ13VNvmtyBnP30ocOM+cME7jNXDHdBrfZszTPocy+
Yn7EjdnPhhvkzprvnHE3PHQ9OR6c+UtuM2fdjQ5d75hnSDsPz17tkacOfGde
Y8pP101GTuW33epTPat/7aq9xaH4FLfiWZyLf/1Sf9WP9W/9Xj6UJ+XPKa+G
b+Vh+Vnels/lefnfuGi8zNhNP0WO3zD9mbyb7u+9++69/zKme//73rdf2//y
rne+8wB/dV23vPUrp/Lb7orfFb8rfi8ev+4l299wMNb0tz5av82ueXaJTBiq
wxa2k09/fhGn6mnLp/xBzqA+e+RCcpNZm2CX/l0d7XtOCv7aNFbV17OF3vp6
OcuMl+FmbIsD5MCBbiOTLYO5cbd76eQa/uNT5fRkC58rhwmcZ7/TPNsCN3Zo
S46Gm3STN9Fz9i3g9cxjk4uXyv2ukTt7qecMhNlzzMbZH2zsb03adctbv3Iq
/7Td0ad6Vv/aVXuLQ/EpbsWzOBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8
Ls/L/8ZF40U+PeM42Is/fZb4VYeecNavWdfjB2VvvvPOq32f+i1v/cqp/La7
4nfF74rfi8evvlIuQI64oxcbzV2ry0b9+5TDkF50MrYmk/7yDnHqHv05uz3z
y1ZxTZ/jvMnbD6959av356T0z8aqgyfb5Az8NfMtdHMf3bQ5+YM6s77AX3Af
v7sHv9SfZ6DUJ3/G13wPQ/fCfPIQeMF86sOKLnw61/YuqDNj/DkDAf9gDjt6
kG9dYM40wFf5lvOScE6bc048/895fjOXMvMdLW/9yqn8tlt9qmf1r121tzgU
n+JWPItz8a9f6q/6sf6t38uH8qT8Ka/Kt/Kw/Cxvy+fyvPxvXDRe4OBT3gs3
v0/0kHcfz4+5c9/3MmsQ6lgD9HyE3P0dd921fb7smvLWr5zKb7srflf8rvi9
ePzC3fzoRz784cMxb7jz8KY77jgc16fvOrzn3e8+uJ+O/h3vuXXf780m98pr
1RfLYhW+X/vqVw/sNP52v+/97Z0yztZ3/cY3vGG/5nN2GefKidhFV/2+HMO/
KVdHLkV/OPitYKN//M4GbU1eZF5bfWVkGjfT2fwwf8KczrB1L//ChP/hDn/X
OEamHI19zl+Y/cM9G4Hf+UC78w4YeQ3O4zGfyBWV9ywpsub8dniYG3fd8/mV
t37lVH7brT7Vs/rXrtpbHIpPcSuexbn41y/1V/1Y//5ufiezPCl/yqvyrTws
P8vb8rk8L/8bF40XNtJ95lvgJNe1BqMd71Wiv5yTHDjMM/LqmJuhd8tbv3Iq
v+2u+F3xu+L34vFLr5Gjjj2k+l8YmDcVk2x+21vfejBXo39+8YtetNent/eK
PO+mm/Z3xmw5z+Hxj3vcQe5Atjxg1mH12/wpF4Cl9u0FIHvWRrSrPfbKB+wJ
YIs2/a0ev846qnyBvcr9TZZ1FTLYIb8mQ5nfEr8zRztvPbz29tsPX7/vUZu+
37DZ8IBdD2d7zG+R/IjvcM98xOwx4yf24ZV59XlGWP7kO+fCiwH5Hj7L/eQd
PuGOu+ZL8FyOOGcDzvO88xzRzJ+Ii5a3fuVUftutPtWz+teu2lscik9xK57F
ufjXL/VX/Vj/1u/lQ3lS/pRX5Vt5WH6Wt+VzeV7+Ny4aLzAbTPjBd7NX06d4
MwagJ3zk8mw4xuRxfZCdLW/9yqn8trvid8Xvit+Lx+/smdGvTx8qT5VPkC82
5aDeF+pe2NCFXt4Z88EPPGQb1z798GPPepa43d8fSpZ2J99jB1v5TZ8t1mfv
G/vZ9QuvetVB30/W05761AN7nnDjjXtb2n3pS16y60A/bRzf2/b8w3Of85wt
l3noYd7lto3LN7u+47DlPe4723TYrp99tuF2tul+9vrXve5sG4OfbfnP2ab/
2XVX/oOnfEFbc2YuzuGSeQNcmnN75CPysTlffc6Ix3nlM8cx76P0e4bLkwe6
xld18F2OiPPqioWp33egTHnrV07lt93qc6rn6F+7am9xKD7FrXgW5+Jfv9Rf
9WP9W7+XD+VJ+VNelW/lYflZ3pbP5Xn537hovByfoTq+c9U8j7gT2+p41m+e
gzD3M+M7cUc+Xf22vPK2264pb/3Kqfy2u+J3xe+K34vHrzGyeKSbuV166h+N
l+UG9DAWJZve+n+xaN5Vv2t9w9r9K17+8t1+eQW84eV7423jX/XFsXb1yfR9
7GMes+cgW06z5yebH6yD7PaS5299vjGsd3WrT7a84LW3X7+/51J9PvO9dz9v
OcFVn2752O7jzdfXb7pv/x5y1edbnrDrBLuZp4IFzKzZGsvLL3DOb5D8wntU
zO/L4Zwdb25fLievk/vNXAduz56xuZ5YmHdQDp/dN+e2kzXx0vehnJZP/cqp
/LZbfapn9a9dtbc4FJ/iVjyLc/GvX+qv+rH+rd/Lh/Kk/CmvyrfysPwsb8vn
8rz8b1w0XuA0eaa4Ep/kmqvSr+nL+MT39OI/9ZWrIzdWv+WtXzmV33ZX/K74
XfF78fi1lmicSLa+2ac5V/PHGy5XddT3+vuFL3jB1q8+bP+Eg7G1v7ecY7fR
mPsrX37kjo8+Wn8tVzAmppe/9f3KyKAHG9nrmu10poMy7bIL9nKTJz/pSeaU
9txk4mjz/5Vx8gN3/8lnNr98+/HfddfTS97j3+yfnTXlOfMBP/DFOHqef/U7
JDebc5HkV/Ocqmu8a+yog5vqyNEm35PbzNnw6rhv7lWmPp7P3IcYmdiY8wan
vPUrp/LbbvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+rd+Lx/Kk/KnvCrfysPy
s7y9ls/387z8b1w0XuTgckxxZB5KDMu7/fZY7xCz9vWJP7L5VPyJWzm6e+ne
8tavnMpvuyt+V/yu+L14/Io5Y039KD23XOTq2NJ485abb97606fsNqu3YaLs
7Jabv3W3HWaw2caY7D6DizEwWXRgpzb1z8a2coHGhTGzPNd3sy7CJnNBPtnl
fjkFTI65xgP3a/nEK2/7tt0X8DHO57fNf9dvvxtX8pbrDpMX2ZdkTtg6rXns
ebZy8nCc8cyMOfnZuzzvk7QOPfMW6gwnzUOY51Bv3t8975Kcc3TneVXX8rI5
e969roe32psYUZesea/mlLd+5ZzKn3arT/Ws/rWr9haH4lPcimdxLv71S/1V
P9a/9Xv5UJ6UP+VV+VYelp/lbflcnpf/jYvGi7gV58Zsfldmvse8lFxYu/ax
0V/8+11TJh/lP+t+5LW89Sun8tvuit8Vvyt+Lx6/x/nWb9ntslbhXp+f/czD
97aVa2Prn8/0w3SQF8DjOLd8w5nvtMUe87H6V+Nuthi/wgTmxtab3F3nWaeF
oTruZb+6+nf40Zs+ZJq3Po7Xv3nXC+50o/umw+4bfpixujVWORAd/IYYPxs3
z34qPJi5dzm4a1zFK3zFxzljAcfmvVfyvHl+Fr+swbpPOd4qN29vnhsnzYVY
t55z5o3F8Rx35xmiuZ6z7MUI3s47LFve+pVT+W23+pzqOfrXrtpbHIpPcSue
xbn41y/1V/1Y/9bv5UN5Uv6UV+VbeVh+lrflc3le/jcuGi/aEYfWS4zTtC12
4SWftbZ3/E152R6P+jvl6vpdm31rLW/9yqn8trvid8Xvit+Lx69+eNY6ydL/
s/HK3MS+Tkq2NVP3+FSuHnnHeeUHHY7nSb1lX6s0N8w+uvseRvIL928279+x
0/qk/JZ+6hqj0peOcLuyNnCmLzc29w922oO/utZYyNHPG+faa2udVY7jGRp5
CA7N+QYbPlfPMxo+zNmzczYu3s1zOrOHa84hxK2e62vOYfKxeQ/alFsjVx+f
yRkOz1qA9sicnHD2kplHke9pw/0tb/3Kqfy2W32qZ/WvXbW3OBSf4lY8i3Px
r1/qr/qx/q3fy4fypPwpr67l2/08LD/L2/K5PC//GxeNFzFFhnULc0XyVbEo
VuW58mBzUdqlq98p2OjXjPWM/+Y5+ilv/cqp/La74nfF74rfi8ev9txPZ3Vn
DtjcrD057mOXPUZ0tWaqL1Zvxr/6cPM4s2+HPP07eeJ2i/Uz7c3aOQzku+rK
h83XwujKs8RXbHrkPtds7tlen9nXBHd5NDxgyEf8Y8+RtVJjXDLlOnNeH1/j
De5tucnOFXybPAqX5F99FyT+yKlmT5Z5huGY+srVN88g3yNP/XlPl3IyzesP
b7XlO/Mbs94tFuZciXmmdub5yZ13fk1561dO5bfd6lM9q/+pXWNvcSg+xa14
FufiX7/UX/Vj/Vu/lw/lSflzLa/u51t5WH6Wt+VzeV7+Ny4aL3QU47Pv0bVP
cWZPgDka8y7aFXNs9b34NjfETussLW/9yqn8trvid8Xvit+Lx+8We3tbxpfu
kX96DtH+H2NL7c8e203Hs5k3NkYefexPnfHpcc73GG/aF8uz91Y804E9+mDj
UW2prw8X+8bcfhvsGaKP7+GtvZnjtf9H7ixn4QM+Mpbnd/6RC33us99zNcfi
6zlv3b4q+dacS+97edDMJygvl+Rayuf9nnIo3Bueak+eN+flDpcnn5yz3+ed
mbPOPu3NPjL3WO/G9XmvNM7Z39Ty1q+cym+71ad6Vv/aVXuLQ/EpbsWzOBf/
+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8Ls/L/8ZF48W8yzH/vWGPF3Gn3jOf
8Yyr8y5+E8Q028zriEXzNto+zk0+6Jry1q+cym+7K35X/K74vXj8ei7EfT71
0/an0Z9N2+cZHfW31kjV09+LV/dqR3tfuPcRu87mfOWv4pg8n+qy44jHA/Y1
TTJgw275r+/ppH8W+3IFOMsn5AvG6vbKzX5Y5dZcjdFxxL4nfJPPzLyDZ1H5
dM5kmPkHnFGOT64nx3ItR8MHcwyzpwp/lOPYvIdZW/iqrrn3ef/XxOC8G2Xm
NGadHQ9nbWLyN3Mm5CrfeLFzHU+9M2veSd3y1q+cym+71ad6Vv/adWrv4FB8
TnEbPItz8a9f6q/68dS/4/fyoTwpf8qr8q08LD/L2/K5PC//GxeNF/Mum+zr
758HunvvZ2a+Uv4rZsW0a78R8l2fbNbn+X1oeetXTuW33RW/K35X/F48flc+
ufLJlU+u8eCK3xW/lzl+1/rCWl9Y6wtrfXDF74rfyxy/a7/Z2m+29put/aIr
flf8Xub4Xc8freeP1vNH6/nBFb8rfi9z/K7zKNZ5FOs8inWezIrfFb+XOX7X
+YTrfMJ1PuE6X3TF74rfyxy/67z6dV79Oq9+vW9ixe+K38scv/8/ObZDlw==

      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xn8f2lZ3/dpYpXuSVe7hiRd7G4Tuzrfz5e0qW0a205N99oWbZPShERU
EvERHnkgywwCUUBA4sImiwLCgAMaGJRlGAiowWEbjLJp2BkY9mVIe57n87t+
8/p9on99+Svfex6P33zO9z73ue7rel/v69zXvZxz/uB3fte3/Znfc911133v
fbb/fdt3fN8f+57v+Y7v/1Nf648//R0P/KN/5IG/dzt88PbvKds/x7e//j8/
f9xj/6HzJ/3IP3H+tJ/8F8/fescdh49/7GOHRz7i954/77nPPbzh9tsPH/3I
Rw4/+RM/cfjrv/ALh7/xxjceHvXIRx5+6lnPOvzMT//04X3vvf/hR574xMOP
PuUp27n/8vDDP/RDB7I+/7nPHZ78pH/y/Bd+/j88f/rT/qXzX/rFw/nzf+Zf
P/+hv/qPnL/8Zf/++Q8++j7n73vve7fr/unzX/nlXz78/Mtffvjyl760y3rC
4x9/ePOb3nS46cYb97a0+4LnP3/XgX7a+Nu//X/vOjz9aU87fPhDD9iPlf3V
x/3Dh9/8jW8//LWnfr3rzjYdtuOnnv3gox99tul+9ppXv/rs197ylrMPf+hD
Z5v+Z9dd+e+zn/nM4fW33ba39d73/J/nb7j9W85f8+r7nf/iq87On/ucf+X8
J378nz9/7Wv+2PkLX/Bvnj/zGfc9f8+7/4/zN7/pv9rPf+iD/8/5ne/8n87f
9Df+xF7+1ju+7Ryu7/7N//38bW/9U+cbLufvePv/cP43f/W/OX/da//T/fiO
X/vv9jrvuvN/Pn/nO/7H81/9lf96r/uWv/nfXq2vzi+/+U9eU976lVP5bbf6
nOo5+teu2lscik9xK57FufjXL/VX/Vj/1u/lQ3lS/pRX5Vt5WH6Wt+VzeV7+
Ny4aL8959r+8c3ezf9PrPzj/xF13bfb89l7nUY/8mvNPf+pT+/FX7rnn8M53
vOPwir/+H5//1vvfv8un63ve/e7Dy2655Zry1q+cym+7K35X/K74vXj8Pu+5
/+oej3TbbD2n52/+xm8cnviE37/55VcP9Pj//s7f2WXT+/E//I+di8VH3/R1
53/r13/98LMvfOHhXXfeeXjxi1602/+qW2/d8YaX8xu+h9e99rV7fXGs3ac8
+Z86p+8jHv7wg7Z/8if+hc2Wr8H3rZ3/aLeXPH8/8xnPOHzwAx84/MDDHrbX
J/tXfvlbt3auP/z4j/3YXp/PnN/wPnvC43/fVZ/+2ltu2H28+fr6Tfft3/2v
+vwHHnbdrhPs2OteBAuYvehn/+3zH/+xf+58k7Vzzj3oBc//N7b70fecv/99
33H+9rf99+cf+fD/u9n/v244fuv5xo/zra2dw7/xt/63nduvv+2P75yf44mF
2173n+1cHj67Ds/xlayJF+WuVXZaPvUrp/LbbvWpntW/dtXe4lB8ilvxLM7F
v36pv+rH+rd+Lx/Kk/KnvCrfysPys7wtn8vz8r9x0XiBk/OPePjv2eNKfJJ7
y8/90b1f05fxifP04j/1lavz9re9ba/f8tavnMpvuyt+V/yu+L14/D72Mf/g
+c+99KW7bH2z3xsf9fefP/wH/r4tj3j1VR31vf5+zrOfvfWrD9x/4bD16/vf
W86x2/iVex56+OIXHrLjo4/WX8sVvviFLxzo5W99vzIy6MFG9jpmO53poEy7
7IK93OSxj3nMVueP77nJxNHm/02PR2/Y33f3n3xm88s3H/9ddz295D3+sfEx
P/gPnMsXtmt3vsid8ANftvo77/DRfUhuhnuv/qXzPb/CVzx0jHeNHXVwUx05
2uR7chvcnzqum2uVqY/nb3zDf7Efi5GJDflLy1u/ciq/7Vaf6ln9a1ftLQ7F
p7gVz+Jc/OuX+qt+rH/r9/KhPCl/yqvyrTwsP8vba/l8L8/L/8ZF40UOLscU
Rz/7wn9rj2F5t3vPL/3iL+4xu7V/Lv7I5lPxJ27l6K6le8tbv3Iqv+2u+F3x
u+L34vEr5ow19aP03HKRq2NL482X3Hzz1p8+brdZvQ0TZWcvufkbd9thBptt
jMnuM7gYA5NFB3ZqU/9sbCsXaFwYM8tznTveB27dbTIX5JddrpdTwOSYa9x3
P5ZPvOyWb9p9AR/jfH7b/Hf9dt+4krdcd5i86Eee+I+fv/Ql/975j/21f/b8
h3/oH93HxzMHNbnYzS/+d88/8Lf/9Pmvv+t/uZrjuWe9+EX/ztV5C3WGk+Yh
zHOo98pX/CdX5zdufeU373xUjnfKHMvLlGvPtY6Ht9qbGFGXLHHU8tavnFP5
0271qZ7Vv3bV3uJQfIpb8SzOxb9+qb/qx/q3fi8fypPyp7wq38rD8rO8LZ/L
8/K/cdF4Ebfi3JjNfWXme8xLyYW1+9Qf/WfO6S/+3deUyUf57+5PfnKX1/LW
r5zKb7srflf8rvi9ePwe51u/YbfLWoVr/d79yQftbSvXxtY/n+mH6SAvgMdx
bvmGM+e0xR7zsfpX4262GL/CBObG1pvcXWd9uz4dhuq4lv3q6t/hR2/6kGne
+jhe//pdL7jTje6bDrtv+GHG6j/9vH9tz4Ho4B5i/GzcvLW9+xwPZu5dDu4Y
V/EKX/Hx2T/1h/d5fBzDkZl3MI+Ng/j1cy/9I/t1yvFWuXl789w4aS5kw2o/
njkLPMddfPY7x2JmYgRvxQDutrz1K6fy2271OdVz9K9dtbc4FJ/iVjyLc/Gv
X+qv+rH+rd/Lh/Kk/CmvyrfysPwsb8vn8rz8b1w0XrQjDq2XGKdpW+zCSz5r
be94T3nhHo/6O+Xquq/pB/VzLW/9yqn8trvid8Xvit+Lx69+eNY6ydL/s/HK
3MS+Tkq2NVPX+FWuHnnHeeX77X25MS29zQ2zj+7Ow0h+4frN5v0cO61Pym/p
p64xKn3pCLcrawNn+nJjc/9gpz34q2uNhRz9vHHus575B/d1VjnOTTd+7b7H
AIc2vM6Nizd8dq7gx/ABD/HI/QgX8A5nHeMzXuHLzNPjHg7PnMPkY45xeMqt
kauPz+QMh2ctQHtkTk5orcA58yjyPW24vuWtXzmV33arT/Ws/rWr9haH4lPc
imdxLv71S/1VP9a/9Xv5UJ6UP+XVtXy7l4flZ3lbPpfn5X/jovEipsiwbmGu
SL4qFsWqPFcebC5Ku3R1n4KNfs1Yz/jPGkfLW79yKr/trvhd8bvi9+Lxqz3X
01ndmQM2N2tPjuvYZY8RXa2Z6ovVm/GvPtw8zuzbIU//Tp643WL9THuzdg4D
+a668mHztTCC+VH/6/b2zTWbe7bXZ/Y1wV0eDQ8Y8hH/2HNkrdQYl0y5jv1T
5pn4Gm9wb8tNdq7g2+RRuCT/ck3jSE41e7LMMwzH1FeuvnkG+R556svRppxM
8/rDW205Z35j1rvFAn6by7AWQO7M85Orfstbv3Iqv+1Wn+pZ/U/tGnuLQ/Ep
bsWzOBf/+qX+qh/r3/q9fChPyp9reXUv38rD8rO8LZ/L8/K/cdF4oaMYn32P
jv2KM3sCzNGYd9GumGOr8+Lb3BA7rbO0vPUrp/Lb7orfFb8rfi8ev1vs7W0Z
X7pG/vnKV7xi3/9jbKn92WO76Xg288bGyKOP/akzPj3O+R7jTftiefbeimc6
sEcfbDyqLfX14WLfmNu9wZ4h+jgPb+3NHK/9P3JnOQsf8JGxPL/zj1zoU3d/
99Uci69xj3/tq5JvyZ3MWzgvD5r5BOXlklxLufkKXJJD4d7wVHvyPPmUdofL
k0+6FsfkX8NLPJz2Zh+Za6x347py+uKc/U0tb/3Kqfy2W32qZ/WvXbW3OBSf
4lY8i3Pxr1/qr/qx/q3fy4fypPwpr8q38rD8LG/L5/K8/G9cNF7Muxzz3xv2
eBF36j35SU+6Ou/iniCm2WZeRyyat9H2cW7yfteUt37lVH7bXfG74nfF78Xj
13MhrvOrn7Y/jf5s2n7P6Ki/tUaqnv5evLpWO9r77GcevOtszlf+Ko7J86su
O4543Gdf0yQDNuyW/zpPJ/2z2JcrwFk+IV8wVrdXbvbDKrfmaoyOI/Y94Zt8
ZuYdfvu3/q/dp+YOcGzmH3BGOT45nhzLsRwNH8wxzJ4q/FGOY8pxR1v4qq65
dzyZa+d45vm1P+vseDhrE5O/mTMhV/nGi53rePrBD/yZ/VrttLz1K6fy2271
qZ7Vv3ad2js4FJ9T3AbP4lz865f6q3489e/4vXwoT8qf8qp8Kw/Lz/K2fC7P
y//GRePFvMsm+/p754Hu3PuZma+U/4pZMe3YPUK+65fN+jz3h5a3fuVUfttd
8bvid8XvxeN35RtrvLDGC2u8sOJ3xe9ljt81/7zWj9b60Vo/WvG74vcyx+/a
j7T2E679hGs/4YrfFb+XOX7X8ynr+bL1fNl6vmzF74rfyxy/630F630j630j
630jK35X/F7m+F3vr1vvn1zvn1zvn1zxu+L3Msfvep/5+h7B+h7B+h7Bit8V
v5c5ftf3rdb36db36db36Vb8rvi9zPFrrlWMzdwM2eZoyYTLlgvssarM2qa4
tK5oHK+NZzz9D+w66JtnPtvYe9ZZ6W1cLw/BCzmMOvzAZ7B2rXPGvHxtjC6v
+Zmf/oZ9/fSnnvWHdi4oN2/sGnjDxjV4NOflYPIoPsYpsvmYP/ncvWT2yrHH
GBwP+Ekew6/8fhzHP2NvA9/YQRb/y6PkH3irfWuxk7/JpdirPswGEzmKc9qD
u1/rBzg38+7G7WzAbTkK2exseetXTuW33epTPat/7aq9xaH4FLfiWZyLf/1S
f9WP9W/9Xj6UJ+VPeVW+lYflZ3lbPpfn5X/jovHiWWP9lj7L7+xdk3/yh1x0
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
4nfF78Xjd+JsYsff6pmrIV9dOutH5Sn0Ua7PnmcQHbNRHfnO6EAf9cmHL/2n
va6DzNoH7OwdmP2uMJlvbdBnMCefT/lFOfz4S/3xI3zI5ouZi555JHa7Vu6k
vjE4v6sjPzH+1g7ussd5PGMjm/ASJjOnPdybuYKZJ4cTPuI8PXHkmP/dsN/z
HJMvD8T5mRuZd034tf+55a1fOZXfdqtP9az+tav2FofiU9yKZ3Eu/vVL/XXq
x/Fv/V4+lCen62jDq/KtPCw/y9vyuTwv/xsXjRf1XDfzh+o771e76s38Jznz
/qd5vm/mcFre+pVT+W13xe+K3xW/F49f+Mwe7nnPjGPtzrc/1eGDkT/Xjy76
7mnTcXWY78bQQXyze8at2ve3sfB8F0q+Md9Xlm/o5+UZkzPM+j7MZ78QjOFP
zxnL88UcswNn1IGVNmetHwf4HWdmXZiewzd1hjMwhx+ZjsfvbFVfbsZPuIb3
2lV3eKiuOQ22zPqy+nI96+j0OuaSb9xzxZkzaXnrV07lt93qUz2rf+2qvcWh
+BS34lmci3/9Un/Vj/Vv/V4+lCflT3lVvpWH5Wd5Wz6X5+V/46LxQuZ8c5wt
/p5vR/jbtfOdCDLFqLbZ5neub3nrn8oZ+W13xe+K3xW/F49fOKjPDjqzwfE8
z6s+nLU939HmG/309MWOO4fjPEzgJaZholwdbcJBu5P7at/v5M+ulTNo27F5
49lLzn+OYWguiZzJPciB96zpz1w3u/oNR3MCOEAX52cvNzvkOrCii/rsG1/P
e3vkcGyc+fBZ88UlmE+7w2f5nzrDZ5iIBevdfDnP2JKPp9YOZk3cOxRa3vqV
U/ltt/pUz+pfu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lSflTXpVv5WH5Wd6e
8nl4Xv43LhovYoud8z4Kv2RMHfj1eNroNwXn2Ygp/92urfy2u+J3xe+K34vH
r34TXn5dq45/8J933E9/Shd1xCsbtD9zuTN+hZ1+Xzvkf/hDDzh/33vvvz/f
b+1VW87NOJfeM8fr3kBfxzBxLJcgf94XPnvwZo2TjeyWx5CJE7M2OnsOyJhn
TGb8PnMCZKszY/n5jhW8+ZR+M/+A28MxuuOkHAu2ky+ZB5j5c7Z2z5v5eM+u
wkze53kcNokRe8PYLw7sJYMvnqrT8tavnMpvu9Wnelb/2lV7i0PxKW7FszgX
//ql/qof69/6vXwoT8qf8qp8Kw/Lz/K2fC7Py//GReNlYqbH2mQjrB2PXsro
MOXsc43jlrd+5VT+absrflf8rvi9WPzKE7T3W+//zqsxDHu6OOffvPNQf0sX
GMBzdGE7W9TTrr1wE9PkaWtie3LbGbfqr6fv5k91tON43rsvJ1AHZnIO7Sin
y3zLdNZHlE3syEHwwXXwm7Va/ho/8smsyygzxz5z1/PcyvBnvgkpz9HuvAN9
5tLNmc88/LyXw75deR3d5Fb2itEXx61rs2PWzWefmBihmxxt6kx561dO5bfd
6nOqZ/Ufu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lSflTXpVv5WH5Wd6Wz+V5
+d+4aLwoowfZ4s714tevv9WFJ33m3cB08i585z9x1184/8ynv/ea8tavnMpv
uyt+V/yu+P3qxK/Y0ubwftp2zj9j1ZlPne+G6p/p69+06x+5E7P66X5fZupP
HA0WfvmP/+c+MmNV189zVfP+cPrN9xfpZD589vzwHT/CY55B7jNZ8w3GeZaE
DONuMsePM78N55kHmHeDzDwDTNVxrHxyNvjMc6azp2ue1cVTa+HssS5gfxhc
59h+MHMd6sBQuRhpeetXTuW33epTPU/1H7tqb3EoPsWteBbn4l+/1F/1Y/1b
v5/yYXhS/pRX5Vt5WH6Wt+VzeV7+Ny4aL9Mvef8ZeY69214bzn/0I3/2mmO/
H/vonzv/7GcevPd/vhPzuc/+xWvKf7drK7/trvhd8bvi9+Lx61jf6D3c2p9+
UzvtT9VxjXOO/ao7ds7xXEdnbU5+O9/Z7rdm5r2KM3cLx8l32e49qNp2nfMz
d+ya2fMKU2WOx7/z3OXsMx8OOAcTuM0cNcxmLy5MXTvz3nxNppwDR4d7M7cw
e5Lpqu7wX35ivoK+M8+vHWX4zL5Zj4bl7L+CgzkJcSFu7KH27ZSWt37lVH7b
rT7Vs/qf2jX2FofiU9yKZ3Eu/vVL/VU/1r/1e/lQnpQ/5VX5Vh6Wn+Vt+Vye
l/+Ni8YLuXQ1joODY/2ZOs4b74lbx3d/8kHnX/ri959//nN/aRsL/JXdbvm1
e0vLW79yKr/trvhd8bvi9+Lx61iOKb4m1tRxjTzGv7mWfLrPXIv6nftx7Fe5
6/3SzXWNKTmIeKdbc0u2u0Y9WM17+Of5Jv6afIM/+NWYdtZHtcUX8y1U+cjs
CZ+cQR0+ca221eHf2bPkvjRz4PIeOsx3kbUze6tmvmLeV4B38wypuXZ7upTP
czrwwM+Z25n9XeRPvudv73f3jRT7nuebXS1v/cqp/LZ7qs/oWf1rV+0tDsWn
uBXP4lz865f6q36sf+v38qE8KX/Kq/KtPDzl5/C2fC7Py//GReOFLGUf/9gD
9zrKP/mJ79rl+dW/OfeVex56ft11D7sab3JReyZ8p9R3ca4tv7d+5VR+213x
u+J3xe/F43cwNP/MHrmDOWs6GR9PvjTvYpv3Wshn4MSPs6dIHXkQPWDi3OwJ
MJ6nz+ztUQ5DeQk76AGr6b+dm+8kTtxNnZlXdq1zcgrtuc45ZZMrzF4EecXM
A5M7880z1zQ4z7c4Jo+ZuWnn517lVxnM55d8cmbN5q6P//ldhnK5vTLnHWtD
/v+Fz3/f7gP3vHu+/Jf3ORLPFc03ODf89m84t7z1K6fy2271OdVz9K9dtbc4
FJ/iVjyLc/GvX+qv+rH+rd9P+TB1yp9TXg3fysPys7wtn8vz8r9x0Xhhq5za
vQku84wzPdwH7Ye3HuNbNr5NStZLbr55/zY3PXxvx7dLW976lVP5bXfF74rf
Fb8Xj9+Vb6zxwhovrPHCit8Vv5c5ftf881o/WutHa/1oxe+K38scv2s/0tpP
uPYTrv2EK35X/F7m+F3Pp6zny9bzZev5shW/K34vc/yu9xWs942s942s942s
+F3xe5njF4br/XXr/ZPr/ZPr/ZMrflf8Xtb4Xe8zX98jqF3rewTrewQrflf8
Xrb4Xd+3Wt+nq121tzgUn/V9uvV9uhW/K37/Xopf9df3jtf3ytf3ytf3ylf8
rvi9rPGrLbIffdPX7bbwlbkXmOs/xSoM6ehafTRb/G28zHbjX326MbE6c6wN
1+KAOV72ztysNdkZF6tvjpm9fAaDm2782qvPP857AGa+lx/hoy11Tn1Bvjrq
zzwwnMmis/wIl/gLN2a/Ll/jBsyN/WcPOZ3wDW58OvMGw0/646Fz5ODyxBR7
4T/vPcBtXKYzXGatmM/ojHvO2dNFruta3vqVU/ltt/pUz+pfu2pvcSg+xa14
FufiX7/UX/Vj/Vu/lw/lSflTXpVv5WH5Wd6Wz+V5+d+4aLzMPk/9FwyN4z5x
110HuMycp3zVHk9rf+TIQz/9qU8dxK9jY8CWt37lVH7bXfG74nfF78XjFwbW
H8TjrN1blyeTvv7mUz7Rv2uXLZMHsmPmafWz+t/pu+GgHFZimG5kkDl2TYyw
ffBUPmNY5XCgm7bMD/O7tsikP5mznxyP2Dlro3IF5YMVH+HOrOkbY89znY5x
Q7v4AGu+nvwN92auAx/hMO8r4NN55gVv1Zscx3jfMe7Ll+ijndlbNc/OmENw
Dndn/sR1LW/9yqn8tlt9qmf1r121tzgUn+JWPIvzKf7jl/qrfqx/6/fyoTwp
f055NXw75eHws7wtn8vz8r9x0XjRZym3t3PmNo3v6KMdfRYfqm8vqGO5qj0w
cJt+sOWtXzmV33ZX/K74XfF78fjlK321/FOeMP0mrIxf9ZewYtPklsrnuV22
zHp63/XEP7DCBzqTyV98zUbls+6pj4YPu6YO+fgy+wTYMvO6jsl3TM5g7lr6
0GHmnGECt5krptvgNnuW5jmU2VfMj7gx+9lwg9xZ85133A0PHU+OB2f+ktvM
u+5Gh653zDOknYdnr/bIUwe+M68x5afrJiOn8ttu9ame1b921d7iUHyKW/Es
zsW/fqm/6sf6t34vH8qT8ueUV8O38rD8LG/L5/K8/G9cNF5m7KafIsc9TH8m
76b7u+68c++/jOne8+5378f2v7z9bW87wF9dxy1v/cqp/La74nfF74rfi8ev
a8n2NxyMNf2tj9Zvs2ueXSIThuqwhe3k059fxKl62vIrf5AzqM8euZDcZNYm
2KV/V0f7npOCvzaNVfX1bKG3vl7OMuNluBnb4gA5cKDbyGTLYG7c7Vo6OYb/
+FQ5PdnC58phAufZ7zTPtsCNHdqSo+Em3eRN9Jx9C3g989jk4qVy9zVyZy/1
vANh9hyzcfYHG/tbk3bc8tavnMo/bXf0qZ7Vv3bV3uJQfIpb8SzOxb9+qb/q
x/q3fi8fypPyp7wq38rD8rO8LZ/L8/K/cdF4kU/POA724k+fJX7VoSec9WvW
9fhB2Rtuv/1q36d+y1u/ciq/7a74XfG74vfi8auvlAuQI+7oxUZz1+qyUf8+
5TCkF52Mrcmkv7xDnLpGf85uz/yyVVzT5zhv8pbDK1/xiv05Kf2zsergyTY5
A3/NfAvdXEc3bU7+oM6sL/AX3MfvrsEv9ecZKPXJn/E138PQtTCfPAReMJ/6
sKILn86xvQvqzBh/3oGAfzCHHT3Ity4w7zTAV/mW9yXhnDbnPfH8P+/zm7mU
me9oeetXTuW33epTPat/7aq9xaH4FLfiWZyLf/1Sf9WP9W/9Xj6UJ+VPeVW+
lYflZ3lbPpfn5X/jovECB7/yXri5P9FD3n18f8zt+76XWYNQxxqg5yPk7m+9
447t94XXlLd+5VR+213xu+J3xe/F4xfu5kc/+IEPHI55w+2H19922+G4Pn3H
4Z3veMfB9XT073jNS/f93mxyrbxWfbEsVuH75S996cBO42/XO+9v35Txbn3H
r3vta/djPmeXca6ciF101e/LMfybcnXkUvSHg3sFG/3jdzZoa/Ii89rqKyPT
uJnO5of5E+Z0hq1r+Rcm/A93+DvGMTLlaOzz/oXZP9x3I/A7H2h3vgEjr8F5
POYTuaLyvkuKrHl/OzzMjTvu+/mVt37lVH7brT7Vs/rXrtpbHIpPcSuexbn4
1y/1V/1Y//5OfiezPCl/yqvyrTwsP8vb8rk8L/8bF40XNtJ95lvgJNe1BqMd
31Wiv5yTHDjMM/LqmJuhd8tbv3Iqv+2u+F3xu+L34vFLr5Gjjj2k+l8YmDcV
k2x+85vedDBXo39+3nOfu9ent++KPPMZz9i/GbPlPIdHPfKRB7kD2fKAWYfV
b/OnXACW2rcXgOxZG9Gu9tgrH7AngC3a9Ld6/DrrqPIF9ir3N1nWVchgh/ya
DGXuJe4zRztfenjVrbcevnLPQzd9v2az4T67Ht7tMfci+RHf4Z75iNljxk/s
wyvz6vOMsPzJOe+FFwPyPXyW+8k7/MIdd82X4Lkccd4NOM/zznNEM38iLlre
+pVT+W23+lTP6l+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+XD+VJ+VNelW/lYflZ
3pbP5Xn537hovMBsMOEH52avpl/xZgxAT/jI5dlwjMnj+iA7W976lVP5bXfF
74rfFb8Xj9/ZM6Nfnz5UniqfIF9sykF9L9S1sKELvXwz5n3vvf82rn3i4Uef
8hRxu38/lCztTr7HDrbymz5brM/eN/az6+df/vKDvp+sJzz+8Qf23HTjjXtb
2n3B85+/60A/bRy/2/asw9Of9rQtl3nAYb7lto3LN7u+/bDlPa4723TYjp96
tuF2tul+9ppXv/psG4OfbfnP2ab/2XVX/oOnfEFb885cnMMl8wa4NO/tkY/I
x+b96vOOeJxXPnMc8z1K9zNcnjzQMb6qg+9yRJxXVyxM/X4DZcpbv3Iqv+1W
n1M9R//aVXuLQ/EpbsWzOBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8Ls/L
/8ZF4+X4DNXxm6vmecSd2FbHs37zHIS5nxnfiTvy6ere8rJbbrmmvPUrp/Lb
7orfFb8rfi8ev8bI4pFu5nbpqX80XpYb0MNYlGx66//FonlX/a71DWv3L37R
i3b75RXwhpfzxtvGv+qLY+3qk+n7iIc/fM9Btpxmz082P1gH2e0lz9/6fGNY
3+pWn2x5watuvX7/zqX6fOa8bz9vOcFVn2752O7jzdfXb7pv/+5/1edbnrDr
BLuZp4IFzKzZGsvLL3DOPUh+4Tsq5vflcN4db25fLievk/vNXAduz56xOZ5Y
mG9QDp9dN+9tJ2vipd9DOS2f+pVT+W23+lTP6l+7am9xKD7FrXgW5+Jfv9Rf
9WP9W7+XD+VJ+VNelW/lYflZ3pbP5Xn537hovMBp8kxxJT7JNVelX9OX8Ynz
9OI/9ZWrIzdWv+WtXzmV33ZX/K74XfF78fi1lmicSLa+2a85V/PHGy5XddT3
+vs5z3721q8+cP+Fg7G1v7ecY7fRmPuLX3jIjo8+Wn8tVzAmppe/9f3KyKAH
G9nrmO10poMy7bIL9nKTxz7mMeaU9txk4mjz/5Vx8n13/8lnNr988/HfddfT
S97j3+yfnTXleecDfuCLcfQ8/+o+JDeb9yLJr+Y5Vcd419hRBzfVkaNNvie3
mXfDq+O6uVaZ+ng+cx9iZGJj3jc45a1fOZXfdqtP9az+tav2FofiU9yKZ3Eu
/vVL/VU/1r/1e/lQnpQ/5VX5Vh6Wn+XttXy+l+flf+Oi8SIHl2OKI/NQYlje
7d5jvUPM2tcn/sjmU/EnbuXorqV7y1u/ciq/7a74XfG74vfi8SvmjDX1o/Tc
cpGrY0vjzZfcfPPWnz5ut1m9DRNlZy+5+Rt322EGm22Mye4zuBgDk0UHdmpT
/2xsKxdoXBgzy3Odm3URNpkL8ssu18spYHLMNe67H8snXnbLN+2+gI9xPr9t
/rt+u29cyVuuO0xeZF+SOWHrtOax59nKycNxxjMz5uRn7/J8T9I69MxbqDOc
NA9hnkO9+X73fEty3qM7z6s6lpfNu+dd63h4q72JEXXJmu9qTnnrV86p/Gm3
+lTP6l+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+XD+VJ+VNelW/lYflZ3pbP5Xn5
37hovIhbcW7M5r4y8z3mpeTC2rWPjf7i331NmXyU/6z7kdfy1q+cym+7K35X
/K74vXj8Hudbv2G3y1qFa/3e/ckH7W0r18bWP5/ph+kgL4DHcW75hjPntMUe
87H6V+Nuthi/wgTmxtab3F3nWaeFoTquZb+6+nf40Zs+ZJq3Po7Xv37XC+50
o/umw+4bfpixujVWORAd3EOMn42bZz8VHszcuxzcMa7iFb7i47xjAcfmu1fy
vHl+Fr+swbpOOd4qN29vnhsnzYVYt573zBuL4znuzjNEczzvshcjeDvfsGx5
61dO5bfd6nOq5+hfu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lSflTXpVv5WH5
Wd6Wz+V5+d+4aLxoRxxaLzFO07bYhZd81tre8Z7ywj0e9XfK1XVfm31rLW/9
yqn8trvid8Xvit+Lx69+eNY6ydL/s/HK3MS+Tkq2NVPX+FWuHnnHeeX7HY7v
k3rjvlZpbph9dHceRvIL12827+fYaX1Sfks/dY1R6UtHuF1ZGzjTlxub+wc7
7cFfXWss5OjnjXPttbXOKsfxDI08BIfm/QYbPlffZzR8mHfPzrtx8W6e05k9
XPMeQtzqe33NOUw+Nt9Bm3Jr5OrjMznD4VkL0B6ZkxPOXjLzKPI9bbi+5a1f
OZXfdqtP9az+tav2FofiU9yKZ3Eu/vVL/VU/1r/1e/lQnpQ/5dW1fLuXh+Vn
eVs+l+flf+Oi8SKmyLBuYa5IvioWxao8Vx5sLkq7dHWfgo1+zVjP+G+eo5/y
1q+cym+7K35X/K74vXj8as/1dFZ35oDNzdqT4zp22WNEV2um+mL1ZvyrDzeP
M/t2yNO/kydut1g/096sncNAvquufNh8LYyuPEt8xaaH7HPN5p7t9Zl9TXCX
R8MDhnzEP/YcWSs1xiVTrjPv6+NrvMG9LTfZuYJvk0fhkvyr34LEHznV7Mky
zzAcU1+5+uYZ5HvkqT/f6VJOpnn94a22nDO/MevdYmHeKzHP1M48P7nzza8p
b/3Kqfy2W32qZ/U/tWvsLQ7Fp7gVz+Jc/OuX+qt+rH/r9/KhPCl/ruXVvXwr
D8vP8rZ8Ls/L/8ZF44WOYnz2PTr2K87sCTBHY95Fu2KOrc6Lb3ND7LTO0vLW
r5zKb7srflf8rvi9ePxusbe3ZXzpGvmn5xDt/zG21P7ssd10PJt5Y2Pk0cf+
1BmfHud8j/GmfbE8e2/FMx3Yow82HtWW+vpwsW/M7d5gzxB9nIe39maO1/4f
ubOchQ/4yFie3/lHLvSpu7/7ao7F1/O+dfuq5FvzXnrn5UEzn6C8XJJrKZ/v
e8qhcG94qj153rwvd7g8+eS8+32+mTnr7NPe7CNzjfVuXJ/vSuOc/U0tb/3K
qfy2W32qZ/WvXbW3OBSf4lY8i3Pxr1/qr/qx/q3fy4fypPwpr8q38rD8LG/L
5/K8/G9cNF7Muxzz3xv2eBF36j35SU+6Ou/iniCm2WZeRyyat9H2cW7yfteU
t37lVH7bXfG74nfF78Xj13MhrvOrn7Y/jf5s2n7P6Ki/tUaqnv5evLpWO9r7
7GcevOtszlf+Ko7J86suO4543Gdf0yQDNuyW/zpPJ/2z2JcrwFk+IV8wVrdX
bvbDKrfmaoyOI/Y94Zt8ZuYdPIvKp/NOhpl/wBnl+OR4cizHcjR8MMcwe6rw
RzmOzXeYtYWv6pp7n+9/TQzOt1FmTmPW2fFw1iYmfzNnQq7yjRc71/HUN7Pm
m9Qtb/3Kqfy2W32qZ/WvXaf2Dg7F5xS3wbM4F//6pf6qH0/9O34vH8qT8qe8
Kt/Kw/KzvC2fy/Pyv3HReDHvssm+/t55oDv3fmbmK+W/YlZMO3aPkO/6ZbM+
z/2h5a1fOZXfdlf8rvhd8Xvx+F35xhovrPHCGi+s+F3xe5njd80/r/WjtX60
1o9W/K74vczxu/Yjrf2Eaz/h2k+44nfF72WO3/V8ynq+bD1ftp4vW/G74vcy
x+96X8F638h638h638iK3xW/lzl+1/vr1vsn1/sn1/snV/yu+L3M8bveZ76+
R7C+R7C+R7Did8XvZY7f9X2r9X269X269X26Fb8rfi9z/K7vHa/vla/vla/v
la/4XfF7meNX38h+/SiZ5mTZod+cvabizzqkPa+zn0c+wi+O5Q7a1ab9r8av
5q+N143f+dn42zolXOhPJl9qF2dc6xwfsNk/9eUufMJ2Y2FrqHIBe4X8m3Iy
rX3ijTr8bLyPC47NwzuGhZxHW+yR4zjvb/6ls3yCzvxnHnx46DrPjfo3uZm8
ju5H7t+2c3X2ibGR7uSbz4KT3E1+qB2+pz9ekAMHuM48gLyP3i1v/cqp/LZb
fapn9a9dtbc4FJ/iVjyLc/GvX+qv38mP6tTv5UN5Uv6UV+VbeVh+lrflc3le
/jcuGi/iyP0L9luuu/dt+jVzL8rZZ2w34zhlYhUeYtExu1ve+pVT+W13xe+K
3xW/F49ffaVyfag4m+cy6EwPe3jIYNOsXTr27Ic6cgo5hHxC/09X/atr6UMH
41b9tzpTX/9s7xQbxL324eDYtex1b1CfDuJffXPk8mh1lbNLHTppi+/JN8/A
l+Yg1DPHgCewgK38hb5yGXnOvAvDujTM+Z1MOvOvtuHKn3gDM3XNYdNtyuFK
NzyAg1/chBt/0gM3HOM0G2FAD3WuPKu6r5vjufn9lrd+5VR+260+1bP6167a
WxyKT3ErnsW5+Ncv9Vf9WP/W7+VDeVL+lFflW3lYfpa35XN5Xv43Lhov5LtH
HN8xdZxrEaP6rHk23nqFnHPGa8Z2xgRilp2OW976lVP5bXfF74rfFb8Xj9+J
P9gZX9KXP+xr0keTL/7oAufpx9Ufu455yrfsusGdznIEdcQxm5Q7Vu6YPtof
vvEHX5LvWFuDP1+7P7gWbuZ16Uk3dfiQX907+FlOxfaRKce2tgojdejLHnkA
XegJN37xN1tgbCxPN/XpaR7DeTo4hrG22aKOczDxSw9+kftNHoiH1qxxRh16
whkPzWnwg7LjM1D32+cT5jncKW/9yqn8tlt9qmf1r121tzgUn+JWPItz8a9f
6q/6sf6t38uH8qT8Ka/Kt/Kw/Cxvy+fyvPxvXDReZu+2HFQ5H5A774NRPvOf
cl42stk5Yz3zno5b3vqVU/mn7a74XfG74vdi8auf1P+6Blb0ZINj86vkasv4
Uo5DN9fRg0x5hnryFvmNcTZ7/c57KpyXA7BdPks+rDznwTb5A3ljO3yMj+mo
fbg7ho9j+c+8f8C15LFdrjLYkqP+5Cfq4MPkFXIdupHPx9Zl2E4H+NDHGN89
SVvkw59e+Kq+cn5n++z3xTHYz5o72ebxycFD/MZ5uuO8eBEX5sgndszFz/qC
45a3fuVUftutPtWz+teu2lscik9xK56nOA/+9Uv9VT/Wv/V7+VCelD/lVflW
Hpaf5W35XJ6X/42Lxotjuo0O+i5yjeecm+d5p5y92pu9avCddxxOeetXTuW3
3RW/K35X/H514lffKdbgqS368dfImfkb8ulJZ7pN3yqHgLNxuDnvOZ7ni+k8
z/7TGV7a1U/bG6XcfK0+mm704iN5CJ35Bbb8xS/aHWz5HQZ85HjGwnBWLreR
L5HJL8pnHdcaDZtmTkZbk6toi0w5z/hFzsNusrTFn+P3eeaT/nhhfnv2epnv
hufswaKPdobn6luTdtw80LXktLz1K6fy2271qZ7Vv3bV3uJQfE5xGzxPcR78
65f6q36sf+v38qE8OeXP8Kp8Kw/Lz/K2fC7Py//GRePFP226zzie9yXOe6Ho
Icd2v/C3OHVOXIpfvpw50ilv/cqp/La74nfF74rfi8evOsrnHU3zjQ8yJ/9k
lzLy5znFeZeF2J05HPnNvMeJv+ls/gcW5MsrtE0/+pOnX2YXmxyTAxNYqcNH
g7/68iF1yOAjuvD5zLEoxw97a9nON8ba8gjyx6czfudTfpxjbdGZPsbdeDU+
cq1fdXAGF3CX/pOnsZHu5gRwY9YCYIgXOA8XOeHsi8YR+R45OGgtATcmjlre
+pVT+W23+lTP6l+7am9xKD7FrXgW5+Jfv9Rf9WP9W7+XD+VJ+VNelW/lYflZ
3pbP5Xn537hovJA9+eo81yvOrT/QGS6zPj+5rvUI59y75nnglrd+5VR+213x
u+J3xe9XJ36nPmzFnjrkuLbfwIILnbVHJ/M2M68z7zWdd6L6pbP8Vl060JlN
+mX9u9jXrvG7OsrJV/f4DM23/l0YyofhQ395Bt+pz1/kq2+sDit1+Eyd6fu1
pU3l2pq5gsmRZt7Yte5F+EwXvqY77sjtYOK8/Mq3xpyDJ7vkQjgAJ/XtEYar
Z4WsC7DVWq5j+Klr7hpu5hvwny8mP2x561dO5bfd6lM9q3/tqr3FofgUt+JZ
nIt//VJ/1Y/1b/1ePpQn5U95Vb6Vh+VneVs+l+flf+Oi8TJl+ia4OSfG6E82
/fw9+ar67jnuFfPOYPi0vPUrp/Lb7orfFb8rfi8evxNnEzv+Vs9cDfnq0lk/
Kk+hj3J99jyD6JiN6sh3Rgf6qE8+fOk/7XUdZNY+YGfvwOx3hcl8a4M+gzn5
fMovyuHHX+qPH+FDNl/MXPTMI7HbtXIn9Y3B+V0d+Ynxt3Zwlz3O4xkb2YSX
MJk57eHezBXMPDmc8BHn6Ykjx/zvhv2e55h8eSDOz9zIvGvCr/3PLW/9yqn8
tlt9qmf1r121tzgUn+JWPItz8a9f6q9TP45/6/fyoTw5XUcbXpVv5WH5Wd6W
z+V5+d+4aLyo57qZP1Tfeb/aVW/mP8mZ9z/N830zh9Py1q+cym+7K35X/K74
vXj8wmf2cM97Zhxrd779qQ4fjPy5fnTRd0+bjqvDfDeGDuKb3TNu1b6/jYXn
u1Dyjfm+snxDPy/PmJxh1vdhPvuFYAx/es5Yni/mmB04ow6stDlr/TjA7zgz
68L0HL6pM5yBOfzIdDx+Z6v6cjN+wjW81666w0N1zWmwZdaX1ZfrWUen1zGX
fOOeK86cSctbv3Iqv+1Wn+pZ/WtX7S0Oxae4Fc/iXPzrl/qrfqx/6/fyoTwp
f8qr8q08LD/L2/K5PC//GxeNFzLnm+Ns8fd8O8Lfrp3vRJApRrXNNr9zfctb
/1TOyG+7K35X/K74vXj8wkF9dtCZDY7neV714azt+Y423+inpy923Dkc52EC
LzENE+XqaBMO2p3cV/t+J392rZxB247NG89ecv5zDENzSeRM7kEOvGdNf+a6
2dVvOJoTwAG6OD97udkh14EVXdRn3/h63tsjh2PjzIfPmi8uwXzaHT7L/9QZ
PsNELFjv5st5xpZ8PLV2MGvi3qHQ8tavnMpvu9Wnelb/2lV7i0PxKW7FszgX
//ql/qof69/6vXwoT8qf8qp8Kw/Lz/L2lM/D8/K/cdF4EVvsnPdR+CVj6sCv
x9NGvyk4z0ZM+e92beW33RW/K35X/F48fvWb8PLrWnX8g/+84376U7qoI17Z
oP2Zy53xK+z0+9oh/8MfesD5+957//35fmuv2nJuxrn0njle9wb6OoaJY7kE
+fO+8NmDN2ucbGS3PIZMnJi10dlzQMY8YzLj95kTIFudGcvPd6zgzaf0m/kH
3B6O0R0n5ViwnXzJPMDMn7O1e97Mx3t2FWbyPs/jsEmM2BvGfnFgLxl88VSd
lrd+5VR+260+1bP6167aWxyKT3ErnsW5+Ncv9Vf9WP/W7+VDeVL+lFflW3lY
fpa35XN5Xv43LhovEzM91iYbYe149FJGhylnn2sct7z1K6fyT9td8bvid8Xv
xeJXnqC933r/d16NYdjTxTn/5p2H+lu6wACeowvb2aKedu2Fm5gmT1sT25Pb
zrhVfz19N3+qox3H8959OYE6MJNzaEc5XeZbprM+omxiRw6CD66D36zV8tf4
kU9mXUaZOfaZu57nVoY/801IeY525x3oM5duznzm4ee9HPbtyuvoJreyV4y+
OG5dmx2zbj77xMQI3eRoU2fKW79yKr/tVp9TPav/2FV7i0PxKW7FszgX//ql
/qof69/6vXwoT8qf8qp8Kw/Lz/K2fC7Py//GReNFGT3IFneuF79+/a0uPOkz
7wamk3fhO/+Ju/7C+Wc+/b3XlLd+5VR+213xu+J3xe9XJ37FljaH99O2c/4Z
q8586nw3VP9MX/+mXf/InZjVT/f7MlN/4miw8Mt//D/3kRmrun6eq5r3h9Nv
vr9IJ/Phs+eH7/gRHvMMcp/Jmm8wzrMkZBh3kzl+nPltOM88wLwbZOYZYKqO
Y+WTs8FnnjOdPV3zrC6eWgtnj3UB+8PgOsf2g5nrUAeGysVIy1u/ciq/7Vaf
6nmq/9hVe4tD8SluxbM4F//6pf6qH+vf+v2UD8OT8qe8Kt/Kw/KzvC2fy/Py
v3HReJl+yfvPyHPs3fbacP6jH/mz1xz7/dhH/9z5Zz/z4L3/852Yz332L15T
/rtdW/ltd8Xvit8VvxePX8f6Ru/h1v70m9ppf6qOa5xz7FfdsXOO5zo6a3Py
2/nOdr81M+9VnLlbOE6+y3bvQdW265yfuWPXzJ5XmCpzPP6d5y5nn/lwwDmY
wG3mqGE2e3Fh6tqZ9+ZrMuUcODrcm7mF2ZNMV3WH//IT8xX0nXl+7SjDZ/bN
ejQsZ/8VHMxJiAtxYw+1b6e0vPUrp/LbbvWpntX/1K6xtzgUn+JWPItz8a9f
6q/6sf6t38uH8qT8Ka/Kt/Kw/Cxvy+fyvPxvXDReyKWrcRwcHOvP1HHeeE/c
Or77kw86/9IXv//885/7S9tY4K/sdsuv3Vta3vqVU/ltd8Xvit8VvxePX8dy
TPE1saaOa+Qx/s215NN95lrU79yPY7/KXe+Xbq5rTMlBxDvdmluy3TXqwWre
wz/PN/HX5Bv8wa/GtLM+qi2+mG+hykdmT/jkDOrwiWu1rQ7/zp4l96WZA5f3
0GG+i6yd2Vs18xXzvgK8m2dIzbXb06V8ntOBB37O3M7s7yJ/8j1/e7+7b6TY
9zzf7Gp561dO5bfdU31Gz+pfu2pvcSg+xa14FufiX7/UX/Vj/Vu/lw/lSflT
XpVv5eEpP4e35XN5Xv43LhovZCn7+MceuNdR/slPfNcuz6/+zbmv3PPQ8+uu
e9jVeJOL2jPhO6W+i3Nt+b31K6fy2+6K3xW/K34vHr+Dofln9sgdzFnTyfh4
8qV5F9u810I+Ayd+nD1F6siD6AET52ZPgPE8fWZvj3IYykvYQQ9YTf/t3Hwn
ceJu6sy8smudk1Noz3XOKZtcYfYiyCtmHpjcmW+euabBeb7FMXnMzE07P/cq
v8pgPr/kkzNrNnd9/M/vMpTL7ZU571gb8v8vfP77dh+4593z5b+8z5F4rmi+
wbnht3/DueWtXzmV33arz6meo3/tqr3FofgUt+JZnIt//VJ/1Y/1b/1+yoep
U/6c8mr4Vh6Wn+Vt+Vyel/+Ni8YLW+XU7k1wmWec6eE+aD+89RjfsvFtUrJe
cvPN+7e56eF7O75d2vLWr5zKb7srflf8rvi9ePyufGONF9Z4YY0XVvyu+L3M
8bvmn9f60Vo/WutHK35X/F7m+F37kdZ+wrWfcO0nXPG74vcyx+96PmU9X7ae
L1vPl634XfF7meN3va9gvW9kvW9kvW9kxe+K38scvzBc769b759c759c759c
8bvi97LG73qf+foeQe1a3yNY3yNY8bvi97LF7/q+1fo+Xe2qvcWh+Kzv063v
0634XfH791L8qr++d7y+V76+V76+V77id8XvZY1fbZH96Ju+breFr8y9wFz/
KVZhSEfX6qPZ4m/jZbYb/+rTjYnVmWNtuBYHzPGyd+ZmrcnOuFh9c8zs5TMY
3HTj1159/nHeAzDzvfwIH22pc+oL8tVRf+aB4UwWneVHuMRfuDH7dfkaN2Bu
7D97yOmEb3Dj05k3GH7SHw+dIweXJ6bYC/957wFu4zKd4TJrxXxGZ9xzzp4u
cl3X8tavnMpvu9Wnelb/2lV7i0PxKW7FszgX//ql/qof69/6vXwoT8qf8qp8
Kw/Lz/K2fC7Py//GReNl9nnqv2BoHPeJu+46wGXmPOWr9nha+yNHHvrpT33q
IH4dGwO2vPUrp/Lb7orfFb8rfi8evzCw/iAeZ+3eujyZ9PU3n/KJ/l27bJk8
kB0zT6uf1f9O3w0H5bASw3Qjg8yxa2KE7YOn8hnDKocD3bRlfpjftUUm/cmc
/eR4xM5ZG5UrKB+s+Ah3Zk3fGHue63SMG9rFB1jz9eRvuDdzHfgIh3lfAZ/O
My94q97kOMb7jnFfvkQf7czeqnl2xhyCc7g78yeua3nrV07lt93qUz2rf+2q
vcWh+BS34lmcT/Efv9Rf9WP9W7+XD+VJ+XPKq+HbKQ+Hn+Vt+Vyel/+Ni8aL
Pku5vZ0zt2l8Rx/t6LP4UH17QR3LVe2Bgdv0gy1v/cqp/La74nfF74rfi8cv
X+mr5Z/yhOk3YWX8qr+EFZsmt1Q+z+2yZdbT+64n/oEVPtCZTP7iazYqn3VP
fTR82DV1yMeX2SfAlpnXdUy+Y3IGc9fShw4z5wwTuM1cMd0Gt9mzNM+hzL5i
fsSN2c+GG+TOmu+842546HhyPDjzl9xm3nU3OnS9Y54h7Tw8e7VHnjrwnXmN
KT9dNxk5ld92q0/1rP61q/YWh+JT3IpncS7+9Uv9VT/Wv/V7+VCelD+nvBq+
lYflZ3lbPpfn5X/jovEyYzf9FDnuYfozeTfd33XnnXv/ZUz3nne/ez+2/+Xt
b3vbAf7qOm5561dO5bfdFb8rflf8Xjx+XUu2v+FgrOlvfbR+m13z7BKZMFSH
LWwnn/78Ik7V05Zf+YOcQX32yIXkJrM2wS79uzra95wU/LVprKqvZwu99fVy
lhkvw83YFgfIgQPdRiZbBnPjbtfSyTH8x6fK6ckWPlcOEzjPfqd5tgVu7NCW
HA036SZvoufsW8DrmccmFy+Vu6+RO3up5x0Is+eYjbM/2NjfmrTjlrd+5VT+
abujT/Ws/rWr9haH4lPcimdxLv71S/1VP9a/9Xv5UJ6UP+VV+VYelp/lbflc
npf/jYvGi3x6xnGwF3/6LPGrDj3hrF+zrscPyt5w++1X+z71W976lVP5bXfF
74rfFb8Xj199pVyAHHFHLzaau1aXjfr3KYchvehkbE0m/eUd4tQ1+nN2e+aX
reKaPsd5k7ccXvmKV+zPSemfjVUHT7bJGfhr5lvo5jq6aXPyB3VmfYG/4D5+
dw1+qT/PQKlP/oyv+R6GroX55CHwgvnUhxVd+HSO7V1QZ8b48w4E/IM57OhB
vnWBeacBvsq3vC8J57Q574nn/3mf38ylzHxHy1u/ciq/7Vaf6ln9a1ftLQ7F
p7gVz+Jc/OuX+qt+rH/r9/KhPCl/yqvyrTwsP8vb8rk8L/8bF40XOPiV98LN
/Yke8u7j+2Nu3/e9zBqEOtYAPR8hd3/rHXdsvy+8prz1K6fy2+6K3xW/K34v
Hr9wNz/6wQ984HDMG24/vP622w7H9ek7Du98xzsOrqejf8drXrrv92aTa+W1
6otlsQrfL3/pSwd2Gn+73nl/+6aMd+s7ft1rX7sf8zm7jHPlROyiq35fjuHf
lKsjl6I/HNwr2Ogfv7NBW5MXmddWXxmZxs10Nj/MnzCnM2xdy78w4X+4w98x
jpEpR2Of9y/M/uG+G4Hf+UC78w0YeQ3O4zGfyBWV911SZM372+Fhbtxx38+v
vPUrp/LbbvWpntW/dtXe4lB8ilvxLM7Fv36pv+rH+vd38juZ5Un5U16Vb+Vh
+Vnels/lefnfuGi8sJHuM98CJ7muNRjt+K4S/eWc5MBhnpFXx9wMvVve+pVT
+W13xe+K3xW/F49feo0cdewh1f/CwLypmGTzm9/0poO5Gv3z85773L0+vX1X
5JnPeMb+zZgt5zk86pGPPMgdyJYHzDqsfps/5QKw1L69AGTP2oh2tcde+YA9
AWzRpr/V49dZR5UvsFe5v8myrkIGO+TXZChzL3GfOdr50sOrbr318JV7Hrrp
+zWbDffZ9fBuj7kXyY/4DvfMR8weM35iH16ZV59nhOVPznkvvBiQ7+Gz3E/e
4RfuuGu+BM/liPNuwHmed54jmvkTcdHy1q+cym+71ad6Vv/aVXuLQ/EpbsWz
OBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8Ls/L/8ZF4wVmgwk/ODd7Nf2K
N2MAesJHLs+GY0we1wfZ2fLWr5zKb7srflf8rvi9ePzOnhn9+vSh8lT5BPli
Uw7qe6GuhQ1d6OWbMe977/23ce0TDz/6lKeI2/37oWRpd/I9drCV3/TZYn32
vrGfXT//8pcf9P1kPeHxjz+w56Ybb9zb0u4Lnv/8XQf6aeP43bZnHZ7+tKdt
ucwDDvMtt21cvtn17Yct73Hd2abDdvzUsw23s033s9e8+tVn2xj8bMt/zjb9
z6678h885Qvamnfm4hwumTfApXlvj3xEPjbvV593xOO88pnjmO9Rup/h8uSB
jvFVHXyXI+K8umJh6vcbKFPe+pVT+W23+pzqOfrXrtpbHIpPcSuexbn41y/1
V/1Y/9bv5UN5Uv6UV+VbeVh+lrflc3le/jcuGi/HZ6iO31w1zyPuxLY6nvWb
5yDM/cz4TtyRT1f3lpfdcss15a1fOZXfdlf8rvhd8Xvx+DVGFo90M7dLT/2j
8bLcgB7GomTTW/8vFs276netb1i7f/GLXrTbL6+AN7ycN942/lVfHGtXn0zf
Rzz84XsOsuU0e36y+cE6yG4vef7W5xvD+la3+mTLC1516/X7dy7V5zPnfft5
ywmu+nTLx3Yfb76+ftN9+3f/qz7f8oRdJ9jNPBUsYGbN1lhefoFz7kHyC99R
Mb8vh/PueHP7cjl5ndxv5jpwe/aMzfHEwnyDcvjsunlvO1kTL/0eymn51K+c
ym+71ad6Vv/aVXuLQ/EpbsWzOBf/+qX+qh/r3/q9fChPyp/yqnwrD8vP8rZ8
Ls/L/8ZF4wVOk2eKK/FJrrkq/Zq+jE+cpxf/qa9cHbmx+i1v/cqp/La74nfF
74rfi8evtUTjRLL1zX7NuZo/3nC5qqO+19/Pefazt371gfsvHIyt/b3lHLuN
xtxf/MJDdnz00fpruYIxMb38re9XRgY92Mhex2ynMx2UaZddsJebPPYxjzGn
tOcmE0eb/6+Mk++7+08+s/nlm4//rrueXvIe/2b/7Kwpzzsf8ANfjKPn+Vf3
IbnZvBdJfjXPqTrGu8aOOripjhxt8j25zbwbXh3XzbXK1MfzmfsQIxMb877B
KW/9yqn8tlt9qmf1r121tzgUn+JWPItz8a9f6q/6sf6t38uH8qT8Ka/Kt/Kw
/Cxvr+XzvTwv/xsXjRc5uBxTHJmHEsPybvce6x1i1r4+8Uc2n4o/cStHdy3d
W976lVP5bXfF74rfFb8Xj18xZ6ypH6XnlotcHVsab77k5pu3/vRxu83qbZgo
O3vJzd+42w4z2GxjTHafwcUYmCw6sFOb+mdjW7lA48KYWZ7r3KyLsMlckF92
uV5OAZNjrnHf/Vg+8bJbvmn3BXyM8/lt89/1233jSt5y3WHyIvuSzAlbpzWP
Pc9WTh6OM56ZMSc/e5fne5LWoWfeQp3hpHkI8xzqzfe751uS8x7deV7Vsbxs
3j3vWsfDW+1NjKhL1nxXc8pbv3JO5U+71ad6Vv/aVXuLQ/EpbsWzOBf/+qX+
qh/r3/q9fChPyp/yqnwrD8vP8rZ8Ls/L/8ZF40XcinNjNveVme8xLyUX1q59
bPQX/+5ryuSj/Gfdj7yWt37lVH7bXfG74nfF78Xj9zjf+g27XdYqXOv37k8+
aG9buTa2/vlMP0wHeQE8jnPLN5w5py32mI/Vvxp3s8X4FSYwN7be5O46zzot
DNVxLfvV1b/Dj970IdO89XG8/vW7XnCnG903HXbf8MOM1a2xyoHo4B5i/Gzc
PPup8GDm3uXgjnEVr/AVH+cdCzg2372S583zs/hlDdZ1yvFWuXl789w4aS7E
uvW8Z95YHM9xd54hmuN5l70Ywdv5hmXLW79yKr/tVp9TPUf/2lV7i0PxKW7F
szgX//ql/qof69/6vXwoT8qf8qp8Kw/Lz/K2fC7Py//GReNFO+LQeolxmrbF
Lrzks9b2jveUF+7xqL9Trq772uxba3nrV07lt90Vvyt+V/xePH71w7PWSZb+
n41X5ib2dVKyrZm6xq9y9cg7zivf73B8n9Qb97VKc8Pso7vzMJJfuH6zeT/H
TuuT8lv6qWuMSl86wu3K2sCZvtzY3D/YaQ/+6lpjIUc/b5xrr611VjmOZ2jk
ITg07zfY8Ln6PqPhw7x7dt6Ni3fznM7s4Zr3EOJW3+trzmHysfkO2pRbI1cf
n8kZDs9agPbInJxw9pKZR5HvacP1LW/9yqn8tlt9qmf1r121tzgUn+JWPItz
8a9f6q/6sf6t38uH8qT8Ka+u5du9PCw/y9vyuTwv/xsXjRcxRYZ1C3NF8lWx
KFblufJgc1Hapav7FGz0a8Z6xn/zHP2Ut37lVH7bXfG74nfF78XjV3uup7O6
MwdsbtaeHNexyx4juloz1RerN+Nffbh5nNm3Q57+nTxxu8X6mfZm7RwG8l11
5cPma2F05VniKzY9ZJ9rNvdsr8/sa4K7PBoeMOQj/rHnyFqpMS6Zcp15Xx9f
4w3ubbnJzhV8mzwKl+Rf/RYk/sipZk+WeYbhmPrK1TfPIN8jT/35TpdyMs3r
D2+15Zz5jVnvFgvzXol5pnbm+cmdb35NeetXTuW33epTPav/qV1jb3EoPsWt
eBbn4l+/1F/1Y/1bv5cP5Un5cy2v7uVbeVh+lrflc3le/jcuGi90FOOz79Gx
X3FmT4A5GvMu2hVzbHVefJsbYqd1lpa3fuVUfttd8bvid8XvxeN3i729LeNL
18g/PYdo/4+xpfZnj+2m49nMGxsjjz72p8749Djne4w37Yvl2XsrnunAHn2w
8ai21NeHi31jbvcGe4bo4zy8tTdzvPb/yJ3lLHzAR8by/M4/cqFP3f3dV3Ms
vp73rdtXJd+a99I7Lw+a+QTl5ZJcS/l831MOhXvDU+3J8+Z9ucPlySfn3e/z
zcxZZ5/2Zh+Za6x34/p8Vxrn7G9qeetXTuW33epTPat/7aq9xaH4FLfiWZyL
f/1Sf9WP9W/9Xj6UJ+VPeVW+lYflZ3lbPpfn5X/jovFi3uWY/96wx4u4U+/J
T3rS1XkX9wQxzTbzOmLRvI22j3OT97umvPUrp/Lb7orfFb8rfi8ev54LcZ1f
/bT9afRn0/Z7Rkf9rTVS9fT34tW12tHeZz/z4F1nc77yV3FMnl912XHE4z77
miYZsGG3/Nd5Oumfxb5cAc7yCfmCsbq9crMfVrk1V2N0HLHvCd/kMzPv4FlU
Pp13Msz8A84oxyfHk2M5lqPhgzmG2VOFP8pxbL7DrC18Vdfc+3z/a2Jwvo0y
cxqzzo6HszYx+Zs5E3KVb7zYuY6nvpk136RueetXTuW33epTPat/7Tq1d3Ao
Pqe4DZ7FufjXL/VX/Xjq3/F7+VCelD/lVflWHpaf5W35XJ6X/42Lxot5l032
9ffOA9259zMzXyn/FbNi2rF7hHzXL5v1ee4PLW/9yqn8trvid8Xvit+Lx+/K
N9Z4YY0X1nhhxe+K38scv2v+ea0frfWjtX604nfF72WO37Ufae0nXPsJ137C
Fb8rfi9z/K7nU9bzZev5svV82YrfFb+XOX7X+wrW+0bW+0bW+0ZW/K74vczx
u95ft94/ud4/ud4/ueJ3xe9ljt/1PvP1PYL1PYL1PYIVvyt+L3P8/v+Hikzx

      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3QnUfvtZ1vcUi5WOdE5n7EhbOikdPed5tfNcq51HsNXS1tZWba2t7YKT
BMmJJgcMCSSIMcEkYgZERIwxCQkiZh7wBOWAiBNggjFgggrY57Pfc518eVfO
Wi5f1xL877PWc979389+9v7t+3dfv33ve7jun/rzftHP+QWf8oxnPOOX/JTr
/37O5/6yn/WLf/Hn/vKf+5P94+d/7i/86T/tF/6k6+YvvX5edP3Y/n3f9p/d
vP99/+HNN/+uf+34+/t/339+/P2D3/U5N3/8+/6nm+/+g597fL7nj/0PNx98
/D+5+QPf+d/cfOd3/Nc33/K7/42bJ779vzyO/9YP/Nxjn+++/ff/F8e/nffx
3/sfH+f6tg/+pze/91v/o2Of4/zmD333zzvO6xzObb/j/tgf/QXHcR94/885
zvWud/67N7/7m//141i/MwbHO+57v+fzjs+HP/QLb/7kR/63m2c84/Of+rzu
tf/Ezdf+5n/m5rWv+azrvXzXQ1/82Kc//I1vectD1/t6+PbzXQ/9yY985OH3
vfe9D//6l73s4T/1gz94+V3f9E2X3/4N33D5rj/w3x7X/Ma3/MybN/3Oh29e
+Rv+oZuveOnfdfPWb/xZN6/5Tf/4za9/2Wcc9/qOt//bx/fGY+xv/z3/1rHf
2MnTPZHF7/mWf/OQxXve/e/fvO2t//JTcnGMe3VP737Xv3cc+973/AdPHe+Y
d77j3znOve/IxL997/zkN5n6+Ldz+vi3efRxT3/kD//3hxyN8Y/+kZ9/7Hcc
+fm3c//AR3/xIVPbH/rj//NxHXIgD3L4NV/yNx3X+/rf+s/efNUr/oFjXGTy
5V/2zGO8X/P6f+rmJV/+dxwy+M1f80/fvPQlf+dxf45/2a/7+457cAx5ujfz
47f2m69f95V/73H873zjQze/6av/sZvveOK/OmT2db/lpx/X+h1v+JduXv+6
f/K4lm3XcA+OeePv+Bk373vvzz7+up7zG/s3/LZ//pAF+ZP55uQtb745jqfL
tsnVMe7VeOx/85sux3mc3/V2nd/6dZ99HOd3v/0b/oXjd473vb+u6zg68k1v
+1eO87iW490nXTJG9++43/b1/9zxcQydd01zYkzGYt5cw3lhx3HOceL3xO+J
3/vjF1bcMx2hB3TDsbZdjx67FzI39u/73v/x0GHb5oX8ydUx5sp4YcZf4/LZ
fJsTx/luuPNv53F++3Y+82jf9Mb2rgGDjvv+D/8vx1g+8id+0c0PffyX3fzo
j/y/T+Foa4J7eM6z/8rLFUeXP/1DP/Twc7/oi47PVf6w9PDv+ZZvefjLv+zL
Hv7SF/4tx/f+DYPm//qbQw7WJ3NKx+ih+yOH4dy4zAe5uU/X/l3f9K8+tUbZ
Hg6siZOLc/sd+ZsT5xqO7Pdb+1zPx3fDi/O51tayYWf42cfYHGOs5pqsyf1j
f+r/OO7BNr2lX+7zN3zVP3jzq3/VX3vzJ77/+y8/8sM/fPltX//1lz/1g7/0
Qj/gwHfGBTvw4j7osrXFffyWr/1pT2GB/r7i5X//Me/bdg8w4Rj3Bju/9iv+
7uN+3vDb/8WbV7/qHznu1fpkHoyb/PzefZATjNFt+uvaZOovTDo/3afzxcL+
usdhyLZjhgfjtJ75N9m5H3jYPLqmY/zGtnO6tt+6F/8mxz3L/NZf8+ycMOra
7s3f/Z7e+N7xruM446DzjnOfZEJWZP6nf+j/OuQFzyd+T/ye+L0/fsnVGOjM
D/7ALznGCof01T24p52DnmzbmP7wH/rvjo/f0Gf2h/OZO/rmrzGYq83XMLU5
dg3XKhZ9bNu3f/v98DN76E98//966MJH/+T/fvMjP/wrjvH/uR/9/25++M/+
P4dNRO9h7TqGy9XevFzPeYGhL37sscOmhK9hpziy/fu+7dsOO9Mx/jreOMw3
Odgmm2KHPGdP07vZhGRlTnbMcDF5Op6umBfb5nHrGP12Huc1x+Zwx9jn4xzD
kPOaE/K39pCRuZn9vfG9/Nf/1Jsv+pV/1YGX3/ut33r5NV/yJZerfl2MYbrt
utZaa4i5YJuxBd3DV/7av+fmBc//6w89+42v/swDU849O9BYncdx7h0O2J9w
t2OsFbDwqlf+w8c23YdP+gVTX/0b/9Hj/LbZkM5Db43JefauBY/G5LzkBoOO
ITu/hVvH1ObcO9tsTNv2w5jj6KrvjGU4IDfXNQ7b5O4+fezz1zl2DPl1e9cY
1v11Dfdg23HeTYYVvyWPx17wNxzHXHXxxrrmu6uO3pi3E78nfk/83h+/zvHn
fvRHL7/x1a++GJf7hjf6ac6ck37SG+egw3tO+62/xr9r+I6OmzOYYsPQZTbf
8DV/yvBlnLN7hiV/3YvvZn/SD/rg/DB7tXOOcTr3n/0z//dxnT/zp3/5zcc/
9n8e37Ev7f8NX/VVl9/8NV9z+U1f/dWXL/j8Z1zx8Rkw8tBzv+in+PeFbwVe
/GVb2v+Nb3nLYXdedeTyvd/zPVf782uewtRV3g8PO+bMOM0TPZj/ZPNl//xm
ts3r1kK/tT1/GWwMU451LjI2b+Zxtqj9w5F/m2vrJ/lsvdp56Tg7kP32wl/z
N99c7/f6PvFDlx/46Ecvv+Vrv/bypS984cW5hh16xCZkH7qm+6Db83Ww8YyR
Lebc84fAiHHDB1ucbNy3Y8yfdcV6bcx0yjWc0z35/dYYx7iuc7mG7ekYOcwu
nJ/EeOkLmRgXvbN+kIM5so+ez7/iWmRK9s5vDO6hdiPZz7fn346x7eO6rjV7
3Xfdnu1uXvYOZQz2GcP2u7/5wYyXTntOWPfsd58+/FjWOeOxbv3Wr/u6i3PC
6K/7yq+8nPg98Xvi9/74pZ/siqt+XNwfTMGa++dzv9pXF/cGg7/yC3/yMV/m
x9zBCNwat3/PN+vejMs9O96HvjueL9tv3OfsUbJd3GL+FP823tme/s6P4zfO
Kabgr/PyE9iGeZ/6WNzHI1/wV9zwE1z16KEv+PzPf+gZ1/9gCEZgBkb8hSM+
mGHqOn9PYe3Lv+yZ4g8PX3//sNjE9foPw+X2+ze5u3dzZj7Igi96/rHFgMgK
7vzd9nxq9Mncun96thiE7dns9GPxAbKn63TZOvi7v/mbD4yYR59f+xVfcbFm
zufPt+/cMM2Ws5+est/o7fAyHz5suCe6L8ZgLHSZTpob4/Wde7WPbwYO2IDw
aHzkQad2T2RiDaAvvnNOv3e9+ZmMjz6QiX/PxqvfY/ae8y4m5Tjy2Xrtuz0H
tvaZB7JwbWN3v4vjuN78fHv/2Vq/f3tmbY13bvOw54y/i6WRp/EsZmVMsOB7
OKCr/Jz0lx7bb2zmCH6ua/qN9d95bV918gIDMOsd4MTvid8Tv/fHL/uMzxiO
HAcrbEt2xIc/9KHLK17+8suzn/WTbr74sccuV12ga4ePwjY7hc/4y178tx+6
bI6dz334GD95mxeyXrzXGNiAcMD34d8wsDgDm8A+90UWk+Vi93uGGy9csiP5
VmAMhtiSfCvDETvKe7/P1a54SLzdX9hgJ8LL1Za6iDfY99rXfNZT+LrqxIER
vhj4mj15G7N47IhTdLtYc07n4auBCzhiYy3WQDbmdbbl5nE5DO6ZPrpH9wqL
sGb+yd0aZ35e8PznX37kh3/FdW5+5gXu6Tz9tfY53vbzf/Vfd8iM/vit87km
jNg//8n8HjAwP7/rGc/03BjZZ/wVs535W8yLtZj+O8aci3fb53zw5d7sg3vn
dE/O5bfLWzCe3fueK2zCxa62PSxN32w3LrNnE/ku32A24Gxu8llOhflZ3ICe
zVc1v9ZyGIyJXu65R2+Xg0KPXcP3MNFtf/ceRE/pvvXfuBfbgetnPfIpVzm/
AcZuvvA5n3pjjo3dHNp2LnMLsyd+T/ye+L0/fuk+3wubkx4++txPu2F/uIZ3
cPPk/t/8pjddnvXII4d/gp7xv9/Gqj/nYTopTwt22S97zrqm88OFv+RH9v6S
hTlwHZiyHsACPMKWv8ZtTMupWowYxmaLzo9u2/ezJ/lThiOxFO/6PvLMbn0r
L4OnAx90nv4v7l4c2Q87bEU4grnr/R6+F7/lo2FbLofN7xxrG76c7zam8emH
zPx+c0i/6NvyAMlteQ7u1xzTafYfe/iPf9/3HTi5rnPH9czF9V3CGnnEBaxr
8EIfYEVcyRywl5brRX+te67L9oOxYWo+E2sx23L+f79xHuPxb/rjevMj0UNY
Gtbm/2M3zudmn9+ad9eajW0tse2YxQYWs3L9+d2MfT5+MvJ3eSDDDgzs/cs+
MpzNvXeW+eqGT/dOn+bXs91YmI9zz570m8W5nNdYvSuRg2167pjFv+DAtmfG
fH5iYO6bfQ1bv+p5f81VTm+8PO/RRy/un9+LL9D5v+SL/8Yb2DImOPWe4Drm
9lWvfOXlxO+J3xO/98cv+2+2JbuFbfniF73osC3ZkS99yUsu5PXBxx8/cMrG
fM6zn31giR496Yd4+Bn573oPl6stcHzIiX1BPvTbesDes9+H35nekD+5sw1h
ylh8rBswyN5sfpnz+B52fBZ3mD1Zv8rzHv2rj/XEh377DEd0HI7ggh0IM7Az
H8t17g98sTuvOnfsn61oH322Pb9KcQRfjrHe+C3/DAyQne/85vrdgTX72dp0
lTxgi/7exqDfKz/giu3Pu9CT2od0cPYh/bfm+a019kVf+rceusnfIo/Cfvh4
8Yv+tkP/2YDi7XRuOWPOT9/ZlosFWPeW0+X87Da2nuPoHh03buOZbUbfHMOm
dIxxOId7XDzb8YtRz3dCT4xheR3G6d+wMxvSsf4a32Iv87ksbjU7kFz2DgIT
e8+Zz3I1A8sBHI78bvkJe8YNO3SRTjqXffTQMfbTTefz13PPd3JA6OH8odZ+
OIIt8+p9x3NMHoh78D7onc69+O5tb33rse154Hnm99ZCz60Tvyd+T/zeH7++
hx1YY/fRufe8+91H3AEe+apv33sfP/zUbFc+Fv4GdgwdY1/d6uBn8Lcffour
rv0MmPId3YQ5c882EvN1LTYf/weZGtPqSJZXReaLR1hDdrzfDiPGDzNs7OWd
+cjD3jHWmA+8//3H53ZMb3loeg4rfClyzGzTZ7H1Ycf+q3wO/Nzag8888HOL
m4885W/Zb+Vs2edYuIERuHIO+3wHd7bnt3H9jWF54eZvOb30m+14lemFf99a
yJdiXqwNfGfkYL2i/2woa99sQvovhk5fYdN6Succ79xk7Tow65psfvMEB3C6
nDHHyG2mZ3Ted8v54K9ZXoBx2W8e2Z10yThgYfaZ71afZSzDh2MWN/Db5Se4
nt/5zr7Zgs01WZxueYrze6x2brka8DM7dbGH6Z9njL/z/+2v8zvPciOt6c5h
vzXdvsW8XMP6TwfpLx2kt+qsPv6xj13e9c53mvPru9dnH7rCjn/H299+PKfI
Qxzs9a973fG8s/553jk//NhvDNt/4vfE74nf++O3z8c+N/s87XO2z98+l+8+
r/cc7/O9z/3aA7UTaj/Urqi9UTuk9kntltoztXNq/9Quqr1UO6r2Ve2u2mO1
0+7ab7Prau/VDqx9WLux9mTtzNqftUtrr9aOrX1bu7f2cO3k2s+1q2tv1w6v
fV67vfZ87fza/30v6PtC3yP6ftH3jr6P3H1P2ftL32v6vtP3oL4f9b2p71N9
z+r7V9/L+r7W97i+3/W9r++DP/Y98RPvj32v7Ptm7dgTvyd+T/zeH7/1l9aP
Wv9q/a71x9ZPW/9t/br199YPXP9w/cb1J9fPXP9z/dL1V9ePXf92/d71h9dP
Xv95/er1t9/1w88/X799/fn189f/37hA4wWNIzS+0LhD4xGNUzR+0bjGXT/P
4iCNjzRu0njK3TjL4i+NyzRe0zhO4zuN+zQe1DhR40eNKzXe1DhU41ONWzWe
1ThX41+NizVe1jha42uNuzUe1zhd43eN6zXe1zhg44ONGzae2Dhj44+Na5z4
PfF74vf++G3+TPNqmm/TPJzm5zRvp/k8zfNp/k/zgpov1Dyiu/lFyztqPlLz
lJq/1Lym5js1D6r5Uc2baj5V86yaf9W8rLv5Wsvjan5X876aD9Y8seaPNa+s
+WbNQ2t+WvPWms/WPLfmvz1djlzz6JpfVxw1H695es3fa15f8/1qTzY/sHmD
zSdsnmHzD5uX2HzF5jE2v7F5j82HbJ5k8yebV9l8y+ZhNj+zeZvN52yeZ/M/
mxfafNHmkT5drmnzUZvnduL3xO+J3/vjt/Zi6yxaf9G6jNZrtI6j9R2t+2g9
SOtEWj/SupLWm7QOpfUprVtpPUvrXFr/0rqY1su0jqb1Na27aT1O63Tu1u+s
rqf1Pq0Dan1Q64ZaT9Q6o9YftS6p9UqtY2p9U+ueWg/VOqlPVj8Fa623ah1W
67Nat9V6rtZ51a/SurDWi7WOrPVlrTtrPVrr1Fq/1rq21ru1Dq71ca2baz1d
6+xaf9e6vNbrtY6v9X2t+2s94N06wdUPtq6w9YatQ2x9YuueTvye+D3xe3/8
tr6+dfetx2+dfuv3W9ffev/yAJQfoLwB5RMoz0D5B8pLUL6C8hiU36C8B+VD
KE9C+RPKq1C+hfIwlJ+hvA3lcyjPQ/kf6k8qX0R5JMovUd6J8lGUp6L8FeW1
uMt3MR6M8mOUN6N8GuXZKP9GeTnu8nUMa+X3KO9H+UDKE1L+kPKKlG+kPCTl
JylvSflMynNS/pPyopQvpTwq5Vcp70r5WMrTUv6W8rqU76U8MOWHKW9M+WTK
M1P+mfLSlK/mLo/Nid8Tvyd+74ff8q2Vh202nrkub9tdPrfxvJX/rbxw5Ysr
j1z55co7Vz668tS9L/x18/+z5cp3Vx688uOVN698euXZK/9eefnK11cev/L7
lfevfICtjyp/YHkFyzdYHsLyE5a3sHyG5Tks/2F5EcuXOOw4pvyK5V0sH2N5
GsvfWF7H8j2WB7L8kOWNLJ9keSbLP1leyvJVlsey/JaLabVOtvhazshs9/Jq
lm+zPJzl5yxvZ/k8XXc8n+X/LC9o+ULLI1p+0fKOPh03aflLy4t44vfE74nf
++O3/Nvl5S5fd3m8y+9d3u/ygZcnvPzh5RUv3/gT4SEvP3l5y8tnXp7z8p+X
F909brs86uVXL+96+djL017+duccr3v53ssDX3748saXT372UL93f+Wlb1zm
Lo/9/E3lvV+sYTxO48mfrtgur3759svDX37+8vYXR+X5L/9/+wK0X0B9LO0v
0L4D7UfQPgXtX9C+Bu130D4I7Y/Qvgntp9A+C+2/0L4M7dfQPg7t79C+D+0H
0T4R7R/RvhLtN9E+FO1PsfeC9a0oJ+hy8k/8nvg98Xt//LYfU/s0FQvGMd/s
bEj4cY5haX4Seta+UY5/45P9pNpnqv2nnGd9qdqvar4Oc9r+Vnf7Xq0fluPX
J6v9s9pXy7XWb6t9uNqfq3272s+rfb7a/6t9wdov7JP1URm3xv5OX2b/Dw+z
CZebNxwtBmFd2zHjtF9/tPZNaz+1u33WlrfQvmzt19Y+bu3v1r5v7QfXPnHt
H9e+cu031z507U83fLt2+9m1z1373y2G5vftl7eYzeoD5tPaGub79uNrn772
79uaUB8jebYPYPsDtm/gnmXm8Y3pM9j+g/OTLc61vPL2MWx/w/ZNO/F74vfE
7/3xC3PTZ3JfPvOwAGvkPVwsFkDeixWvPmjnMk/+Lpa9GMRsQjrtXuHJdY3R
MfY3p44sYQsWbJsbOUKzvWGKXJbr5fyOhxGycwx9cMzwZYz2yWFn18zWMsfe
78nNHJu/+rEXp9k80rG9szc/vZjxnY/fF0c7bjaQcS+/D17c63LtyNL+rYPD
mjnxe7IYF9/84XwG/g1ri1vPN2Me1weWv4pNbg7tY6uTh/mn/+aEzMiLTfmH
vvu7L9/xxBMHFyLb8cmapCPOoh5A7bW4u5j7937P91zkj/+B7/zOy2qjxRjY
jnA0O24ypL+7B/dsHd36SZeMb/l4dGQ1squjXe72amjnb1nvoOZgbz62dvmQ
x3h+4dcx8L25XZxsc7/1bDGkxdzo0p5jywlx3vk8yRoGfe/+yNY2H6H6Nc8N
uPFdfZXmcnUEw6i178Tvid8Tv/fHr/mBreUmkTO9JNvhyxzYR7bzQy+GSwfH
u07usLNYMczQGfam8xsnfTZ/ZOV8/PvDiG3nGXYcIxbAxjNWx1srVvfKt2ss
5lmOkPHbr+7VOeTsmXtrA5yJI5CT9cLYxHphht1gHsjJvM6/vTqr1cqQXXGz
d/zZkMNIfd6bx+aj7+/iPrMb50dZ7zP7ylO0WPnsxvkOzDub1jXIbJwLi924
f2tmcw/oyex2ukpeYibLuZKDbC5tk6MxwZw1ypotr0y8WZ3c1b4Umz/qWM2h
+XBOOHDd6Ty5LO69WurlCpITPds7jvkyv+bJ+eSxu1/HWM/hkMyXWzkeicl9
tvzWN/LcZ/UBza+c/bnnxOz89WldTdwTT3JfzH+z3An7Z98uprd6BbIjS99Z
/8zj7FT37zj7zMHmh21v3uwrT8iefdYV8j3xe+L3xO/98eu3cES/zY8xsuvg
iU6SrTmcD8c81V61fz0vyNp9b3t9u8zNYt/mi43iuuTHbrSfvGEH5tiJuA3c
j3d8+QZ0hWz5+l3XXJpD+GIHyfmyxvCd0AE2t2uyG6dHMAg3/CbNb5pPZP3W
Vrc1no9hhSwbA947uW3yXT2yuVxN83wC5mmcQsvpm79sdr/t1RAt5kO+83Pb
nr6QjfGuRne+E3NDnjBHRn7r/sloOefmzvrne2uU69FZctu2dckx5oLcXIP8
Ycn5/ZZuuE9zZE4ds+PpD9sfDt2z68MD2c/GXV2XeYdtx8rZI7/l+DmPc8IR
3XLNW9v2dl0jl8UpGmtYTGFrXPPVZg9u3fNZDH8+GXPr3pYHOIyPE5+sl7+5
94HVDCz3zRzSJ+e2ds9fBGPzf5pTx5Hp6uxWK2efv/DjOPIg070bzU944vfE
74nf++GXXMmBHUBus0VtD0eLZcMRWbn3xbthZH2vlne9XC/zRS98T4auN/nM
5794gfOxA51/GHEPrg8Lts2Vbcc41lybI9ixTYbDnXsepsjH/bPN4GbccvRq
eWHl61jMdXVew1ztyPpKbK/v9/K7ljddzr3Fb8ezZ21cDKmctOO2NQZ6NBvX
9vwts+HtMx+u5/6GF/Lafvijq9Yt9iA7kA6bc3KjE+RMV2cHOn76DzvOZ642
R9Yox7hf82K/bfttk4F5tL7RB3pF/53ftmuRA12Qt0dfYFqOA11bbsP4PVzb
nBozHSAjx5lvc8YnNrt1a+Pw0b6ew8veDWbn8+usV9D8KObCHNlPFtaj4YY8
xpVPfr5ffuDiGOs355rml1/IWGBy7xjzS86n2ribY1ZLvhic/eOSJJMTvyd+
T/zeH7+nnM918lwnz3XyxO+J3wcZv+d79+k3O/1mp9/sxO+J3wcZv3+p4rBq
WW85aj/z8iDEYc88ir+4eRTmdPVlZx7Fid8Tvyd+74PfMy/3zKs/8+rPvPoT
vyd+H2T8nnWaZ531WWd91lmf+D3x+yDj94mTt+fk3Tp5t07erRO/J34fYPwu
f+bkcT15mE8e5pOH+cTvid8HEb9P19fjtmfjzz78IWdfj7Mvz4PWl8fY+aLY
oD8R+/Kc+D3xe+L3zx+/xnP2eTz7tNK5s0/r2af1xO+J3wcRv8XIrf//scQC
brfhZfbkdazH8b577Ws+6ym8XJ/Bl1sb9L3Hh70JU1c75CFxdX89l73v+vCh
DEf0jb6wG+k7e49vZTbR4h6LiZOzuRyG2DT0xIfewxt7Ef74bhYX9T25khVZ
Lx/MOemuNYu9yl7gt5b7dB374Qu6rj0XuebX+z622SMf/tCHLq94+cv5iZ7E
1qsvfs9fDUfOCXe2jUFuuOOtY1/4nE89tunFsx75lOu8vuHSXCzyMHa4cq+z
q1c70zoa2+4DhpYrsXqb+ZEcN70fBubLW/734hPLnWi+3OLLrQ+4G+fa8cPR
sOQvfWV/LrfL9nImV1e1vA7jcz5jMCaxcs8Z6xXskM+4kHzXmqy9G/GfLH+S
/8c5h9PFNWBjfhvnNZ75W8ypY2zbv5w38oFdc2m8ts2xHMvrtY5aAmuruX3B
859/cbzr+O3yId2b8ezet4651/lSXXsxwfnYVnsIa3B3G8M78Xvi98TvffEL
B+xG/hM25HLD+EZghU8Ejp7ExIE7mPKb4sj+xdf9229h07lufSsve4iv3buv
D7/JcGS+Z0/OX7uakNmE7J7FOskE9vylQ/TNX9ihdzBonsjUPJE1WfpLH+HO
3+Zay5Ojy2wDawc5wD4/kPsURzF/b37Tmy7PeuSRi/N614YFY3n0uZ92w85w
Xj4TtqJxiyG86pWvPOxJ+9kfrqcuyzXNlfd1Pie5wvLTn/foowe3MLvJNedz
EoMxXtezRizPgN1ZvgXnt83+XO6d41Y7SkcWc6m9OR/U6nJmn6/+dHGQ1eQs
HnbXv7AcyOUhLKZB72bvwuBiOH7n+8Uq/Gb54ebRPtvDhWeBMS3PfBjx3XyQ
8OAYOIQdY4UBv138Ajad01rGhhx2Fvdnh8KJsTrWujr+E2ut8cKWOXYd++CL
zlzfDaydT9bYvfrQJ/ao9yn1BmRoPMs9WJ6G6y6mNLnaD4N0cO9ui92d+D3x
e+L3/vgtjtiE86vYZhPSp+u5Lrc+ks9/+Hr9Ay+39uIzn/KlPFlrdMTcF3MY
jnzgCAcB/fGpX6X2JKz4LO+MvrAx2UnsTPv9m17RGftgxz7rBXkuL9mHP9q5
ncf57WN3kNdVnperLXN8npH/rAHuSY44m/E5z372gSXz8cHHHz/0nMzZly99
yUsurs2GfPGLXnTYk7MhrQlkD5/m2joCh7bZ1m9761svsM6eZIvaB3/yEFzX
ua9yvIw3wflcSw4CudFnMoIz+kNG/k2vydSx45RarjHdHTfH4sXD2njX52tZ
PvqwYnv29/L4FscpptzTfF61LenvuMVgavXjq2+i/+ZlNdj03nvA8gBci+6a
X+Njhy4nfDawYxYjcm3HwMxy4axLi1lYV43B9+xG11mumnGyScXbVxes/sv1
+T/lUdhvrVMXTB7wON8O3MOY88/+vL5nHfN5XcePeYdNfhv3aLzGdL3+8Yzz
7KRznm23uPqMw59pv33wZ70/8Xvi98Tv/fG734otujZsmm/H0Lc9T8d5N94D
tq0xwruYiDE7Rs4tubov37mvxVKXF7D7JSvPe/Mznjfby5dandTmpVyO8wMs
f2C5duO2Wi71YtWtGVm+2vwPqylaLH+8S/OXO9b30+XV8q7W19/FIubTH0ee
/TBs32IlrmEdkFtO12GCn0nNzMc/9rHLu975TnGbq2372YdNz755x9vffuCX
PMRnXv+61x04NZ9w6vzWWvuNYftdC8Zhlh1tLXvPu999HA+/fOS37x6PH35z
Ni3fEf+Z9xlrpveIJ9fiI17ET6am2prjO2uncbo+vRCDdi3vDO4LBiY/+mtu
6ZRxLu5jrdjxfrs11vituWzp5SH6kN2OsfZ84P3vPz63Y3rLQ3s/sh7y88mH
tO05IldkzwL7r/I5nge371vPPJ4ft8+Tjxz3tfcpv5WLZp9jPZc8szx3nMM+
33kG2XZOcpyv0bVWhwAn5oHMYcx7y1WmF/EPay2fqnnxzOGDIwd4hHc6ZU1f
nt6J3xO/J37vh9+7z8c9N/s87XO2z98+l/u87nO8z/c+92sP1E6o/VC7ovZG
7ZDaJ7Vbas/Uzqn9U7vorr00O6r2Ve2u2mO102q/1a6rvVc7sPbhj7UbP2FP
1s6s/Vm7tPZq7djat7V7aw/XTq79XLu69nbt8Nrnd+322fO182v/972g7wt9
j+j7Rd87+j7S95S+v/S9pu87fQ/q+1Hfm/o+1fesu37IvZf1fa3vcX2/63tf
3wf7ntj3x75X9n2zduyJ3xO/J37vj9/6S+tHrX/1rt91/tj6aeu/rV+3/t76
gesfrt+4/uT6met/rl+6/ur6sevfrt+7/vD6yes/r1+9/vb64eufr9++/vz6
+ev/b1yg8YLGERpfaNyh8YjGKRq/aFyj8Y7GQRofadyk8ZTGWRp/aVym8ZrG
cRrfadyn8aDGiRo/alyp8abGoRqfatyq8azGuRr/uhsXW7yscbTG1xp3K44a
p2v8rnG9xvsaB2x8sHHDxhMbZ2z8sXGNE78nfk/83h+/zZ9pXs3dfJvl4TQ/
p3k7zedpnk/zf5oX1Hyh5hE1v6h5R81Hap7S3fyl5TU136l5UM2Pat5U86ma
Z9X8q+ZlNV+reVzN72reV/PBni5nrHllzTdrHlrz05q31ny25rk1/615cc2X
ax5d8+uad9d8vObpNX+veX3N92seYPMDmzfYfMLmGTb/sPZk8xWbx9j8xuY9
Nh+yOGr+ZPMqny73svmZzdtsPmfzPJv/2bzQ5os2j7T5pc07bT5q89xO/J74
PfF7f/y2nqJ1FnfrL1aX0XqN1nG0vqN1H60HaZ1I60daV9J6k9ahtD6ldSut
Z2mdS+tfWhfTepnW0bS+pnU3rcdpnU7rd1rX0/yt1gG1Pqh1Q60nap1R64/u
1iWtXql1TK1vat1T66FaJ9X6qdZVtd6qdVitz2rdVuu5WufV+q/WhbVerHVk
rS9r3Vnr0VqnVr9K69pa79Y6uNbHtW6u9XTFyCerv/Pv1uu1jq/1fa37az1g
6wRbP9i6wtYbtg6x9Ymtezrxe+L3xO/98dv6+tbdtx6/dfqt329df+v9ywNQ
foDyBpRPoDwD5R8oL0H5CspjUH6D8h6UD6E8CeVPKK9C+RbKw1B+hvI2lM+h
PA/lf7jLCzG+iPJIlF+ivBPloyhPRfkrymtRvovyYJQfo7wZ5dMoz0b5N8rL
Ub6O8niU36O8H+UDKU9I+UPKK1K+kfKQlJ+kvCXlMynPSflPyotyly9lsYfy
q5R3pXws5Wkpf0t5Xe7yvewdsPww5Y0pn0x5Zso/U16a8tU0z/3E74nfE7/3
x2/51srDVn628raVz608b+V/Ky9c+eLKI1d+ufLOlY+uPHXlryuvXfnuyoNX
frzy5pVPrzx75d8rL99dvr7x+M12nb262Eb5AMsTWP7Ap+MYLA9h+QnLW1g+
w/Iclv/Qd+NFLF9ieRTLr1jexfIxlqex/I3ldSzf42IusxFXw1TeyPJJlmey
/JPlpSxfZXksy29Z3svyYZYns/yZ5dUs32Z5OMvP+UR4O8vnWZ7P8n+WF7R8
oeURLb9oeUfLR1qe0vKXNu5y4vfE74nf++O3/Nvl5S5fN/mMx7v83uX9Lh94
ecLLH15ececc33h5yMtPXt7y8pmX57z850+EF7186eVRL796edfLx16e9vK3
l9d9fpvama5ZfvjyxpdPfnbIeObHP19e+vLVl8e+/PblvS8ffnnyy59fXv3y
7ZeHv/z85e0vn395/sv/374A7RfQPgLtL9C+A+1H0D4F7V9QX0r7HbQPQvsj
tG9CcdQ+C+2/0L4M7dfQPg7DFJ1r34f2g5hcnPt96R9xt6/E3k3ah2LvHs73
xLd/om9F+1nsmK1VJ35P/J74vR9+24+pfZrav6l9ndrvqX2g2h+qfaPc5/pJ
tc9U+0/B1PpStV/V3T5W6281H874c9YPy7XWJ6v9s9pXizze+GS/rfbhmh+G
njvPsDTb0rb5no+9GGxfsPYLax+x9hdr37H2I5v/bH1U17/sjelrNgy6Zvug
tT9a+6a1n1r7rLX/WvuyLQ6wXI7pavu7jStz9pQx0L3FTPym/ePaV6795qan
i6vM99S+de1n1z537X/Xvnjtl9c+eu2v17577cfXPn3udXkdd/v6rd9f+wDO
37JagMl8sT/r3p6VO35r7+JWvtu6stz/5eLtubdcjj0PT/ye+D3xe3/81rZs
3Lj9fIfF+b4XK25f4PYLbh/h9hcmt+HFHKwfsbGsT7FjlvPWvsbtd9w+yM3F
cg/rm2x8b3yyn/Js0eW8LXbQvsz0bv2al5uwfjfr79y+z+0H3T7R7R/dvtLt
N10fTvtTt291+1kvRmTu5ofZu0dt4/XLbr6c41t/3PjK+nG3T/dsRDrlmMVL
mmvt3POprCZ5/pNxaLWfePuMt/94+5K3X3n7mLe/efuetx96+6S3f3r7qrff
evuw09P1Z2/f9vZzX/6k79r/vX3hN3bzatzrI79n3N47tp4uZ3L96Nun3vHN
QZiNvufgd6SP9onfE78nfu+P3/lUyGa25XCzd2HHzh/s77gD5x9evYjj3b/Y
J4yxV5ybntFjcw4f4g5+N1+KezFmdcH0y/3JfVpdMF85nXCv48YRs2C7OmaY
GtbELBzj+MUv4Ne53BubjeyWmzB+V/Kl0+REH5dDbkzwQnbwN5kPL8ZPzr5z
HtgYpsienozHA6bIwZhhZrkGbBhjhi3frU+23xkzjPjOdc2xcS4u4XeOmf22
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
Zz/7wBI9etIP8fAz8t/1Hi5XW+D4kBP7gnzot/WAvWe/D78zvSF/cmcbwpSx
+Fg3YJC92fwy5/E97Pgs7jB7sn4VXAbWEx/67TMc0XE4ggt2IMzAznws17k/
8MXuvOrcsX+2on302fb8KsURfDnGeuO3/DMwQHa+85vrdwfW7Gdr01XygC36
exuDfq/8gCu2P+9CT2of0sHZh/Tfmue31lh1r3STv0Uexepe1a/RfzageDud
W86Y89N3tuViAda95XQ5P7uNrec4ukfHjXs8VMORY9iUjjEO53CPi2c7fjHq
+U7oyeqRl6Pu37AzG9Kx/hrfYi/zuSxuNTuQXPYOAhN7z5nPcjUDywEcjvxu
+Ql7xg07dJFOOpd99NAx9tNN5/PXc893ckDo4fyh1n44gi3z6n3Hc0weiHvw
Puidzr347m1vfeux7Xngeeb31kLPrRO/J35P/N4fv76HHVhj99G597z73Ufc
AR75qm/fex8//NRsVz4W/gZ2DB1jX93q4Gfwtx9+C7WvMOU7uglz5p5tJObr
Wmw+/g8yNabVkSyviswXj7CG7Hi/HUaMH2bY2Ms785GHvWOsMR94//uPz+2Y
3vLQ9BxW+FLkmNmmz2Lrw479V/kc+Lm1B5954OcWNx95yt+y38rZss+xcAMj
cOUc9vkO7mzPb+P6G8Pyws3fcnrpN9vxKtML/761kC/FvFgb+M7IwXpF/9lQ
1r7ZhPRfDJ2+wqb1lM453rnJelx740UxT3AAp8sZc4zcZnpG5323nA/+muUF
jF/RPLI76dL4Emef+W71WcYyfDhmcQO/XX6C642P0b7Zgs01aT1580JWO7dc
DfiZnbrYw/RvfCnz/+2v8zvPciPHyWi/Nd2+xbxcw/pPB+kvHaS36qw+/rGP
Xd71znea8+u712cfusKOf8fb3348p8hDHOz1r3vd8byz/nneOT/82G8M23/i
98Tvid/747fPxz43+zztc7bP3z6X7z6v9xzv873P/doDtRNqP9SuqL1RO6T2
Se2W2jO1c2r/1C6qvVQ7qvZV7a7aY7XT7tpvs+tq79UOrH1Yu7H2ZO3M2p+1
S2uv1o6tfVu7t/Zw7eTaz7Wra2/XDq99Xru99nzt/Nr/fS/o+0LfI/p+0feO
vo/cfU/Z+0vfa/q+0/egvh/1vanvU33P6vtX38v6vtb3uL7f9b2v74M/9j3x
E++Pfa/s+2bt2BO/J35P/N4fv/WX1o9a/2r9rvXH1k9b/239uvX31g9c/3D9
xvUn189c/3P90vVX149d/3b93vWH109e/3n96vW33/XDzz9fv339+fXz1//f
uEDjBY0jNL7QuEPjEY1TNH7RuMZdP8/iII2PNG7SeMrdOMviL43LNF7TOE7j
O437NB7UOFHjR40rNd7UOFTjU41bNZ7VOFfjX42LNV7WOFrja427NR7XOF3j
d43rNd7XOGDjg40bNp7YOGPjj41rnPg98Xvi9/74bf5M82qab9M8nObnNG+n
+TzN82n+T/OCmi/UPKK7+UXLO2o+UvOUmr/UvKbmOzUPqvlRzZtqPlXzrJp/
1bysu/lay+NqflfzvpoP1jyx5o81r6z5Zs1Da35a89aaz9Y8t+a/PV2OXPPo
ml9XHDUfr3l6zd9rXl/z/WpPNj+weYPNJ2yeYfMPm5fYfMXmMTa/sXmPzYds
nmTzJ5tX2XzL5mE2P7N5m83nbJ5n8z+bF9p80eaRPl2uafNRm+d24vfE74nf
++O39mLrLFp/0bqM1mu0jqP1Ha37aD1I60RaP9K6ktabtA6l9SmtW2k9S+tc
Wv/SupjWy7SOpvU1rbtpPU7rdO7W76yup/U+rQNqfVDrhlpP1Dqj1h+1Lqn1
Sq1jan1T655aD9U6qU9WPwVrrbdqHVbrs1q31Xqu1nnVr9K6sNaLtY6s9WWt
O2s9WuvUWr/WurbWu7UOrvVxrZtrPV3r7Fp/17q81uu1jq/1fa37az3g3TrB
1Q+2rrD1hq1DbH1i655O/J74PfF7f/y2vr51963Hb51+6/db1996//IAlB+g
vAHlEyjPQPkHyktQvoLyGJTfoLwH5UMoT0L5E8qrUL6F8jCUn6G8DeVzKM9D
+R/qTypfRHkkyi9R3onyUZSnovwV5bW4y3cxHozyY5Q3o3wa5dko/0Z5Oe7y
dQxr5fco70f5QMoTUv6Q8oqUb6Q8JOUnKW9J+UzKc1L+k/KilC+lPCrlVynv
SvlYytNS/pbyupTvpTww5Ycpb0z5ZMozU/6Z8tKUr+Yuj82J3xO/J37vh9/y
rZWHbTaeuS5v210+t/G8lf+tvHDliyuPXPnlyjtXPrry1L0v/HXz/7PlyndX
Hrzy45U3r3x65dkr/155+crXVx6/8vuV9698gK2PKn9geQXLN1gewvITlrew
fIblOSz/YXkRy5c47Dim/IrlXSwfY3kay99YXsfyPZYHsvyQ5Y0sn2R5Jss/
WV7K8lWWx7L8lotptU62+FrOyGz38mqWb7M8nOXnLG9n+Txddzyf5f8sL2j5
QssjWn7R8o4+HTdp+UvLi3ji98Tvid/747f82+XlLl93ebzL713e7/KBlye8
/OHlFS/f+BPhIS8/eXnLy2denvPyn5cX3T1uuzzq5Vcv73r52MvTXv525xyv
e/neywNffvjyxpdPfvZQv3d/5aVvXOYuj/38TeW9X6xhPE7jyZ+u2C6vfvn2
y8Nffv7y9hdH5fkv/3/7ArRfQH0s7S/QvgPtR9A+Be1f0L4G7XfQPgjtj9C+
Ce2n0D4L7b/Qvgzt19A+Du3v0L4P7QfRPhHtH9G+Eu030T4U7U+x94L1rSgn
6HLyT/ye+D3xe3/8th9T+zQVC8Yx3+xsSPhxjmFpfhJ61r5Rjn/jk/2k2meq
/aecZ32p2q9qvg5z2v5Wd/terR+W49cnq/2z2lfLtdZvq3242p+rfbvaz6t9
vtr/q33B2i/sk/VRGbfG/k5fZv8PD7MJl5s3HC0GYV3bMeO0X3+09k1rP7W7
fdaWt9C+bO3X1j5u7e/Wvm/tB9c+ce0f175y7TfXPnTtTzd8u3b72bXPXfvf
LYbm9+2Xt5jN6gPm09oa5vv242ufvvbv25pQHyN5tg9g+wO2b+CeZetTvj6D
7T84P9niXMsrbx/D9jds37QTvyd+T/zeH7/tz9u+ve3n2z6/7f+7WPHqg3au
9hE2psUgZhPe7UdsjOtT3Jy69jVuv+P2QSaX5Xo5//omk936KTtm+Gr/5fZl
br/m9nGeH3txms1j+0E3P72Y+Y5P0le6tuRsIONefl/7VpPp+llvHRzWzInf
ry/2fmsu2ke7/bWXX7c+sOvH3T7d5LH+3e3r3X7f7QPe/uDtG95+4u0z3v7j
7UvefuXtY+7f62/evufth94+6auhnb9lvYOag7352NrlQx7t2+6Y9XP3WZxs
c7/1bDGkxdzW43vvUPNbzue5vvPtR98+9e1fX19l+923j/aJ3xO/J37vj1/z
A1vLTSJnekm2w5c5sI9s54deDJcOjned3GFnsWKYoTPsTec3Tvps/sjK+fj3
hxHbzjPsOEYsgI1nrI63VqzulW/XWMyzHCHjt1/dq3PI2TP31gY4E0cgJ+uF
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
e7A8DdddTGlytR8G6eDe3Ra7O/F74vfE7/3xWxyxCedXsc0mpE/Xc11ufSSf
//D1+gdebu3FZz7lS3my1uiIuS/mMBz5wBEOAvrjU79K7UlY8VneGX1hY7KT
2Jn2+ze9ojP2wY591gvyXF6yD3+0czuP89vH7iCvqzwvV1vm+Dwj/1kD3JMc
cTbjc5797ANL5uODjz9+6DmZsy9f+pKXXFybDfniF73osCdnQ1oTyB4+zbV1
BA5ts63f9ta3XmCdPckWtQ/+5CG4rnNf5XgZb4LzuZYcBHKjz2QEZ/SHjPyb
XpOpY8cptVxjujtujsWLh7Xxrs/Xsnz0YcX27O/l8S2OU0y5p/m8alvS33GL
wdTqx1ffRP/Ny2qw6b33gOUBuBbdNb/Gxw5dTvhsYMcsRuTajoGZ5cJZlxaz
sK4ag+/Zja6zXDXjZJOKt68uWP2X6/N/yqOw31qnLpg84HG+HbiHMeef/Xl9
zzrm87qOH/MOm/w27tF4jel6/eMZ59lJ5zzbbnH1GYc/03774M96f+L3xO+J
3/vjd78VW3Rt2DTfjqFve56O8268B2xbY4R3MRFjdoycW3J1X75zX4ulLi9g
90tWnvfmZzxvtpcvtTqpzUu5HOcHWP7Acu3GbbVc6sWqWzOyfLX5H1ZTtFj+
eJfmL3es76fLq+Vdra+/i0XMpz+OPPth2L7FSlzDOiC3nK7DBD+TmpmPf+xj
l3e9853iNlfb9rMPm5598463v/3AL3mIz7z+da87cGo+4dT5rbX2G8P2uxaM
wyw72lr2nne/+zgefvnIb989Hj/85mxaviP+M+8z1kzvEU+uxUe8iJ9MTbU1
x3fWTuN0fXohBu1a3hncFwxMfvTX3NIp41zcx1qx4/12a6zxW3PZ0stD9CG7
HWPt+cD73398bsf0lof2fmQ95OeTD2nbc0SuyJ4F9l/lczwPbt+3nnk8P26f
Jx857mvvU34rF80+x3oueWZ57jiHfb7zDLLtnOQ4X6NrrQ4BTswDmcOY95ar
TC/iH9ZaPlXz4pnDB0cO8AjvdMqavjy9E78nfk/83g+/d5+Pe272edrnbJ+/
fS73ed3neJ/vfe7XHqidUPuhdkXtjdohtU9qt9SeqZ1T+6d20V17aXZU7ava
XbXHaqfVfqtdV3uvdmDtwx9rN37CnqydWfuzdmnt1dqxtW9r99Yerp1c+7l2
de3t2uG1z+/a7bPna+fX/u97Qd8X+h7R94u+d/R9pO8pfX/pe03fd/oe1Pej
vjf1farvWXf9kHsv6/ta3+P6ftf3vr4P9j2x7499r+z7Zu3YE78nfk/83h+/
9ZfWj1r/6l2/6/yx9dPWf1u/bv299QPXP1y/cf3J9TPX/1y/dP3V9WPXv12/
d/3h9ZPXf16/ev3t9cPXP1+/ff359fPX/9+4QOMFjSM0vtC4Q+MRjVM0ftG4
RuMdjYM0PtK4SeMpjbM0/tK4TOM1jeM0vtO4T+NBjRM1ftS4UuNNjUM1PtW4
VeNZjXM1/nU3LrZ4WeNoja817lYcNU7X+F3jeo33NQ7Y+GDjho0nNs7Y+GPj
Gid+T/ye+L0/fps/07yau/k2y8Npfk7zdprP0zyf5v80L6j5Qs0jan5R846a
j9Q8pbv5S8trar5T86CaH9W8qeZTNc+q+VfNy2q+VvO4mt/VvK/mgz1dzljz
yppv1jy05qc1b635bM1za/5b8+KaL9c8uubXNe+u+XjN02v+XvP6mu/XPMDm
BzZvsPmEzTNs/mHtyeYrNo+x+Y3Ne2w+ZHHU/MnmVT5d7mXzM5u32XzO5nk2
/7N5oc0XbR5p80ubd9p81Oa5nfg98Xvi9/74bT1F6yzu1l+sLqP1Gq3jaH1H
6z5aD9I6kdaPtK6k9SatQ2l9SutWWs/SOpfWv7QupvUyraNpfU3rblqP0zqd
1u+0rqf5W60Dan1Q64ZaT9Q6o9Yf3a1LWr1S65ha39S6p9ZDtU6q9VOtq2q9
VeuwWp/Vuq3Wc7XOq/VfrQtrvVjryFpf1rqz1qO1Tq1+lda1td6tdXCtj2vd
XOvpipFPVn/n363Xax1f6/ta99d6wNYJtn6wdYWtN2wdYusTW/d04vfE74nf
++O39fWtu289fuv0W7/fuv7W+5cHoPwA5Q0on0B5Bso/UF6C8hWUx6D8BuU9
KB9CeRLKn1BehfItlIeh/AzlbSifQ3keyv9wlxdifBHlkSi/RHknykdRnory
V5TXonwX5cEoP0Z5M8qnUZ6N8m+Ul6N8HeXxKL9HeT/KB1KekPKHlFekfCPl
ISk/SXlLymdSnpPyn5QX5S5fymIP5Vcp70r5WMrTUv6W8rrc5XvZO2D5Ycob
Uz6Z8syUf6a8NOWraZ77id8Tvyd+74/f8q2Vh638bOVtK59bed7K/1ZeuPLF
lUeu/HLlnSsfXXnqyl9XXrvy3ZUHr/x45c0rn1559sq/V16+u3x94/Gb7Tp7
dbGN8gGWJ7D8gU/HMVgewvITlrewfIblOSz/oe/Gi1i+xPIoll+xvIvlYyxP
Y/kby+tYvsfFXGYjroapvJHlkyzPZPkny0tZvsryWJbfsryX5cMsT2b5M8ur
Wb7N8nCWn/OJ8HaWz7M8n+X/LC9o+ULLI1p+0fKOlo+0PKXlL23c5cTvid8T
v/fHb/m3y8tdvm7yGY93+b3L+10+8PKElz+8vOLOOb7x8pCXn7y85eUzL895
+c+fCC96+dLLo15+9fKul4+9PO3lby+v+/w2tTNds/zw5Y0vn/zskPHMj3++
vPTlqy+Pffnty3tfPvzy5Jc/v7z65dsvD3/5+cvbXz7/8vyX/799AdovoH0E
2l+gfQfaj6B9Ctq/oL6U9jtoH4T2R2jfhOKofRbaf6F9GdqvoX0chik6174P
7QcxuTj3+9I/4m5fib2btA/F3j2c74lv/0Tfivaz2DFbq078nvg98Xs//LYf
U/s0tX9T+zq131P7QLU/VPtGuc/1k2qfqfafgqn1pWq/qrt9rNbfaj6c8ees
H5ZrrU9W+2e1rxZ5vPHJflvtwzU/DD13nmFptqVt8z0fezHYvmDtF9Y+Yu0v
1r5j7Uc2/9n6qK5/2RvT12wYdM32QWt/tPZNaz+19llr/7X2ZVscYLkc09X2
dxtX5uwpY6B7i5n4TfvHta9c+81NTxdXme+pfevaz6597tr/rn3x2i+vffTa
X69999qPr3363OvyOu729Vu/v/YBnL9ltQCT+WJ/1r09K3f81t7FrXy3dWW5
/8vF23NvuRx7Hp74PfF74vf++K1t2bhx+/kOi/N9L1bcvsDtF9w+wu0vTG7D
izlYP2JjWZ9ixyznrX2N2++4fZCbi+Ue1jfZ+N74ZD/l2aLLeVvsoH2Z6d36
NS83Yf1u1t+5fZ/bD7p9ots/un2l22+6Ppz2p27f6vazXozI3M0Ps3eP2sbr
l918Oce3/rjxlfXjbp/u2Yh0yjGLlzTX2rnnU1lN8vwn49BqP/H2GW//8fYl
b7/y9jFvf/P2PW8/9PZJb//09lVvv/X2Yaen68/evu3t5778Sd+1/3v7wm/s
5tW410d+z7i9d2w9Xc7k+tG3T73jm4MwG33Pwe9IH+0Tvyd+T/zeH7/zqZDN
bMvhZu/Cjp0/2N9xB84/vHoRx7t/sU8YY684Nz2jx+YcPsQd/G6+FPdizOqC
6Zf7k/u0umC+cjrhXseNI2bBdnXMMDWsiVk4xvGLX8Cvc7k3NhvZLTdh/K7k
S6fJiT4uh9yY4IXs4G8yH16Mn5x95zywMUyRPT0ZjwdMkYMxw8xyDdgwxgxb
vlufbL8zZhjxneuaY+NcXMLvHDP7bTHr5RKYl9VSrVZr7x1k5h63XiwmTjbL
Q5/PZJ9h0v7FFIan8XXQe79fboFzm2+yNr9yxMnV/Jtf13TMatCWc7h4/mzU
YVas67bW7jOPOmLz7Lzqsa52pNj5hXzlockzIDOYsFaTHR2Un7dcO7nn5EL2
Ymtkt/eU5oSst5x5HHeJsW6Mmwv7mwPpXKsfN4/kaJvOzT9qjIszru/q3g23
hs2PtXXsxO+J3xO/98fvMORYY3TPs0GaKzvMTIaT8fKEV2cDO8sb8h088b/4
za4PC2wjfhd2Jh3ha3Ev8OJ5LvfNHJMF2VhTyFz8gry9C4svwwR7EycB+Ts/
TNEN88DOtJ982BD0nOwW0yff1Q7bNs+uC3cwSUdn79Hh+TrgBi7HX0dHxpEO
R46b7ezebMMKe9h4XGe9ulaTZR59B8Pzt/jd/A+uQb7mwdo0n8hy8JeDPt0d
PlZHNay4X/Nlzsl17wp0YjGpxb+31rY/3OIR6195t/54tct+uxxKcmLTkZv5
giPjXO4iHaXPch1X32Ye6c5sOHKmG/DiPGS5XA7npFfuiW6QO1nSH9d2DP2B
JfLd8WQBx9btbdNDx/ittXq1A3SATOmxcTi/tW21CWTsfuBgNfNbV5YjM91a
DGr+vdUe2t77xnIYF0Mc55hz1zd14vfE74nf++F3/mL3S7bLP6rPZf6WxRtm
rziOzMxt+Rb8Zv1+/R1X397h2W3GPOz47XBBVva7L/fOxrRtvskG7myTzTA4
rNFz9+c3i2WQl/vbfMEF/TcXy3lbH6vlXZMFHV8+mzl13uUAwBE5D0e2ZxOS
t3th34zTcWNovGM1yI2DrCfoYrjk6J74FcgeBsiXfjt2/n54I7flH46Dw/bw
RGZ023H0gJ3mnuFxNbGLDYxbqu8Ss0231vq7uNTWTGPjW3M+90dWZGGuycN8
jf+ETHy/nA1yp7NyN8iELOU7kjnZwp35sg2P7olsrbdkYF0077bpiW2ytB8e
3b9r2j88wpTzrxaAvMyna8GyMdM96zE7lF26Ndbx4xmjH/bTa+ddnGe9YJYr
SUbLy9zaNI59c7G6wsX0x7e5Xqj+TX8dP67OE78nfk/83h+/p5zPdfJcJ891
8sTvid8HGb/ne/fpNzv9Zqff7MTvid8HGb9/ucZhZweS+4+HOOyDlkdBTuQn
x+vMozjzKE78nvj98YzfMy/3zKs/8+rPvPoTvyd+H2T8nnWaZ531WWd91lmf
+D3x+yDj9+TtOXm3Tt6tk3frxO+J3wcZvyeP68nDfPIwnzzMJ35P/D7I+D37
evyF9fUYdszZT8S+PD/w0Y8ecZYvfeELL2dfnrMvz4nfE78PMn7p59nn8ezT
evZpPfu0nvg98fug4pd9xmcMR46DFbYlO+LDH/rQ5RUvf/lFzvEXP/aYGlO6
dvgobLNT+IzlCNFlc+x8y2czfvI2L2S9eK8xsAHhgO/Dv2FgcQY2wWp/yWKy
XOx+z3DjhUt2JN8KjMEQW5JvZThiR3nv97naFQ+Jt/sLG+xEeLnaUpfb3o3v
ffi1r/msp/B11YkDI3wx8DV78jZm8dgRp+h2seaczsNXAxerIVqsgWzM62zL
zeNyGNwzfVw+HizCmvknd2uc+XnB859/5M5d7+ng7KPz9Nfa53jb8tjJbLle
zueaMGL//Cfze8DA/PyuZzzT8+XX8VfMdl6u12rlHLNacvucD77cm31w75zu
ybn8dnkLy7Vz73uusAkXu9r2sDR9Wy1dbcK94yzfYDbgbG7yWU6F+VncYPUD
0zk6uBwGY6KXe+7R2+Wg0OPVbcFEt1eLTj/pKd23/jenDq6f9cinXOX8hqOm
+wuf86k35tjYzaFt5zK3MHvi98Tvid/745fu872wOenho8/9tBv2h2t4BzdP
7v/Nb3rT5VmPPHL4J+gZ//ttrPpzHqaT8rRgl/3SHGznhwt/yY/s/SULc+A6
MGU9gAV4hC1/jduYllO1GPHqYepHt+372ZP8KcORWIp3fR95Zre+lZfB04EP
Ok//F3cvjuyHHbYiHMHc9X4fvs3Vfuzw0bAtl8Pmd461DV/OdxvT+PRDZn6/
OaRf9G15gKvNtd/9mmM6zf5jD8sjv+WmffVxPXNxfZewRh5xAesavNAHWBFX
Gr/Hcr3or3XPddl+MDZMzWdiLWZbzv+/vGLjWU2r682PRA9haVib/291BMPd
asdcazb2cpcds9jAYlauP7+bsc/HT0b+Lg9k2IGBvX/ZV46NvbPMVzd8riZ8
fj3bjYX5OPfsydaTO6+xelcqX4djFv+CA9ueGfP5iYG5b/Y1bMlZVwfwvEcf
PXL++b34Ap1fvRxsGROcek9wHXP7qle+8nLi98Tvid/745f9N9uS3cK2fPGL
XnTYluzIl77kJQcf+Acff/zAKRvzOc9+9oElevSkH+LhZ+S/6z1crrbA8SEn
9gX50G/rAXvPfh9+Z3pD/uTONoQpY/GxbsAge7P5Zc7je9jxWdxh9mT9KrgM
rCc+9NtnOKLjcAQX7ECYgZ35WK5zf+CL3XnVuWP/bEX76LPt+VWKI/hyjPXG
b/lnYIDsfOc31+8OrNnP1qar5AFb9Pc2Bv1e+QFXbH/ehZ7UPqSDsw/pvzXP
b62x6l7pJn+LPIrVvapfo/9sQPF2OrecMeen72zLxQKse8vpcn52G1vPcXSP
jhv3eKiGI8ewKR1jHM7hHhfPdvxi1POd0JPVIy9H3b9hZzakY/01vsVe5nNZ
3Gp2ILnsHQQm9p4zn+VqBpYDOBz53fIT9owbduginXQu++ihY+ynm87nr+ee
7+SA0MP5Q639cARb5tX7jueYPBD34H3QO5178d3b3vrWY9vzwPPM762Fnlsn
fk/8nvi9P359Dzuwxu6jc+9597uPuAM88lXfvvc+fvip2a58LPwN7Bg6xr66
1cHP4G8//BZqX2HKd3QT5sw920jM17XYfPwfZGpMqyNZXhWZLx5hDdnxfjuM
GD/MsLGXd+YjD3vHWGM+8P73H5/bMb3loek5rPClyDGzTZ/F1ocd+6/yOfBz
aw8+88DPLW4+8pS/Zb+Vs2WfY+EGRuDKOezzHdzZnt/G9TeG5YWbv+X00m+2
41WmF/59ayFfinmxNvCdkYP1iv6zoax9swnpvxg6fYVN6ymdc7xzk/W49saL
Yp7gAE6XM+YYuc30jM77bjkf/DXLCxi/onlkd9Kl8SXOPvPd6rOMZfhwzOIG
frv8BNcbH6N9swWba9J68uaFrHZuuRrwMzt1sYfp3/hS5v/bX+d3nuVGjpPR
fmu6fYt5uYb1nw7SXzpIb9VZffxjH7u8653vNOfXd6/PPnSFHf+Ot7/9eE6R
hzjY61/3uuN5Z/3zvHN++LHfGLb/xO+J3xO/98dvn499bvZ52udsn799Lt99
Xu853ud7n/u1B2on1H6oXVF7o3ZI7ZPaLbVnaufU/qldVHupdlTtq9pdtcdq
p92132bX1d6rHVj7sHZj7cnambU/a5fWXq0dW/u2dm/t4drJtZ9rV9ferh1e
+7x2e+352vm1//te0PeFvkf0/aLvHX0fufuesveXvtf0fafvQX0/6ntT36f6
ntX3r76X9X2t73F9v+t7X98Hf+x74ifeH/te2ffN2rEnfk/8nvi9P37rL60f
tf7V+l3rj62ftv7b+nXr760fuP7h+o3rT66fuf7n+qXrr64fu/7t+r3rD6+f
vP7z+tXrb7/rh59/vn77+vPr56//v3GBxgsaR2h8oXGHxiMap2j8onGNu36e
xUEaH2ncpPGUu3GWxV8al2m8pnGcxnca92k8qHGixo8aV2q8qXGoxqcat2o8
q3Guxr8aF2u8rHG0xtcad2s8rnG6xu8a12u8r3HAxgcbN2w8sXHGxh8b1zjx
e+L3xO/98dv8mebVNN+meTjNz2neTvN5mufT/J/mBTVfqHlEd/OLlnfUfKTm
KTV/qXlNzXdqHlTzo5o31Xyq5lk1/6p5WXfztZbH1fyu5n01H6x5Ys0fa15Z
882ah9b8tOatNZ+teW7Nf3u6HLnm0TW/rjhqPl7z9Jq/17y+5vvVnmx+YPMG
m0/YPMPmHzYvsfmKzWNsfmPzHpsP2TzJ5k82r7L5ls3DbH5m8zabz9k8z+Z/
Ni+0+aLNI326XNPmozbP7cTvid8Tv/fHb+3F1lm0/qJ1Ga3XaB1H6zta99F6
kNaJtH6kdSWtN2kdSutTWrfSepbWubT+pXUxrZdpHU3ra1p303qc1uncrd9Z
XU/rfVoH1Pqg1g21nqh1Rq0/al1S65Vax9T6ptY9tR6qdVKfrH4K1lpv1Tqs
1me1bqv1XK3zql+ldWGtF2sdWevLWnfWerTWqbV+rXVtrXdrHVzr41o313q6
1tm1/q51ea3Xax1f6/ta99d6wLt1gqsfbF1h6w1bh9j6xNY9nfg98Xvi9/74
bX196+5bj986/dbvt66/9f7lASg/QHkDyidQnoHyD5SXoHwF5TEov0F5D8qH
UJ6E8ieUV6F8C+VhKD9DeRvK51Ceh/I/1J9UvojySJRforwT5aMoT0X5K8pr
cZfvYjwY5ccob0b5NMqzUf6N8nLc5esY1srvUd6P8oGUJ6T8IeUVKd9IeUjK
T1LekvKZlOek/CflRSlfSnlUyq9S3pXysZSnpfwt5XUp30t5YMoPU96Y8smU
Z6b8M+WlKV/NXR6bE78nfk/83g+/5VsrD9tsPHNd3ra7fG7jeSv/W3nhyhdX
Hrnyy5V3rnx05al7X/jr5v9ny5Xvrjx45ccrb1759MqzV/698vKVr688fuX3
K+9f+QBbH1X+wPIKlm+wPITlJyxvYfkMy3NY/sPyIpYvcdhxTPkVy7tYPsby
NJa/sbyO5XssD2T5IcsbWT7J8kyWf7K8lOWrLI9l+S0X02qdbPG1nJHZ7uXV
LN9meTjLz1nezvJ5uu54Psv/WV7Q8oWWR7T8ouUdfTpu0vKXlhfxxO+J3xO/
98dv+bfLy12+7vJ4l9+7vN/lAy9PePnDyytevvEnwkNefvLylpfPvDzn5T8v
L7p73HZ51MuvXt718rGXp7387c45XvfyvZcHvvzw5Y0vn/zsoX7v/spL37jM
XR77+ZvKe79Yw3icxpM/XbFdXv3y7ZeHv/z85e0vjsrzX/7/9gVov4D6WNpf
oH0H2o+gfQrav6B9DdrvoH0Q2h+hfRPaT6F9Ftp/oX0Z2q+hfRza36F9H9oP
on0i2j+ifSXab6J9KNqfYu8F61tRTtDl5J/4PfF74vf++P3/ASztMIg=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.947491867965558*^9, 3.947509744794482*^9, 
  3.94761334638479*^9, 3.9476665959640837`*^9, 3.948071351818387*^9, 
  3.948985562503043*^9, 3.949437472923085*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"6388c258-96b2-4e5e-8ce7-404886193315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wallpaper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"#", ",", "0", ",", "50", ",", 
       RowBox[{"5", 
        RowBox[{"Pi", "/", "12"}]}]}], "}"}], ",", "1", ",", "lena"}], "]"}], 
   "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"5", ",", "9"}], "}"}]}]], "Input",
 CellLabel->
  "In[385]:=",ExpressionUUID->"1c17cab5-031c-418b-8878-63c04d9e1dd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Q/UtWlV1/E3NTOzskKj/1iW/c+0zJz3fQ6WWZlZoRkZFVhSmUjIpIkt
1ysiIg6ICAMi4ogIiIqIiIj4f0REHEdEHHBExAEVYYBh+DeD2vlc9/N75zdn
zaPDUtfqrLXftc57rnOf677v6772937Ovvfe194f8un3v8d93+vcuXMPfL/9
f/e4z+d97Od8zn0+/5Pf14fPuM9nfeRHfNZ775uX719X7l/aT/76D9ndesst
Jw//sj+4e/a3/93dIx/xh3dP+to/t/P5+7/v+05+4iUvWd/98A/90Gq/4Hsu
21352A/aPeGr/9Tu+773wu5rnvCnd0/8mj+z+9EXfvzuKd/wl9Yr2/X5nud/
zO4xX/Undo99zF12z/uuf7D7ykd94Hr9yNUft/vaJ/7Zda5rf/Jf7b75GX99
9y3f/DdWf9sc89Ff+cd2b3nzm09+9Vd+5eRpT/0ruwd/0e/b/eZv/MbJD/3g
x659v/rxd919x7M/YvcVj/wjuy972Pvtvv1ZH77aD/ni917H/LZn/u2d6/uF
V/2n/fj/0e453/GRu5f+1L/ZfffzPnr3TU//q7uffuk99td4ss57wy/9l93P
vOxTdlf/8D/evfaG/7p75Sv+/e7FP/bPd9f/3H9Y213fz778U3c/ec0nrWPZ
9pIf/xc78/Hyn/m3q+26Hf8nXvKJO2N0fJ9994rr7rm77mf/3err2Pn8qp//
j7ufv/5e67Nz/dwrP22d5xdffe/1sk0fbe/66Z/9jPuXXvPp6/Orf+E/r7Zt
+r/mF++z+7EX/bO93D7x5Keu/dcn3/otf/NkP2cn3/uC8yff+JSnnHzVox+9
3/YtJ/u5OPmii+dOfvAH7r5//cCFfd8L73rnOy/o6/N+vtZ3X/KQ9zn59Xf/
35Nve+YzT770oQ/dH+cFJ4+78soT5/iKRz7y5Bue/OR1ri95yENOhqvharga
ro6Fq6c/7cMWQ1/3pD+/5oxsfvzFn7Dm+3FXfvBiAROvveGGEzzsz3fyMy97
2ckXP/i9dvux7N56000nV3z5H9pfx6tPfvqlLz152803r8/6kTH5Peor/uju
G578FxcvtvvsWL/wqle5nt073v72/dhedOIYtv3kNdec/Pz115989/Oed/Id
z372Gr/rcV17ftY4fuk1r1l9yPKqr/sLi0My/M7n/L3dfv6WLN0nro+Mn/FN
f22x+LKf/uTdfo7Wd6977WcsOb/oR//pkgWZXfMT/3K94xI/ZIchrODA/uZH
H/NlX5zsZbE4zL76266/c+DDZ8fz7mWbz17Yz3YvnHjpgxeM6BfOjEXbftpv
efP/2v3y6+67tp07d3H3phs/e+1z7vTfXq57Xq698E1Pf/qF/fyZ2wtfdPHi
BTzhZz//F/Zzd/L1V93t5Nuf9awL+/6LvTe+4bPWO17Mvc8/98pXLh5fcd11
eyafvpfbvRejw9VwNVwNV8fIFd2HXKP/4AtT5EDXeu53/v2lu5A5zuhY3/Xc
557QyRzrKx/1qJMff/GL1++t42Hhm5/xjJOvfeITF2d+d/f6yjrn1z3pSXtd
6b+vtm2PuOID9mzca12X69yPYd9+/IUve9jDLrjO7bf+2gt7/WrNR+YIuz9y
9dXrXOac7oMVjD31G//yYgxL9Kb9PK25x4Lvf+WX/9uSAwZspwO98Ef+yZIV
Bva6wuIgepQ2XvXBDN0He/riJ/2jR4U939GVolOFEe/NlWN6+RydyjXR8XBh
jPi3Xb+9XNdnx37rTZ+z28/nar/h1/7nOo95MB/m4ase/cf39/7Fkz1za+7f
9c7/sxjYz/EJ/cmcbxx9+PqMiUdcccV+bj9uya258rfA35aHfekf2PkbQNbk
2Fy1rjVcDVfD1XB1LFyRj3P6zfQ8z55g3zfdeOOyK7ApYOSLH/zgpfvsdZSl
5xib50/H8dzp89dfddXJL7/udSeuRX/HNlbPtV/zhCes/hjy/Z5Hv/OLGSx5
tsXQnqXze4b3r3tfYooOYEy/9vrXL53q+d/9D3fsDvS1Z37r31o2DToXVr7r
uR+1bBbmnFzoRq//1f+x5p7OQ0ehC2GGXPHA5kFmaYcLNgdchEP74ZDcHCtc
2R77gvN5+S78OJ5zRccKS+Epr+hPxvprr//MxRau3v62/72uQRvXGHed3/iU
D93t780lq19/97vX/f62my8/ofOyEbHRkIt7/3ue//zbceW+pV+5l3G3P9bS
Yd2rmNnrWEv+eNnL5IR9x3f+vjRjrWu1/WG4Gq6Gq+HqWLhyLnL3W+l3k27E
FuBZ32c6lm1+Y+lh9sWhNm5cy0O/5PfvbDMG58WO8X75wx++fqvpUOFqP+f7
59WHeZ5dPJ1e32Xb69x5zNKrvOhzbCDs52zkeKE74QlHbBTkSf5s6XQXMv6B
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
zLn5JGtzThfyjO9ayIGt2DWn7XowY/616Uv0KP3pXdYnmQN6l/693bxgz76u
NTzcmfad4a25avtD2+TbT93xWh3D3O1e49NrXTv/Q+dE6jyB5ofc/d2ge/sO
Y8PVcDVcDVfHwlV48TucHAKxOySXTnLJdd4514cbDJlXv70dd+v8ZMiOzYaQ
vK/hqlll82Xf95KfASN0J4yx727bzl3y4cpvhDX9MIY//XHEd26tCH+ueWMb
9qwsX4E1JeY8OQWMmyz4ac0RTrRduzxM1qNEB9O/9atuuwZ96FeuLXK3XR82
jTvT/q0YuyOu2ibffuqO3eoY5l7X02tdO/9D50Hq3ICdL9d30bHytwZnzdJw
NVwNV8PVsXCV/YzdmNmL6ULJz8Pu7Xz62R67t99Sx4rNng/W9+wI3fZby05L
VtrYsz+Z8W3yuZ6rf6exrvzg57PWAzeeh/lGMcbvrU3HOl3js7afxg+tvH6b
rfy6xSVfLt8r/YHegQW+Vcybe8/V5sO886GbLzoVxqIvGaf5iL0dP9G7wpK2
ebE9toswcFb7PeXKNvmk6EDtp+7YrY5n7nU9vda18z90TqTODdj5cjuHvO1h
Ii/fuTfjgxmuhqvharg6Fq58n3WbzZV357Xdsf1mxu7uGPZJrlZ2AsehT9lX
Xz5k31lnwo/p2Z+M6Ud7vek8O4I8Rda/igmyToQ+xS6QmLDT9TyrPz0JS/Sq
btO1HHezSdxtcYVJ7U0HO3dezJPjs1+wL2w62bm1JojeRabuBXoX3s0pWfDP
umfoK9Ycxf4gRjt2dfb2MEC/aq7Oav9OuKLnedGjOnar45l7jU+vde38D50T
qfMEdr7cziHfdVVw5R1DnXceq8bKtjRcDVfD1XB1LFyFI/G3yaUjTkd//fLb
6TfY+ZKbTp9wxf/Jd+x89k9eBb//ZEKX2bh61nrup/dkXavPchAlNpbfme1X
Gw+puUE/wpA4VzkhTm0NF6y11N7rGThb+tiWW+LN6x1vvt94u3iZNSbbmsqL
5/m3sWAc3d5yMVyzmGmuYp/HorlioyA3nGBD/9jz8dPt3y2uOoa51/X0WtfO
/9B5kDo3YOfL7VfnkO/t4c7xDrkyPtdHv2JTSs7D4Wq4Gq6Gq2PgKr+d8Sfa
13yYQ1xFl3Js77jKeszEJidHetaC+h1nC/Y7LxcehsiMT5NM5HwgO/7Q07Uj
q00PYNegLyRXDznIGaCd3LfY07bd87a5x6c5pTfha7M/XLt0uOTToZM1V8YS
XY5+woeNZ2t7yExsrnkk99gisIQxbTFN2a5NpyE/tvr2cf9OuaLTsZHIZd/r
enqta+d/6JxInRuw8+V2DvnOJd/1xbrmJjl7j96dvy34SW5e37l+uupwNVwN
V8PVsXAVn2Fia+JL9EodK7qVfcjccyj9yboOfPkNN9d4Mien8lh6SPyzaTtn
/LO2Z51L4pfkedO2XTxxGKNPYC+8idMSM2Tf5gobm75xl9u16W/6JD8djtgu
+KFxF5917PjW0PrOvsYgvonOZx7dL66FbIx5e86/jbHWtdr+0Db59lMfxmsl
hrnX9bgfzS37f6917fwPnROpuep8uZ1DvuuqtA512Hac+GOMif7kWsiS/M1J
WDL+cDZcDVfD1XB1LFx59+yZdTd5LvXM6N287n/DV1+6ku/5bsnVsVyvecYD
WW41ve67Ylm1+ZmtaxSjK7YnHNDd+EvJM22xRGEstm5tjLm+zG3WhPKr8m1b
m+qYnm/ZzMml265BXgiyi02DbMiTL4Ddw3m06WRik+h97BNyQNDDTut07Ni5
DxlrvavtD22Tbz91x251DHOv6+m1rp3zodudE6nzBB7GwSWHfNdV6VpjXXMz
PEWvyv6Y8nL81Hmha+PssIYLboar4Wq4Gq6OhSt9kgPIef1mWr+CteSm89ua
miLWe5q36BLadB5xO7gy5/Qx9vZDrvCW7XQ6jGEDw+St3Yw5pra5NE9qe3Vb
H9dBH8On+SAjz+LmJExmnam2e8N+ONzql1y77NXsHvixHrPb1s2yH7A5NGOt
d7Utom3y7afu2K3mqtf19FrXzv/QeZA6N2Dny+0c8l1LpeuLpTaZvl2HOnzp
2+3wQzfzwlTqmvkucQuO71zJw+GYw9VwNVwNV8fClePro02OWUfTbc+tjsE3
3VyRHU7oEo4v9merAXbvlWeBnoAftnJz5Zxy04o/Zs9gq9DWP22MhTf9t9wD
V6829tgish0n0eXIuNvOiz12fMfccp9fv/QWeo7YJHOs7Vyxh2OouWpdq+0P
bZM353ScQz91xzD3uh5tjOnf+lXzZu7xguvODdj5cjuHfNdV6fpiXXOz61Cn
jqexkyM5J5bAu/vGd8ljn3wcju9vhTEZg78h2vjQ337uv+FquBquhqtj5Cq1
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
dg75rqvStca65mbXod44uttiCWup3cn34D5gZwgndKesPQ1j0XnIl5+Xz8Fc
xg6etS/YSDyy/nhkHxBb3m39yVycOVbxiBlcixvjb2Bjss18N1c4Shsr0am2
mm13X8dI7LTvhqvhargaro6FK2PMGsisy0jumsSzXn9ay4kOFD907Lu9na7l
usmRnG584/1WmyzZ4Zux1rva/tA2+fZTd7xWxzD3up7Dta7J+XCYB+mOcgPe
Ud54+lXXF+uam3QqdnS6X9ehxtrptvNbrc2NKedgN/HCT/zKyZVId4kNIZxk
rZT70b2enAlYoufQg1yXOGb6FluMz+YZd+RtH7ZxXKXOmusMS/Qox3Qe++MA
b3Sw5GbAIXuUeT9sJ2bM+FPX1LiHq+FquBqujoUr/knX6XcxuhaZZt2i7117
apuQY+r+dhtbqRdMdmSJnWas9a62RbRNvv3UHbvV8cy9rqfXuh7mf0gepM4N
2PlyO4d811Lp+mJdc7PrUNOx6E58zacMXUZ38p37wDidnzz5ap2LTcV1mW/3
L53JmMmPfuXayYbMEytFV0mb7mU8rtf4mivHYiuwTWwXOwp90vfWFtFHnQNX
7j26k3E97soPXmPBETs82eOPLoXtrK+JDSPrffCDWXxo0wVxQl/E9HA1XA1X
w9WxcOWYfuu3ufzUSznc/V46Jhk6vmu3f+wNqf+VdnPVulbbH9omr4/t7A3t
p+7YrV7XozYmO4MaHr3WtfM/dE6kzg3Y+XI7h3zXVen6Yl1zs+tQY8VaHLHH
5+rffm6X/cOLbkHG5txaXfeN9Uq2e9HdnNe49fE92Wg3V7b3uhdjxlPy6G92
k4++lFuDv13uXPywb2RsfAR8Fmwhzo0d9ysZq/3lMw4wduVjP2jpeGTvPInF
wgB5YTG2qdgUsr4HV8buWNrD1XA1XA1Xx8JVfh9xhS/X5xky767J9jy3mn8s
eW/GWtdq+8OhTT5+6o7X6hjmXtfTa10750PnQercgJ0v15jY7bN2NTnku65K
1rHSo7rmZtehZrPAVNbYsKOzsTsHTpObPXFqjk+X8k4mbAZZy4kl52FnSb4h
OlPWtpAnmcv/ixdjFgcVG4JxY4RdY7NtXHtBzWc2/v5sbK7bHJkP8dziv+hf
1sM6pvH4zH6OMbZ857A9ccXkgkVs5z7wtyZx0bGr529T+MLNcDVcDVfD1bFw
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
ib02/zBfTXK4dV5T8qMj4apzfXcdqLNqI3a9YLLyHWbafouv2Ar0oduYG2tc
yNB1i4Eib31j/8Yftp0DP8YflsKX+WOH149+x8bgmvFpe/zHsSWwv0dvwlF0
NefOuzGJj2JLZ1/nE8aJd/l35XgQd+x7PuYt99EHXpD73fd0K+yxGVhXak0N
BuTsxRNu6GS+xwz9iS4mhkqeCbb8jbuPWp/lNTJHWBD37D5K7HEz1nrXof0h
Nvn2U3e81mEMc9b1DFfD1XA1XB0LV71Ov/PVdA63zmvaub675kXXgeraiF0v
OPU3cGm7Z2PHjX/Ydn0wgC26Eln6LjqNNt0JA8kRl1rGrtHcYSNrg5IPXh/X
Fz9xaj4m7ji2dK+sr8VJbAjsFPoZA52u8yzZR4yWz8nvvvmV37mY0WYjpyPR
s+hD5ExG9Cc2Bm0c0avoTfIK4YSP2P1NFvh375pvc+ozvnyPI7mVcMUuwI7B
vmFsiTduxlrvaltE2+TbT92xWx3D3Ot6eq3rcDVcDVfD1bFw1blrDnO4Ja9p
5/ru+hddB6prI3a9YOd1/fhxfM/D+pE7Lv0ei+81Jud0XWRpDiL/5AGIXcM7
XlJDKn7rrIX1GS/amHXsrJvVZndw3dGN4otOrJU+3ts/HVt78kUk3xLG5DES
F/W2my8/2WKIX7TyJLCXszFseZNevfQlMsUWXUqcFbu5z3Qo8Vhij/Xna7Y/
5sgMf4krpnuaK7ovObufyVkuPqw0V61rtf2hbfLuOfq1/dpP3bFbHc+cvzP2
6bWunf9huBquhqvh6li4Oiuvaef67voXXROqayN2vWDjj//Y+HHFPkv/iG+b
TMgpPmLb6V5Z3+pYtrk2LNJntOlkyQlhjNGjUoMMI8kHkc9ZPxNbediKjTy+
6eRaii0h+xk320NY07ZNf5yxrbMvsC0kfliO3LT5luVb2PLL3v0k9b/oX1t9
lFdfsO7Ud+zv4pKxxm8tJqu5Ik+ckJ95Z3f3uRlrXavtD22Tbz91x2t1DHOv
6+m1rp3zofMgdW7A4Wq4Gq6Gq2PhqnN9d82LrgPVtRHJMDWCydL1uFYy9gzs
fPQiv7u+s0aGnOlLZEFm9CzvyQuU+KauI5b1rVm3E/sDDrOv/lkf4xxZL+N4
sRnEPhEbeba3PSH28uRYCGfJkZScgnLPsifYps6KHEn2Sc0Q+d3ZGDBDx5I/
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
sECf4svVr3M+dB4kbLiH3Eu4djzvnS+3c8hjx5ycztVinS7VNTe7DrW5cX+x
n9vO52AOoteSNT0q9iC+fbIkm9RVYy8aroar4Wq4OhauyO7WWx60e/etX7CO
49nUy7qK/N6ba+M2X1sO9xevuXYsY/B7zT5AXzG/9CI+0W2tyKetGCfb8aFN
T8EPWbpGvmKy1Wbrtt31sLHrT6+g52DCM7PxsxM4Dt3M9t+ubf4c/860XYt9
tZux1rva/tA2+fZTd+xWxzD3up5e69r5HzoPUucG7Hy5nUO+a6kc1hdLjqau
Q538TVm361heznHjG++3e/Ob7r+uy8s6pazllaOp2+5/15w8ul507eFquBqu
hqtj4crv+f4ZeK0nZOvd/I5Xnfc77N1aC7+5dAl6QLe3fKlPX8xtNSyvWfOI
AWxgwNjJgX7jGtLWBzPm33bySX9MWkfiOvGmf283V2RDz9EOD2e131P2mqu2
P3S7bfLtp+7YrY5n7nU9vda18z90TqTODdj5cjuHfOcW7PpiXXOz61Drn1ov
rtf21PdMjiYx58aD4+YKL3Qs+i2m9fFuO92cbcH6HzoYu/xwNVwNV8PVsXC1
/10XK7TW1m+xPpsP1/Mr1k7XHa7YHm3seNb2HMv/aN48U4vj9exsTYk55+f1
HOtaMOM51xxtud6vZpNeOVetR3GdZEqP6nbrWt3WRxuT5kubLndW+87ydkdc
tU2+/dQdr9UxzL2up9e6ds6HzoN0mBsw7c6X2znku65K1xrrmptdhzo5CpPH
KVw5vn1Sg6XjuZ0/fg92IrYe4/c6ZJVdg43EC0v8CnwAw9VwNVwNV8fD1bbW
g57leZhvFGP8k9rRtXzP5nAaP7Ty+rEdsD3gku2Y75WN15wntw5fszhfz9XG
Yd7Zrl0TWwHGYovQ3zWREWZcgz78x9pk3W1yP6t9Zxg7i6u2ybefumO3Ooa5
1/X0WtfO/9B5kDo3YOfL7RzyXUul64t1zc2uPR1WXEfyPnne73ZyOBkPhowj
jHr5Hvs4okuRHVu6GDr6HPYw6G8BPzVf/rn6t/1tunjZaXu4Gq6Gq+HqKLiq
PABZg7F8pXQmXG32h7Um8RJvuLI+X3vTwc6d53u1DsXvK72DHiTGSMwUvYtM
jRlvxmVOycLakuhLxhn7g1ja2BPoWs2VZ21yw/VZ7bMYuzNctZ+6Y7c6nrnX
9fRa187/0DmROjdg58vtHPJdV6Xri3Xe+a5DHV3MZ6zwQ2Aidcvw4Dz0L9eN
a2MxT8kBzE7g+PQp++orlth3roNPQYwxPujd2KA/yVNk/Wu3T9cSXWJjuBqu
hqvh6hi4woOYHtu2nKofsOJcrd0/tTVcYCN2TPv4jDHH6Tb7u/ctfuhZJ5tO
dm49n/O34pQtlk2dTb65Mo/0FWskY5/HorlhoyC3MGD/2DHw0+3fLa46hrnX
9Zy11rXzP3ROpM4T2PlyO4d859Q95Co1N7sONf2KzhMekhcjOZpStxp/0ckw
HR3O5+aKX/3mtz5wnc/+yddBBq5N7Bd/irkgQ/p01rX6LIYtMde2JTZ6uBqu
hqvh6li48oxMDnIGaCdHKR+itu1yDmAMO+YUL5ja9K5r1++r7ze96+Jl1jpu
uQUunsdHzkU/Ybs3BtckBpjuRBbkHlsEljDWbZzooz+ZsdXTaX4vuOp1Pb3W
tfM/dB6kzg3Y+XKbmc4l3/XFuuZm154+bKfWNdaSpzf6lLju+J3Nh2PiKgw5
p/fk/nWc2CaSez9rjOmHfAyu1b2OGVzxlZOlnA/WYPGtn65JWm2ywIx1Q+Q7
XA1Xw9VwdSxcscN6hqZP6KNt/psrdmdz7/cUG5u+cZfbtZNXjm3COshTn/Z5
fmjcscFuestmx7fGlT5C9zIGMU3G5Jpd17YO5FNWzNX2nH/PFeeLvWas9a62
RejPXmF7+6k7dqvjmXtdT6917fwPzVXnBux8uXeUQz48xRd82Pa9/e2nbVyu
xf3D72tOtNlpjD9sxTYRm3p8z684rRejP93K8cwxrpLvgk5lf7qabe4P97Dv
3F/mXK5hupRrdv7MJ4YTN564ODpmWMLPcDVcDVfD1bFwle153te23kZcqfWI
9uWDtCbH/Hu+ZTMnl2573vQ9bvLsSTbk6VnV86lja9PJrPnHHCatX/XbfVqn
Y9UOPmSsda22Pxza5OOn7nitjmHudT1kQzdzjb3WtfM/dE6kzg14GK+UHPJd
V6Xri3XNzWyLXpX93SMYIOvUecGCz4c1XMg5PuPkqI+Ngy3COznvdcO1L0aM
1/jFSzuW6838+Bux1fS674qR1uaXVuOGfMWM5e8L3Y0f3t8J+2IMM4ft4Wq4
Gq6Gq2Pgyr76mEvndRxt12r++VVdh/6OYz7IyLO4OQmHrkEeGzpM1qtqux5x
vMaz1TK59lKMrudU9glrGtmr6VrNWOtdbYtom3z7qTt2q7nqdT291jXXaA47
D1LnBux8ua43eeO7lkq3u9ZY19zsOtTZph1+6GbaXu4n27T5lxM77Pjs5l74
NTZt7z7Tk4zTtuQ8NK7UqjF2MQH+Xji3e5MuhAFcmefmyr2jJon70XZ2eNux
rA82whgZd3u4Gq6Gq+HqWLgyhi33wNWrTTfyzBjGthw227nIuNuOrw97a/It
YMyc0XP4LV2XtjHEHo4hNltcWKvZjLXe1baIts+3n7pjtzqeudf1tH51mP8h
HHZuwM6X2znku5ZK1xfrmptdhzr72g+T3sOMd/eN60oee98nfy+ZGtNhm91A
G2+xR9jfmOi75hUnWVPTXOmDpfg1cGLecCumjH3F8ZsfPhhziA1xWOKPnZ+O
pk2Xwwz5aoe34Wq4Gq6Gq2PhyjEdRx9txyHv8JbnR/ywRejjOLaTi/Hg0DG3
XAXXr/P6vd7yHd179dFuxlrXavtD2+TbT73V+rpmcdKxW72up9e60mFic+j8
D/aNrbhzA3a+3M4h33VVur5Y19zsOtR4ybFSzxo7xpOc9bbb5pj6ahtDbA2O
77ne9Tg2zh1XbkR98UgPNf7kyEvNUN87p/HT8fShN5KrY9GX6FeHbTJy3zkn
X4u5Imt9/B0wh3QzbOBBHzqt/mGMLLBk/oer4Wq4Gq6OhSt9cCLOKMds3hyH
TqKNB/3lNMWS67WdHqWP45C9MWizRTRjrXe1/aFt8u2n7titjmE+XNeTta6d
/6HzIHVuQG0cJ14r+XI7h/xhXZXkYu2am12H2nHCmG1kHe7CmHHalwydi/zN
QXNl3szj5v/ffNW+o+vRjdLHZ/vG120+fJb7wcu4nV8/sWGxx1sf5JjG4Pj6
mle8mhNs2E6+5ta5rLONHh5+MIBDzOjjbw7GmqXhargaroarY+GKLMjd86Y2
PcTvqeNE18Jb2jhJ2xidC2PdbsZa72pbRNvk20/dsVsdz9zrenqta+d/6JxI
11duwMN8ueGqa6l0fbGuuXlYhzq6Fja8Yovw0q+5in0+eg7OnM+25K9PXDBm
zLlrwJXvYj93TseILR3HsSvIqY8NOpdj7OdncYwdfbzsb0zkyAZBJvzRckYk
Psv18b27Nvc+uRijuWKTSe6mrBemx+LEMckXP2xQ/i6RzXA1XA1Xw9WxcIUB
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
55EPWTon2ZCle2u4Gq6Gq+HqWLjChmuzD31G229n1u4nF3rWaCRHTdbt53PW
z8RWHrZiI49vOjlxYkvIfrhhewhr2rbpb7zy+YkPftvNl1+KH5YjN206lHwL
W07Zuy+O2BS2eOMPXbVRrLfxHbu6eKzmiu5C9zLX5hEn5EFO7O4+N2Ota7X9
oW3yZ/mpO3ar45l7jU+vde38D50TqfMEdr7cziHfdVW61ljX3Ow61OQc/zG5
48p5ySK+bSyRfWIPbHd9Wd/qWMPVcDVcDVfHwhX5Zn1FnhP1t925sZX1MVjK
ehksxGYQ+0Rs5Nne9oTYy5NjIZwlx01yv8k7S4+yTT0MOZLsw8fMzs7Gnhyz
9CT2Bvn06FvNVepgskPo67MYK8fggxaLjD3xW+KRMegc4pnpXvrR25qx1rva
/tA2+fZTd+xWxzD3up5e64oX233u/A+dG7Dz5YqNFntt/J1DvuuqdK2xrr/Z
dahxyLaCRXKmz/nO2isyxwauMEHPChv4SdwcTpIDMOtbh6vhargaro6BK+/6
sJ9nzadzpk/HD/s+jMRfHK6yTsbn6FQ48luMC9wYZ+zr/No+O7Z863zS2mzr
yZ/kN9tztOff1M5S58Q6U/W02N1xc1r/8iT2B7n3qjb00sFw5L3b9Cp6mTrT
4pPV1KSrNWOtd7Utom3y7afu2K2OZ+51Pb3WtfM/dB6kzg3Y+XI7h3zXUun6
Yl1zs+tQY8x8YgxL9CY2EbLBgu/5/sna35bU+mRTIO+scU0eIlyFGX2ybgp7
w9VwNVwNV8fCld/FcEW3in3Bb6aX78KP4yZmODaG5imv6E84YSvHljHKBx87
uvMbS9Zhsj2zh7NZkwt7Aj2FfYHOwMagbe7ZzDEgjmpbf3pxzTmGcEY3esQV
V6wYZXIjazJWL8VzeNaY0mPoRXy+zVjrXW2L8DzPnqB/+6k7dqvjmXuNT691
7fwPnROp8wR2vtzOId91Vbq+WNfc7DrUqVNG58KK+WazcC+738mYTBJ3TnaJ
MSBDPCQ2L+38vWFzyJpix7YfDnE8XA1Xw9VwdSxcxfesnXx65J21Nn4rHSN9
bPNyjjBlbJ5DjZP+xDaQesHRm+zPthuZYIaszfv2/H35ksf2DH0vc3vBMzqb
NpsyudBV+HnNI57IgS7ls31wx7bumRs79BlrVdmhMRUWwljrWm1/aJt8+6k7
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
x8LV/wO9Zsgx
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3X3UtXlZ1vEJy8zs/b2otOz9zbTMcu771rJ3K9LesxJLqiVrBcZa1bI/
RkBEHBARUXFARB0QFREREXXwBRFxBhlEfB5EREBQGXFmBENAa3+ve87n/tzX
ep7/22v9Zq179m/vfe3r5fc79rOP6zjP8zg/4jP+26c87EE33XTTf/+Qw/8+
5aH/4xM/+7Mf+r8+9YN78pkPffjHfPTDP+gwfNTh72mHv8bP/uqPOHv/+953
+oQv+E1nL/yWv3z2pCf+lrNnPuMPn/X8ZXfccXrXnXdu733/933fNv6u7/z4
s6d96e85e/pX/IGzO7775Owrn/4Hz277yj909oOv+DtnX/s1f3z7m9fb5jtf
+jfOnvolv+vsS5/6u89e8u1/7eyLn/zbt78fePknnT3jtgdvx3rNj/yTs294
3p89+8Zv+HPb9r3WPp/yxb/j7L577z39uZ/92dPn3P4nzx79ub/u7P/+2q+d
ft/3fuL22a/48t9/9q0v/OizL3rSbz37gsd/yNm3vOCjtvFjH/NB2z6/+fl/
8azr+6k3/fvD+f/Nsxd968ecvfbuf3r2HS/5uLOvf+6fPvvR137K4RpPt+O+
7a3/8ezHXvfPzl7+/X/r7Gfe9p/O3nD1X5+96of+/tkbf+Lfbq93fT/++n9x
9iOv/sfbvnrtzh/+h2fNx+t/7J9v4667/d915yefdY7tv+e91/5e96Ofum37
E2/4N2dXfvxfbuNen/c65x47Vp+d87l65V9tx278C/c8/Own3/hp2zGao+bk
nT//86edV9fRPDn+oVf+vcO6ffLp3a95yOk3feOfPz3M2el3f9fNp1/3tV97
+iVPecrhtW88PczF6efectPp937PJxz+vufksO3Jr7z3vSdt2/PDfG3vfd5j
f/3pr37gf59+8/Off/r5j3vcYT/fdfplT3vaacf4oic96fRrnv3s7Vif99jH
ni5cLVwtXC1cHQuunvucP7Vh6Kue+Ue282ltfvhV/2Cb7y972u/dsBAmfuZt
bzsND4fjnf7Y6153+phHP+jscC5nv3T//ae3fuFvPvvpN7/59Edf+9rT97z7
3dvztmuNW78nf9FvO/uaZ/+xDS+93vP29VNvelPXc/Z/fvmXD+f2ytP20Ws/
8upXn/7kG994+h0vecnpt77whdv5dz1d1wE/23m89S1v2bZpLZ/1VX90m+PW
8Nte9FfODvO3rWXfk66vNX7e1/+ZDYut22GOtvfe/jOfua3tK3/w7264av1e
fdc/2h5b4/DTGra+rWNY6PPNT9s0X302XBzWYsPhfLbtxVL47Hn7e9NP/rvt
+TzOe+Gtv65jcBfG7nnnZ21Yb1+v+IG/va1R8xk+vv65zz356Td/+gELrznM
zeMP38H/csDMR27fvx94+ctPb3rgv8Nn2uak7Q/z19yefO4tt5yEp/BzmP+T
w9ydfvWzPvz0W17wgpPD9hv2DjjeHsNLc9/zn3jDGzY8Xr1ypeMf1u3TN4wu
XC1cLVwtXB0jruI+revwn/AVplqHuNaLv+2vbtylNQ9ncaxvf/GLT+Nk7euL
n/zk0x9+1au239v2Fxa+4XnPO33GbbdtOOt39zAn2zG/6pnP3K67ca898dYP
O2Dj07br6joP53AYf/nJYX5Ous7z3/rXnBz41TYfM0dhtznrWG/+qf+wzX1Y
CWO3f92f2DAWluIYh3na+FVY6P2ffcd/3tYsDPR6PKa1ao1btwNX2NZzeFTj
1rlthueEveFDs/3wqMFe78mjxNJwqp63z/1fOJ7Pts/Dum2vN+771/w1r4f1
P/2V9/7PbV0P83aY8wdv372+q3Ge5u2AndP77n3ENvduG39qzs9x9FHb8zDx
xFtvPcztJ237F1f9W9C/LY///N+4nUNr3XmIK7nWwtXC1cLVwtWx4Kr16Zj9
ZnY/n57QZ3/xXe/adIU0hTDymEc/euM+c+6dW/ef7af7zp5/9bOedfqOt7/9
tGtp+/bducYDvvLpT9+2D0O9f8Bjv/MbZsJS97Zh6IClmw8YvvkBznByPjc3
befU/XSc6qXf8de3e+j42vO/6S9smkacK6x8+4s/dtMsfun+zz57y08/dFuj
n/+5/7qtU5wnfhMXCjOta3hI82jdZjy46L6+tR0c9rlwGI7b1+Cq10df6Hj9
9Z4agjxKDM02/cXxOudwFP57Hvb7fqTfdL3xzO75m9Nve9GLtjX80qc+dVur
+FXf7zhvGlEaTevSd/87X/rSS7jqexu/6rsc7g6cbOOwfVfDTJhtn+HlsCan
8bXe698XMSbXUn9YuFq4WrhauDoWXHWszrHfyn4340ZpAd3r9zyO1Wv9xsbD
+mw4bBxu4lqP+7zfcNZrnUPHDTud7xc+4Qnbb3UcanB1mPPt+g+/6xueHri+
jz//u+nmMBuv6i8+lwaSfp5GHl7iTs1vOIpHtJ6tf1p63KU1/p6XnZ3Fu1rP
8NO4tRZLbRPW2iYuNhwpbjk6edsMTvpsr7V92EtfGG08zI0GMHp6HEz9XA1B
HiWW0mTSTOK4P/iKV2waS9hpHRq3vq1lcx/nbY36LoeB/h3o/db38NrJASub
Xu6472fz3TqkKfS8tekYYanH1vdwbhs/Tstvn/NvzGDsRvqDmvzC1cLVwtXC
1bHgKo2gffXZzrffy+K93TP2OyxO+p3uvrL3+n3td7R993s+ccw+H+cKq+ec
68O3cXyra+k6Om56QTg64OnmiYd2ncOXvuQpv3PTxItdp9un4f/qBz5w+uOv
f/3pcJ8XfPNf2jTzuMlwnvSG4s2jE7TNYCmdIZ2g7Ypvj55Q7Dg89nr47bXG
8bhe73h9tvHgtuMNxtq2fYUr48Vq5uoGcqfOZ/Yrrlrj1rbva2va87hv3/nW
pMd5PSzFcfqLA8eVWutizX2fm+/+3Wg9RvOJlxVv7r04a8/jT+JKrqX+oCZv
bLrjHs7tpDVeuFq4WrhauDoWXBU/7v49LHVeYaO1SwPod7nPTrw3bLRNuAo/
bdvvavjqPDqHeEF6eTpBx+xY4azz7zq61o4b1kaDKDYcZ+oc4lDdx3ZfO/lU
4Wm08cP223q0pq1169r6dx8epwlLYbO1jfcULwhTrW25Wn2u18NPr6fDF2cI
G2kGxa0bj2bReoezcNjjjMPQYCzchZ99rpTxYjVzdQN5lFhqDvqu/8I995zG
L8NO3+W+w+Ep/Hz+4z54y0/7wid8aDzo5LDNSd/RdJz0hP4daF/NfY9hIg6U
FtDahY/iH2JMrqX+oCZvnNp8rTAZNrqmhauFq4WrhatjwVX3qeGl1+I3YaJz
65jl6fReODvP7/mQs7kX7Xo7fscMVw9o5Sf9Nqch9BcWu45w1bblbbWffs+b
23KE4xJxqOaoOWuNyy9Ouzhc14aVcDO4ak1b8/SAMBguWtvGkzMVHkc7D0ut
/2gRw7sah595vfVu+3DVfgZ7o713vPY5XGviy+kN8beO0efNEzZXynixmrka
gjxKLHX95QWEn76Dh+/59r0r/l5sP/yFlfhT+0p/7xhhJz5VjCRulMYT/wkj
Ykzepf6gJm+c2twtc5jjfV1P/04tXC1cLVwtXB0Lrto+HtV7Ha/f6LaZWHKY
6j6zYxZTHi4QBs6Pe9Om2aetd0/bdU7eVHjq97/jhMmwFI7K7Uo3Lpe4fcaZ
ypP68i/7fRuWWqPWrjVqHVvf4UthIB7UZ8RVnGpyrNIZBmNt3+ttn+bQWre/
to9zzevtM9297SenuPdGB2hf4ShcpmWkG7TfXk/nb79tb42MecLmShkvVj9X
Q5BHiaWwW85c38OO0/z1XW3+W7e+18VB+h5P7tvgSq6l/tC/I+Ggz6rJG6c2
h7mcgThV21nX034nL2vhauFq4Wrh6lhwNdu1v86h39IeO4+O1Xb9Bnc/Wg5P
2/cb2zmnGRRDjg907N4PR83naLZPvPXDtjmJQzV3Yan5aU3CV/zj/vseeY3T
hKXWLnwUj433xJG6j+/9+NfoCb0uluI/vZ4+EE7iYmFm8NLx4kPxlY472Bl+
1WfDXDxu8Bqe53iTb9VnimWHpV63DtS6GHODzY8yXqxmrm4gd0pzCG/xUnHV
seNdzXH392EhHUCMybXUH9TkjU2br2UOs3U916tvfc7tt1/TH85jMwtXC1cL
VwtXx4GrWQvvwdOo5x68eW6O4xSt14xb0+a9x7Tjrrc1b25bh7ZpTXt9cqda
k/ls4+E6jTt2692azn19sdle7zziXXOfPzymYzX3xcLTMMqjbv7T7Xs97pFm
0dy2huG5709zGr9onfvexEea42Kp42fQds1561PdUI99p8JIWGm+m/f3vPtR
p3ogxDuKpTf/resBJyd9R80Nbn+932P364d933yh05xr5uoGrV3f9cZ9V+PB
PX7g/Z+zxearwxVj8q7i9XG9dIviFs1R2xinNnerOWpO0hms67HW9R1vf9i2
Jq3/4fuzfVf73qe9tN4T41i4WrhauFq4OgZcyR/kFfINeYj8RN4in5HnyH/k
RfIleZT8St4lH5Onyd/kdfI9eaD8UN4on5Rnyj/lD/IK+YY8RH4ib5HPyHPk
P/Ii+ZI8SizJu+RjlzX5C/4mr9vzveGB8kN5o3xSnin/XLhauFq4Wrg6Flyp
J6szqz+rS6tXq2Pv9e3Bknq4Orn6ubq6ers6vPq8ur16vjq/+r9xAeMFxhEu
xxcu4g7GI9ST1ZnVn9Wl1avVsdW31b3Vw9XJxZhcS/yoyTtWt1fPV+dX/zcu
YLzAOILxBeMOxiMWrhauFq4Wro4FV+YXmXdkPpJ5SuYvmddkvpN5UOZHmTdl
PpV5VuZfmZdlvpZ5XOZ3mfdlPph5YuaPmVdmvtnlPLSL/DTzi8w7Mh/JPCXz
l8xr2tfFTB6U+VFiTN6l/iB3Ej/mbjk2v8u8r30+2JyX+WPmlZlvZh6a+WkL
VwtXC1cLV8eCK+tNrEOxPsW6lX09y9S5WP9iXYz1MtbRWF9j3Y31ONbpWL9j
XY/1PtYBWR9k3ZD1RNYZWX9kXZL1Stab7H3Opz7FuhXrWaxzsf5lXxczGJN3
qUWomasbXK9eNfxY12O9j3VA1gdZN2Q9kXVG1h9Zl2S90sLVwtXC1cLVMeFq
fhP3vgTjV6CPgf4G+h7oh6BPgv4J+irot6APg/4M+jbo56DPg/4P+kLoF6GP
hP4S+k7oR6FPhf4V+g/oS6BfgT4G+hvoeyDG5FrqDzfyGjJerGaubiB3Ekv6
P+gLoV+EPhL6S+g7oR+FPhX6VyxcLVwtXC1cHQuu9KPTp07/On3t9LvTB09/
PH3z9NPTZ0//PX359OvTx09/P33/9APUJ1D/QH0F9RvUh1B/Qn0L9TPUj06f
usv+dRe+dvrdibHLvOtCf1CTN05t7pYxYnVytQL5kvjRG9Dx3jd+fAX1G9SH
UH9CfQv1M1y4WrhauFq4OhZc6U+ub7l+5vqc63+uL7p+6fqo66+u77p+7Pq0
69+ur7t+7/rA6w+vb7x+8vrM6z+vL71+9frY62+vP7m+5fqZ63MuxuRdahGX
PRCMU1/kbpkPbH6UMWJ1crUCuZP4uV7/lP70mdd/Xl/6u/Gr3/vYj7/9wtXC
1cLVwtWx4Mp+Vfaxsr+Vfa/2/bAm18r+WfbVst+Wfbjsz2XfLvt52efL/l/2
BbNfmH3E7C9m3zH7kdmnzP5l9jWz35n9quxjJcbkWo73Xq+jzxunNnfLfGZr
YcwNNj/KGLG4UjeQO10PP/ba7NF+ZPYps3+Zfc3sd7ZwtXC1cLVwdSy4sn/x
Vfoa2+/YPsj2R7Zvsv2U7bNs/2X7Mtuv2T7O9ne277P9oO0Tbf9o+0rbb9o+
1Pantm+1/aztc23/a/sXizF5l/qDmrxxanO3zGG2rudyretFLYxjc4PNjzJe
rGaubiB32vebnj7U9qcebEzf6slZv0qfa/tfL1wtXC1cLVwdC67aT7jqWJ1L
n2n7cDVxxrhV8x5/CjNp5a1n/GpykjtmceZyhSefKv283KzGcZlwGAbLM05v
aE7iDcV305K7vy+eHW6as/aZVtFx0zj6bO+19mGhv7aPA4WRMJymUQy760lz
7m9eb5/FztMS2ia8pCfEuRqnaTfu+xHX6lhdT1ys98WYvEstQk3eOLW5W+LK
uh5rXfV/sA7UWhjzgc2JMkasTq5WIF8SP44n/tK/GaMrTO+zXmte21/jyUkY
fr5wtXC1cLVwdSy4CktTWzhaQljoPNq2a+k44ap57bhTX9P19H65UmGtOZ4e
lI3Lk22b1iHu0jHiQeGj/ffZ1q1zTpeIh7XNbB+PqyY1XHa+HT9sNO6z4bNr
avvOoe9D25ej23y3ba93XW3TOXWstJD2X0wgnJQH1nZxl+K8jsWYvEstQlwZ
pzZ3y3xm63qsddX/Qc8fPRCsA7UWxnxg86OMEauTqxXIncRP71mfNeO27Xnn
1r7bvnHxlvbV+SxcLVwtXC1cHQuupp4+btT7/WYOfuIo83qfi6OkH7Se8aJ+
45vv8NN5h5HWYHhR2w8ewlL7ay3iN81N3Kdtmqsw1euNe71x5xx+4jLhME4X
p2r/jTvW4KSYb9fVZ8NhPKTz7NzaJo0hzaFrrn6lNe0aZ59iTK6l/qAmb5za
fC1zmK3rcWytq/4PeiLpo6j/jx4I1oFaC2NusPlRxojVydUN5E7iJy6X9tBx
HTfnzXXj2c/0Plu4WrhauFq4OgZc9XvYb/L8VvZaHKLXWtNw0Dj+E4Y619ai
tWzcXIenzqE5SGMPM+ExPHUt7a/tuidtfeIs4aTH8W3o/fhQ5xC/a//NW7U7
nUPX1/4Gk51ba9d8dfxw0zh8Nm5Nxuehz7a/MBHXGqyKMXmX+oOavHFqc7fM
Ybaux1pX/R/0QdIbUL9cvRP3vVTGT8Ox9cXWxZgbbH6UMWI1c3UDuZNYavsw
NJ6OnWf771iDn4WrhauFq4WrY8HV+AM17vPjj9e4NUqXbv/9tvdaxw8brXfH
GFzN73C4CidhI8zMeZWP3H1x968db8bdt879+/RoDpMdu+PG58o/6vU05/hY
8xXWwkRzEeaLPTdf6RjpDB13sNd8hsmwJMbkXWoRavLGqc3dMp/Zuh5rXfV/
0BNJb0D9cvWQ1zdYH0W9pPTTsKbYGivzzM21M0asTq5WsB8PjxJLnU9r07j9
9F7nsHC1cLVwtXB1LLjqt7l1bA2mfrT1azz8p2N2TeNZND1Nuvb5Pe3YvRau
pj51vB065mga3b+Or1HH6Bz67Q4r7b/1DYfhtblof/G65ixsju7dOYextonv
nWvkD9m2j/+IMbmW+oOa/I3i1OZumc9sjY+1rvo/6ImkT6B+uXrI2y9Gz3w9
hPc+iuMlpZ+G9cXWWJlnbt7dPvdgNH01KLmT+JkchL6rjheuFq4WrhaujgVX
7bdt4hT9Tnb8rie8db6Dsdln1zHvdY0d155fca+uK5y1PlMXMv7ws6/mrccw
1nm2bfPZPHS+8bc4QOfVcbuvbZteb/9tG+/q/K+HsT3vGv1BTd44tblb5jBb
12Otq/4P+iDpDahf7o085O2rYq80+8Xon6+HsD6Ke1+p8dawvtgaK3POzbsz
98D4i3qUnNx/l8TSwtXC1cLVwtWx4Krz71oaj+bae11L++k8Z9vBUs/DROfV
9u07DPT5Ptc19vr8vncdjTv3tum8B5MzJ+2/c+7853j+pk8soGuIG0xMVozJ
u9Qi1OSNU5u7ZT6zdT3Wul72f7jwRNIbUL9cPeTtq3I3/cXsuWl/NPvF6Jnf
PIzOoHeinorX85UKV9YXW29lzrl5d+YeGItRj5KT++/SwtXC1cLVwtWx4Eos
dY6T09rj9PDtnCcXZ36vG3fciY+2Tfud+sfB5WCqtR8MNhaTEzvtvDtm555e
0DGav56LMbmW+oNj9Xnj1OZumc9sjY+1rvo/6ImkT6B+uXrI21dFXNlz0z7U
9ga1V9rw0uFU45mvb7A+inpJ6adhTbE1VuaZm2tnvoF5CMZi1KPk5AtXC1cL
VwtXx4Ir8dN5tR79Oe68Oo+O3293v8WNJ17Z+ncdzUvXMhyqaxiu1dj70N7v
XrW56pqbm9E9OpfmVIzJu9Qf1OSNU5u7ZQ6zdT3Wuur/oA+SY30CxZUe8vZV
sdeYPTftQ925NTf7vtijAex7pdkvRs98PYT1Udx7SY2fhvXF1liZZ26u3T73
YOIvalDy8IWrhauFq4WrY8GV3En8dKyp13ccltqmv9Z6YpzDu7qWtmmfXU/4
GS19dIV+j+MDHad5Pazb5jHXHIgxeZdahJq8cep97tbkM1vXY62r/g/iSm9A
/XL1kLeXiv3F7LlpH+o0/Xoux0niVMWn27a1Gy/7fV/sGdsn1F5pd9EvRv98
PYT1UdRLSm8N64utsTLP3Lw7cw+MvyxcLVwtXC1cHSOu1A323GnwMz5ub33L
Z2yPbde9bFjovf4mr7X17/itadc+mGpOuva263iOxZi8Sy1Cfd44tblb5jOL
K2td9X/QE0lvQP1y9ZC3r4r9xey5aR/qNP38CdMRyj9uPPW8HbO1HJx0rlN7
OhjTB2N6g9ofrbkb/UHPfH2DHeujqK+U3hrWF4urfc75cCpzD4zFLFwtXC1c
LVwdC67UzNUN5E5iafzfem38TPvruvrc6PXj2d4+p65SjMm79nk7o8kbpzZf
yxxm63puVOuq/4OeSPoE6perh7x9Vew1Zs9N+1DHn+Im5VaFkYnPNr+dz+Sw
TVy5Oexc+76MhjA4aR66FvtiT05xPMf+aPaL0TNf32B9FPWS0k/DmmJrrMwz
d2zenf8OLFwtXC1cLVwdC67UydUK5EviJ4wMp3I8/Ks5CH+NexRj8i5xpSZv
nNrcLXOYreux1lX/B32Q9AbUL1cPeXup2F/MnpuO7UPdmhSnbp8df2p/7rv3
Ede+T/ff98hrNaVdU9fQOacHtH5dSx7sbdOaT65U1zvjcGpfbHFlrzT7xeiZ
r4ewPop6SemnYX2xNVbmmZtrZ+7BwtXC1cLVwtWx4MoYsTq5GJA7iZ/W9Hpj
t/GzYtVjeQ7mbnnO1vVY66r/g3Oy9wYcv1w95J1z+4vZc9M+1K7pcJWeh5+p
UREbYqa1mPhB28x3Q+z5WffpsfrOxOF67rl5zl6L3x2v3TlxrvxuOrfOuWvh
d9+1W7hauFq4Wrg6FlzJbeQ8e01gOJLcSfzIteRjavJqF/I6x/5GW+Pjb7q/
9XIA75HlDHIJOYb34HISuYocxnt8OY9cSK1AXMmp5FpqEXIzOZtcTq1j1xf7
2nP7o6mlyC3lnHsuOlqN3FVOK9dVC5IbL1wtXC1cLVwdC67Uus2PMi6sZi7G
5E5iSU1erd5Yttq+mv/1Ys3hR41XHVi/XGOm6smO1ZyNw6pRq10b293jajRw
tXFjx2rp8aXxW1d7NzatVq+Gr7Zv7NtYgDECYwfG1o01GIMwNmHs3riG8Q5z
ABwbK1m4WrhauFq4OhZcmfsUH5h4sriSa6k/qBvIo8SSWrz5zOZ6mQNmDs/e
E2lyfswFMkfIHFpzisw1MhfX3CTzlzpne2NNrq95UI7NlZpx82NulTlX5mKZ
q2zuljld5nqZC21umDlj5pKZa23u2b5fzOSqmcttbps5b+aEmytu7tzC1cLV
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
9Vt1XfXeyzrwhT6sbqyerM6s/nzZA+FCr1bHVt9W91YPVycXV3KnG2nv6vPq
9ur56vzq/8YFjBcYRzC+YNzBeIRxCuMXxjWMdxgHMT6yj5sMloyzGH8xLmO8
Rr194WrhauFq4epYcGX+jHk15tuYh2N+jnk75vOY52P+j3lBl/OFLvKIzC8y
78h8JPOUzF8yr2lfFzN5UOZHiTG5lrqB3En8mK9lHpf5XTeqdTVPzPwx88rM
NzMPbd9XZe7rzWczz838N/PizJczj878OvPuzMczT8/8PfOvFq4WrhauFq6O
BVfWU1hnYf2FdRnWa1jHYX2HdR/Wg1gnYv2IdSXWm+z9Xac+xboV61msc7H+
ZV8XMxiTd6k/qMmrG8idxJJ1Pdb7WAdkfZB1Q9YTWWdk/ZF1SdYrWcdkfZN1
T9ZD7eukpn7KuirrrazDsj7Lui3ruazHWbhauFq4Wrg6FlxZX2/dvfX41ulb
v29dv/X++gDoD6BvgH4C+gzoP6AvgX4F+hjob6DvgX4IYkzepRZx2W/hIk6t
Zn4934Z4lFjS/0FfCP0i9JHQX0LfCf0o9KnQv0Jfi73fxfhg6I+hb4Z+Gvps
6L+hL4d+Hfp46O+hP8PC1cLVwtXC1bHgSr81fdj0Z9O3TT83fd70f9MXTr84
feT0l9N3Tj86feou+9dd+NrpdyfG5FrqD2ryxqnNjzJGrE5+o1pXeZRY0idQ
/0B9BfUb1IdQf0J9C/Uz1OdQ/0N9EfVL1EdRf0V9F/Vj1KdR/0Z9HfV71K9v
4WrhauFq4epYcKX/tr7c+nXr462/t77f+oHrE65/uL7i+o3rQ64/ub7l+pnr
cy7G5F3qD5c9EIxTX+RumRtsfpQxYnVydQO5k/i5nm98f/rM6z+vL/3d+NXv
fezH317fe/3w9cnXP19fff329eHXn1/ffv389fnX/1//9oWrhauFq4Wr48HV
RT8m+zTZv8m+TvZ7sg+U/aHsG2U/KftM2X/KvlT2q7KPlf2txJi8Sy1CTd44
tblbl/OZL+p6zA02P0pcqZmrG1zPQ95eKvba7NF+ZPYps3+Zfc3sd2YfNPuj
2TfNfmr7PmuTa2VfNvu12cfN/m72fbMfnP28Fq4WrhauFq6OBVf257Vvr/18
7fNr/1/7Atsv2D7C9he277D9iO1TbP9iMSbXUn9QkzdOfaPeyuYziytrXa2L
MTfYXCnjxWrm6gbyqH2/6elDbX/qq7u+1ZNbfJU+1/a/ti/2fDZc2Ufb/tr2
3bYft3267d9tX2/7fdsH3P7g9ndeuFq4WrhauDoWXHUu3VP2+9q9aMcJU619
++qvOGUcKIx0rO49izU2d91r9zevdw7FONMS2ia8pCfEuRp3L9+464hrdaxy
n+NivS/G5F3qD2ryxqnFlTnM1vVY66oHgnWg1sKYD2x+lDFix2rmagjyKLE0
OnlrO7rC9D7rtea1fTee2PHwqM6t91qHMN5+w2G48tz6Pndt7T+tvH8n4leT
kxwGijO3DpNPlX5eblbjOHLnFDbKM26O+q71PSxvIG0m3SictJ5hYOFq4Wrh
auHqWHDV7201qX2+821de71xn28/XVPrXF5N59325eg2323b651/24SBzr97
1rhU2m04KV+n7eIuxXm7ts4tPibG5F3iSk3eOLW5W+YwW9djrav+D/r/6IFg
Hai1MOYGmx9ljFidXN1A7iR+mlvraGbctj1Pk2kfbd84Xbx9dT5hac51tISw
EKbDYOvXZ8NV6xrupr6m70nvtyYdrzme3qaNy79um9a0dewY8cqw1f77bDjs
WtIl4mFtM9svXC1cLVwtXB0Lrjpu27SGbd96x6m6rsat9+Akfbvrik+Fw3hI
uOsc2iaMpDl0zdWvtKZdy+xTXMm11B9upMkbpzZ3y3xm63qsddX/QU8kvQH1
/9EDwTpQ62LMDTY/yhixmrm6gdxJ/PR6vKj9x53SETqH5ry5bjz7md5nkzPc
cdvf4Kdzmdfbd9w3/aD1ihd1nX2PW7uuK4w078O3237+nQlL7a+1iDeHnzDQ
NuE6TPV6415vvHC1cLVwtXB1LLjququx6DNdX/uZz4a31qh9dtxw07j9NI5/
TD1+nw17nVu/9YNVMSbXUn9QkzdObb6WOczW9VjrqueDPkh6A+rvql+u3nf7
virjgbCvCTVf13qZyY/ax4tHM1c3EFdiaWLV473XerT/jtXx46Bt0/GHg83r
vdb8t6aN4z9hqM/3HW+dGvcdbl07h+Ygjb3jhMdwECbbX9t1zn3P48LNU4/j
29D78ezOIX7X/heuFq4WrhaujgVXjfvdLe7a9umy/W52Pp1XmGguOrdiz81X
95vpDB13sNd8di5hSYzJu9Qf1OSNU5u7ZQ6zdT3Wuur/oA+S3oD65eptrter
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
fCxxFXeJezXXzWM4aT1ap3T3nosxuZb6g5r8jeLU5m6Zz2yNj7Wu+j/oiaRP
oH65esjrIayPor5SemtYX2yNlTnn5t2Ze2D8ZeFq4WrhauHqWHClZq5uIHcS
P+2n5/q59TheNoOt0RbCW59rfM87P2s7p97Lg719tP/mqDmJD53Hih+/5VQ5
Lsaczp7GPh6z8aT0hvz04lvi6tyf4SEn6RBt2/NyrNpHMehykcNe+VvlI4fB
jlE+c9yr7eJtYkzepf6gJm+c2twtc5it67HWNbz0es/1f9AbUL9c+6PpIa9n
vr7B+ijuvaTGT8Oa4rwTW7uwYb2VOefm3Zl7sHC1cLVwtXB1LLhSJ1crkC/F
jwYf18PSeH0P5tq+v/Y1n22fectNfUgcqjVqPsNH/bEe8Ei/lgtVvlF8IR40
vbMOn9n8h9o+3T3c5CVbnHn0h7z3el6OVrHmOFg46tFxvCpedvXKlS0/+XD8
jauJMXmXWoSavHFqc7fMZ7aux1pX/R/0QdIbUL/cXV/sa71U7C9mvxg98/UN
1kdRLyn9NKwvtsbKPHNz7cw9WLhauFq4Wrg6FlwZI1YnVyuQO4mf6X1xo78+
33n229w5iqv4QvPXvFZHkw7eurYucarWIW7R+p730Lql3pbb3M+2YfC8/vSW
bc7DUDiLGz3x1lu3HOX23z5b48M6bD4OU2Maj4kXFfMVY/IutYju59MT2t44
tblb5jNb42Otq/4PeiLpE6hfrh7y9lWxv5g9N+2VZr8YPfP1ENZH8XpeUpOb
N2NrrMwzN+9u4WrhauFq4epYcGV+lDFidXJ1A7mT+Ak7nWfYcTy5xP31e57e
3PV2X5we0JxWQ9r65znUPXTzH9a6R0/TTlNuXeIqxXmbx/DUOsSleh4PCXdp
6+077MRn2k8aRpgaLAzG5FrqD2ryxqnN1zKH2boea13DTVyr3OPL/g8Xnkh7
v9zDXG7fKz3k7atirzF7btqH2v5ordPUkcaRJtavf74ewvoo7n2lxlvD+mJr
rMw5X7hauFq4Wrg6FlyZG2x+lDFiNXN1A7mT+ElDTuPtnjzMxD+a19Yhfbg1
jQ80992jt9ZtF7eJ4/QXVznga8sxbh0cp7fHo/LfC29zn94+wtJ4M4w/nxiT
d6lFqMkbpzZ3yxxm63qsddX/QR8kvQH1y9VD3l4q9hez56Z9qNPEi12n29sX
e7hPNTz2R7uLfjF65usbrHeinor6aVhT3OuTQ2691cLVwtXC1cLVseDKfGBz
okY7bWy8WK1AvlSe0/jliaXu5VuT/IIGP92rx1Fakx7Liz33XP/QbW66ny9H
t/WN8xRrjn8036NNxIHSAlqr1iaduteLPbedGJN3qUWozxunNnfLfGbreqx1
1f9BTyS9AfXL1UPevir2F7Pnpn2o41DNaXrJ5FM1Z6ONl7dmX2x7g9orbd8v
Zjzz+5w55/oojpeUfhrWF1tjtXC1cLVwtXB1LLiyFsZ8YPOjjBGrk6sVyJ3E
T/fA8ab4huM4R9vFo4qTFoMNf2El3tG+0p3T1eMtYbTj9di9ePynNRVjl7nW
hf6gJm+cusdebztzt6zrsda198NEfEf/Bz2R9AnUL1cPefuq2GvMnpv2oY5D
9d1rzlrj8Xk44PqaT9DganpfpgeEQfti2yd0tPN9vxg98/UQ1kdRLyn9NKwv
XrhauFq4Wrg6FlxZB2otjLnB5kcZI1YnVzeQO4mfeEI9l+MGjuMLbd98dj8e
NsJV+21d4im9Vkw3jUCMybvUH9TkjVObu2UOs3U91rrq/6APkt6A+uXeyEPe
vir23IxXNsfNm32om89yidtn6zH+eGEpHLR2ffdbx9Z3+FIYGE8LcRWnsi/2
YGzfK81+Mfrn6yGsj6JeUnprLFwtXC1cLVwdC670QLAO1FoYc4PNjzJGrGau
biB3Ej/9VpfjOz7n5fmmLXSPPnUzrUVrGE7EmLxLLUJN/nKc+iJ3y3xm63qs
ddX/QU8kvQH1y9VD3r4qd9NfzJ6b9qHumvt+xaHCVljqu9Zah6+40P33PfIa
pwlL489ebD/eMz7tvR//Gj2h18XSeD1Nv8vpDWp/NPvF6Jmvb7DeieF5jqev
1MLVwtXC1cLVseDqMB/bvjqvd7z9Ydd6+FoLYz5wrzWX3b+HlXSFfbxYzbx4
aPwhjSG+Fl8Is2LpA+//nC2GWr1kcx2P6VGupf5wfr9+ZcNFOsEBezfHV6pf
CS89mrvVGh4eT8JCfKpYbttZ66r/Q9joO9R3KVy3vx71y9VDPuw0Jw/M1Yb1
uJQ9N+1D3dz0/Uo/7/Vi1WkMw2sf8KO4dt9ebD8sTS+Yua9vDXs9HDQebtR4
+p31/Z3crNa/18NSr4fBjtV6t22avL3S7BczmoP9RkerH56ml9TC1cLVwtXC
1bHgSl4h35CHyE/kLfIZeY78R14kX5JHiTF5l3zssiZ/wd/kdXu+NzxQfihv
lE/KM+UJ8gd5hXxDHiI/kbfIZ+Q58h95kXxJHiW/knfJx+Rp8jd5nXxPHig/
lDfKJ+WZ8k956cLVwtXC1cLVseEqbqT+fNkD4UKvVsdW31b3Vg9XJ49/dF6d
sxiTd4krNXl1e/V8dX71f+MCxguMIxhfMO6gbqyerM6s/qwurV6tjr3XtwdL
6uHq5Orn6urq7erw6vPq9ur56vzq/8YFjBcYR7gcX7iIOxiPME6xcLVwtXC1
cHUsuDLvyHwk85TMXzKvyXwn86DMjxJXci11A7mTWIqnxLviUeZumd9l3tc+
H2zOy/wx88rMNzMPbd9XZe7rzTsyH8k8JfOXzGsy38k8KPOjzJsyn8o8K/Ov
zMsyX8s8LvO7zPsyH8w8MfPHzCsz3+xyHtpFfpp5awtXC1cLVwtXx4Krvb/r
1KdYt2I9i3Uu1r/s62IGY3It9Qc1c3UDeZRYsq7Heh/rgKwPsm7IeiLrjKw/
si7JuhLrTaxDsT7FupV9PcvUuVj/Yl2M9TLW0VhfY92N9TjW6Vi/Y12P9T7W
AVkfZN2Q9UTWGVl/ZF2S9UrWMS1cLVwtXC1cHQuu9CXQr0AfA/0N9D3o93ve
F2PyLvUHNXnj1GrmagjyKLGk/4O+EPpF6COhv4S+E/pR6FOhz4D+A3tfgvEr
0MdAfwN9D/RD0CdB/wR9FfRb0IdBfwZ9G/Rz0OdB/wd9IfSL0EdCfwl9J/Sj
0KdC/wp9LRauFq4WrhaujgVX+tRd9q+78LXT705cybXUH9Tkb+Q1ZO6W8WL1
czUEeZS40htQ/0B9BfUb1IdQf0J9C/Wd049Onzr96/S10+9OHzz98fTN009P
nz399/Tl069PHz/9/fT90w9Qn0D9A/UV1G9QH0L9CfUt1M9Qn8OFq4WrhauF
q2PBlb7l+pnrcy7G5FrqD5c9EC7i1OZrmRtsfpTxYjVzdQO5k1gab/m9n7w+
8/rP60t/N371ex/78SHXn1zfcv3M9TnX/1xfdP3S9VHXX13fdf3Y9WnXv11f
d/3e9YHXH17feP3k9ZnXf15fev3q9bHX317f+4WrhauFq4WrY8GVfaz63Zz8
GTEm71J/UJM3Tn05X+sih9m6HnODzZUyXqxmrm4gjxJL9hez75j9yOxTZv8y
+5rZl8p+Vfaxsr+Vfa/2/bAm18r+WfbVst+Wfbjsz2XfLvt52efL/l/2BbNf
mH3E7C9m3zH7kdmnzP5l9jWz35l90BauFq4WrhaujhFXcq0b6Q97z/OJU5u7
ZQ6zdT3WuloXY56wuVLGi/ce8qMhyKPEkn2o7U99dde3enKLr9Ln2j7F9i+e
z4Yr+x3bB9n+yPZNtp+yfZbtv2xfZvs128fZ/s72fbYftH2i7R9tX2n7TduH
2v7U9q22n7V9ru1/bV/shauFq4WrhatjwdX/A5Xskzg=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.94749187108055*^9, 3.947509748226252*^9, 
  3.947613349511835*^9, 3.947666599052944*^9, 3.948071354771501*^9, 
  3.948985565660265*^9, 3.949437475913768*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"0e2304a2-ddee-4ad7-880c-a8857c32bb6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wallpaper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"#", ",", "0", ",", "50"}], "}"}], ",", "1", ",", "lena"}], 
    "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"10", ",", "11", ",", "12"}], "}"}]}]], "Input",
 CellLabel->
  "In[386]:=",ExpressionUUID->"6a04ba09-faab-450f-9196-a4c208ef2dbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3fmzdXlV3/GOGkPmOTEzZh5NohlMfO69mJEkJiGYmMGogImVH7oqjaEq
SVV+aBARsUHEBhEREbFBRGgQERGhQcUWEQFBm7npxjENdnfAGKMm571Pr+d5
3V38A6fq21VPn33P2WcPa3322Z+9hs/61Ef954d/ySdcd911/+VBh/89/JH/
9bO/9Esf+d8/95P74z8+8vrP+PTrP/Gw+JjDv2cc/rX8E+/8Vxe3vvQvXzzv
mz/14h0//rkXL3/ZX7345uc++OJ97/33F6/9vrOLb3/Rn79onVd/z9+6eMEt
f/rix97yzy6+6xV/7eK53/THLt74g3//4jte/Bcvvu4Zv+/ibW992Pbdb3rO
H7244yf/9cV3vvzTt+38yJv+8fb6NU/9HRc/fPtDL27+2t998ZVPfNC2/jOe
/nsvbvqq37yt//XP/JSLr37Kb9vW+dqn/a7t/de99vziq570my6e+BW/4eI5
3/hHLn787W8//8mf+InzjukXPvKR88feeN3F47/sEw/Hdcv5D73xjedP+5rf
eTi+t5z/71/8xfPHPfbXXbz+ttvOW+97XvWq8y9//OPPX3brref33XvD+bc+
/0+e/+qv/I/zH7799rPH3njj2dNv/j3n/+eX/tv5B+98xPnXP/OZh+3euK33
Tc95zvkrv+uvX3zg/e8//65XvOI8G9x9113b9jr3X/2VX9mOp+Uvf/wnXfyv
++8//+5X/o3t2H7qQx9qPxc/+uY3n7/trW/d1umcOv85lw/fc8+5x/8/f/7n
z7/x2c/etn84tu2Yv+V5zzv/the+cDu2r33a086/7hnPOHz20POvfspTzttW
53o4/otXffff3GyfzV70bX/u4ilP/q0XHXu2/uCdd57no47lu1/5yvP/+8u/
vG3ra5761PMfedObzr/iCU/Y9tV+v/1FL9qOoeNrHz/1of+wHUO2+Lmf/U/b
cu89+abfcn7AyMFen9L3NhsebHf2lU984ll2XbhauFq4Wrg6FVyFk46j/b71
x/75xYu//S9cPPPrfv/Fu9/1by+y0bc8748fbPDwi5fd+lcunv0Nf2jDQOfQ
++EwjIWb23/oH15kx/Dzlh/9p9ty5/0zP/0lGybDwo+++XO2/TzpK3/jxQ+9
8R9sds4373zHv7z6ftv8xmf/4Q1zb/rhf7RtLxv1Xrb/wR/4gfMwmz2/7HGf
cMlHh3O9yG7ve+97Nzu+593vPn/Cl//6i5e+5CXn77rj32z2Ch/ZsNfDsYfN
zT69Zo/vedVnbtjK5t/76lefv+I7P+Pine94x/l3vPjF+XPbb1jKVu3/5372
Z7d1wlvvd87hoPWz3xxn12T4zKcep9fC//u1X9t8Gw6e+tW//SJsdk11Hm3v
XXfccd65hIPve81rNlvk7z7vOL7/DW/Y1g/XYSgbds5f9rjHnbfvgw0P5/5J
2/l1nuGz7fX3Nz/3uec/89M/vV1Trd+2D/467OfK+Tc861nnR7t8yvb5wTZn
B7+cHfZ5FpYOvxGHf289O1zHVw7Hfvj3iIWrhauFq4Wrk8FVvnv+t/yJzX8H
22+8aLhTeMmnw8Hybbxr8Nb6cap82/q9dj8PP21juNMt3/qnNs4UPr/hWX9w
40u3ve7iIp9njx/4/r978RVP+OSLsBHOs0e8KryF5XzVcd13773buff5d778
5Vd5zvAWfdf3Wyeb57+4Quv3+m0v/LMbv8qewx8OPPHAsX7pLPwdbHx24Fdn
2fH1tz3kgeN6y3m2atv5+2Dvi7ab/zqn1732tZuv45ud08c++tHzrtG+G648
HjEvD2xb8Z7+/tbnP/9wrVy/vebfg123vw/Hs2Gj448T5veOPz4WNzqcw3as
/Z3veq9thNswFA5bDjdhu2PovfYbnjvnuNJXPelJh3X+3nbNDa4O/jgcxxMP
9nnwhqcH+OlnHf9dd6XjOhx7+Fq4WrhauFq4Ohlc5ceDna/ymfDSvX3iAz37
x5eKQ/R+GHvhC/7MRc+24WTWn+XOJa7V5/GFluMQnUucqu1l88FDWGk5ux9j
Ap95Ufwgn7Xf8NK5x2faZhwsLMdnWsdnefmMPu2YsmPfyX6H89qemcNYfoqv
ZLt8lY+KQ+THA284D/8dY/vqGb5jDLtx0PyVT7puwnufxSPDXteX+xXb8j1j
IE++6abNl63XMR7eOzvw2vMjvm/buF/HdvD/Wf4uRtC22m/nHVazdbGIrhlx
El+M9/XZ8bp4zYa3YiO9Zpe+H+cKq0fO9eBtOb4VF22f2ei6w3/h6ICnK12P
R9513flLvuMvbb8b/YYsXC1cLVwtXJ0KruJLxQ3yTxiIF2WPuE3xh+z35h/5
Jxt3yvc9a4fB/FVMYDhVeCvem9/DQN+LO+SLYtEdc9sPg9kh3jKx4GLvrR+e
ivH3fs/UYSxshpk4WO8Xk+7YOob2ZXzbZ3x5jr7u7z7PJ/GFfJTvwkc267Vn
6eLb+eI13/tZV3ld5xJ/aRvZru2Eh/hp73eebn+P4eF1xjqM/3cccbz4VL6K
v+TPMNWzfJ+Fo7BRzCUfZI+w1D7bX7GOYgDxw7YX5+kaCRut03fzRevG18JX
+O542mbx8uIE7b/jCmcdW8fedRa2wtrEIPqNCQMdQ3bOv/ls4WrhauFq4epU
cFVcvZh53Og97/532/N8+Djc57dccLbKp3Gb8Xv+7HziY9m3mHkYa/24UDjp
WTpctX651c6luHvvhZPwWWwjTLRO3wtLbTPMtP3w3jF2vn235eMz9EO3Yxhu
Njlf494++8t/xEDbDTvxi+INxaPjN0+/+ebNltm+78anOrbyuB1n3z3m0W/f
MO92xKr8zZiGcf7Lue9fOiuHGxZ77f3Wy6e9tq2uw/abfYqRh5ew1udhIr7T
9w/Ht32WLTrGrqlw3LrxznDUOWafB2LlD8RYHtz+z8Ji+wtXrVvOoe3EE+Ou
8e1w8qyv/wNbjCj756/BwMLVwtXC1cLVqeAqrjJx9bvvetQWVy/GHacaXBUf
CD/5tefu8qb5NG4TZtpX/m2dfNZy99mefdvOfHfiCZ1XWG3/8aK4VnjLf8Wx
Ww6HfXfiEmEvXGen/DvPytZBmQs2Hm5MQF4kNooHZL+wUKw5m2bn9tPfxZnz
ZdvIn64vJuVpxi6M55vjtu4r/x74YTndLbcbp2q9iQN03G136rLaXjyq7YXj
A/bPOu7JJWeTzrN1u66K94etMHDE83Xb/ju/jrX8/ZHLvfUsPOXjzjlMhqVw
FOcuX9L12zazc/jJxodj2X5T8tXC1cLVwtXC1angKl6V7dt3GIuXhKXqpnpW
b/2Jk7efnrXbT/Z+w+s/e8NYOKk+K//np4kh5N/4Upjts/LRxdg7r3A1cfXW
D4/dw8NM5xJnKc7wgA3y2VUMh+3WH941tcHWR5kjNk5urEC+JGZ6Fs/nPUtX
I3x81n/IpffFnnzMGIVxe3PZ1ndZ83zdA/8dbHk2ceye5QdXHcvEH44x9CP+
wkfY7r1ew3eYC39xu+Ic7av1415dCx1T10o1Wx1Pn+ff9je5gHybbeJQ+TM7
9/tQLiZ85fP773v0FlfK3h++5/otf7NwtXC1cLVwdUq4Kk46PRbhKF5TzLra
qvjVkdN83rbtlttmGDv6/lhL3P7a1sQQet4PU+PriauXR279Pmv/sxxm2na4
Goz1XN/xdM+PV4Sf8FvsYNbvM/tlrBm2bsrcsfFzYwjyKLHU9no/+2freEyv
E5uIs0wcoeXj8/odGy6KExy2cSW+Uv9KeOm1a6Xz6Djy4eH1LCzEp8rltl78
Jvzm/3AX/j720cds2CiGHp/r+Nper60bvo54edCWs24bnU/4ig/2eViPS3Ut
xL3CSXbMHvk7f+SrcNH7YSEbxKPi3dW4xaPe/rZ/seHpQ3d/8YalfieqPei9
rt2Fq4WrhauFq1PBlfdH75veT73Pev/1vuz92vu493fv+/IBeYL8QV4h35CH
yE/kLfIZeY78R14kX5JHiSXfl4/J0+Rv8jr5njxQfihvlE/KM+Wf8lL5qjxW
fivvlQ/Lk+XP8mr5tjxcfl68Iaxm44WrhauFq4WrU8GV8VLjqMZXjbsajzVO
a/zWuK7x3stx4GvxYePGxpONMxt/Ni59WVfhWhzb+LZxb+PhxsmNn4sZeZTY
c33j9sbzjfMb/zcvYL7APIL5BfMO5iPMU5i/MK+xz3dMHsT8iHkT8ynmWcy/
mJcxXxNfjTdmk4WrhauFq4WrU8GV9TPW1VhvYx2O9TnW7VjPY52P9T/WBV2u
F7pWR2R9kXVH1iNZp2T9knVN1jtZB2V9lHVTYkO+ZAxBPiYm3Y71XdZ9WQ9m
nZj1Y9aVWW9mHZr1adatWc9mnZv1b9bFWS9nHZ31ddbdWY9nnZ71e+G8+ETb
XLhauFq4Wrg6FVzZT2Gfhf0X9mXYr2Efh/0d9n3YD2KfiP0j9pXYb2Ifiv0p
9q3Yz2Kfi/0v9sXYLyMG5EXGCnbx86sxCnmaWHX79gHZH7TXMpp+IvuM7D+y
L8l+JfuY7G+y78l+KPuk7J+yr8p+K/uw7M+yb8t+rmLvo0m1cLVwtXC1cHUq
uLK/3r57+/Ht07d/375++/3VAVAfQN0A9QTUGVB/QF0C9QrUMVDfQN0D9RDU
SdDX8h9jAsbJzR0btzd2IX8Tw+5XvQh1JNSXUHdCPQp1KtSvUNdCvQt1MNTH
UDdDPQ11NtTfUJdDvQ51PNT3OFxzF9/76r+94W/hauFq4Wrh6lRwpd6aOmzq
s6nbpp6bOm/qv6kLp16cOnLqy6k7px6dOnWX9euu6dqpd6cOnvp4+lSe47O/
8XBzxNZNmcs2nr+PaQyvE9sej7qC6g2qQ6g+obqF6hmqc6j+obqI6iWqo6i+
orqL6jGq06h+o7qO6j3G98pnt/7C1cLVwtXC1angSv1tdbnV61bHW31vdb/V
A1cnXP1wdcXVG1eHXH1ydcvVM1fnXP1zddH1nXzGZ3zj3uaCrY+yZvhyH821
HLdxfmMd8j0x73GqP68uvXr16tirb6/uvXr46uSrn6+uvnr76vCrz69uv3r+
6vyr/x/2ej9utnC1cLVwtXB1Ori6No/JOU3Ob3Kuk/OenAPlfCjnRjlPyjlT
zp9yLpXzqpxj5Xwr5145D0sfyVv22rYT3zbnax2UtcH2y1jzbN2XuW/j/8ZA
5IFeCx6/c8qcX+ZcM+edOQfN+WjOTXOemnPWnL/mXDbntTnHzfluzn1zHlzf
bf3eX7hauFq4Wrg6FVx1bvks37fvY4z5eF7FAOI1xVN77d7acfd+59J3Ovee
2ftO/pnPq9+KJ4SVfNi2s0/HHqY6hu7dnXfx3bhA5xhu4nP5Iywc52Y8d9tH
9s9XbSv8xlf0hfzEZ3bj2OZ2rXeyBti+GHtF7QO6XAt9rR7MnLh5AWMj8kOv
Ec+r6y8e17/vf8PfucqvJi+c/bNhGA0/d33wkZvPs2GYCRfhLz+3TvaJI2X7
4g6tM3VT9ePEi/JNPC17xeHiV8Vf+j3ou/X0to/BWHrtE1sIS/GubBcOF64W
rhauFq5OBVctt27brda07YWp9t+59K9cYvfrMNL2iuVWv9wxFGvt37zfM2n7
79xbJ78VT8iuLffM3nLHnp3aV/fmuFif93f4zPYdaz7Pxz2fD060uTxkP/ty
4tXmcK1rstbX/hd7QtVJsDfW/iBrpK0TM1duvsCYibzRa8fz7drLtj3XFyvo
PPNHPo1fZY/3v+8LNv9n/5Zf+pJP27A1sYXOPx6Vr8JZ+gpdS/1dzGGwFG6H
g3UNhqvwEzdrue3Gr8JH+2udcuFhKNsWu+kYFq4WrhauFq5OBVfVr3a8c7+O
6/R+y90nO+7qUbtvd78u9tv6xYw7r9admZWt0/F3zB1X9+ue6/Nnz/Ct17N+
eIiz9ewdH+sen03jRaMN0XN19/3w2Ta1rXzDZ3Dj0uZq9/VLU9Nrn4u9n+oh
qBGkXoQ9s/YN7Wunp37MHLp5BGMp8kmvKe3QtZxdw2acJ391/ebr7Nh5vvc9
n79hIZy0zsQE2k4+yj5hYGLvxQqGO2W3lvudyY/9psz7XXv5J79no9apNyd/
hNGuxzhb1/rC1cLVwtXC1angquMJP2P//J1v4iQtdwyDk3zX82z35HzQfTzc
VQPUOmFkal/zdRym85ptpvvX+Waf1um841adY3YLNx1b2OlvbSiv8Fnb+LM5
WeuUrN21n8UeT3UP1AJSH08NJXUk7KW1n8iaauvKzK2bXzDGIs/0WtM+cZ6p
Ac7+xQ+yc8vhLbuEmWLp2XZi4207jMW/+n3Ij/2+9Fk+Gk7VtRzXarthNVuH
s+qv4mrZNd91fGG035biDO1v4WrhauFq4epUcNUxtL3uu3GMjqfjbJvhrWfS
/Jv/813LU8vafXV6/Pvu1Km2/cFq25njn3WmvyM+EPfKv20/u2kr+YPP1MaZ
zb1aj2SNrn0r+xmao2+g5o86eGrDqiuotpL6EvbY2mdkrbX1ZubczTsYe5F/
eg1qt8HP8Nu2ddSeffhVe4afiS20Tvwo24aFsJYNuzbjxH0njMVf42e9n12K
I2TzfhfCWNsP62HsA+//wg0fcayFq4WrhauFq1PB1dSgdn+Mw7Svjrl9dX4d
c9voHhse+l7nGU6qdx3s5a/OZeLAvd/9fc6x8+3+3DbDZO9PPntvk+EJPjsb
T97nWKfuyFpc+1Ps2VTHQG0f9e52GrBXddHV2lVvUM0ldSfsvbX/yBps69DM
xZuPMCYjL/Xa1J5j/3DStTm1xNkz/3Ydho3JF7edvhvG4tXtO+z13ewYx+rY
ij/0G5S/snV/x7v6TjZuOYyFy4WrhauFq4WrU8FV9+h82vGHk54vW2475Rjn
Pt5+j/Hyh12qWc3X4SGu1bFPzKH38/edH/iiq/0dxWan/9Fzlw/4jGzc2Fyq
9UXW3NqHYm/mXq9gNHzUtVPrVf1zZ4KoP68GrzqEajGpR2FPrn1J1mZbn2aO
3jyFsRr5qtesdm65bWev4dLhJ/uM5l7rFFvoWg0XvWa7ttl2+s1pv/k4m03M
oWs07GXflsNbdmx54WrhauFq4epUcNV9tvtk99rW6dm7fbff7pPHXpbPuYqx
wd7Ms5iejo5t+ha7j7d+9/H21TphznP0vu+zsPFhc6bWEVlba7+JPZjqEqjV
o36dmq7qnDv7w3lYzmRRl15tXvUJ1WhSp8JeXfuVrNm2bs3cvfkLYzjyWK9l
7T99ptk2nMw62XZw2HaKGbSPMJYfs28+jWvlv2wbBw2LLbden4W3tpW9F64W
rhauFq5OBVdTY9P++m7Lbauei+6nxVcnF5m/5jl04vNhIPz0/sy2aP3Bj+fi
/d1nXuPA+9zo1AtZQ2tfib2W6g+oyaNOndqt6pk748O5V86CdE6Zs1rUq1ez
V91CtZvUr7CH1z4ma7mtZzOnb15jH9sZfus1rl+yszoMLU9sIbvns/zb+2Es
LLSd7Dux9/AXlroOw1l+7DjC+8LVwtXC1cLVqeCq7/Z522mdnhnDUFyo+2bb
nRrUeFXbjMN0L89308eRv8JgOPCYvY/7bGu81xyodUHWyto/Yk+lOgNq76hH
p0brXrd88ubOt3Lmo3OQnd3p/DJnuKhjr5aveoZqOqlrYW+v/U37Gu+pczPX
b77DmI+812tff02vTb8bU1ecn7JVPsjW2Tb756eu346v9+Ny7bu4Q7jq+Pp8
4WrhauFq4epUcNU2ux/OnPpeu7f3Xvjpntrxt9w9u23Ewdr+9GV0X/fYvF/7
DGtc11yn9T/WxNonYu+kegJq7Kg7pxar+uTO7HCOlbMdnXdcz2uxhPDnPGtn
ejrXzNku6tur8avOoVpP6l3Y82vfk7Xf1r9ZA2AexFiQfNjfBP3Y70AY6LN8
2nHky35z+k6+6bV4TbaOj+Xj/NCxZd/2v3C1cLVwtXB1Krjq/V67P2b//Nd3
Op6Ww0HLU1fT/TMcxEE8Bu/LPqvu47eT07TOZ1/7Ov0g9kiqG6CWjvpyaq7u
dcitAZt5Vc5wdK5x5x/uig8Uaxh93OqIBzvOuXbWp/POnPmi7r3av+ofqgGl
Doa9wPZDWRNuXZy1AeZHjBHJk/2t2Pt3enBa7reg4+q7HVPLfbd9t5zfJ86w
cLVwtXC1cHVKuApP3Xv7bn5qvXAy3+nzXjsO9+X912dS47TmLq3nscbVvg97
Iff6AIM3deTUVlVv3BkczqVyVqPzizuPyTtPvVYYy9/FzYuD57Ny1vm6z8Jj
+HP+tTNAnYPmLBj18NUEVhdRbSj1MewRtk/KWnHr5awZMG9i7Ej+7G+Ifh/M
9FnzK+Nb/d36fb/flMFRx7JwtXC1cLVwdUq4Gmz12nr5oR7DcNOy2/Q+67On
8dh9jnLqdqxltb/Dnkd1ANTGUS/u42motuysDedPOZPROcWdT8/cYSV7zHJ1
XPGT1mmf4TTchqH0b8Ne55mvj754x1Z/VYzCudjOBnU+mjNi1MlXK1i9RDWj
1M2wd9j+KWvIraOzlsB8ijElebW/LeKh5T7rWLp++07baL/hofUXrhauFq4W
rk4FV/m0f/3d5y23jt/1fuozpnFXc5HW51izah+HvY32+6uBoy6cWqnqhztT
wzlT+9mLE29vP72XXzq/yYPffdejruZks0M+CWP33XvDxmnadnZp/+E8fhPG
ipm3z3hO24k3DX9yXrYzQ52b5uwY9fPVEFZHUS0p9TTsKbavytpy6+usMTDP
YqxJvu1vjjiZ36V8lZ36ft9ZuFq4WrhauDoVXPVe9h1+Net43/RZch9fnZyj
dTjWptqvYQ+jff1q3aj/piaqOuHOztjPk5oZi84d7v3p9wmT4XNiHVPH1faH
j/V39cFxnq6pvt9x3X/fo7djbtv5o/XDcHGH8sDVTuXn/BnnGb336rSco+0s
UeepOVNGXX21hdVXVGNKnQ17je23subcujtrD8y/GIOSh/tbJH7aTvaddReu
Fq4WrhauTgFX2XPuo3OPnNh7/1q/7+W/lsNPy7Pd8JKNBw+dT9wmPHQ+k9+c
Xtcwku/D4+gttM7klNtXeBjNwGwWTrJHdopjxEHSO+i5Ph+V6423vP62264c
fHKlvG/9LuWG+xfXiHcUf85X8axiBeFr6pfiUZ1/18uH77l+s0fLnU/7Kjfc
8VWTXHyg2Hb6CcXL83s4ajvhcHpjD8exHffUrWWfOJNzkJ0F6TwsZ4Koi642
rPp4agSpk2CvqP0y1gzv66ZmHePnxhDkUWKpfXXOYWThauFq4Wrh6lRw5f1x
f980Du99du6/3pe9X3sf9/7ufV8+sOcJwx/kFfINeYj8RN4in5HnyH/kRfIl
eVTrxbOOueFrvEs+Jk+Tv8nr9nxveKD8UN4on5Rn7vXSh5fKV+Wxe/2E4b3y
YXmy/FleLd+Wh4sff6MWrhauFq4Wrk4JV7POPo468VXjrsZjjdMavzWua7zX
OLDx4X3ceOLJxpmNPxuXvhyvvhbHNr5t3Nt4uHFy4+fG1bsORmvBOLzxeeP2
xvON8xv/Ny9gvmCfR5j8gnkH8xHmKfZaspPXMN9hHsT8iHkT8ynmWcy/iBN/
i+TnC1cLVwtXC1engivvm37XehvrcKzPsW7Heh7rfKz/sS7IeiHriKwvsu7I
eiTrlKxfsq7JeifroKyPsm7KeirrrPJj+w/D1mVZr2Udl/Vd1n1ZD2ad2L5+
bOrKrDezDs36NOvWrGezzs36N+virJezjs76Ouvu9vV485sjDzc2tXC1cLVw
tXB1KrjyWdL7qdu0L8N+jX0fx3AD+z7sB7FPZD8bZfpK7DexD8X+FPtW7Gex
z8X+F/ti7Jexj8b+GvtuOpdep2dn+nTs37Gvx34f+4DsD9r3DdlPNH1G9h/Z
l2S/kn1M+Wv6m+x7sh/KPin7p+yrst9Kv/vbsq/LmhiUeZmFq4WrhauFq1PB
lfFVnzG9z7ov+/ft67ffXx0A9QHUDVBPQJ0B9QfUJVCvQB0D9Q3UPVAPQZ0E
9RPUVVBvQR2GbNB+wpy6Deo5qPOg/oO6EOpFqCOhvoS6E+pRqFOhfoW6Fupd
qIOhPkYYGN0M9TTU2dC//obIq401mX+xJmHhauFq4Wrh6lRwZc7RuKvPnvv7
7xyDOm/qv6kL90704tSRU19O3Tn16NSpU79OXTv17tTBUx9P3Tz19NTZU39P
Xb72G46LO6jjp76fun/qAaoTqH6guoLqDapDqD6huoXqGapzqP6huojqJaqj
qL6ifvS3Qv5sTMk8i7UH1uMtXC1cLVwtXJ0KrqzDMRdpPNZnUu/LHpt64OqE
qx+urnj7HL1xdcjVJ+/4R7dcPXN1ztU/VxddvXR11NVXV3ddPfa3odPefmf2
pbru6r2Hk7ku1IcfXM0clsGbOvPZYa67lqeOS716dezVt1f3Xj389jt5cPXz
1dXXX/4myJONHZlPscbAujtr0ReuFq4WrhauTgVX1qZan2OO0jitz6rer/ez
S2ZuVNuceVLOmcqGM3+q7UztsfOqnGPlfCvnXjkPyzlZzs9yrpbztpzD5Xwu
53Zl+7Rr42/O+XL+V+cyc8GcF+YcMeeLOXfMeWTZduaUOb/MuWbOO3MOWnae
+Wj7Oc7Oshy/eO3v57INzs2bWEtgfZ015/ZhLVwtXC1cLVydCq7s19jXrE7d
jrlL47c+w+7nds25OF/YucPOI3ZOcbadOmTnGjvv2DnIzkd2brLzlJ2z7Pxl
5zI7r9k5zvHO2Ydzn50H7Zxo50c7V9p5086hdj61c6udZ51NplbZ+dfZefp9
Wmdy2c7R1v5e4/JeY0HmR6wZsI7O2nL7rexBXrhauFq4Wrg6FVzttYOmj8Na
1n09z+Q0jev6bOv93XNseXDYNls3vjFxhvhK++28smc+yO/5N1ylhxCu8l04
mn6VfN0+fuEjH9k+z85pKhQP6LP4VJwrbNSvc9+9N5wd7LBxqLhUGItntU5Y
q3brwOHOikPk344xTpWdW46DxX/igXGzbDSxiLDUeXQsU681MZNsVl1Z2+n4
O6fsEM8Ku/G07DRzu0a/Ir9kk+IAcz2OlnvLYXH4avvTzvtrefitMR/zINYG
WC9nDbl9VfYaq7+xcLVwtXC1cHUquLKv395G+zuscbXOx1yn8V6feb3ve+6d
49QTt53OOzvnl+xX/W6f56982T7DyOi4ts2+l83CZ1jL93GwfBem4ljFJOI3
8Z2jht6Lt5h7+Cm+Xj1W+g3h7F133HFWbXJ1zfGxXtvX4CruGfcp19xy8fV4
XtiIH4WliUWE4Wzad8tfZ7/WbzuTy443ZpP8PLVnXaOdT7jKP8OLss9o9MXT
2t9wrZn7PPb0mpXHGtsx32ENgHVx1orbP2VPsTobak8tXC1cLVwtXJ0KrtS6
sd/fnkf7Pqx9tf7HHKhxYJ+F5QPapHt0OJoZW63bMXd+cZPi6n1eTD3stY1e
O8/sEm7aTrnmYuxhqPxx9cTFDspJx5/ye9sqlt8xVKs13Co+Fe8Ka3GutB5a
zjZhqfh+9phYf8thvphGz9xh5oDLDSc9o/ed4WDtt/OKy8THeq4ffpXNu/6y
YRjuuIZr9f70sXbOc/2qfTR289qUrxrDMa9hrt/6N2vC7ZOyd1g9jb3G1OQO
Fq4WrhauFq5OBVfqv6mBow7Avhdy+kGsibUuyNyo8eH9M/LwBG2VH/NLyx1X
Ns5ubavn++Lb04NaHKAYQjVX5YjDR7Hy6qniScXWq6+qF/XAd87qU22dvlMd
chwoHhbOwmPba9vH2cy3bxqAg6Uw07XSun03G4SrMJx/O94+C2Mdc+tnx+Fj
YaZ1OpfsH4fs72ycPfLd9PKEsbhK64SB/BsOw4n28RqUlxqrMX+xz+lPnZu1
3/ZD2SOsboZaUuorqjm8cLVwtXC1cHUquFITVV04tXH2c5anR9I+kX2t7NQL
mTM1buyzs/xBG7adjjH79P2e1/NxMfXqhONH1VZ98M5HXO23KY6QT8Nd+eVq
jsNJfTfVKR/7Tx92Fp9KsygOFQanZ6fvz/ILbrnlvGuiHp3ezzZhOyzGMSaW
XqzjOBf6jds6LRd7z/6dX7wluxUz6O9wmE+yT7w1X+e7/DDvdy2HlzCkHbzW
5J/GZMxTmLu3ns0ab/ue7AVWH0PNKHUU1RZWb3/hauFq4Wrh6lRwpU64Wql7
vbjhVOoG2Dtp/4g1tNYRmUs1nuwztbxC2+abaoWrB86W+bzlfDy8KCwW/85H
YSNM9Vp++WW33rrlmoc7peGX7vtjb7zxgdjCUze89dnovRenKKdcbKCcd9xm
elG75uJOxe1bJyyV6+76yu9xmDhJ551fs1nXRfVdnV8YLC5yzNe+fYv/d/5h
oX+er9eUPNPYi/kIc/TWrVnLbX+TPb/qYKgNpV6iGsLq6jtrZuFq4WrhauHq
VHDl7Az1w9VQVUdOLR31BOyptK/E2lrri8yxGmf2WVu+oc17rxh6fCr/VX+c
/bN1r8UPsmMc6cCnzp98001bTVWxiLAVt4p/9Rq2wl1aDQeulv77Npe5/w7r
nk28Pd+XX8i3YaJrKAwfe1ofuvky33cNdvzj63QdwmHvDU7CWDmCeFE2KB7f
Pjwvrx35pDEW8w7m4q1Ps2bbPiZ7e9W7UANKXUS1gtXPd6aMc9YWrhauFq4W
rk4FV86T+ngzNTpvtVXVl1NjR50Bey3tN9nX3E7dkblX488+g8tD9EV8J/vn
67DZeXWuPXOHqdbLN/mhnpv77r1hi78Xhz9qMty4xdXLUxevqBY53b/WKwYf
frJXPavZIJy0vc69Z/eOp+V6cPJTz/XtM1/GK8NEz/xTi9X5z7nE2zx+rxF5
o7EU8wvm3K1DszbbfiV7eNW1UOtJ/UM1gdXJd3bMfp7azBhduFq4WrhauDoV
XDlj0TlTztpQb1zNVXXn1N5Rf8AeTPtQrMW1HsmcrHFpn83lJ/qoGHF26/5+
zCW8e3teL9c8OrThIxv2WqyhGEP26TV7HGehPHOzeVyu+rM4SfH2MN9+w1K2
av/VFbdOeOv9zjkctH72m+Psmgyf+dTj9FqQHxozMY9gbt16M2uw7UuyV1f9
CjWd1DlU+1c9fGfEODfNWaLO1164WrhauFq4OhVcOXfY2YvOn3IGhzrkarGq
R6cmj7oE9mban2KNrnVK5mqNV/vMLm/Rd32/dbJ5/osrtH6v5ZvjV9lz+EMx
9uIO4e9g460m+ZivfsgDx/WWrc6qbR/jC1e2uHv+65yKb+fr+Gbn1DN712jf
DVcej5iXBxobMV9gDt26Mmut7T+yJ1edCrWb1DNU41fde2fBOB/NmaHO0e64
yuv3b+Fq4WrhauHqVHCVH+3vGL1xZzLu51JNn6P65Gq0qlOnVo96BfZs2rdi
7a71S+ZwjWP7LC+f0acdU3bsO9mv+HrPzGEsP8VXsl2+ykfFIfJj+rXhv2Ns
Xz3Dd4xhNw6av/JJ101477N4ZNjr+nK/Ylu+ZwzEvMA+Vz71Y9ZU22dk7616
FGo0qVuolq/69s58cQ6as0Gdlz05+vhpeZqusanXWrhauFq4Wrg6BVzFl4ob
zMzfeFH2cE6xsxqdV+XMDnXL1W7d69eNho86BvZy7vtZpqbXuiZzu8a3fcaX
5+jr/u7zfBJfyEf5Lnxks157li6+nS/KvQ+v61ziL20j27Wd8BA/7f3O0+3v
MTy8zliH8X9z4taJWTttP5E9tupOqMWkPqGaverYO9vFeWfOAHUudlibGES/
MWGgY8jO+TefLVwtXC1cLVydCq6Kq0/dVL05o7lX3VG54Gzl/GJnOO7nWE2P
v3rmarqqa6e2j/oG9nja52Ktr/VO5nyNe/vsL/8RA2037MQvijcUj47fPP3m
mzdbZvu+G5+avtSOs+8e8+i3b5h3O2JV/mZMwzj/5dz3tXowa6TtG7KXVn0J
NZfUIVSbV716Z7g41+zyrM9r86/LObSdeGLcNb4dTqpXLkaU/fPXYGDhauFq
4Wrh6lRwFVeZuPrddz3q0myLwVXxgdEqd66xsx2db+WMD3XO1XpV707NH3UP
7P20/8UaYOugzAUbDzcmIC8SG8UDsl9YKNacTbNz++nv4syj45A/XV9MytOM
XRjPN8dt3Ze10PYH2TOrjoTaSuoNqsGrLr2zWpxf5kxP51zn4845TIalcBTn
Ll/S9ds2s3P4ycaHY9l+U/LVwtXC1cLVwtWp4Cpele3bdxiLl4Sl6qZ6Vm/9
iZO3n56120/2dt6xMx+de+XsD/XP1YBVB08tIPUQ7Am1L8baYOujzBEbJzdW
IF8SMz2L5/OepasRPj7rP+TS+2JPPmaMwri9uWzru6x5tg/I3lj1ItRQUldQ
rV31553J4pwyZ3c6z7r9TS4g32abOFT+zM79PpSLCV/5/P77Hr3FlbL3h++5
fsvfLFwtXC1cLVydEq6Kk06PRTiK1xSzrrYqfnXkNJ+3bbvlthnGjr4/1hK3
P+cgOwvSeVjOBFEX/eNpw/Zcr0bQXidhekXtl7Fm2Lopc8fGz40hyKPEUtvr
/eyfreMxvU5sIs4ycYSWj8/rd2y4KE5w2MaV+Er9K+Gl166VzqPjyIeH1/pf
83WxhSutF78Jv/k/3IW/j330MRs2iqHH5zq+ttdr64avI14etOWs20bnE77i
g30e1uNSXQtxr3CSHbNH/s4f+Spc9H5YyAbxqHh3NW7xqPQ4wtOH7v7iDUv9
TlR70HtduwtXC1cLVwtXp4Ir74/eN72fep/1/ut92fu193Hv79735QPyBPnD
TjfvKt+Qh8hP5C3yGXmO/EdeJF+SR4kl35ePydPkb/I6+Z48UH4ob5RPyjPl
n/JS+ao8Vn4r75UPy5Plz/Jq+bY8XH5evCGsZuOFq4WrhauFq1PBlfFS46jG
V427Go81Tmv81riu8d7LceBr8WHjxsaTjTMbfzYufVlX4Voc2/i2cW/j4cbJ
jZ+LGXmU2HN94/bG843zG/83L2C+wDyC+QXzDuYjzFOYvzCvsc93TB7E/Ih5
E/Mp5lnMv5iXMV8TX403ZpOFq4WrhauFq1PBlfUz1tVYb2MdjvU51u1Yz2Od
j/U/1gVdrhe6VkdkfZF1R9YjWadk/ZJ1TdY7WQdlfZR1U2JDvmQMQT4mJt2O
9V3WfVkPZp2Y9WPWlVlvZh3afmbK1K1Zz2adm/Vv1sVZL2cdnfV11t1Zj2ed
nvV74bz4RNtcuFq4WrhauDoVXNlPYZ+F/Rf2ZdivYR+H/R32fdgPYp+I/SP2
ldhvYh+K/Sn2rdjPYp+L/S/2xdgvIwbkRcYKdvHzqzEKeZpYdfv2AdkftNcy
mn4i+4zsP7IvyX4l+5jsb7LvyX4o+6Tsn7Kvyn4r+7Dsz7Jvy36uYu+jSbVw
tXC1cLVwdSq4sr/evnv78e3Tt3/fvn77/dUBUB9A3QD1BNQZUH9AXQL1CtQx
UN9A3QP1ENRJ0NfyH2MCxsnNHRu3N3YhfxPD7le9CHUk1JdQd0I9CnUq1K9Q
10K9C3Uw1MdQN0M9DXU21N9Ql0O9DnU81Pc4XHPbLJPwt3C1cLVwtXB1KrhS
b00dNvXZ1G1Tz02dN/Xf1IVTL04dOfXl1J1Tj06dusv6ddd07dS7UwdPfTx9
Ks/x2d94uDli66bMZRvP38c0hteJbY9HXUH1BvezTqZOTN1C9QzVOVT/UF1E
9RLVUVRfUd1F9RjVaVS/UV1H9R5nJk7rL1wtXC1cLVydCq7U31aXW71udbzV
91b3Wz1wdcLVD1dXXL1xdcjVJ1e3XD1zdc7VP1cXXd/JZ3zGN+5tLtj6KGuG
L/fRXMtxG+c31iHfE/Mep/rz6tKrV6+Ovfr26t6rh69Ovvr56uqrt68Ov/r8
6var56/Ov/r/Ya/342YLVwtXC1cLV6eDq2vzmJzT5Pwm5zo578k5UM6Hcm6U
86ScM+X8KedSOa/KOVbOt3LulfOw9JG8Za9tO/Ftc77WQVkbbL+MNc/WfZn7
Nv5vDEQe6LXg8TunzPllzjVz3plz0JyP5tw056k5Z835a85lc16bc9yc7+bc
N+fB9d3W7/2Fq4WrhauFq1PBlfN5ndvrPF/n/Dr/17nAj2VesHOEnS/8OuYO
O4/YOcXOL3ausfOOnYOsL+QnPrMbxza3a72TNcD2xdgrah/Q5Vroa/Vg5sTN
CxgbkR96jXhezrN2zrXzr52L7bxs52g7X9u5287jdk6387ud6+28b+eAOx88
3pXtwuHC1cLVwtXC1angquXWbbvVmra9MNX+O5f+lUvsfh1G2l6x3OqXO4Zi
rf2b93smbf+de+vkt+IJ2bXlntlb7tizU/vq3hwX6/P+Dp/ZvmPN5/m45/PB
iTaXh+xnX0682hyudU3W+tr/Yk+oOgn2xtofZI20dWLmys0XGDORN3rteL5d
e9m25/piBZ1n/sin8avs8f73fcHm/+zf8ktf8mkbtia20PnHo/JVOEtfoWup
v4s5DJbC7XCwrsFwFX7iZi233fhV+Gh/rVMuPAxl22I3HcPC1cLVwtXC1ang
qvrVjnfu13Gd3m+5+2THXT1q9+3u18V+W7+YcefVujOzsnU6/o654+p+3XN9
/uwZvvV61g8PcbaeveNj3eOzabxotCF6ru6+Hz7bpraVb/gMblzaXO2+fmlq
eu1zsfdTPQQ1gtSLsGfWvqF97fTUj5lDN49gLEU+6TWlHbqWs2vYjPPkr67f
fJ0dO8/3vufzNyyEk9aZmEDbyUfZJwxM7L1YwXCn7NZyvzP5sd+Ueb9rL//k
92zUOvXm5I8w2vUYZ+taX7hauFq4Wrg6FVx1POFn7J+/802cpOWOYXCS73qe
7Z6cD7qPh7tqgFonjEzta76Ow3Res810/zrf7NM6nXfcqnPMbuGmYws7/a0N
5RU+axt/NidrnZK1u/az2OOp7oFaQOrjqaGkjoS9tPYTWVNtXZm5dfMLxljk
mV5r2ifOMzXA2b/4QXZuObxllzBTLD3bTmy8bYex+Fe/D/mx35c+y0fDqbqW
41ptN6xm63BW/VVcLbvmu44vjPbbUpyh/S1cLVwtXC1cnQquOoa21303jtHx
dJxtM7z1TJp/83++a3lqWbuvTo9/35061bY/WG07c/yzzvR3xAfiXvm37Wc3
bSV/8JnaOLO5V+uRrNG1b2U/Q3P0DdT8UQdPbVh1BdVWUl/CHlv7jKy1tt7M
nLt5B2Mv8k+vQe02+Bl+27aO2rMPv2rP8DOxhdaJH2XbsBDWsmHXZpy474Sx
+Gv8rPezS3GEbN7vQhhr+2E9jH3g/V+44SOOtXC1cLVwtXB1KriaGtTuj3GY
9tUxt6/Or2NuG91jw0Pf6zzDSfWug7381blMHLj3u7/POXa+3Z/bZpjs/cln
720yPMFnZ+PJ+xzr1B1Zi2t/ij2b6hio7aPe3U4D9qouulq76g2quaTuhL23
9h9Zg20dmrl48xHGZOSlXpvac+wfTro2p5Y4e+bfrsOwMfnittN3w1i8un2H
vb6bHeNYHVvxh36D8le27u94V9/Jxi2HsXC5cLVwtXC1cHUquOoenU87/nDS
82XLbacc49zH2+8xXv6wSzWr+To8xLU69ok59H7+vvMDX3S1v6PY7PQ/eu7y
AZ+RjRubS7W+yJpb+1DszdzrFYyGj7p2ar2qf+5MEPXn1eBVh1AtJvUo7Mm1
L8nabOvTzNGbpzBWI1/1mtXOLbft7DVcOvxkn9Hca51iC12r4aLXbNc2206/
Oe03H2eziTl0jYa97NtyeMuOLS9cLVwtXC1cnQquus92n+xe2zo9e7fv9tt9
8tjL8jlXMTbYm3kW09PRsU3fYvfx1u8+3r5aJ8x5jt73fRY2PmzO1Doia2vt
N7EHU10CtXrUr1PTVZ1zZ384D8uZLOrSq82rPqEaTepU2Ktrv5I129atmbs3
f2EMRx7rtaz9p88024aTWSfbDg7bTjGD9hHG8mP2zadxrfyXbeOgYbHl1uuz
8Na2svfC1cLVwtXC1angamps2l/fbblt1XPR/bT46uQi89c8h058PgyEn96f
2RatP/jxXLy/+8xrHHifG516IWto7Sux11L9ATV51KlTu1U9c2d8OPfKWZDO
KXNWi3r1avaqW6h2k/oV9vDax2Qtt/Vs5vTNa+xjO8Nvvcb1S3ZWh6HliS1k
93yWf3s/jIWFtpN9J/Ye/sJS12E4y48dR3hfuFq4WrhauDoVXPXdPm87rdMz
YxiKC3XfbLtTgxqvaptxmO7l+W76OPJXGAwHHrP3cZ9tjfeaA7UuyFpZ+0fs
qVRnQO0d9ejUaN3rlk/e3PlWznx0DrKzO51f5gwXdezV8lXPUE0ndS3s7bW/
aV/jPXVu5vrNdxjzkfd67euv6bXpd2PqivNTtsoH2TrbZv/81PXb8fV+XK59
F3cIVx1fny9cLVwtXC1cnQqu2mb3w5lT32v39t4LP91TO/6Wu2e3jThY25++
jO7rHpv3a59hjeua67T+x5pY+0TsnVRPQI0ddefUYlWf3JkdzrFytqPzjut5
LZYQ/pxn7UxP55o520V9ezV+1TlU60m9C3t+7Xuy9tv6N2sAzIMYC5IP+5ug
H/sdCAN9lk87jnzZb07fyTe9Fq/J1vGxfJwfOrbs2/4XrhauFq4Wrk4FV73f
a/fH7J//+k7H03I4aHnqarp/hoM4iMfgfdln1X38dnKa1vnsa1+nH8QeSXUD
1NJRX07N1b0OuTVgM6/KGY7ONe78w13xgWINo49bHfFgxznXzvp03pkzX9S9
V/tX/UM1oNTBsBfYfihrwq2LszbA/IgxInmyvxV7/04PTsv9FnRcfbdjarnv
tu+W8/vEGRauFq4WrhauTglX4al7b9/NT60XTuY7fd5rx+G+vP/6TGqc1tyl
9TzWuNr3YS/kXh9g8KaOnNqq6o07g8O5VM5qdH5x5zF556nXCmP5u7h5cfB8
Vs46X/dZeAx/zr92Bqhz0JwFox6+msDqIqoNpT6GPcL2SVkrbr2cNQPmTYwd
yZ/9DdHvg5k+a35lfKu/W7/v95syOOpYFq4WrhauFq5OCVeDrV5bLz/UYxhu
Wnab3md99jQeu89RTt2Otaz2d9jzqA6A2jjqxX08DdWWnbXh/ClnMjqnuPPp
mTusZI9Zro4rftI67TOchtswlP5t2Os88/XRF+/Y6q+KUTgX29mgzkdzRow6
+WoFq5eoZpS6GfYO2z9lDbl1dNYSmE8xpiSv9rdFPLTcZx1L12/faRvtNzy0
/sLVwtXC1cLVqeAqn/avv/u85dbxu95PfcY07mou0voca1bt47C30X5/NXDU
hVMrVf1wZ2o4Z2o/e3Hi7e2n9/JL5zd58LvvetTVnGx2yCdh7L57b9g4TdvO
Lu0/nMdvwlgx8/YZz2k78abhT87Ldmaoc9OcHaN+vhrC6iiqJaWehj3F9lVZ
W259nTUG5lmMNcm3/c0RJ/O7lK+yU9/vOwtXC1cLVwtXp4Kr3su+w69mHe+b
Pkvu46uTc7QOx9pU+zXsYbSvX60b9d/URFUn3NkZ+3lSM2PRucO9P/0+YTJ8
Tqxj6rja/vCx/q4+OM7TNdX3O67773v0dsxtO3+0fhgu7lAeuNqp/Jw/4zyj
916dlnO0nSXqPDVnyqirr7aw+opqTKmzYa+x/VbWnFt3Z+2B+RdjUPJwf4vE
T9vJvrPuwtXC1cLVwtUp4Cp7zn107pETe+9f6/e9/Ndy+Gl5thtesvHgofOJ
24SHzmfym9PrGkbyfXgcvYXWmZxy+woPoxmYzcJJ9shOcYw4SHoHPdfno3K9
8ZbX33bblYNPrpT3rd+l3HD/4hrxjuLP+SqeVawgfE39Ujyq8+96+fA912/2
aLnzaV/lhju+apKLDxTbTj+heHl+D0dtJxxOb+zhOLbjnrq17BNncg6ysyCd
h+VMEHXR1YZVH0+NIHUS7BW1X8aa4X3d1Kxj/NwYgjxKLLWvzjmMLFwtXC1c
LVydCq68P+7vm8bhvc/O/df7svdr7+Pe373vywf2PGH4g7xCviEPkZ/IW+Qz
8hz5j7xIviSPar141jE3fI13ycfkafI3ed2e7w0PlB/KG+WT8sy9XvrwUvmq
PHavnzC8Vz4sT5Y/y6vl2/Jw8eNv1MLVwtXC1cLVKeFq1tnHUSe+atzVeKxx
WuO3xnWN9xoHNj68jxtPPNk4s/Fn49KX49XX4tjGt417Gw83Tm783Lh618Fo
LRiHNz5v3N54vnF+4//mBcwX7PMIk18w72A+wjzFXkt28hrmO8yDmB8xb2I+
xTyL+Rdx4m+R/HzhauFq4Wrh6lRw5X3T71pvYx2O9TnW7VjPY52P9T/WBVkv
ZB2R9UXWHVmPZJ2S9UvWNVnvZB2U9VHWTVlPZZ1Vfmz/Ydi6LOu1rOOyvsu6
L+vBrBPb149NXZn1ZtahWZ9m3Zr1bNa5Wf9mXZz1ctbRWV9n3d2+Hm9+c+Th
xqYWrhauFq4Wrk4FVz5Lej91m/Zl2K+x7+MYbmDfh/0g9onsZ6NMX4n9Jvah
2J9i34r9LPa52P9iX4z9MvbR2F9j303n0uv07Eyfjv079vXY72MfkP1B+74h
+4mmz8j+I/uS7Feyjyl/TX+TfU/2Q9knZf+UfVX2W+l3f1v2dVkTgzIvs3C1
cLVwtXB1KrgyvuozpvdZ92X/vn399vurA6A+gLoB6gmoM6D+gLoE6hWoY6C+
gboH6iGok6B+groK6i2ow5AN2k+YU7dBPQd1HtR/UBdCvQh1JNSXUHdCPQp1
KtSvUNdCvQt1MNTHCAOjm6Gehjob+tffEHm1sSbzL9YkLFwtXC1cLVydCq7M
ORp39dlzf/+dY1DnTf03deHeiV6cOnLqy6k7px6dOnXq16lrp96dOnjq46mb
p56eOnvq76nL137DcXEHdfzU91P3Tz1AdQLVD1RXUL1BdQjVJ1S3UD1DdQ7V
P1QXUb1EdRTVV9SP/lbIn40pmWex9sB6vIWrhauFq4WrU8GVdTjmIo3H+kzq
fdljUw9cnXD1w9UVb5+jN64OufrkHf/olqtnrs65+ufqoquXro66+urqrqvH
/jZ02tvvzL5U112993Ay14X68IOrmcMyeFNnPjvMddfy1HGpV6+Ovfr26t6r
h99+Jw+ufr66+vrL3wR5srEj8ynWGFh3Zy36wtXC1cLVwtWp4MraVOtzzFEa
p/VZ1fv1fnbJzI1qmzNPyjlT2XDmT7WdqT12XpVzrJxv5dwr52E5J8v5Wc7V
ct6Wc7icz+Xcrmyfdm38zTlfzv/qXGYumPPCnCPmfDHnjjmPLNvOnDLnlznX
zHlnzkHLzjMfbT/H2VmW4xev/f1ctsG5eRNrCayvs+bcPqyFq4WrhauFq1PB
lf0a+5rVqdsxd2n81mfY/dyuORfnCzt32HnEzinOtlOH7Fxj5x07B9n5yM5N
dp6yc5adv+xcZuc1O8c53jn7cO6z86CdE+38aOdKO2/aOdTOp3ZutfOss8nU
Kjv/OjtPv0/rTC7bOdra32tc3mssyPyINQPW0Vlbbr+VPcgLVwtXC1cLV6eC
q7120PRxWMu6r+eZnKZxXZ9tvb97ji0PDttm68Y3Js4QX2m/nVf2zAf5Pf+G
q/QQwlW+C0fTr5Kv28cvfOQj2+fZOU2F4gF9Fp+Kc4WN+nXuu/eGs4MdNg4V
lwpj8azWCWvVbh043FlxiPzbMcapsnPLcbD4TzwwbpaNJhYRljqPjmXqtSZm
ks2qK2s7HX/nlB3iWWE3npadZm7X6Ffkl2xSHGCux9FybzksDl9tf9p5fy0P
vzXmYx7E2gDr5awht6/KXmP1NxauFq4WrhauTgVX9vXb22h/hzWu1vmY6zTe
6zOv933PvXOceuK203ln5/yS/arf7fP8lS/bZxgZHde22feyWfgMa/k+Dpbv
wlQcq5hE/Ca+c9TQe/EWcw8/xderx0q/IZy96447zqpNrq45PtZr+xpcxT3j
PuWaWy6+Hs8LG/GjsDSxiDCcTftu+evs1/ptZ3LZ8cZskp+n9qxrtPMJV/ln
eFH2GY2+eFr7G641c5/Hnl6z8lhjO+Y7rAGwLs5acfun7ClWZ0PtqYWrhauF
q4WrU8GVWjf2+9vzaN+Hta/W/5gDNQ7ss7B8QJt0jw5HM2OrdTvmzi9uUly9
z4uph7220WvnmV3CTdsp11yMPQyVP66euNhBOen4U35vW8XyO4ZqtYZbxafi
XWEtzpXWQ8vZJiwV388eE+tvOcwX0+iZO8wccLnhpGf0vjMcrP12XnGZ+FjP
9cOvsnnXXzYMwx3XcK3enz7WznmuX7WPxm5em/JVYzjmNcz1W/9mTbh9UvYO
q6ex15ia3MHC1cLVwtXC1angSv03NXDUAdj3Qk4/iDWx1gWZGzU+vH9GHp6g
rfJjfmm548rG2a1t9XxffHt6UIsDFEOo5qoccfgoVl49VTyp2Hr1VfWiHvjO
WX2qrdN3qkOOA8XDwll4bHtt+zib+fZNA3CwFGa6Vlq372aDcBWG82/H22dh
rGNu/ew4fCzMtE7nkv3jkP2djbNHvptenjAWV2mdMJB/w2E40T5eg/JSYzXm
L/Y5/alzs/bbfih7hNXNUEtKfUU1hxeuFq4WrhauTgVXaqKqC6c2zn7O8vRI
2ieyr5WdeiFzpsaNfXaWP2jDttMxZp++3/N6Pi6mXp1w/Kjaqg/e+Yir/TbF
EfJpuCu/XM1xOKnvpjrlY//pw87iU2kWxaHC4PTs9P1ZfsEtt5x3TdSj0/vZ
JmyHxTjGxNKLdRznQr9xW6flYu/Zv/OLt2S3Ygb9HQ7zSfaJt+brfJcf5v2u
5fAShrSD15r805iMeQpz99azWeNt35O9wOpjqBmljqLawurtL1wtXC1cLVyd
Cq7UCVcrda8XN5xK3QB7J+0fsYbWOiJzqcaTfaaWV2jbfFOtcPXA2TKft5yP
hxeFxeLf+ShshKleyy+/7NZbt1zzcKc0/NJ9f+yNNz4QW3jqhrc+G7334hTl
lIsNlPOO20wvatdc3Km4feuEpXLdXV/5PQ4TJ+m882s267qovqvzC4PFRY75
2rdv8f/OPyz0z/P1mpJnGnsxH2GO3ro1a7ntb7LnVx0MtaHUS1RDWF19Z80s
XC1cLVwtXJ0KrpydoX64GqrqyKmlo56APZX2lVhba32ROVbjzD5ryze0ee8V
Q49P5b/qj7N/tu61+EF2jCMd+NT5k2+6aaupKhYRtuJW8a9ew1a4S6vhwNXS
f9/mMvffYd2zibfn+/IL+TZMdA2F4WNP60M3X+b7rsGOf3ydrkM47L3BSRgr
RxAvygbF49uH5+W1I580xmLewVy89WnWbNvHZG+vehdqQKmLqFaw+vnOlHHO
2sLVwtXC1cLVqeDKeVIfb6ZG5622qvpyauyoM2Cvpf0m+5rbqTsy92r82Wdw
eYi+iO9k/3wdNjuvzrVn7jDVevkmP9Rzc9+9N2zx9+LwR02GG7e4ennq4hXV
Iqf713rF4MNP9qpnNRuEk7bXuffs3vG0XA9Ofuq5vn3my3hlmOiZf2qxOv85
l3ibx+81Im80lmJ+wZy7dWjWZtuvZA+vuhZqPal/qCawOvnOjtnPU5sZowtX
C1cLVwtXp4IrZyw6Z8pZG+qNq7mq7pzaO+oP2INpH4q1uNYjmZM1Lu2zufxE
HxUjzm7d34+5hHdvz+vlmkeHNnxkw16LNRRjyD69Zo/jLJRnbjaPy1V/Ficp
3h7m229Yylbtv7ri1glvvd85h4PWz35znF2T4TOfepxeC/JDYybmEcytW29m
DbZ9Sfbqql+hppM6h2r/qofvjBjnpjlL1PnaC1cLVwtXC1engivnDjt70flT
zuBQh1wtVvXo1ORRl8DeTPtTrNG1TslcrfFqn9nlLfqu77dONs9/cYXW77V8
c/wqew5/KMZe3CH8HWy81SQf89UPeeC43rLVWbXtY3zhyhZ3z3+dU/HtfB3f
7Jx6Zu8a7bvhyuMR8/JAYyPmC8yhW1dmrbX9R/bkqlOhdpN6hmr8qnvvLBjn
ozkz1DnaHVd5/f4tXC1cLVwtXJ0KrvKj/R2jN+5Mxv1cqulzVJ9cjVZ16tTq
Ua/Ank37VqzdtX7JHK5xbJ/l5TP6tGPKjn0n+xVf75k5jOWn+Eq2y1f5qDhE
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
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xuw/ldV3/EotrV3e7etrbXW1t60XmpRc54HbEfbWlvr/S6UttM/MlOw
zLSd6R9cAiICIiIiKiCXoIjc72BIAgJyiRECJCFAgGjVJkhSsGrR9nl/j9/f
eZ2v/OuMz5zFzI/znH32s/Zan/XJ7LX3Xnvtz/h3//lr/uMnXnbZZf/lkw//
9zX3/a/3/q7vuu9//9o/3C//4b5XfMHnX3GPw8cHHv494fCvzz/8xE/dveLl
Lz/5wcf/+d0v3v7vd49+1J/YvefWb9s95clP3v3KL/+n3dOf9rTd9z3mMcvf
+vxTz3727sd+9Ed3b3/b23bf/fCH7x525ZV9f/cDj3vc7vsf+9jdm9/0pt1b
3/KW3cte+tLd//2t39p9zyM+ef/+227b/dAT/uL+2T/5d/ePefSf3L/0Jf94
//KX/ZP9U5781/evuXq3f/wP/Ln9//n1X98ddNj/0BOesPu5N/7zZcyf/Imf
2L3/tvsssn/ujW9cxkqH//Wrv7ro0LhXPvQe+2ddddXuDa9//e5x3/9n9j9/
/fW7ZD3kwZ+wv/aaa3a/9qEPLf367gue//zdXR++/+6Zz/hbu9/+2P9I5smD
H/Sgxfbf/I3/toz1w0984u7QtvQLg5tv+qbD5w+f/Ozr/tm5dvsrR/mOqz7q
qf7apb3iID7iJp7iLP76RX/pR/2r3+WDPJE/ByxOvucRjzgJj+HV8Gp4Nbw6
Hl498eQXbvjqw78bTg7jHP59ysmv/PIvn7zi5fdcvhOWb33Lv9r9zKsv3/3I
k560/P7Qhzxk97Ove92C6Y8/9am7//lLv7Srf/Y+77nPPej1aQc9P2n5ezrW
/33vfe+CabY94Qf/wv4wxu611123e8R3/5F9stL73bfcsnw/O3/m1a9efv/p
5zzn4Nubdo/9vj+9/8Xbb1/6/7/f+Z0Fg/DSRwdb9+H2nltvXXDs+w9/2B/a
JzN+pMtLXvziBcN+vuTFX3iw57IFn36Gx6ndT1wwf9UrX7n733ffvXvN1VfH
rXPt9leO8h1XfdRT/bVLe8VBfMRNPMVZ/PWL/tKP+le/ywd5In8O/91cftD9
8O8+w6vh1fBqeHU0vDr0+9LTf5dd/uNP/RtLvxWvd9z4dYf46BG7YoswS36y
m0u/95GPXGxqng6H9Air1Y/9Layar5/5jGcsn8OvuKG5v5/97Td/4zeWWCX9
m7uvveZei+3FJ9l1iA92d95xxSJj/RlmjVu8Ytyi7773kX9s/6IXvnDBPP8V
K+Sz07jtsxf54bnGDz/9nH+QLifx4IDxySFOWmLP4ogXPP8fnfTTdvsrR/mO
qz7qqf7add7eMxzER9zEU5zFX7/oL/2of/W7fJAn8ie9DrrHr+HV8Gp4Nbw6
Gl6Fz+m8ednussP/+vuh3+XFDMlM/4OcRf/m3ebkPodl+qZPGDXf93vxSOvi
1sPFB6uexSW19b30z7a+V3zRWjebw7Y1+uHvJ+saNh2zKR0O6/WTg48Pvn7U
YvPqs3UtbzyjT8M3HD/4gQ8s+iarNXN/z0/FK2GXrfkoHfLjIW4onjjgdK/L
ix9st79ylO+46qOe6q9d2isO4iNu4inO4q9f9Jd+1L/6XT7IE/nz3J/+h/sf
edJf2f/A4/7sfng1vBpeDa+OhVc/8ay/s3/yj/21ffokY11bFiOEX7KypfGS
2X7q6f7Epy64hEl7xenV/J++rYnTPz2bc/NFurU2LT4Jq/r0nXe9852Hv33i
vr3mdAinvpvMsGwNWxzTeM3n2df3a0tX97dd4xvn6OuPfuQjy9j5pHghHyWv
GKO+/Wwt3f52vkiHw/p+iRdst79ylL/l8KqPeqq/dmmvOIiPuImnOIu/ftFf
+lH/6nf5IE/kz089++/t2x9pv2R4NbwaXg2vjoVXT/rhv7z/7of/4X3z7HN+
6u/vn/bjn7GcX77jxhsPcm5Y4oJih+Q3dmvM/p3GGcse67LW7m+Nn57rXvOd
d9yx2Jmczj/D+GDzYmPzcTbkr/Z6a+s7xQStkcMrW+rX+J1tFuv0e/j2e/I8
83Xfe7v2X+MfORCOcaT4or7tRxff/ODjH3+Jj30nWe0R2G5/5SjfcdVHPc+f
fZ/Zpb3iID7idh7PM5zFX7/oL/2of/W7fJAn8qez7wMf9+1dDK+GV8Or4dWx
8OowR+bv/RN/6C/tO7NsTdz5Y9/te+XydOaaHel2OtffcNJ47cm23i5X5xSf
y5Y94HyQDY3V+jksk7mecWZruBe3pHt4Fg/0/eKVNe9oXf8WF3TWWYzROI1/
WDN39rnJmzo7C3Y/3D0B4yK50X5A48aF7EqvvrtyLptst79ylO+46qOe6q9d
2isO4iNu4nke5zP89Yv+0o/6V7/LB3kifw667A8676/+mZPh1fBqeDW8Ohpe
3X3XA/Y3/Py/2b/p5/7F/s1v+pfL9w46Lvmrfbc1Y/lCh/XqMpe2tlz3itO9
XKTGbw3amWQ5QOHSHB/mxRats+sX7mERLvlizX1ecczOdX3d31Y8y9Nd93Ub
/7Lf/V/nweYGmx/lGfFm//zSXoHxkpxpLZ7PW0tnZz47zaE6a7e/cpTvuOpz
Po/rTH/t0l5xEB9xE09xFn/9or/0o/7V7/JBnsifO++4Yv/z1//r4dXwang1
vDoqXt3+wfstn1/32n+6zI9v+4V/u/Rr3vzRH/mr+2dd9bf3zbudWbbWLN91
zf+tvTm2tWXYNpc3bnaGaXN2umdf8UgYd5ba3J1v6pd9+af8pn5me3vExSvh
He4f/cgDd+t36l/c0Zln+Htfxpxh86Y8O3b/3D0E4yi5lM1xKPxtt79yNvvz
l8ZVH/VUf+3SXnEQH3ETT3EWf/2iv/Tj1r+r3+WDPJE/b3/b1yxt3QkaXg2v
hlfDq2Ph1cRXE19N3D68Gl4Nry4yr2a/ffbb5xxneDW8Gl5dZF5N/tXkX01e
3/BqeDW8usi8mvs4cx9n7nkNr4ZXw6uLzKupzzD1Gabux/BqeDW8usi8mnp9
U69v6kAOr4ZXw6uLzKup3z71238/6rcPr4ZXw6vh1fHwat7zmve85p244dXw
anh1cXmVXtnQ2Ic5c988fIgVlrPE1qzN84d183Ke+PSn/c39o773jy/t3/eY
P7Xo2/idtfadYpH17+XrdC6azcUJyc7m7AuD7m10n6O7HZ1dPvJ7/uiCS3o3
r2dnOJyua5+6jBH+2Z6s8Ciu0BfGJ67Z3cf2bNd8J3OAvRfjXdHz7eZCn8lR
vuOqj3qqv3ZprziIj7iJpziLv37RX/pR/+p3+SBP5E9t/fdS3Di8Gl4Nr4ZX
x8Kr7hSWN1Nu6QGDw7r00xYZ6dT3+/eqV37JEgOlY3ctOlss//QNr//y/TOe
/pnLv7W9O/yvftWX7lvj1ie7W/+GTZ9bs/f5hS/4vCUGaKxyWpvz+3u/Z2/Y
d8+j9X32tD5vvzqcxdw4xLW5+9XbM9w1r8lcX++/eCfUOgm22185yndc9VFP
9dcu7RUH8RE38RRn8dcv+uvj+bE++l0+yBP5U//akjm8Gl4Nr4ZXx8Kra6+5
13KnsPm0Obo5u/Y+V5Om+xVvefNXLnN4eTXdw69/e8bdQaxv7dWoqU86VMMm
LJrjX/bSL1rs/O2PfWxXv+50tF/d3N3au/m8+TtMm/fX2hCd01537b0XHJIp
tsYbrsHdl/as1vwlc3q95+LdT+shWCPIdvsrZ5s7vY6rPuqp/tqlveIgPuIm
nuIs/vpFf+lH/avf5YM8kT/FdvVP/vBqeDW8Gl4dC69ufPvXLv2bR69/61ct
+jWHNm/2uTl71ad44APvv+8yDyfnve/59mWc7iXWJ5uy841v+IrF7tbQt9z8
zZdkvuud37AvVzVb6tMcXYxQrbdwa15v7k7PfhdD4wrX2u4/eyZrnpK5u95n
8Y6ndQ+2tYDW+ni22185yndc9VFP9dcu7RUH8RE38RRn8dcv+ks/6l/9Lh/k
ifx59y3fsnw3nYZXw6vh1fDqWHjVd5//vM9d5sXm0+bN2psr698ZaevQ9E2P
Pj/1KZ++fH7tdV926T5+302Hxm3uXsdKTv3X+bo+rbNrLz5o7m9OT342i5Xx
g2tq95k9ezUfyRxd7614l9P6Btb8sQ7etqbu2m5/5SjfcdVHPdVfu7RXHMRH
3MRzi/OKv37RX/pR/+p3+SBP5E8ce9ELP3+RO7waXg2vhlfHwqs+v+TFX7g/
xALLvNm+aTpf85r90jedm5eveuZnLXo2Vvqn5yEWuDRWa9XGSuc+1976tHFr
D7dDHLHITM/a13NNMTFOcO3sfrJnrOYdmYvr/RTvbFrHwNo+1ruzBqx10W23
v3KU77jqo57qr13aKw7iI27iucV5xV+/6C/9qH/1u3yQJ1v+PO+5n7Pwcng1
vBpeDa+OhVfN0Qc8Fv2T3/p09V191nk8nVd96t+ean3KeU3n5uj2X9c9h9qb
f29733cu2KVr69DwSr62Gw+4Rnbf2LNU84vMufUeinczrVdgDR/r2lnr1frn
vgliu/2Vo3zHVR/1VH/t0l5xEB9xE09xFn/9or/0o/7V7/JBnsif4rfsSNbw
ang1vBpeHQuvbnrXNy75Us3r7c2Wf9O6sT6dWTZvJmcrsz3fd9z4dYv+2ZMt
9U//5tz6t3Z95zu+fumTDVsb13nftbD7w56Zmkdkbq33TbyDaV0Ca/VYv86a
rtY59+0P38Oy3f7KUb7jqo96qr92aa84iI+4iac4i79+0V/6Uf/qd/kgT+RP
8l/5ii/+Pe3Dq+HV8Gp49QeZV+lT/uja3udkvefWb1vm4Be/6AuWmKf3Kso3
7fxx1aH5vbk1PWtPXvrXv3l23cdYbXF+d83rPvD2bHTNFzKH1nsl3rW0/oA1
eaxTZ+1W65n7xofvXvkWpO32V47yHVd91FP9tUt7xUF8xG27t7PiLP76RX9t
/bj6V7/LB3kif26+6ZuWPuk+vBpeDa+GV8fCq2S+4uX3XNpvffe3LvutyWr+
Ldenebr5t/m0eXedQ5vLm3/Tof3f9GnM9FFn53HXtu73egZqXpC5st4f8U6l
dQasvWM9Omu0Wrfctzx838o3H30H2Xb7K0f5jqs+6qn+2qW92xzvFR9xE09x
Fn/9or/0o/7V7/JBnsifzsT7GUeHV8Or4dXw6lh41Tqx9er6Tn0/mx9rS35z
aN/tc3N2+jefdu7Y52Q2r6ub87VrWPd1Pes0/8ecWO+JeHfSegLW2LHunLVY
rU/umx2+Y+Xbjr533O/JSyfb7a8c5Tvu+dqwZ3qqv3ZprziIj7iJpziLv37R
X/pR/+p3+SBP5E8yO5+Ob8Or4dXwanh1LLxq7zQ9Oresf+vYzj/Tp8/16XNz
a/N083vfbR5VB+dl16ru33qmaZ6Pua/eB/GOpHUDrKVjfbnzNXXP6pD7Nofv
VZ1/w/HsXeP6rhwpV2qtj2u7/ZWjfMdVH/VUf+3SXnEQn23O8IqnOIu/ftFf
+lH/6nf5IE/kT/v87e8ne3g1vBpeDa+OiVf1ay5tf7U+6di6svH63N/7mR6O
5fzrmtR9Ws8uzefZ5jav9z68C2l9AGvmWEfO2qrWG/cNDt+l8q1G3y8uZmoP
u3PgfPOwKz9p8Wn+bt+8fXDb7a8c5Tuu+qin+muX9oqD+IibeIqz+OsX/bX1
4+pf/S4f5In8qU+86vfh1fBqeDW8OiZerX/rZ3K7V/G+937HsobsszKdZ117
uh/rGaV5O+ayer/DO4/WAbA2jvXirKFqXXHf2vD9Kd9k9J3iuFLeVHVWiy3S
J2zjSm9Rtseena3x08N2+ytH+Y6rPuqp/tqlveIgPuImnuIs/vpFf+lH/avf
5YM8kT/xrX/Dq+HV8Gp4dUy8ak3Yv+bh+va5cfyu86lrTPddPYs0P8ecVe9x
eLfR+/7WwLEunLVSrR/umxq+M+Xbi75HXFyzxjeNX3ySP4pX4kx74NkfX1pr
3/Xh+y8xTf603f7KUb7jqo96ntf/zC7tFQfx2eK24inO4q9f9Jd+1L/bOGrl
gzyRP3EwrNJreDW8Gl4Nr46FV/VvHt3Oidu4a11Lur/qmaN5OOamel/DO4ze
69/Wullza62Jap1w387Yvie1vrHou8Nr3fXypfJD4xeTtF/Q+W05T+Hb+r3x
7r7rAct46Xv7B++32JuNtttfOcp3XPVRT/XXLu0VB/HZ4rbiKc7ir1/0l37U
v1u/r79vebLyJ76tXBxeDa+GV8OrY+GVn50fXTO6j+rZovk25qB6L8O7it7f
39ZKWuu8WfvUeuC+keG7Ub6l6PvC3XfpbLh/xRrFHe0/56vW8e0VtMZe85eK
o7K/WOTOO65Y8OhzOufj4g3b7a8c5Tuu+mzf11711y7tFYdtzeEVN/EUZ/HX
L/pLP+pf/S4f5In8KWY72LTIGF4Nr4ZXw6tj4dXEVxNfTdw+vBpeDa8uMq9m
v3322+ccZ3g1vBpeXWReTf7V5F9NXt/wang1vLrovJr7OHMfZ+55Da+GV8Or
i8yrqc8w9Rmm7sfwang1vLqovJp6fVOvb+pADq+GV8Ori8yrqd8+9dvnXYDh
1fBqeHWReTXvec17Xls/zjtxw6vh1fDqIvFq3nee9531o/7V7/JBnsy74cOr
4dXw6th55R1G73GYy2o+j2ea7uu6tnV+18ZsSf/kd06ZHa2Z1/VyuUPN6emQ
zNPxblj8GK6vufrqBefOOxs/uY3TOru44dc+9KHl741bnYPuePa3YpximfzX
PZi7Pnz/kwMOS6xUzJSPi3/qE0fKlTrEOifxKY4cOLScL9tuf+Uo33HVRz3V
X7u0VxzER9zEU5y3/y2vftFf+lH/6nf5IE/kj3UhhlfDq+HV8OpYeOW9fu82
er9jmzO85vl41ul+73bNu8772l77mndbnJDMsGys9n3Lr+3vD3nwJyz9wyn8
V843n/e9MEtmPilXqpikHN18WEzT2r2YpnX/ac2E5yx73PGhPYTypaqjEA9u
vummk3KKywsuLupnOcP1a6/ddvsrR/mOqz7qqf7apb3iID7iJp5bnFf89Yv+
0o/6V7/LB3my5Y+1p4ZXw6vh1fDqGHhlrRvv+3vn0Xsf5r6a/+MZqPvAroWN
B8SkOTr56dzZZeOnc3/vfLX95/7ennT907Gf6dwY+S/c2gtoTztfdh5cDnB7
AZ3pFg8V1ySrversKgdqja2Km4qL4kixUjUU+hxvqp/QT9vtrxzlO676qKf6
a5f2ioP4iJt4bnFe8dcv+ks/bnObV7/LB3myrZW01g8cXg2vhlfDq2PhlfXf
rIFjHQDvQnofxJxY84I8G3V/2DWycYJYlePTXm+/F2u0H52s4ozOeMuDWu+g
tt5vLd8eQGfB+bA98fKe4kF73+VFdW58WOufdC+0Pn2nPOHW/8U96Zmfk5fs
07s0bzw53Sv/lEVOZ8W22185yndc9VFP9dcu7RUH8RE38RRn8d+e6a/+0o/6
V7/LB3kif7Y1dYdXw6vh1fDqGHhlTVTrwlkbx/oA3pH0nsg2V3bNF/LM1H1j
187GD2J43bX3XnRMZvK6B9M6vT3ozoOLa8pxev9t97l076V1/mH9v/invfJy
guND92XK/z29T/rVJ8VH1RRaY6j17kzfXz8/66qrdocYarlH+tGPPPBcu/2V
o3zHVR/1VH/t0l5xEB9xE09xFn/9or/0o/7V7/JBnsgf68wPr4ZXw6vh1bHw
yjrh1kq1Xpw1c6wb4N1J74+YQ2sekWep7ie7pjauENvWwOX+dn8zLPNtn4tr
1jindXX5S8UD+T0f9rNz4c6O2yNfY6Rq6VU3/cCZ391beOzCh/621l1vX6DY
J0603267/ZWjfMdVH/VUf+3SXnEQH3ETT3EWf/2ivz6eH+uj3+WDPJE/vr0y
vBpeDa+GV8fCK9/OsH64NVStI2ctHesJeKfSeyXm1ppf5Bmr+8yutY03xPw0
B/dNS5zSmrm83trDeq1zcJq39Ljim92jH/WoJXeqtXw+LvZpjH7GifxfjYVD
rFNd9aXuev879F24U/31Pp9vP+uvHOU7rvqop/prl/aKg/iIm3iKs/jrF/2l
H/WvfpcP8kT++B7Z8Gp4NbwaXh0Lr3xPyjc1rCtubVXry1ljxzoD3rX0vok5
t+Ydefbq/rNrcOMQfXHlQ++xD//2t09r9Fy//LfSmjsfduZbv77bHZr2DdoH
b9/7tMbCgxbbOxdurPKG21eoXxhUe+gQ25zED9vtrxzlO676qKf6a5f2ioP4
iJt4irP46xf9pR/1r36XD/Jk+57a+kbn8Gp4NbwaXh0Pr87eWPSdKd/asN74
+dqwZ3XnrL1j/QHvYHoPxVxc85E8k3Vf2rW58Yk+ao843JrfT99CvmVZrydz
raVXLYUw7Gd7Ae0NhE8/T/cM7rnoHebtVxeDtGZvnW+7/ZWjfMdVH/VUf+3S
XnEQH3ETT3EWf/2iv/Sj/tXv8kGeyJ/tu9XDq+HV8Gp4dQy88t1h3170/Snf
4LAOubVYrUdnTR7rEng30/sp5uiap+RZrfvVrtmNW/Rd57LtV/d7/itWyGen
cdtnL/LDc40f2ktvfyAeHDBecoyztTiifYV+2m5/5SjfcdVHPdVfu87be4aD
+IibeIqz+OsX/XW+pu6Zf/W7fJAn8ie9Omfv3/BqeDW8Gl4dC6/Ws9TiA98j
9k1G36XybQ7rk1uj1Tp11uqxXoF3Nr23Yu6u+Uue4bqP7VreeEafhm849iZl
+iarNXN/z0/FK2GXrfkoHfJjZ83tHxz6XF78YLv9laN8x1Uf9VR/7dqela84
iI+4iac4i79+0V/6Uf/qd/kgT+RPuc+dWZevNbwaXg2vhlfHwqvOLjtTXN+r
WteWvlPsW42+V+WbHdYtt3ar9eus4WMdA+9yep9lm9O75jV5tuv+tmt84xx9
3dlqY+eT4oV8lLxijPr2s7V0+9v54vR9kpuWeMF2+ytH+VsOr/qop/prl/aK
g/iIm3iKs/jrF/2lH/WvfpcP8kT+lIfV/kj7JcOr4dXwanh1LLwq37T7iM2z
5ZKW29r5ZXk63ekoLvD9Yt9w9B0r3/Kwnrk1Xa1rZ20f6xt4x9N7Lub6mu/k
ma/73tu1/xr/yIFwjCPFF/VtP7r4prdLVj72nWS1R2C7/ZWjfMdVH/U8f/Z9
Zpf2ioP4iNt5PM9wFn/9or/04/m3Ps/8Lh/kifzp7Hut8zC8Gl4Nr4ZXx8Kr
3qnovkd3CzuzbE3c+WPf7Xvl8nTmmh3p5rvGvu3o+1a+8WGdc2u9Wu/Omj/W
PfDup/dfzucAmzd1dhbsfrh7AsZFcqP9gMaNC9mVXn135Vw22W5/5SjfcdVH
PdVfu7RXHMRH3MTzPM5n+OsX/aUf9a9+lw/yRP4cdFnuuHanZ3g1vBpeDa+O
hVd33/WA5W5h9/K7y9H31hoAfbc1Y/lCh/XqMpe2tlz3in3v2DcffffKtz+s
f24NWOvgWQvIegjeCfVejLnB5kd5RrzZP7+0V2C8JGdai681FbIzn53mUJ21
2185yndc9Tmfx3Wmv3ZprzhsayituImnOIu/ftFf+lH/6nf5IE/kz513XLHc
CxpeDa+GV8OrY+LV7R+83/K52m/Nj9WyqV/zZvfsq03TvNuZZWvN8l3X/N/a
m2NbW/oOsm9B+h6Wb4JYF31bG3atj2eNIOskeFfU+zLmDJs35dmx++fuIRhH
yaVsjkPhb7v9lbPZn780rvqop/prl/aKg/iIm3iKs/jrF/2lH7f+Xf0uH+SJ
/Kn2UW3dCRpeDa+GV8OrY+HVxFcTX03cPrwaXg2vLjKvZr999tvnHGd4Nbwa
Xl1kXk3+1eRfTV7f8Gp4Nby6yLya+zhzH2fueQ2vhlfDq4vMq6nPMPUZpu7H
8Gp4Nby6yLyaen1Tr2/qQA6vhlfDq4vMq6nfPvXbfz/qtw+vhlfDq+HV8fBq
3vOa97zmnbjh1fBqeHVxeTXvO8/7zvNu+PBqeDW8usi86k5heTPllh4wOKxL
P22RkU59v3+veuWXLDFQOnbXorPF8k/f8Pov3z/j6Z+5/Fvbu8P/6ld96b41
bn2yu/Vv2PS5NXufX/iCz1tigMYqp7U5v7/3e/aGffc8Wt9nT+vz9qvDWcyN
Q1ybu1+9PcNd85rM9fX+i3dCrZNgu/2Vo3zHVR/1VH/t0l5xEB9xE09xFn/9
or8+nh/ro9/lgzyRP/WvLZnDq+HV8Gp4dSy8uvaaey13CptPm6Obs2vvczVp
ul/xljd/5TKHl1fTPfz6t2fcHcT61l6NmvqkQzVswqI5/mUv/aLFzt/+2Md2
9etOR/vVzd2tvZvPm7/DtHl/rQ3ROe111957wSGZYmu84RrcfWnPas1fMqfX
ey7e/bQegjWCbLe/cra50+u46qOe6q9d2isO4iNu4inO4q9f9Jd+1L/6XT7I
E/lTbFf/5A+vhlfDq+HVsfDqxrd/7dK/efT6t37Vol9zaPNmn5uzV32KBz7w
/vsu83By3vueb1/G6V5ifbIpO9/4hq9Y7G4NfcvN33xJ5rve+Q37clWzpT7N
0cUI1XoLt+b15u707HcxNK5wre3+s2ey5imZu+t9Fu94WvdgWwtorY9nu/2V
o3zHVR/1VH/t0l5xEB9xE09xFn/9or/0o/7V7/JBnsifd9/yLct302l4Nbwa
Xg2vjoVXfff5z/vcZV5sPm3erL25sv6dkbYOTd/06PNTn/Lpy+fXXvdll+7j
9910aNzm7nWs5NR/na/r0zq79uKD5v7m9ORns1gZP7imdp/Zs1fzkczR9d6K
dzmtb2DNH+vgbWvqru32V47yHVd91FP9tUt7xUF8xE08tziv+OsX/aUf9a9+
lw/yRP7EsRe98PMXucOr4dXwanh1LLzq80te/IX7QyywzJvtm6bzNa/ZL33T
uXn5qmd+1qJnY6V/eh5igUtjtVZtrHTuc+2tTxu39nA7xBGLzPSsfT3XFBPj
BNfO7id7xmrekbm43k/xzqZ1DKztY707a8BaF912+ytH+Y6rPuqp/tqlveIg
PuImnlucV/z1i/7Sj/pXv8sHebLlz/Oe+zkLL4dXw6vh1fDqWHjVHH3AY9E/
+a1PV9/VZ53H03nVp/7tqdannNd0bo5u/3Xdc6i9+fe2933ngl26tg4Nr+Rr
u/GAa2T3jT1LNb/InFvvoXg303oF1vCxrp21Xq1/7psgtttfOcp3XPVRT/XX
Lu0VB/ERN/EUZ/HXL/pLP+pf/S4f5In8KX7LjmQNr4ZXw6vh1bHw6qZ3feOS
L9W83t5s+TetG+vTmWXzZnK2MtvzfceNX7fonz3ZUv/0b86tf2vXd77j65c+
2bC1cZ33XQu7P+yZqXlE5tZ638Q7mNYlsFaP9eus6Wqdc9/+8D0s2+2vHOU7
rvqop/prl/aKg/iIm3iKs/jrF/2lH/WvfpcP8kT+JP+Vr/ji39M+vBpeDa+G
V3+QeZU+5Y+u7X1O1ntu/bZlDn7xi75giXl6r6J8084fVx2a35tb07P25KV/
/Ztn132M1Rbnd9e87gNvz0bXfCFzaL1X4l1L6w9Yk8c6ddZutZ65b3z47pVv
Qdpuf+Uo33HVRz3VX7u0VxzER9y2ezsrzuKvX/TX1o+rf/W7fJAn8ufmm75p
6ZPuw6vh1fBqeHUsvErmK15+z6X91nd/67Lfmqzm33J9mqebf5tPm3fXObS5
vPk3Hdr/TZ/GTB91dh53bet+r2eg5gWZK+v9Ee9UWmfA2jvWo7NGq3XLfcvD
961889F3kG23v3KU77jqo57qr13au83xXvERN/EUZ/HXL/pLP+pf/S4f5In8
6Uy8n3F0eDW8Gl4Nr46FV60TW6+u79T3s/mxtuQ3h/bdPjdnp3/zaeeOfU5m
87q6OV+7hnVf17NO83/MifWeiHcnrSdgjR3rzlmL1frkvtnhO1a+7eh7x/2e
vHSy3f7KUb7jnq8Ne6an+muX9oqD+IibeIqz+OsX/aUf9a9+lw/yRP4ks/Pp
+Da8Gl4Nr4ZXx8Kr9k7To3PL+reO7fwzffpcnz43tzZPN7/33eZRdXBedq3q
/q1nmub5mPvqfRDvSFo3wFo61pc7X1P3rA65b3P4XtX5NxzP3jWu78qRcqXW
+ri22185yndc9VFP9dcu7RUH8dnmDK94irP46xf9pR/1r36XD/JE/rTP3/5+
sodXw6vh1fDqmHhVv+bS9lfrk46tKxuvz/29n+nhWM6/rkndp/Xs0nyebW7z
eu/Du5DWB7BmjnXkrK1qvXHf4PBdKt9q9P3iYqb2sDsHzjcPu/KTFp/m7/bN
2we33f7KUb7jqo96qr92aa84iI+4iac4i79+0V9bP67+1e/yQZ7In/rEq34f
Xg2vhlfDq2Pi1fq3fia3exXve+93LGvIPivTeda1p/uxnlGat2Muq/c7vPNo
HQBr41gvzhqq1hX3rQ3fn/JNRt8pjivlTVVntdgifcI2rvQWZXvs2dkaPz1s
t79ylO+46qOe6q9d2isO4iNu4inO4q9f9Jd+1L/6XT7IE/kT3/o3vBpeDa+G
V8fEq9aE/Wserm+fG8fvOp+6xnTf1bNI83PMWfUeh3cbve9vDRzrwlkr1frh
vqnhO1O+veh7xMU1a3zT+MUn+aN4Jc60B5798aW19l0fvv8S0+RP2+2vHOU7
rvqo53n9z+zSXnEQny1uK57iLP76RX/pR/27jaNWPsgT+RMHwyq9hlfDq+HV
8OpYeFX/5tHtnLiNu9a1pPurnjmah2Nuqvc1vMPovf5trZs1t9aaqNYJ9+2M
7XtS6xuLvju81l0vXyo/NH4xSfsFnd+W8xS+rd8b7+67HrCMl763f/B+i73Z
aLv9laN8x1Uf9VR/7dJecRCfLW4rnuIs/vpFf+lH/bv1+/r7licrf+LbysXh
1fBqeDW8OhZe+dn50TWj+6ieLZpvYw6q9zK8q+j9/W2tpLXOm7VPrQfuGxm+
G+Vbir4v3H2Xzob7V6xR3NH+c75qHd9eQWvsNX+pOCr7i0XuvOOKBY8+p3M+
Lt6w3f7KUb7jqs/2fe1Vf+3SXnHY1hxecRNPcRZ//aK/9KP+1e/yQZ7In2K2
g02LjOHV8Gp4Nbw6Fl5NfDXx1cTtw6vh1fDqIvNq9ttnv33OcYZXw6vh1UXm
1eRfTf7V5PUNr4ZXw6uLzqu5jzP3ceae1/BqeDW8usi8mvoMU59h6n4Mr4ZX
w6uLyqup1zf1+qYO5PBqeDW8usi8mvrtU7993gUYXg2vhlcXmVfznte857X1
47wTN7waXg2vLhKv5n3ned9ZP+pf/S4f5Mm8Gz68Gl4Nr46dV95h9B6Huazm
83im6b6ua1vnd23MlvRPfueU2dGaeV0vlzvUnJ4OyTwd74bFj+H6mquvXnDu
vLPxk9s4rbOLG37tQx9a/t641Tnojmd/K8Yplsl/3YO568P3PzngsMRKxUz5
uPinPnGkXKlDrHMSn+LIgUPL+bLt9leO8h1XfdRT/bVLe8VBfMRNPMV5+9/y
6hf9pR/1r36XD/JE/lgXYng1vBpeDa+OhVfe6/duo/c7tjnDa56PZ53u927X
vOu8r+21r3m3xQnJDMvGat+3/Nr+/pAHf8LSP5zCf+V883nfC7Nk5pNypYpJ
ytHNh8U0rd2LaVr3n9ZMeM6yxx0f2kMoX6o6CvHg5ptuOimnuLzg4qJ+ljNc
v/babbe/cpTvuOqjnuqvXdorDuIjbuK5xXnFX7/oL/2of/W7fJAnW/5Ye2p4
NbwaXg2vjoFX1rrxvr93Hr33Ye6r+T+egboP7FrYeEBMmqOTn86dXTZ+Ovf3
zlfbf+7v7UnXPx37mc6Nkf/Crb2A9rTzZefB5QC3F9CZbvFQcU2y2qvOrnKg
1tiquKm4KI4UK1VDoc/xpvoJ/bTd/spRvuOqj3qqv3ZprziIj7iJ5xbnFX/9
or/04za3efW7fJAn21pJa/3A4dXwang1vDoWXln/zRo41gHwLqT3QcyJNS/I
s1H3h10jGyeIVTk+7fX2e7FG+9HJKs7ojLc8qPUOauv91vLtAXQWnA/bEy/v
KR60911eVOfGh7X+SfdC69N3yhNu/V/ck575OXnJPr1L88aT073yT1nkdFZs
u/2Vo3zHVR/1VH/t0l5xEB9xE09xFv/tmf7qL/2of/W7fJAn8mdbU3d4Nbwa
Xg2vjoFX1kS1Lpy1cawP4B1J74lsc2XXfCHPTN03du1s/CCG111770XHZCav
ezCt09uD7jy4uKYcp/ffdp9L915a5x/W/4t/2isvJzg+dF+m/N/T+6RffVJ8
VE2hNYZa7870/fXzs666aneIoZZ7pB/9yAPPtdtfOcp3XPVRT/XXLu0VB/ER
N/EUZ/HXL/pLP+pf/S4f5In8sc788Gp4NbwaXh0Lr6wTbq1U68VZM8e6Ad6d
9P6IObTmEXmW6n6ya2rjCrFtDVzub/c3wzLf9rm4Zo1zWleXv1Q8kN/zYT87
F+7suD3yNUaqll510w+c+d29hccufOhva9319gWKfeJE++222185yndc9VFP
9dcu7RUH8RE38RRn8dcv+uvj+bE++l0+yBP549srw6vh1fBqeHUsvPLtDOuH
W0PVOnLW0rGegHcqvVdibq35RZ6xus/sWtt4Q8xPc3DftMQprZnL6609rNc6
B6d5S48rvtk9+lGPWnKnWsvn42KfxuhnnMj/1Vg4xDrVVV/qrve/Q9+FO9Vf
7/P59rP+ylG+46qPeqq/dmmvOIiPuImnOIu/ftFf+lH/6nf5IE/kj++RDa+G
V8Or4dWx8Mr3pHxTw7ri1la1vpw1dqwz4F1L75uYc2vekWev7j+7BjcO0RdX
PvQe+/Bvf/u0Rs/1y38rrbnzYWe+9eu73aFp36B98Pa9T2ssPGixvXPhxipv
uH2F+oVBtYcOsc1J/LDd/spRvuOqj3qqv3ZprziIj7iJpziLv37RX/pR/+p3
+SBPtu+prW90Dq+GV8Or4dXx8OrsjUXfmfKtDeuNn68Ne1Z3zto71h/wDqb3
UMzFNR/JM1n3pV2bG5/oo/aIw635/fQt5FuW9Xoy11p61VIIw362F9DeQPj0
83TP4J6L3mHefnUxSGv21vm22185yndc9VFP9dcu7RUH8RE38RRn8dcv+ks/
6l/9Lh/kifzZvls9vBpeDa+GV8fAK98d9u1F35/yDQ7rkFuL1Xp01uSxLoF3
M72fYo6ueUqe1bpf7ZrduEXfdS7bfnW/579ihXx2Grd99iI/PNf4ob309gfi
wQHjJcc4W4sj2lfop+32V47yHVd91FP9teu8vWc4iI+4iac4i79+0V/na+qe
+Ve/ywd5In/Sq3P2/g2vhlfDq+HVsfBqPUstPvA9Yt9k9F0q3+awPrk1Wq1T
Z60e6xV4Z9N7K+bumr/kGa772K7ljWf0afiGY29Spm+yWjP39/xUvBJ22ZqP
0iE/dtbc/sGhz+XFD7bbXznKd1z1UU/1167tWfmKg/iIm3iKs/jrF/2lH/Wv
fpcP8kT+lPvcmXX5WsOr4dXwanh1LLzq7LIzxfW9qnVt6TvFvtXoe1W+2WHd
cmu3Wr/OGj7WMfAup/dZtjm9a16TZ7vub7vGN87R152tNnY+KV7IR8krxqhv
P1tLt7+dL07fJ7lpiRdst79ylL/l8KqPeqq/dmmvOIiPuImnOIu/ftFf+lH/
6nf5IE/kT3lY7Y+0XzK8Gl4Nr4ZXx8Kr8k27j9g8Wy5pua2dX5an052O4gLf
L/YNR9+x8i0P65lb09W6dtb2sb6Bdzy952Kur/lOnvm6771d+6/xjxwIxzhS
fFHf9qOLb3q7ZOVj30lWewS22185yndc9VHP82ffZ3ZprziIj7idx/MMZ/HX
L/pLP55/6/PM7/JBnsifzr7XOg/Dq+HV8Gp4dSy86p2K7nt0t7Azy9bEnT/2
3b5XLk9nrtmRbr5r7NuOvm/lGx/WObfWq/XurPlj3QPvfnr/5XwOsHlTZ2fB
7oe7J2BcJDfaD2jcuJBd6dV3V85lk+32V47yHVd91FP9tUt7xUF8xE08z+N8
hr9+0V/6Uf/qd/kgT+TPQZfljmt3eoZXw6vh1fDqWHh1910PWO4Wdi+/uxx9
b60B0HdbM5YvdFivLnNpa8t1r9j3jn3z0XevfPvD+ufWgLUOnrWArIfgnVDv
xZgbbH6UZ8Sb/fNLewXGS3KmtfhaUyE789lpDtVZu/2Vo3zHVZ/zeVxn+muX
9orDtobSipt4irP46xf9pR/1r36XD/JE/tx5xxXLvaDh1fBqeDW8OiZe3f7B
+y2fq/3W/Fgtm/o1b3bPvto0zbudWbbWLN91zf+tvTm2taXvIPsWpO9h+SaI
ddG3tWHX+njWCLJOgndFvS9jzrB5U54du3/uHoJxlFzK5jgU/rbbXzmb/flL
46qPeqq/dmmvOIiPuImnOIu/ftFf+nHr39Xv8kGeyJ9qH9XWnaDh1fBqeDW8
OhZeTXw18dXE7cOr4dXw6iLzavbbZ799znGGV8Or4dVF5tXkX03+1eT1Da+G
V8Ori8yruY8z93Hmntfwang1vLrIvJr6DFOfYep+DK+GV8Ori8yrqdc39fqm
DuTwang1vLrIvJr67VO//fejfvvwang1vBpeHQuv/j+vSacF
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3VmwNWd53XFiOw6ZnXkeyEiGgsTO4BT6zsYZyWxwQkJVqDKQuHJBVYLj
qiRVuUDMYhTzaEBikgAjMU8CMRnEJEAGLAgQkGSMHewgBTvYwU72vw/9nd/Z
JW9fd9VDlTj726d37+73XX169XrWs967Pfg/3O+Hvu0ud7nLf7rr/v/u96D/
/H0//MMP+q8/8J3949896KHf890P/fb9yx/Z//es/X+9fve77r277HF33f3M
V75y8v4f/3u7y5/yO3f/5xd/8eQTH//+3bOf9ft3j7j0N+w+/rF/vnvOs//A
8vqGD/yD3TOf8Xt3/+9Xf/Xkox/5J7sXv+hP7J74hN+6u/Gj/3T3spf+md0z
nv57djf/5L/avf5137274sV/cvfhD/2j5edTL/+u3QdvuM/y+76v/T/rmb9v
+WzbP/c5f3D3lCf/jmWbpz/tdy/vX//Ok90THv9bdo977G/avfBH/9juJ266
6eQnP/3pk1e98i/u/tfP//zJpQ+/y+5Rj/z23Ste/vKTD7z//SdPe+rv2n3s
xhtPOv6O9d3vetdJ2731LW85efSjHnXy2muvPbn9a//xZH+cJ7/yzf928sEb
brhw6cMffmF/Pie/9I3/cvKlL/7gyXOf85z9fh++bPeiF77w5E1v/Ou7//GF
L5y88Q1vOHnbW//W7tZbbln211j9yje/uRxPrx/9qO/Y/e877jh585v+xnJs
P3XbbX3P7qMf+ch+LD++bNM5df7rufzcV7964vH/z5/92ZMffcELlv3vj205
5pdceeXJ1VddtRzb05/2tJNnP+tZ+9/d5+QpT37ySfvqXJuPt7z5b+5e9MI/
vozZK6/+C7snP+m37zr2xvpLX/ziSXPZsbz5TW86+b+//Mv77/mj+/1/x3K+
17zmNcu5tq++q+/o+H/s1a9eXv/3z352Of+265hf/7rXLf/ufPfzerKf3+V4
9vOxjO3zn/e8k8HV4GpwNbjaCq5ee+1f2f3C17++nEfn3pz+0je+cfLJn/iB
Za4f8+jfuPv0p/7lcsyPv+w378fjfruXXPmnluNu+8aoYw9vjWP4EWM//eUf
2jUfYSEcdn7t5wPv//vLODc3n/rkv7j4ft+7P+cFcx/64D9c9td39V5j/+Pv
e99JmG0MHvmIbzs3R0964m/bNW6f/9znlnFsPDr+xuMzN//rZc4aj+arn298
w19bxuLzn/s3y89w9ta3fO8y1k+9/PKTt7/tbSdveP337D71yU8uYxzm+96w
1LXW93c9tk146/3Oublp+zC2HucrXv7nFnw2px6n10LXapgKB13fzW3XVOfR
/j5z883L3D72MY85ecd11y1jER76fcfx3ve8Z9k+XIehxrBzfuQjHnHSd4ul
zjN8tr/20/E0Vu33ZS996YKZcPxzX33o8l2NWddir0+vx7ss1+L+78PJZY97
3PLdz3zGM5Zrt/MYXA2uBleDq63g6j3v/r5d59m8NA7d7zvf5jSMNe/N9Yqf
FVed936udq977V9dfifG5F1xp5e/7M8u++qzz3/eH1740ruu3y2YbTze996/
s3vsY75zOYaP3fjPFkzFq8LbC57/RxZ8hqXbv/a1k5/+8peX8eoev/Kclbc4
d32+bRrzzqf7f9v38+qr7r6MUeP7U7f924XD/Nir//J+nL5xIfxd8eIXX9jz
qwv762rhn6fHdeMyJu27+X7HdZcs49T8dU7Xv/Ody5jv97OcU9fqq1/1l5bP
hiuPR8zLA9tXc9m/m9vmtJ/78dzP3V2Xf++PZ8FGx9+87o9jOf7+Lrzqla/s
HJZj7d9dj73XPsKtPEos9V7fG57bttcdX5gMT13Pe454YX9cy/g84fGPXzhU
13Nj2PXX3PTv5qe/R4OrwdXganC1FVz1XBoWGqvmOoy1zTvfcWHhOz37xiua
y8YnrnXVK/78ojWIMXmXWkSv4xCdS5wqLaExX/HQd/W6cT/VBL53l37QnMXT
wkvnHp9pnx1TWI7PtI3P8vIZ57Rjahz7TGPWc/HPfOXfLxhrnuIrjVNz1Rz1
rNw8xh0ak46x72qsOsawm+7SHDQnXTeNZ7+LR4a9xtTvFdvyPTWQJz3xifv5
/rvLdh3j/r0Le/57corvdy3cr2Pbz/+FOOGHP/ShZV99b+cdFhrrtIHmO5z0
2XSU+KIagjxKLMW5wmqf3/OmC1/64g8u19f+eC70X+PSsYSzddv1XLqe+s6O
YXA1uBpcDa62gqt1rhu7XseDwkOcp3lsjj/y4X+8cKfmXozJu9Qi1Oebi7To
jjmMhcHGYdX5O46097bvu8Jz7/dMHcY6ljDT8fR+OI93dQx9l/q2z/jyHOe6
f/f75mS/n2WOmrvwEa76md6evt1cXPf2e13kdZ1L/KV9NE7tJzy89CV/enm/
83T/hxheeZ1ah/p/xxHHi081lz3Pp4WczuP3X+h34ShsxHmag8ajeew7+760
jqde/l0LP2x/cbGwkNagfq6GII8SSx1X2OnYuv563XaNR9/bePZ3qPN+3nP/
0KL3NP7pMoOrwdXganC1FVylhzcHzWv46Rmx7fb3+YuvxZi861CLWPV5a9Zt
n3bRuaS79144CZ9p6WGibfpcWGqfYab9V0sNV51vn+316TP0fZZjWLnZWvNV
9/bZX/4jBtpv2IlfpDekR8dv0o0by8a+z8anOrbquB1nnz2to9+wYN79iFX5
m5qGOv/52vc39hzqLfGYeNfyftuFx362r67DvrfxueLFL17wEtb6fZhIL+nz
1YP7XWPRMYYBa8fq52oI53nUGZbCSvuJJ8Zd+xtSfbv9NubNTdpLulB6z+Bq
cDW4GlxtBVdxleagsbr1lgfvrr3mnsvvxJi8Sy1Cfd6atT6u9rN+dtUTOq+w
2hzFi+Ja4a3569h6HQ777KpLhL1w3Tg1v+uzsj4oa8Hq4WoC8iKxkR7Q+IWF
9OTGtHHue/p3tdXmsn00n24vJuVpahfq+da49X01v3t+ciFM7HG6cKq2W3WA
jrv9rr6s9hePan/heI/9Cx132Gl/jUnn2bZdV/qmrB2rn6shyKPEUvWSsNQ+
89f1Xv6F/bHsbvrEfRd+PbgaXA2uBldbwVUaeWPfd4sxeZdahPq8NWt9XHqb
40vpzv2uenQae+cVrlZdve3DY/fwMNO5xFnSGb41Bs3ZRQyH7bZfedfqDdYf
ZY1YnVytQL4kZnoWb8573s8jfPqsf+9z74s9+Zgahbq9tWz9XXqe7/Kt/+3H
cuFJbZueveKqY1n1h1MN/RR/4SNs914/w3eYC39xu3SOvkvPsL4pa8fq52oI
8iixdMftD1tw1HjfdutDdvkGmtvB1eBqcDW42gqu0mrDVMcTjuI1aaZ5q+JX
p5zm/su+e90+w9jp3J96ifu++M+qIfS8H6bWuV519erIbd/v+v71dZhp3+Fq
xVjP9R1P9/x4RfgJv2kH6/b9zn4ZPcP6pqwdq5+rIcijxFL76/3Gv7GOx/Rz
1SbiLKuO0OvT5/WbF1ykE+z3cUl8ZT9HfXb52bXSeXQczeH+54WwEJ/af+aS
tovfhN/mP9yFv1/4+o8s2EhDj891fO2vn20bvk7xctelZt0+Op/wFR+0X0bP
sL4pa8fq52oI8iixlPeg97p2B1eDq8HV4GoruPL+6H3T+6n3We+/3pe9X3sf
9/7ufV8+IE+QP8gr5BvyEPmJvEU+I8+R/8iL5EvyKLHk+/IxeZr8TV4n35MH
yg/ljfJJeab8U14qX5XHym/lvfJhebL8WV4t35aHy8/9GzW4GlwNrgZXW8GV
WFJHVV9Vd1WPVadVv1XXVe89rwOf6cPqxurJ6szqz+rS53MVznRs9W11b/Vw
dXL1czEjjxJ7bq9ur56vzq/+b13AeoF1BOsL1h2sR1insH5hXeOw3rHWQayP
WDexnmKdxfqLdRkxJj8fXA2uBleDq63gSh4llvTb6MPRn6NvRz+PPh/9P/qC
zvuFznxE+ov0HelH0qekf0lfk34nfVD6o/RNiQ35khqCfExMuh/9Xfq+9IPp
E9M/pq9Mv5k+NP1p+tb0s+lz0/+mL06/nD46/XX67vTjiTF5l9rU4GpwNbga
XG0FV2oI53nUGZbsy7Bfwz4O+zvs+7AfxD4R+0fsK7HfxD4U+1PsW7GfxT4X
+1/si7FfRgzIi9QKDvTzixqFPE2sun/7gOwPOswyWvuJ7DOy/8i+JPuV7GOy
v8m+J/uh7JOyf8q+Kvut7MMSY/IutQjrMoOrwdXganC1FVypn6shyKPEkv37
9vXb728OgPkA5gaYJ2DOgPkD5hKYV2COgfkG5h6Yh2BOgnMt/1ETUCe3dqxu
r3YhfxPDfq95EeZImC9h7oR5FOZUmF9hroV5F+ZgmI9hboZ5GuZsmL8hxuRd
ahHq83oSBleDq8HV4GoruLJ2rH6uhiCPEkvmvJn/Zi6ceXHmyJkvZ+6ceXTm
1J3PrzvLtTPvzhw88/GcU3mOz/7q4daI9U1Zy1bPP9Q0Vl4ntj0ecwXNGzSH
0HxCcwvNMzTn0PxDcxHNSzRH0XxFcxfFmLxLLUJ93pq1frzB1eBqcDW42gqu
9E1ZO1Y/V0OQR4kl88DNCTc/3Fxx88bNITef3Nxy88zNOTf/3Fx0504+4zO+
ure1YP1ReobP99Gc1bjV+dU65Hti3uM0f95cevPqzbE3397ce/Pwzck3P99c
ffP2xZi861CLWPV5a9b6uPSiD64GV4OrwdVWcKVnWN+UtWP1czUEeZRYct2o
VQPuPF1nyvWnXJfK9apcx8r1rVz3yvWwnCN5y2G27apvW/PVB6U32H4ZPc/6
vqx9q/+rgcgDvRY8ftcpc/2y61nXzPXOXAfN9dFcN8311FxnTYzJu9Qi1Oet
Wevj0ttsH9bganA1uBpcbQVX9svoGdY3Ze1Y/VwNQR4lljrG5rDzanx6L0z1
vNy9ufNO3+0eHs76/vSF5iMsxP3yZ3UPb/y/dS0sGn04dy7kJz6zq2Nb29Xv
pAfYvhh7Re0DOu+FPvODWRO3LqA2Ij/0GvG8uv6ak/5773v+9kV+tWrgYakx
DKON9y1fetDCoRrDMBBOwl/XSNusPcUrxuRdahHq89as9XHpbbbfxx7kwdXg
anA1uNoKruwVtV9Gz7C+KWvH6udqCPIosdQc9szeds1128Qjrrzibou+3e/7
d3ynY24MmvPmuOfbFSeOuTzkcO3LVa+2hquvSa+v/S/2hJqTYG+s/UF6pPWJ
WSu3XqBmIm/02vF8w0P6eVwnXtR5xovCT/yq8fjC5x+4jHu6fK+vec09FmyJ
MXmXWoT6/GHNevVx6W2238ceWPM3BleDq8HV4GoruDInwV5R+2X0DOubsnas
fq6GII8SS1dfdfflODuO9N3OI160ZkN03NU0w2mYcGzlGz6Dq0tbqz30L62e
Xvtc7P00D8GMIPMi7Jm1b+jQO736x6yhW0dQS5FPek05Ds17eGi+P/uZByzc
NO9venjj2HmKsUPetWoR6vPWrPVx6W2238ceWHMhzJ4aXA2uBleDq63gyowg
cxLsFbVfRs+wvilrx+rnagjyKLHUsXW+4SZuE3b6t2Mor/BZW/3Zmqw+Jb27
9rPY42nugVlA5uOZoWSOhL209hPpqdZXZm3d+oIaizzTa83xSR/o+uy1GJN3
qUWoz1uz1selt/lwnbW1B9ZcCLOSzF0cXA2uBleDq63gasbq+FiZDTvX4PFr
0MzhwdXganA1uNoKrubZ+fizs7noo8kc12TM2x9cDa4GV4OrreBqaqnHa6mX
sSbI1OiP1+hda2ZwNbgaXA2utoKr8dYe99a6HtZ4to97tl1nbXA1uBpcDa62
gqvptTzea3kpa0FOD+/xHl7XGB1cDa4GV4OrreBqsneOZ++4DvJkOh3PdHJ9
7cHV4GpwNbjaCq4mi/V4FmvXR8cb/ibj93jGb7y0z3bsg6vB1eBqcLUVXM3a
HMfX5mhcV24ya74cX/OlMWz82t/ganA1uBpcbQVXs1bj8bUa40+dV8/Pswbo
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
mbs4uBpcDa4GV1vB1YzV8bEyG3auwePXoJnDg6vB1eBqcLUVXM2z8/FnZ3PR
R5M5rsmYtz+4GlwNrgZXW8HV1FKP11IvY02QqdEfr9G71szganA1uBpcbQVX
46097q11PazxbB/3bLvO2uBqcDW4GlxtBVfTa3m81/JS1oKcHt7jPbyuMTq4
GlwNrgZXW8HVZO8cz95xHeTJdDqe6eT62oOrwdXganC1FVxNFuvxLNauj443
/E3G7/GM33hpn+3YB1eDq8HV4GoruJq1OY6vzdG4rtxk1nw5vuZLY9j4tb/B
1eBqcDW42gquZq3G42s1xp86r56fZw3Q42uAXvf2e13kz4OrwdXganC1FVyl
J6/7S1dI/+1+fJpNcPnCA9yn91mfPdVjrVHq29HLan+HPY/2itovo2dY35S1
Y/VzNQR5lFjKL9T2HWt4W1+n53fNhNeeqdND0lHCUOfYccctw3D14TDXccUr
xJi8Sy1Cfd6atT4uvc32+9gDa++w/VN6yPXR6SWwnnKoKa282r8t4qE56Xs7
1mrNjfeKjXhWcze4GlwNrgZXW8FVunH76Xx7vuyc27ef9X7qM6a6q7VI/Tl6
Vu3jsLfRfn9zEuwVtV9Gz7C+KWvH6udqCPIosXTrLQ/eXXvNPRcMxQm7Znp/
z0l2N33ivrvOL99XOKoune4fxrrGxNh53nWmRajPW7PWx6W32X4fe2DNhTBP
w55i+6rOe8vP/HV6DKyzqDXJt/2bI046134f3punzrPa/OBqcDW4GlxtBVc9
p65ZC27jfdNnSfVVa476cPSmHvZrrHNtX/+dZd3EWQ5yEi72itovo2dY35S1
Y/VzNQR5lFhKp+9aaWxvu/UhS128Y7nj9oct+Or7xZi8Sy1Cfd6atT4uvc32
+9gDay6EWUlmTJmzYa+x/VZ6zvXd6T2w/qIGJQ/3b5H46bvjbf1ucDW4GlwN
rraCq865+3c/O7aOvXt+59h39/r0+fjm5Tm359T95y7pvl2OXcfbT9dBdi1I
18NyTRBz0c2GNR/PjCBzEuwVtV9Gz7C+KWvH6udqCPIosRTu0kUanz4f1hqj
3l97bvJ69T2n3PH+C6bWntkwfHrNnHqqw5/rILsWpOthuSaIuehmw5qPZ0aQ
OQn2itovo2dY35S1Y/VzNQR5lFhqf73f9TK4GlwNrgZXW8GV90fvm95Pvc96
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
XA2uBldbwZUawnkedYYl+zLs17CPw/4O+z7sB7FPxP4R+0rsN7EPxf4U+1bs
Z7HPxf4X+2LslxED8iK1ggP9/KJGIU8Tq+7fPiD7gw6zjNZ+IvuM7D+yL8l+
JfuY7G+y78l+KPuk7J+yr8p+K/uwxJi8Sy3CuszganA1uBpcbQVX6udqCPIo
sWT/vn399vubA2A+gLkB5gmYM2D+gLkE5hWYY2C+gbkH5iGYk+Bcy3/UBNTJ
rR2r26tdyN/EsN9rXoQ5EuZLmDthHoU5FeZXmGth3oU5GOZjmJthnoY5G+Zv
iDF5l1qE+ryehMHV4GpwNbjaCq6sHaufqyHIo8SSOW/mv5kLZ16cOXLmy5k7
Zx6dOXXn8+vOcu3MuzMHz3w851Se47O/erg1Yn1T1rLV8w81jZXXiW2Px1xB
8wYP1zpZfWLmFppnaM6h+YfmIpqXaI6i+YrmLooxeZdahPq8NWv9eIOrwdXg
anC1FVzpm7J2rH6uhiCPEkvmgZsTbn64ueLmjZtDbj65ueXmmZtzbv65uejO
nXzGZ3x1b2vB+qP0DJ/vozmrcavzq3XI98S8x2n+vLn05tWbY2++vbn35uGb
k29+vrn65u2LMXnXoRax6vPWrPVx6UUfXA2uBleDq63g6v8Ds2Rudw==
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.947491875870872*^9, 3.947509753344975*^9, 
  3.9476133543834677`*^9, 3.947666603865996*^9, 3.948071359344096*^9, 
  3.948985570576448*^9, 3.949437480540097*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"63815512-9437-4170-9394-6ce663ca9289"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Wallpaper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"75", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"#", ",", "0", ",", "50"}], "}"}], ",", "1", ",", "lena"}], 
    "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"13", ",", "14", ",", "15", ",", "16", ",", "17"}], 
   "}"}]}]], "Input",
 CellLabel->
  "In[387]:=",ExpressionUUID->"eacd8251-7f00-4500-ba34-1cc01a7fe761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3XnYre1Z1/eILbVqR6udaKuUDnaSaud2P09t7TxZ7TyKrXay2qqtWm2P
JAwiBAwQQsAEA4QwGDIgooYQEEPAACEgYgIvKAFDCKgBMUwB+3zWfn/h+67j
3f27y+Pax7H2Ote97vu6r+F3P+u8zuF3/qJf+5t+1a//oOc85zm/5Wc9/Per
PuK3/fLf/Js/4nf86g/24dd9xG/4Zb/0N/zMB/G3Prxe/PAi/56P/Vn3n/6S
l9z9ue/57++e/7yfcf/RH/VRd3/sK//lu+9+5zvv/vIP/9a7T3/J33H3B77w
C+/+6B/55x5ef+TR577iFXc/+N7/7XL8a978r99/1R/75fevefU/cf8dT/1X
9w/n3//5H/gNF/kv/dBvvn847/4db//PLsfe+xd/0/1T3/5f3r/rz/26+7/4
F37j/Tu/6yPuv/ddv/7yqux8n72//U//p/ff/c5fe/9nvvO/ubRJ9v7mr/7X
7t37oZ/3b/zyR/d/+Ev/mfvXvfbDL8f3+Ru+/t+9/+Nf9a/cv+HL/sVnyG/7
xv/g/mu/5t+4/4o33t1//df9O5c2/sgf/mfv//S3/icfuFY/v/Ir7u//0Jf8
U/d/8pt/1f2X/qF/+v4Lv+AXP+P4n/qW/+j+TX/8X71//R/95++/8a3//uXa
P/jFv/T+W//Uf3z/1W/6Ffdf9vp/4f5b/uSvvtz3Ye4u99T2F73qH7vc1/f6
/M3f9B9e+uA77Xz5G/6lS/va/uLX/ZP3f+AL/5GL/CV/8Jfdv+oP/KOXfpvv
z3vlP3hp9ws+/x++/6yX/8L7t/yJf+syPt+ZP+26Tp+/7i3/9uU797Ve+mlc
+uo657jG+3d+x399/z3f/d9d5tzn7/qzv+ayDub927/tv7jMn3fHzKsxasv4
HHeeuTm4Org6uDq4uhVcveTT/vb7T3jBC+4e5uLuk174N9//3k/8xIv8V37q
p+5+7Ed/+wU/f/yrvuruof275z33OXcv//1/3+Waj/nov/b+h37wf7//qZ/8
vy+YsS7eYaay+8PLD3z//3I5Dhvv/t7/4dJf7w94voxhx4z1z/6Z//Zyrj4b
pzb02XnXsmu8vu0d//nlOsfMqTlx/Vu/4d+74M36WxvzYm2s6ze97Vde5htu
4HjYs77W/BWf8/c/A0va085rX/NLLvexRtZ2su/MtfZe/UX/+GXNrCFsWFPH
4QqO4PSzP+sXXe4F19rUPlw5z8tcf8an/50XGXbMu/G4j/6ZI3322bh8B9Nw
BFOuM1f65B7f/57/+TJHf+Jr/80LjrxcZ86dZz60ubmDF8fM37BjvObeHHu2
tz6w5Dov9zi4Org6uDq4uhVcmTtYehjP3Sd/0t9y/5HPf/7d577iwx5w9Gfv
Hs59wNaPPnLsE17wc+lVjz7u9/z1D3j5Cw/ffcudftKXtOMdln74L/2Wy31h
io613+v3fN//dJHhaNeQYaKy8RkvWV+15Zjxut77cEWeHmZ+piOYp+979/94
acN5lc0xnFg/7ZtvekyxUcxUj6oOVkz63jrDjPbJcGN96Tuf/3n/0KV/cO0c
az9ckacj6dcrP/cfuP/Ml/09F5kO9fs/8++9rPH0MeP1nfta2x2HL/fTnnM8
Z7BMtzV2mPBsm2vnbl71HbbdA370f1gavuDH3wPneSbNp3mBT8fNl7VxT/f2
N+Lg6uDq4Org6lZw5Tf7k174wottwW/585773Auufu8n/o33v/tjPubuQa+4
+8Nf+qUXnYt+VVyxK3i97y//H8/AFRmO4Go2BN+R9UO/jMtnmNMX/dpYh6th
yTnFFdzYz3p3zLnaMB/m2twMi+bFXDqXbG6s88te+iHPwEBxVbsBHcnakWuX
qJ5Wubh1nG71+z7j77qsExx94if8DZfvYOd3f8wHX/S2Bx32nj473cz51sh6
wqXj+qPf+qYPjjvHmN3XnJkL38GD+SEbNwzok/44H67ME50JNrz7bKzOdw6M
mkNz5v7WRjvOI7u3l3t2DbZeB1cHVwdXB1e3gqsXf+rPv+Dq4Xf/7uM/7mdf
bA4P7dz9yW/+5ss7LOk3HcBcVP4rP/X/XOwM3v2mwhIbOxzRl2AJjox5v/Nk
5+qTsfts/Sdvz0veO73Aus8eYd7IxmGsrt8e2cs80Y0+9UV/2/1HfeTPfMaa
VuepHaB28srapYOQ9dm6aq92+9oxqssV22Tt6pu26U6f8sl/66VNa64PztOe
vrEZ0N+c5xr30Ffzqi3jmF9CP7b+cKlvs2t4N07zQZ7vQZtePptDsrFpW5s+
r/+w5Nk079aBbHww5Bzvjg1Xxn9wdXB1cHVwdSu4YtPlS374nb3jg/60F794
Pua7hzm6e9j/3hmjcdA/nvOc515eP/5jv+OCH3hhU6BT+Ux2z9kWzIOX4+7t
OPuEe7tmmNnn6VHa0mfXtM8b3+wTxjz/a9eoOkzl7vdrA6+PeLZlOo3jdBDt
7v3/y69dO3/tHtX9+ixMtqbuC1f8y+ZpNg7zZ2zzETtO99p17u2Y8eiD+5H1
f/e0dtOjfDf7jHNnH5i9wDPus3sNW/NrzDdN9u485+86/fa35ODq4Org6uDq
VnDFtvAFn//5dw/fPwNX3/D1X3/xN4u9Kq5+5H3/5wVX8zf/6I/8tsvL2P/C
n/9fL8eKK/0gw0lx5Rzfw9W1PCwNV7Ot++zV+a9cXHX/Xvt2fb6NiTK+2RCK
K2tPvsbVjrtm17Hb1/ddX0Dl4qq6Yp+X2V/MvXfXwc/im2BFezCs786BMX2a
/QEOd63zHXc+LLnXdNzZDGaf8KotofaE+ZU9M84bzvRlYyEfXB1cHVwdXN0K
rtgZYIcuZQ3YHODKXte+/Cff//477cCCsXqxo8MPmV2BbD7ssWGj8uKKpyPN
7rDf4euX8za3xj/9oXNb3aP78dqr68Otb7fxTo0Hni198VTOo8Pog3uQZ2Nw
HlzojzVt/HPjohsbVl95/QW1n1SfvNYtp+u4Bmbd03Ht6R+86A/s7xxjGvYa
Pzw/xTBRXGlzfuv1f3EB1k1f6cGzr9OvfdY2XFh38sHVwdXB1cHVreAKbsRf
sa1/x1NPPehYH3uRp0PRp/iWfWZXd53rxSBvPrymU+0FU3Sm9W17U32cb3J+
aLoAncbada6qS3R/Xftz5fpqr+OXFt/bnBdrQDcjWwOYnR95tnRtugf86Kdr
hvPt4eHU/cUeN1foSbHT9aHXt17/Qu0t1Tn7DHYO9WO4urZpePlu+DEfixme
jaF42mv6k375u7KYcXEG1nbPiTF7lj73FR92/wkv+LmXuISDq4Org6uDq1vB
Ff3q933GZ1zybb7/Pe+5+5RP/uS7h9/MO7+Z+52GrfmXZyP3MiY4gytzsN/f
yrXF2vcu3rVjr25Qufvo2pbre208UuN1m8PS3JbrfM/G8dLTYGyYgTX3sS7a
nj/Wd3tWtsf2/fb2roPL5tI2t6jx1Y03q8+9cv0RtclUR+0zu9d0OO14Ts3r
4op379lD5sMfVrXHR7J84elNrmej+djf/dd9IA4PZvhrxCrIZf7oj/prDq4O
rg6uDq5uFle//zM/8+7jP+7jnoErY2BT/4kf/7+eIS+m2DpXnt3Y2KzDbAId
Y3HVfXHtxvWlNtao8bfFVXNViqtrfgPYIZtf57Mt6MPilioXV4vt8iqunL+1
MfZxSpRforhq7m1x1XjsxqTVR+/Y1rl2m+KqOm2f6917uPLZGP1dGCfD/ABe
bDOeRzrqiz7l590/77nPuf+xH/3Ru7/0Qz909we/+IvvPvVFL7r73ne964IX
tik4w+/xez72Zx1cHVwdXB1c3Qyu6Bpf9vrXX757+F285KjyQZt3fA0v+Pif
c+mXcbm//SYbKzvD9KvaX7cW63N/07vPrR342jc6PaVxRI2zbe5JczPLV1A+
n8owDWdsDcOva7w7DmfadJ6X/ixGaTZqa7lnZPFVk2cf2Fo+G/9S+Siak9sc
pcZpN367vvv69OvXqJ2num6f/eUSO2at5SfzTXzNm998wcwf+pIvubxe9tKX
Xv7WvPD3/k0XferP/8AP3PFj8M3AFNvCn/7Wb70Tu+DZfXzsFQdXB1cHVwdX
N4Mrxx3DwUcXeZyP+sGXuVp/Zp81zj/xtV97ue8f+8qvvGsf+hvdfWv3s7Xx
1gfauKDGzTaXpLmWswvPRj5egnL1lMsOhpZ3s5gpOhv8upfr6UzT+yq7D6ys
z+NDGj5mB7A+00nNw9YMJoaH+dWXq+u17601DIy/ojm8zWlqXHfj3IbV+Tjm
968fpHahYqx/K7rWYvCsrTg8eU3vePvb7/7c93zPnedWrpP8LefBpL9B2vXs
4rA6uDq4Org6uLoVXP3lH/7hy2+o/SFcfd+73333jW9962Uvqd0/853f+Yw2
e6/+/nZ/Wpvts/k0i6/lfgxjzRlpHmV5Bsq9U2469xxfK53KGD/txb/gGfLO
d0zbcEv3c/9xuQ7zi0dajJQxbv0c35pey74fJxCsiM+eHnTN31sOw3Ibzhet
zXJcNOe3OVCNA29cXGMDGjNQv0ltR9Wl+7dl8d/mT2weXZyO5VkW7wZjzv2c
z/7Qy3cHVwdXB1cHV7eCq2LJXhJPnzisXltcdb9Ze2x9lI3hebbXMNXY1+Jq
vAHl1SnXnDEu7qnyNa7oUy/9fX/3pQ14ZFNhW+DTZrsolsZjNH1wuPI+O3hx
NT1qsVLWAt59D/PWdTrVcnInF1eL5YWB4ko74zws79M1D8bygisXV40bL64a
S+Dz8FX7UnFV3buYocuyxTtuPfE/qQNwcHVwdXB1cHUruKrc38ruH2tfrVxf
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
I37WR42nbUxRfay1M3ffDVfWDRark3RdjANurA07Nj2Nnle5uDKXvmMbL64m
0xO1P4xZX/JXv+lNF1yxUcBP5eKKvOP0DvPy5W94wwVjsEonde3qaFZXLK68
s+3s+R+u6ot3vrVertHitxvX3Vyn4mr6E4w+iVOxvuqdM/79td+aKQdXB1cH
VwdXt4Kr2Vd9Xs7l7LLjhpveRS5Xarnjyp9TPoHmVDbHpHG2jb9tDFJ9srVL
d59eXaVrZ0xbU7YAOH3H29/+iB4oFopNhI+YLH7I+N2PTbxyMaZ98je97W0X
zMAGv+vw5nxzSu+CQ+2wrTgHhowdtqv7VSesncQxa28vX996fe6Nx26cNj1s
eGpub/kuxg88jotxJJY7cdgpl+/4g1czuvKwfnB1cHVwdXB1a7gaz/jyW8Z9
MM7x1s645g8fn2o55ehf4zUoz0D5B5qD2ZyUxuU2Tqm+WjoILNKRiqvu5avb
XK+1c9jh4YLexf6vX/JK2C4ms72bBzZzmDE/dDn6lTnQDrxVZs9gJ3mcW/ph
l/s/7WP4gFy7R/0C9ZXXh9746sZdNxepubrlryivRTkPy4VYnvzy57emjPuu
5lrrkLY+aXkYD64Org6uDq5uBVfL1fCa3YFO0fqJwxoMtbZU62uUb7ycq+Wg
KydPeQmsg5zO5z33uc/I2WzeSuN4G8tU366+WRMY635/tvHt/acLFQ90B/iE
PXjkB2ffeFw/7DHe5KsuxrjnFJPV2WrHuLZvzPddn3jjxBpH3dyi5t6Wj6I8
FeUwdI6X78v3Wz781ohpDbXWFaVrrd7o7AvaqbwYLetwcHVwdXB1cHUruOrL
/MOOe47LbvJ8n7tuNt/ZH1qDw+86fMFT+cnL0VrOuvL2lMeguZzNbXmcs/pt
d1ujxf029qm+4Gt7+OwDwxW7QXWn4kcb3uFHG2T2kepgxZU5MR7tF1f1cc8e
AnuNiy6umkNUXFl/XIriuyuXq7AchuW3L65aE624cr1r8N1X9j0Zns3VamOT
9Y8PZH9zrrF1cHVwdXB1cPX/Z1yZc/eazXd4cq55cc58jzvfOzyZh+XxtD6j
e61GFYytZkd5y8vjWi67ctyV56e8B839bC5M44EbJ9xYqfqOaz+vPaE6VbHU
4z1/WGIrqH2+vuzGOTf+2ZzseOXySJhPx5f7M+7BchKWr7489vpJ74KHyq0H
urgr15of4zHW2eudY31hiT6mfd9pY7lTzoOh5gAdXB1cHVwdXN0Crthfhy/X
LoZ0dlr3Wb7/MAhL81cvdkufvbuWvLpXPtOn2BYWO7SY5tX1KM95eV/LfTc9
hy2+fAjlSWiuaHNnGj/ceKpioNio7lR7QnWwYvI6Xmtxy41nbo5Pc2DLC1G+
iHIJlmNwuVLWqnJrtbwhtcxa39N9V/cT5uhE7BKunY1i9gS6WWVrCw/OM7ew
5H6zw2tj/u/FKR9cHVwdXB1c3RKu9pvo3n7/neMYXOz44l3HXbMYrdkhxmMz
fzXsXNc4Xp3H1X6Erdb+YM+Fab/X5UUvN2y58soddM2fABP0teaWdt2vcbWY
q9oNrLPcWL7p2iUqV2crbnvf4qr8D8VVeQKNX8zauATHM1/++dZkKa5ax7O4
Iovn/rQX/4LLPMOfGIDhEhc73MGRGLHZ8p1TXJH1QRuVV5vt4Org6uDq4OqW
cDXdaXaGYWW6Foz4LV3sjjV3ru8XtzwMmtO9T/dabBe7ujYchyfHhq3WhWxt
rNYKsX50nE964QsflUe9XLL6srUrv1DXtDpP7QC1k9d33Bit+qxrt68do7rc
NbYnt58wNm7A8saXT55tZvHdswOZ49blhBkYgwUv9gft0Y/Y0dnl6aXs7nDG
NiH267Ne/gsvehZMwZK1dD5cmtthDM61h6/R+TAJo8MHjC8WerHRB1cHVwdX
B1e3gCuyedEezNCfvA9X3n0mu969yOPOmb96sVuzUbif8Y+bls6mLcdgxzmO
08G0550tonWTn1lH8qdrabW2SPnVu0bVYbqvr927vuD6iJuz07jixnFVro+7
dv7aPar79Vlo/zsubcgr0ofW2TQfq78J/+McIq++2XgMW9Ma7uhkzoOJxR2/
4emaL+pWsuPDE6yZL/iCHTFy8Ks9upb+aw/GKsPH7PIHVwdXB1cHV7eCq8n6
ZOzmQt/pUrPlTjYG87+YZeMZroZDr9Vsds6wN4wtXmvYg7fV0tgemjwb/Wor
t75k57w6Sffp3b+Xn7Y+38ZBNU64uTPNaW2OT+OcG/dV33d9AZVrJ6mu2Gen
453tRzzbOHzN4daOPmM+rfHyRxeLPH80fC1mCp5W65rO5Z3+Re+CK7nEYrq0
53vHYExusHyhBz33ovvyPRiX71y73Bz+64Org6uDq4OrW8FV8wqXm+83en5l
1zXnUZ6Isfmd9huujcWyjs90Pmu483kxW7NjsNGOe46O5R6+t4+u3PmsjtH6
y92P10ZdH27jmhr327yY5oqW16i8CsVVc2CbB9S46MaG1VdeXNV+Urm6ZZ+v
zk9xNTyZ8+LKnFgf61bZGsIDewMMwwr9Cvb01efiik1jdoniyvewZh6Hk/Ek
HVwdXB1cHVzdAq7G4a0N/V1O/+zvMEeHMRfsrtaRzZZesHhUeCsP7mJwyvNm
7h0zL7PzD2feZ/fvXFWX6P669uf6ZBuz1Dje1vBqzktzQsuTUB6hcgCWB+ma
H2m5sc0Varx046gbS1bfev0LtbdU53zSM9j53N8C82796FJe81XD02wMMOLY
7OrO129zWtn7F37BL76XHwxjk2HUuzHNH3NwdXB1cHVwdUu4Gu+p/jz1NMeb
PmgHhuw/XTts6e+4AMaZM91sHDf7jR0n6rjfNt7Kw+B0g+6Xa0+uj7W+18Yj
NV63OSzN8SzvQXmBypVXDr3yyj6pFkl5k8oj0Vza5hY1vrrxZpXri68/ovaZ
6qh9ZjvP07XMaeWtnb6PK3d5rOad3kUe3pafKqbLfLDPk80hGzx7e+0dB1cH
VwdXB1e3gitjgRm/teZcHI5r6pekX8xnaT6dNz+nOB/nzd/o/uNbvR5Lf+sd
866N7osr15fa+KLG3zYnpTmbzoEX8U7lN2gN6HLilSe2POqtLVLe+PLolkuw
3ErllyjvRHNvm4vUeOzGp9VHX5/FtTx7TnXaPuNdF5hzDC723Bijz/ubUtk1
5gPeYGZxXHBiPulbZLob28PB1cHVwdXB1a3gamvmd7Tt751OBTvOJztntlrj
Ndc+t5/97XbO+G66z63tt77Rxg41ntb7rm/uifs4Tz/KV1AOn3LclQO2vOit
E90aItaMbZ3cWiqVyzNfrt1yDxZX5aMorpqr23ylxm83hu3apz9c1c5TXF3r
wPs70HXUpuPk1Qgz/8XVOBvYmipbGxibDnZwdXB1cHVwdQu4sqbm23fbY/o9
hZPpUtoctqZrkduHYrL71tp16+tsLFDjYxs321yS5lqWf6D8POWsK6drec6H
eeNqTZDvSs2scRNuH09f0cfW2WytsdZeKf98+Xgrl6uwfE3lr2gOb3OaGtfd
eO/GvDUGoH6Q2oWqG/dvRde36+7arat5hTU6lvk2r/Ry51QnP7g6uDq4Ori6
BVyZu9nS6Riw4Hztzx/ZNvub231o7bT6spie+jQb59M42No0mjtZPoHyDBiL
+8FGuenK11o+88aPtQaWua6/YVy825NP39jctfZ05dblbG2y1mopX335e8th
+FS4DcvvVL6L5vw2B6px4I2La2xAYwbqN6kdqbp0/7YUD8tDhaXK7uP9ta/5
JQdXB1cHVwdXN4MrY9GO9e45/Q31e219tNn9pr64v/mqj7JxO41rbd5HcyFh
ge/y8d79p3kDyqVTrrmnwr9afvLW73DO9tzjmZhv/buerv/YmsjzfcO4Me75
mc5ibhbPRZd6/vN+xqX+ysM4n1GruvU6W7+scmu7lN8e1sv3uxylckCVB6P8
GNc5wsuZatx44+gaS9Dnuvala515f0P6t6j4MWd0YLb3g6uDq4Org6tbwZV1
dx++0+kR1rb7x9pU63NsTE7jVLXp/n5nm9PRnMfyAJQnp9xx5VYt37i11if3
aG2O2Qhc13qOi/MaXpZXNOwYr/WAW2sw/glYcp2XexRX/NZsDk/bFMQM3z2M
5+5pnr6LnaH1rFvfs7jS9mq+VNbn8eE/FU7gciQWV+XNKK6qW1ZunPl1rN1i
D4qr2qOKq+pUB1cHVwdXB1e3iKueU3upOd29GmPTuNPGozZHozmMzesv7025
4MoRV97U8oo7Z7U2Wouq9RnHKQh/sO0ey8ccloYv+DH3zjNvbAzGDJ+Om3Pr
5J6zcXsG2NhhCQ/E03Wb78Q18zXDj2Of8IKfC0+PPEOuYZuHf/qSvrb+tT6v
Hqh7riZaa8SUJ7+8wZWvORWX21SejeYaN/eq8eeNx6tcn7Lzpif3b1F1rYOr
g6uDq4OrW8FV94/9DW1c1nV8qfbkmjQnsXn6zd+fbub8cr6VB7U84a2d0dpS
+mweydd1GJ2/mGG/8bCxOKPluDgHRs3z4qy2Hs5bPqfX7NbTYWanoIPSqdjY
6Yhs7HD1OIf1Yy72djFX8zvLYcU7L/6ZzuQlngpW6FnioGdD8PlaXv3QxVXp
w/ozDI1Xf/Z250zee8cxubwczU1uTo11sT4ve+mHPONvS3Xv2qPqrzm4Org6
uDq4ukVcdV/Z39b6Zntfv6nyXMTh0oHoTvJCy+FWXtPyflt3uNSH1sjYvlk/
WlextYa9699yJ2cvXrytz/BCNu7V1SgfhTkdz/h80Yu1cs447bseL/7Un3/h
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
La7qC66PuPaBJ+lLlcViuY6OVIxVB6uNonJt+PVxF1eNi26u0HUu7fBUuVxM
5Sosl2/57VvzZbYNtoLiqvVDW1ObvQHmxo0/+8fykd1D3+DVPQ+uDq4Org6u
bgVXZGsAA/BjLVdL0TpZ02HKulc25tUjbn3G4qo1O8pbXj7zJ/HaleenvAfF
VXNhGg/cOOHiqr7j2s8rP0mnKt5qf6h9vj7rxnQ1zrl5QJWLq2seifEslXuw
3Lzlq58dHx6WuzMbfHE1fr43pF42LPJ7m2t48/14jabjwdh0KufOb3JwdXB1
cHVwdYu4aj6kdf/J9/+uy1qSvb//J37nB3Sb6xc9xguWXOc89gfYGB4qt6ZV
a3yU57y8r+W+KyceebUjKzdXtLkzjR/GuyO3FH4aW1VsVHd6Eq6KQ3vyL3v9
6y99bZuNZ26OT3NgG49V3qRyCY5fcLEAk+k546VvrZbt/8cZNW6p1r9233FM
zZY+rkU4WuyV7xejvtg2faUj0o29/A0xpv3NgImDq4Org6uDq1vBFVuwObce
ONt+5H3vu/hLzd/rXvvhD+v48kf4TL1w1FXePtnv+kc+/4Puzd1XvPGNd/pt
n8q2zM+q5iPO89Z5bP1HduuH/Spf7aPK5UW3xmpp+VyuvHLolT+B3vVFr3rV
pQZlc0u71tWFah+o/bw+5drna6+ozlYM07/0R62v8jyUB6lyOQOXgzSOp9mz
YXG1Vxxb3HLrdc4PvLyYxXqNe4Ou5D7Lz3EfNoXxDokVe+wr+I0XnYmtAZbo
X2wR9Gg4oke573gsYJZfgXxwdXB1cHVwdSu4+qa3ve1Sh+qTXvjCR5WLK3t1
7895+Ef/UbuRzvN4Lt/2gIVf84jO8YPvfe+j5z33uY+c87BPv+g8xZU5ni5U
XLUuZGtjtVZI+dLpZjBKVymu7OVhSd+6jtVtiqvaAWobr++48Vr1WTcHp3aM
2jeudbxhvhyAi7Gaz3aYWmz3cnpncyiuWpezuJp+ps3ySjnfO1uDNuiF5q9y
cQVP/oaYv+KK39rfETql8X/5G95wGTufgjGa/4Org6uDq4OrW8EVPr6ve8tb
Lsddp41Pf8lL7tiw6QnW0fzBmXWxtvSUB8w9optMF4IlHAbwZz1mK7D3t+YP
bVxic+EEZvhg4Y3dQPvm/7pucutItpaWsVnHB93g7qnwq3eNqrd0X1+7d33B
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
I6784ZVba6O1qNx39Rlbv3h5JuNoNXfmgGzMi4WebOxwtpgr8nzWy2Mdt6xx
wIY2zcHs/2vP8WEQluavXuyW9lYLm7x6aq2P1hoxsMZH3Xhmr3IIl1OxHFPl
2YD52dube9WcrMalN56qGOjfnP4tsn7Wln51cHVwdXB1cHUruOr+8ToWa7+t
bf86l2dy8/TLY1NuN+tnDuhg5UEtT3hrZ7S2VOsttg4jWznM8c9Wtu6ux8sO
d+wT7PuzYTjH2OFB+2R90Mb80a7XzjA1XC2mzBzRK53vGFzsuHmCz/EjLUZr
dojWd54dfpwU5qP1Q1tDrTVl5icwx+UZFtcsLotdvhyM5aG65uVYPmnXV1/o
Xc+Gq+nbtUfVDn9wdXB1cHVwdSu4qm+x9tXuN/ub2z6Ul8a1xdg43MprWt7v
1sLYft04Wkuxshf7g/b4itnR2ejpD+wNcMY2Ifbrs17+Cy86GUzBknV3Plxa
A23g0qs8HU4ui7WmX8H4YqEXE2bMszMMK9O1dt184dbcub5f3PIwaKx7n+61
2C52dW04vnqjw1brjbbmWmvQlIe/vMRsE/Sr6/XqOvZvRXXp2pfqf2lMAuyI
wTu4Org6uDq4ulVc1edYufbY7kn7G91+lse7uGrtp8rmenUSr+sIw9CwNVzN
ngB3xRWc0Ingw3d0KDiBJ1hjBzG307Xch/7mvOJK31zP9gEncOH++mRe9Bdm
6E/ehyvvPpNdt3pa4xCav3qxW7NRWD/P1bhp6Wzacgx2nOM4HUx7q8HdOqTP
rE/60zXaWluk69Jnv7px7UW1I9W30tiDxuM1bvng6uDq4Org6lZw1fyLxqM2
Jqc+ytppn8T93t/0jqt1D1sX2NoudheWVpPEfFqb5Y9a7/ExwBB8sU24BiZW
kxjWvKu1DBtwJedTfBc9C3bE9JLlcIqTni9a7BK8+Q5Wl5vDvj+MLT/IXIzj
aDb4yfprbhezbDzD1XDoNV4k5wx7w9jitYY9eHPO7PP6SZ6NfrWVO8+tt9Vn
XPs4ARdzNbtQfSWNJWh8XePPH9ezfOPF/91crYOrg6uDq4OrW8FVcxKfxMvX
+NXG8NSnWbtu97n9re/YK5sf/WBz2NrNpj2MFVcwAE/8zosdnm0eHtgbzO1D
Hy64co6++gynZBiiy80u4Tt79cc++F9xwZ45XW7seJKWzzPOB7rf/MrG0Vxa
/dMnuGcbh83FSI8ncD7rp57mD1zM1uwY7PXam02jc1V5tn/xzH1mq8fWzlM/
SGMDtDWdqnF0MIB7Awaae9V85PJ1HFwdXB1cHVzdCq7KV3PNY7McxuZ0NK61
cT6V6wOtHbj74uoGnR/zObv21m58s+MqsrZ0Ka/5quFpNgYYcWz2BOfrt/mF
MfP72tf8ksuxL/yCX3ypdQlLk+HBuzHNbj5uXX2AzeXIzqaun+5Dh3Ef93Uf
NhD65uKc4a08uIvtGi/g9DDHxk/feej89Bmsjlq7Tf0a9fU3BqBxcY0bby5V
c43Lv1F+qnIAHlwdXB1cHVzdCq6exMFefpvm+DfnsXkfjYMtruobLa5qN+7e
ubrEs+FqvH7DlXVdjk7lceXCFjv99C3Hh7fiynXsEuK7iitrNnsH3ytM6M9T
T3MH6oN2YIgf3LXDlv6OY2JcTNPNxp003W1cu+MU7Hj7TFXnrB2m9pn6LOrT
b5xb48CbG9WcKWOBJTpVeTauuafqhx9f8cHVwdXB1cHVreCq/N7lOC3nW3lv
ygPQXMjmSDZPpHGzjR2qL/Xanrz9deXqHp3/ceKa360d7Gx88OSzeWd/cMya
w09ldoD5r80hX/RitOhubBPOgRk6nDkX3wWL9XfTL+YDMJ/Om/8cvhfb7Dv9
av9nSyH32XHMuzZqb6lcH33j1hrXvdpj7t8cqOYFlzejXFLlWiwXcfn5J7v/
wdXB1cHVwdWt4Ko1L8r7XT7wcqKWI648OeUNaO5kc0kaT9s428YaXfteZ3/u
frw6Sdeosrm2Fvbf2nR8tY+tO3zoq/mAt/md2QTI5pPuZc7JsLc1o58Vt3uH
UdiBQ7Jz5gNofzwP+lG961o/rP2k/oX63MeDr83Gp3nf9c1pap5veTDKE1Xu
RLYJ/aRfl2e4PPytTdPaYQdXB1cHVwdXt4Kr65rLqwnVGhnlCS9varnjyilX
Xp3yDDTXsrknjb9tPFLl+mprr+7+vTpM13Q6D9n50wcqm29rQseCQ3NJf3JO
dSfv8DedjX0BTqZLme9hq/cttq91v9lD6i+oD72+9cabNR67OUrN4S2vxTA5
P8v85uVILG/w5nbc+LPxfFdqsY2bcPYha6KPB1cHVwdXB1e3iKvWSazcGlKt
o1Fe8eKqXHPXuCr/wOTmZjY/pfG6xVV9uMVV7dvd41fnuV73+aefDVfW1Pnw
xU+t/dnS6Riuc37bKVary+nTcFi7R30B9ZU3fqzx1bVpNBdpe/tPe/EveAZ/
RTmdynlYHuDy5Dd+zPnNx62/YVy8rc29vCNzd3B1cHVwdXB1K7iiR4kjfWjn
7vnP+xmXOhkPY35GHeHWVWxtqdbaqFwe8qfCxfpUuOmejZ/He3M2m8vZfJbG
9zbGqT7f2r1rB6guVB2pOHEvuLOu5o2uwubQ4+NvgLliEv6tj7Zqx6htv77v
69iwxUtrm64EH80tar5t+SjK0VQOQ32GGd+V73d2etc9lRox45nYnH/X03VF
W2t7vm8YN8Y9P9OFzc3B1cHVwdXB1a3gavGnbApyDWHmoZ/PkJ/m6bvYGVp3
uHUYW4tKf1abw29z+cnL1zq5XHbl8ym/QXM8qwM07rfxwNcxUfMRd49fu0F1
p2KpsnV3Hz756mC1S9RuX1/26qjAVeO+GhfdXKHm0pZfovxL5SQ0Lt/BdPl7
y2nfmi+zEbSetflYnNfw0jra5s14rZc59mxvfWDJdV7ucXB1cHVwdXB1K7jS
VzZ29nRxNmwOZPGn7AzwU1wZq2vYJ4qr1inWt9VqdM/VrnJ89TvKZ15clePu
Wl4OSjkQmhNaXDVO+BpX3V9Prl29+KlOVZuDdqf/6NMwXJ9147ga59zcn+bG
li+iPBLlVir3YPl4y1fvnNVwaY2z1v0cpyD8tUb2/BbkzSH8WLdxKLIxGDN8
Om7OrY17zndycHVwdXB1cHUruDJ3sPTwu36Ht0YsMd7Rx7mGH3OxM4hNXuyx
HFb84PzNfq/ZDeZPhiXxqvq8+sXbt4rNIa+m1eKqfNd6H+U/LwfsbO/lAiKX
J6Fyc0hrJ25ccfFQHak2hMrVwaqbNUbL3MPRy176IZd+wJ0cpub4uDfsyOUs
L8Q1V9K4BMuvW/751aeGrdZqgYfVL7uu77ma1zBJZ4KN5QaND945MGoOF2dl
7hZ3vPwor/lDphtvvQ+uDq4Org6ubgVXL/7Un3/hmWE/t6dlY4cr9SrwzdCp
+JoXf0WfYj9gS/fuJcbYbyrsOA43ZLhafWS/895X77j1H9efccKuJkjl5ebM
N72YrHLolUeovApd3+tcm+lCtQ/Ufl6fcu3ztVc0T6dyc1rtz+W5iO8uD1K5
AZ2nvWs+eWOAS/1p7ZXWI2u9ztaz9q5P7k+e33px3D6bQ7Jxa3t5s3s2zamx
PPU0X9Rqmlkz54zTfusIYwdXB1cHVwdXt4Ircy2/FG7w0bI5wJMcnYf1v9jb
8bDJvZFzujwbNgWxxnDmHZas/+ozGj99a7iCs9Wymk3BNbM/DGPTo1obazWz
1v+nwqNeXlnHzJn9fNeuuk33+7WH10fcGKrGa9VnXV927Ri1b1THK+bbZ+/z
H5c3vrVUWmtM+6u/ufwj/Wytalgmw/fuSXecHuW76aLL791nc2wtfF4OlPvM
njPf9GLBnTeOJe/6bc0Prg6uDq4Orm4FV+znfMm4hvig1al4OtbqA7gyR6st
WVxZe3rTsDTZ+s62YE68FnvseGt4jZNhn69xtd/y1pRcXBC561JdpXv52rfr
/61cXF3nrg5XjWduPHB93MVVOf2Kq+qErZNi/M4df5Q104738QK19vTisZff
uryd2R9ao9P5jjvfPfRrOu5sBrNPeNWWUHvC/MrGNl76+Z73vJMPrg6uDq4O
rm4FV2wL+Njk28DS4o0rawcWxjMEV/Qqn9kV6FGwIxeHPHsAXLnXYo4XY8zO
UNnv8V6uHX76G995ru7RvXnlaz72+XYb+9R44ObLNIe0uaXPluvqmsY/1/dd
n3ht0rWTVFesDjm/wuwl06PIyxV1vvPMibHrH+zvHOMb9ho/PB/+MFFcrR8+
r//zh8CSvsL/xuJvic/aZleynuSDq4Org6uDq1vBFXu7fBu6lPxT3ETsDNbG
vlx+Kps6LLEnWFPXw8849uDp2eTWWtS39XG+yeJpcbGdt+s5nI7RfXft0vXV
Npap8b3Nf6ncXNHa0ssvdM25t3zO5gQ1Lrrx0vWV14deP0LtKtUt+6x1HrVL
F9Q3+tNwda3Leflu+DEfixmejaF42mv6k774u7JYOf4Va7vxWJ/VSlH3RFzC
wdXB1cHVwdWt4ApuxF/Bkrn/nM/+0EuccWU61ezqfj/hSgyyOfB5fKiwMl1q
Mcb7jZ5feXbZ+Uqv56Q6Q/fRtTPX99rYpMqN421uy3Xu5/Sr8gXpw/STJ/EB
7pzu9xe/u5zZ5hA1jvrZ4sqmP87PXntL7TB9Fvtsdm7Hp7dn033MpznenE93
M4ZhSr+0ufi32Y+mBy8ei26qvsni8NQ8YacSq/DwN+jCZXxwdXB1cHVwdSu4
ol+pwyXf5vvf857LOWqSzPbrvsXVbORexdXiqsa1vj1pfZIdb3WA7pFrNy6u
6mMtrhqX27yV5nKW66D8P8VVufKKq/GUa3txSbMhzAbdmpWVi6vm2BZXjbse
BuZ/ny/eufQZc165uKruupfr9Xc2mdkYhqtxGFm/cTI0lo1txvPo2VSnW64y
3g51TdW6Udfme9/1rktMApsUnOH3wGt8cHVwdXB1cHUruLIvfMzD/isvuFLH
yWfzLk/1BR//cy661LBkv8nG6lixtJyc5Smu//1N7563cu3D9Zk2pqhxts1D
aW6mdV/OZnkMyvNT7rtyw5Yvfbx27lnZnC9+d/vva07d6UXD0HSf2VsWr7Q9
e+XGYzdOuz76+u6dPxvNtT1nuK+uO399bf/m17zIy2KT+Zo3v/mCGXxUXmqz
wYR6J3CjrjP7DT8GTLEtqG3DZ2OOHx97xcHVwdXB1cHVzeDKccdwD6npxObA
B22u9tuuH8Y1XzJc8Te3P5X72939bO299YE2Rqhxs42nbY5JczDLS1DennLZ
NVaq/OflRW+tEH1YLS391e58x089zRuoz8utfRLnfLkHy0lYPoprnorl6jZ3
qbHclevTr6+//o7af/p3oPL0ZGusZjNciT1Xkxu28HPII3rH299+4fI3v3KL
xK0bo3X3N8j92XZwdxxcHVwdXB1c3Qqu8Nb6DbU/tCdfzXpzs5pT9pY4Grz3
Xv0t7v609tv6NBvzcx3/s/jY5ow0p7I8A/OP+r7cdOWsK49rec6va3+sNtb0
qOWnjLfOveYbNiflQ3Js9Tdbg2w1WcpLX57ep57AW2guxl8xG3yx5HlurtN1
vPfi39wTTmaLWDxA7UK1F1Vn7t+QxWwZE9uCtVcDlT/D3yA6lnPkdMGY9vlo
fHdwdXB1cHVwdau4+r53v/vuG9/61ru209/W7j1rjy2u6rt8ttiexv4sB3K6
VjkEKhdX5aArrqbrDDer69FaV9+QWpCVi6vpfte4MsbpMY5vTR1fXc7iavbv
xaQVV+OxL4dhuQ2NZeeX76K4ai5wcdX48PXXqzED7qHOtlozlYur6tj9O8Pm
4O+MeD3PMFu8v0XWEz+TOgAHVwdXB1cHV7eCqx7vb2V/Q7uvrN21vsjG6jR+
tZh6tpzHxsJubcefU065cq6Wh9z1q9NRuTWtWuexdZDZG2BuNv/ZP5YrOj1q
uqF+mmf3d/50F7J12DrC/HUdT/PimHxe/Vxtl3e8/Zn89uO91844D8uFWD6o
8mP4Hja8KjduvPHk17EE83nUz1K7U//+POlv0ft/4ndent1x8x5cHVwdXB1c
3QKuek73ibWj1rfY2JvGozZOtbkbzW28zvefblWOuHKoVt5vPN1puTuzwa9G
1XDp+BtS1xgW6VAwB2++Hxf5ZBibTuXc2bSLJbI1sKb6b63gZPm61tFxa++c
vctf0f/V92zdT3Ow2metBVM+/PIDlyOx3InlzSifRnOKm2P1pJjzxh40JqF+
mcrVqYqxg6uDq4Org6tbxFXPv/ZND1eNOy2umqvYXP7a1qdzzZY9ubgqf3jr
a2z/v1xMn+GtdYqLq9nSl2czXDnf986jW5aXgD5Dh1luqDXb2tJDiivrrqa1
tSyuxl/hBXfmxXHXe8GSdXZsGJtcXLVGTHFV/nxjZuvh6y+nYnHFVsQ3Ive4
uGoOcuPPG5dOV/qy17/+0m7lYqM6+cHVwdXB1cHVX024ajt4ffTL8eYeNje/
cnlsyu1W7tPygU8vg4Onvv2na0i1ttSwOG6BceGNIwFG3Hd1TNyHPYHPenmz
2oAd+GCrb64nfQcGrCFs0Xl8hllrZ27KN4ED6Ufe976LT2L1P2a/nzx8ec3+
ov/wCH/s47BhX85nYcywwFfe+qFqyzzoOj4/qlxe/fLtl2uxHIxsRrj6yeXl
aG4yPctxtdyaX9O/LdW9a486uDq4Org6uLpFXDXmqvbV7jH7m9v7avOLXvWq
S23ocrUtrmq26uWmtv5FZe+rFdX6ia0vvFwSbZb/x/nerYf1ns1Ae54NnAyu
YUfmK4AnnO70E33zHLDJ4xr6yOd/0OVZYmv+8je84fJMVeZjMA/0km9629su
tc4e1umR5/J1r/3wh3V8+SM6ivfnPPyz7nBA53k8l2979DCGR9bqB9/73kfP
e+5znyHz6aupraaMOR5fYuuKtt5oa661Bk15+MvPX25GurG107fyC5Vvobp0
c3AqNyahvumDq4Org6uDq1vBVWNs6nOs3bX70P4W9ze6/YS317z61Zf+f0dq
W7jvMDX7w2JmVy9YP+CLrjEedTqSdlxPd4KT8dq+42kuBdijI9Ff2Nrhjq98
+LEG1k37dI5Pf8lL7rRNNgb6kH2zNeCT5kun48ApvFkPfHxf95a3XOYEHrWt
HXt3eLN2lbVFD33A3CO6yWqDwhudBf6sx3Qke39z9rAGl5hvOIEZvn14oy9V
bh3S1idtjTbPjHV8eNbungq/evlmK9deVDtSYwwae9C49MYtH1wdXB1cHVzd
Cq4ad1oehsbk1C9ZO233rf3tbm2Ujmv3g7PiapwO07WGq8UDW3PfrU7zcly9
swvAH/2qcnFlHHRH/SiutAUH1l/frJM9uvk3j+bqsV3g/Xeek8rFlfkxLw84
gYl7+pax020+75WvvOhGDzrUxW7wspd+yOXZpCORiys2H7qq48UVny49zBxq
H35cYz3oUZOthXMqb85n95muWx24dqHiqrEExVXjzxuXPhvQ7nFwdXB1cHVw
dQu4ak5i8zIap7q6JY7Vd9laJ7Xrdm/b3/rrsTufbjafNJ1J36ZXVd44N0f6
TS9k37av5VtmJ9fOak/CPay7hp5g3V1H17qWtc/+ILZMGzD5FW984yUmzVqy
P2jHOF/32tde4o7MgfOtjbg0z9JjG8e3XOwRj5+Nb7voWXQVeIQnupA2yPbp
nlN2CvodnMASWz4s0Zfgzbyx+eyZgD/Pijn0LC+W29+HPrPXOu14iuoHaWxA
YwYaT9448+ZeNTe53B0HVwdXB1cHV7eCq/LVNGe/OYzN42hca2N76uusvbd2
4O6Fqxt0fswhmU5ivbxmSzdn43OdnqU/y6GpDGvikrQNczBm7OaFbRmWjBOW
9F/7+gQ/2imWPEcw4Z722OwEZONcm86BQ32DCXg2n2wU5kYcGB0MxuBeXicc
sl1rj+1ATJNzyTBmroY3dh54GweSMU4/IldHvbbbLPa7vv7GADQ+/Elx48+W
a+we5bwt39HB1cHVwdXB1S3iqjw2zetvbmPrWjbetXGwjQWqb7T24e6XqzNU
l+h8mn9ryObvd9xawtU4jaZfLZfUXlhb+OfY39mGrakxi+W1N66svelaxgt7
T/t7P4AxbTvH2ls/fgl60uwVjptPupy+kuGa/qHN6WOVzSEODH2jK8Le7CHu
QbekY8LTfBCTa4epfaa++/r0F/dNbhx4c6OelDtcno1yMJabsdzFB1cHVwdX
B1e3gittbl9ZjtPrOpXjvWnuf3MhmxvS+Fh6xPytjR2q/7T25O6vq2PQPayV
GOjr+V8dyuIKb/viyoore2P3JtsTw8/T9o6LviSG1rzADFyRh7Hiyn3J8FZc
mcvpWrAKt84ZhsVyadNcwFXlPSPwUB2yumXtLcVVffSVG9fdeO/mQBVX17wZ
5ZXascrl51+M3OwWB1cHVwdXB1e3gKvWuSjvd7lPywXnfOvB/lqenHIFNHey
+SONp/3ud77zghEYq491Pln2+dqfuwevTtJ10Td4oOt58fPS88TZWmd9gX+x
UE/rgvfs3Wzj5oJNgP14GKMnVra+MPbVb3rTRXYv5w9j7lHZOewS5NkoyOYb
vmGoz0J1xdU+g4H6F+pzry++cdqN325OU3N+6VzOo4dVLnfisLPYtx0f3sY1
7Dtr0tptB1cHVwdXB1e3gqvZV31ezmVrbbQWBrlcqeWOK39O+QTE6bBjP+Z5
+Olcy+abNP62MUj1ydYuXXt19+zVYbqOxsbGAQP0LPob3PIRwxg7A1uJvBI6
2zDGRlFZ+zAmF8ez5l7k4U2MsvMddz4bhPs8tPvIWNhP4Ly6X+0h5pK+cu1D
r2+9cdeNx15c2+wTk8trUb6LciGWI7H8+cWOe63+aOXWJ52+fnB1cHVwdXB1
a7habI7+rWaGMY1z3Bx6LQan/OHjFS+3arnmyrdT/oHmYMILHMFY43Ibr9uY
pfpwi6vu66vbGKd1pN913elH1pr9v7iazPZuHuAKZswPXY5+NVzRu+bL1qe2
WV2uOl7tHsVVfeXF1ZNirZuT21zd8lcUV+U8LK6Gj2vO/NZWM/bVXGsd0uJq
mD64Org6uDq4uiVcLWfUa3YHe9fWEX62uoqw01ob5Rs3Psd8LgcdfNU+P36e
chQ0Z7M5LI3jNU7rjDu3MU7189bufb33ny5UbNAZ4BP24JHtgf4nR3VxxZWd
w1fOBlJMVmerHaN2fscf61af/wy58dKNo25uUXNvy0dRvqZyGJbbsLz35cNv
jZjrGmqrK0rXWt1tGFtN0OlZ2mw9zoOrg6uDq4OrW8HV/wsP0D++
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztnXfUpVd13gGDIyAhIWQR7JAEg+2EhJLYShfvxem94PRqnNhpLIcFCoFl
L1YYjbAKBpVBXaCGBBIaCVDBeFSQbAmrYQsQI/OhYqu4YAHSDEhYOPl+78xj
/e7J3RP/ybvW/uPqnu/c8+6z97Of0XvKPvt81w//j9f96DOe9rSnvfmw7f+8
7vX/6wfe9KbXv+0Hv50/fuT1b/j+73vDt20Xj9z+nLL9ofzZz/zg6jN3vm71
qZv/1uoLv/SvV3s//y9Wt9/291df3Pq389+/8Ol/tNr6wr9Z3X/fD82/3fPF
f7d64Ff+4+ree/79XP/L979+/kbGXZ/7Z6tbfv7vrG679e+tbvjkD6w+9tHv
m3+79Za/u9rzM39lbnvnL/6T1c/e+NfmdtRdtvtVq5/++F9cfeiDf3J17jkv
WV137TTXXXTh987trvjY968+fMmfnssf/cifXV1y8Z9affqOf7i6Zs8Rqyuv
OHyW98nrX7u6+qo/P/f7M5/4y6uPXP5nZnuou/TDr1hh4403/NW5H3T8uZ/9
63M75Fx7zWtmPT/32X869/GJn/5Ls87XX7ea5d9x+z+Y9Tnn/X98rd7tLcfy
3a/1sZ7W33bZXuNgfIyb8TTOxt9+sb/sx9G/8bv5YJ6M/KEd2DSvmlfNq+bV
UniFHNpQRhb63HzT3/ydtuhO+Rd/4R+vbvq5v7H6/F3/fO4PeeiFLH5DLz70
+xu//t9W9937H1Y//6m/Pf9O/x+/+i/M9mHrVVf+ubkdPsMHyAR/fEQd32BO
OzA77dQ/PJfx7Rmnf8fcN/hThy+Qffllr579c/GHXr4679zvmjHkd/wIdmCJ
j9CF+t2XvnK2G5zpL2XsRSb9X3D+y9a45Hq3txzLd7/Wx3paf9tle42D8TFu
xtM4G3/7xf6yH+1f+918ME/MH57jQx/Nq+ZV86p5tRRe/cov//DvjJt+7Vf/
y/w7/VKPzbzP0w9y0DF98Tv1lOkL3bDnS7/x32fZ2PybX3rD/I5Gp7v3/svV
L939r2aM+Q37wQEdM96gDX4EE2SnnjrGFO9/3x+byxd+4HtW7zv7j87PZ4xB
Of4CL8Yk+JF+GHd88KI/MeuPPNphK3gzjqk45nFUxSXLsXz3a32sp/W3XbbX
OBgf42Y8jbPxt1/sL/vR/rXfzYeRJ+EPfdL3rz78n5tXzavmVfNqMbzibz70
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
gf1lP9q/9rv5YJ6YP8glP9OOdzy9edW8al41rxbDK5f9rvT80eurLnsv0vE5
jl/1mQ6feXQeAOfJcdk55Zxn1XnIGWfkbo6sJRN3xDyf2Fg+/J78CTyTtXLm
8PgLuymHM+jA+IM+wAce0Kfr3d5yLN/9Wh/raf1tl+01DhVWxtM4j/jHL/aX
/Vj52nwwT8yfJ3/rx+d/Q9jbvGpeNa+aV0vhVTVP9Nqp9xYdb+N4VJ/R8BlG
l8cxVs4v8g0eGaMkb6rzimf+n7Vu/mZu73LGORmPJHcg4xKvAfA77RgbeIzH
mGPfY2+e26Iz9vDNWGf/viPX6t3ecizf/Vof61nZYntHHJxXNrgZT+Nc+cL+
sh/tX/vdfKjWqTzWal41r5pXzasl8srvUMfSVHHLPothPX1+3/ltnPMtGBwq
Pzx/Ux55xfO5hzFrCsQw0S8+wybk4g/2d12239GFZ5K3MDzhQ64BbPrGE29b
ff1rb9keZ7x9rd7tLcfyKx2sp/W3XbZ3xMG8Cm7Gc8ytF/ztF/vLfqziiqvY
KvPH6w/Nq+ZV86p5tRReOZbG5WpM5bOHPo/vfDWxZ1MOwOQ7dT5w35FBXeJm
8U3wzP0YOTOSfVPsSvwS/eR8C/0wL0/eIWJtD6wl/9g87sj9Ysz7WQOnr+QY
cBmfsx491rtsOZbvfq2P9bT+tsv2GgfjY9yM54jzptx69pf9WJ0tNR8qznhv
unnVvGpeNa+WwqtqT9lnD6vz+M5R41xt6J/8pVn/He+88LpDdZ8meOZO4YzP
kBm+Ipv2YM6a9ROPv3XGnLVtxi3Mg6++6qrJZeRxfwh2UN4eO6wuufjiib3e
o3Y8Y3uc84mJPWPWnhlLMG/m920b1urd3nIsv9LBelp/22V7jUN1v6TxNM7G
336pcutV+TrMh2pvGmwYX/HdvGpeNa+aV0vhlWNQXa72lKv1BL+7bct4Z4rf
/Sn7jmDkMl7wOUrm0fyGHrTnd/DLGZPkcWXfFh/gI7DivQ9OzM3xKXYhHw6c
ftppE7K4a+v8886bkHPSic/f9t3H18r4EP4wrqjaWI7lu1/rYz2tv+2yvcbB
+Bg342mcqztr7K9q/aHam64447M8zavmVfOqebUUXvlMYhVX7JylLlsfz2er
MVXsxU7w42/2M2MfYwWXRzyxk9+NP3u0zNOTx488B6wD4ydih+CD/YvOjBkY
Q4x8YFwEFmAOjpxJwSbkMY5yvdtbjuW7X+tjPa2/7bK947+vTVgZT+NcjbXs
L/ux8nUVt1ydaW1eNa+aV82rpfCqytXmM4xVXHG1pzzeE51yNabaOnhOlbb0
kXzljEH4O3FP6IqOycvqHK2U2QNGDmMifEXeHfxKH/j63HPOmcCFtWXK2Mic
+aILL5z5Qy698Iex0HXXXjvxLJy5bPfutXq3txzLd7/Wx3pWtthe42B8jFs1
1qp8Ue1NV3HL1ZlW88f5jppXzavmVfNqKbzKuzvn/XM+xuf688k7POUqrrja
Ux7XhzNfBsusKbuctXXm48GDeuzNeoPzqTM/Zh+XMmOA/fv2ze98/mZswxiA
Z4mTZZxDfDFjJNbJ4cN73v28mQPonzEV/aTsere3HMt3v9bHelp/22V7jUOF
lfEccd60N21/2Y+VrzfxwWPgMQdg86p51bxqXi2FV9XdFnl3HyqvQtbTkeWz
IWN8bMrVnnK1nuAxxiYuIcdlxi1ghyzm8fgdH7O/yx4p6wCMCVg3pkwMEmOh
U085Zd5TIIbo03fcMY+XqGc9AZ3fdfxz57Lr3d5yLN/9Wh/rWdlie41Dtf5Q
7U1XvrC/7MfK1+aDeWL+oEvywzevmlfNq+bVEnkVOfztvcnIG3PB5b2LPOvp
MyNbRVwxsniG/r3Hatz4mzXfrAtvGlPRHhlgCvbI5zfigk484YRpG8PJZfsd
mfx25hlnrPEkZWJy8dHIJerd3nIsv9LBelr/aqxlHIyPcTOeVdxydabVfhy5
FL+bD+aJ+YOs3JnSvGpeNa+aV0vhle//dTnv7jG/evofc+vlHCZrxs4n4DOV
jA9iZ9Z2x7jiak85a/Ho53l6NaZi7/OrX3nj7MePXH75dOmHXzHdvXfvazj/
ybkSzplwHoYy8UPghe9vveWWtbK5VLWxHMt3v+v6bB5r2S7bW+1NV3HLxtn4
2y/2l/1o/9rv5kPFGd+n2bxqXjWvmldL4RV9Ij+5EfKOR37uisrvrPdGnzG/
OnX8Nuaaq/Iq+Aymz6RUccXVnrLXsT2vP3Cm9NrpqB071sr8Ts4B/M36AWOe
7d+nA33vneNpU2YtnT6JQ4Y/rnd7y7H8Sgfraf2rvekqbtm4GU/jbPztF/ur
yg9vv5sP5on5kz0AxlrNq+ZV86p5tRReZa6IfJd5t/LMeL+k75byXRvON+78
q9jHZ8xNV+VV8JlNn2FxHK/jmqo95Wo9wWMhc4P4Kc7QXHnF4WvlA/eHHbqN
5Vh+tf5Q7U3bLttrHIxPlefBOBt/+8X+Gu9MsX833adZcSa5FJtXzavmVfNq
SbzivYne5JGjnLuK6QeZ6M9zlMlF7nJ1x1aVX73KrYcM8n6fcfp3rJWrs6VV
XDEyjzv22St86r1g+5dnGS9xjqQaU8EZ2pKfhxhkyuFS6quxluW7X+tjPau4
5epMa4VVlQOwyg9f3R1W+dp8ME/Mn+ZV86p51bxaIq9ytoN5InrxvuQ9TVue
5f2bddvcHYn94z3Lvp+R+S1/o4PLybkz5lfHvk259ZDPujRjD+c9AJ/EALtc
xRVXe8rhAHN8ryeMY6pwyfVubznV3nQVt1zZYnuNg/ExbsbTOFe+sL/sR/vX
fjcfzBPzJ+sPiStoXjWvmlfNqyXwKuuotKdf2vB+5Fw+a7M8mzkm72uXeSZz
W2Twjs26AfLH+yX36E4r3/FBPFLOxbpc5dar8ir4rKjPzlRxxRXHxrHWuJ6Q
sdAmLlVxy9bHelZ5HqocgBVWxtM4V/dp2l/2Y+Vr88E8MX9yryfl5lXzqnnV
vFoKr2jP86yjjuXIyZruZbtfNetFP8QQxR5yePMM9tAGW7j76dRTXrhml+95
rO7YqvKr8/7mLqkxt96YXyj5E6qzpYfiVeKpvG6An8k5NO5NVzFall+dabWe
1t92jfZuyg9f3R1mnI2//WJ/2Y/2r/1uPlSc4d8RusLX5lXzqnnVvFoKryjn
DAV/0xd9Yxf7jdxvz5wyffEc67LoTXt0oZ65LrFE557zktU1e46Y13exh/cz
7VkXRk/mxcjFRjChzvdC4ovcjcUeK3lUmX9X+dV5ZlNuPecXqsZaXgfwOrn3
jh1bNcYtp311ptX9Wp8qB2CVH944GB/jZjyNs/G3X+wv+9H+td/NB/PE/EEv
xlhwvnnVvGpeNa+WwiueRafwJ2X05X3Nu5V+kEGeUvpDF+bJyOK+Q9Z/E8dK
f8jFB17XRW5y0iGX33MfF+XkzsGuTfdL4t9r9uyZz7n4bhHnV7ePPIbxvN7r
3tXetM/UOK7Y9dWesuVXOQCtp/W3Xba3uk/TuBlP42z87Rf7y360f+1386Hi
DGOz8LV51bxqXjWvlsIr2vM879wrrzh8dfppL5rjX6m78APfM58P4VnezfTJ
h9zdxPygD+9tns3dybRLbA56Zz8U+7IfyjuYD3Jz9jJ5/pKjljOafLNHu3/f
kWv3Sxpzj0mq9QfnlfWer+OgHCfsszM+W+p6t7ccy3e/1XqC9bddttc4GB/j
ZjyNs/G3X+wv+9H+td/NB/PE/MFGZMPR5lXzqnnVvFoKr3iOtpwPcXvmsJmH
Wj66UaYttvPNexl7kc/7NWcUk58hZdsb+7OHGXzQE9ySlyd4eozhu5U9H/ca
tfdwHdfkuF+fi/FZUecUcl4F17u95Vi++7U+1tP62y7baxyMj3Eznsa58oX9
ZT/av/a7+WCemD+0YTzGv5/mVfOqedW8Wgqv6IN7fLGZ+os/9PL5b+ajKTN/
5G9sdpn3ctZjM2elz+yJojfteZfzAZPk0Ek+HN7JfPM3a9LVWMvza68/e0/W
MUuO4/UdW9WZVudJcB4h59ZzfZUf3vLdr/WxntZ/tCv2VmMq42Y8jbPxt1/s
L/ux8rX5YJ6YP3CUtRT+/TWvmlfNq+bVUnjF/JM1VNZLWatljkjcTs4jppx+
KdMHMpJjld+SP8fnQXg/uxx7k/c0tnts4Pmy15OrvWnHIzle12dYqvslnReo
ygHovLJVbj3Lqe7TtD7W0/pXe8rGwfgYN+NpnCtf2F/24+hf+z18ME9G/rDe
cOYZ39m8al41r5pXi+EVc0+e433JXmXic+ibvpDPs/TFnNjl4M08FRvQObnB
GQeMtvhdT13O9Hte7LL3Uh1f5Phbn0nxmU3a4NOrr7pqLb+B71Z2TjzniXUe
9U33jIx5ZS3H8t2v9bGe1t922V7jUGFlPI2z8bdf7C/7sfK1+WCemD/oCr/O
PuvFzavmVfOqebUoXvHe3H3pK9fKlkP/9MseKXryfO7FQPfcgRI9/e6mTfLd
eJ7rtV/vjTp2yPG0fOd5nz2hH9qhh/MVOIePc9w5B6zzovtuZd8hwjiKNXTK
rh/vZY4cy3e/1sd6Wn/bZXuNg/EZcQuextn42y/2l/1o/9rv5kPFGWyEg9jZ
vGpeNa+aV0vhFXLAgPMYyEMG7050yFgCmdiFnthCX5Stg9/Rnrd6Xdd7nY4F
quKWfZbEZy2df8D5eZyzzjldq/zwvhPEd2aN90jmnmXXu73lVPnVrY/1tP62
y/Yahyqu2HgaZ+Nvv9hf9qP9a7+bD+aJ+QM3E8fVvGpeNa+aV0vhVc4UUu8y
8rMfaZl+53oe6nVadElMj/c0HefjOFifDfHZySrPA7bQn2O6xnytzmfuOz5o
nzuwqvs0kcecPOONYOf66n5Jy3e/1sd6Wn/bVeVVMD7GzXgaZ+Nvv9hf9qP9
a7+bDxVn4Bv9XHD+y5pXzavmVfNqMbxinZj3J32NbfIOZR4KHsj0fJP+GQuM
e9OO23Fcq899+CwktrJ3CXbOG+BcOs41t6X8q85P7vs7aJM7rfA7Z2PgQvat
8aHvRM4eLr7CxuBLfXKzjvVpbzmWP/Ybfayn9bddttc4GB/jZjyNs/G3X+wv
+9H+td/NB/PE/IHb6MN5nuZV86p51bxaCq/8Tsw4InnUM3/0mqr3HB2T4zhV
ZPKuvvyyV5dnWp0HwHlynDvOuVWdbxwfohN9VHeH+T5H33eMT6nLHcdgir34
HtwZO8EH7Ac/nuNDH653e8uxfPdrfao7tmyX7TUOxse4Gc/qbKn9Yn/Zj+Oe
cvxuPpgn5g+20z570M2r5lXzqnm1BF65zbhe6r3pxNhUccs+o+EzjD7X77w3
VQ5A501NjC/yfNeG76Ly/Yy+vxh76SPnMePr+Bk+sB5OO8YprBNgM/6lPuMj
+qRv1tldP7aPHMt3v9bHelp/22V7jYPxqXLrGWfjb7/YX1Vcsf1uPmzar4E/
Hms1r5pXzavm1VJ4Ve0hVvGlPnPhM4lVnoe8o2nvnG+3Kw9q9mOp990ZvlsK
nZnPUx7vYaR9YoZ5x+NrvhMnlXw9iZFO3BT+TdxxznPyyRo6Ps66POsFrnd7
y7F892t9rKf1t1221zgYH+NmPEecg3+VV8F+tH+rePUqVgHb0Ity86p51bxq
Xi2RV1V8aXX20OfxnaPGOdyc19R5v8EVe+jXd2SAIb5kjBH/jHcN840NOTuZ
/Vdk8uFv/EMZ+5CNzOwbM1fHt4xrtg7m9aGcWCva8O39abjkere3HMt3v9bH
elp/22V7jYPxMW7G0zgbf/vF/rIfqzPLFTfMH+9NN6+aV82r5tVSeDXGG286
e+h56JjXKLq57DzeOWPJfqjvvPA9UFtfeOqeRN8jTF3icxl7UMYG5GNbYqJy
xiS5emib9YGsCzBW4e/kg0gsMZ/sTVNOzh/a5zn0Zi3B9W5vOZbvfq2P9bT+
tsv2GgfjY9zGe7WCs/G3XyrfjWOt+L06s1zFqzevmlfNq+bVUnjluFPH4bhc
5Wqr8njblvHuMPTg/c938vwkvglMwRv9cr4150wyv8a+PEt76rOvu3UwRw/y
sgaQ+Tofrw14PSH7yoxdaBeeoQvl5BR0vdtbjuVv6jfcs57Rf7TL9gYH42Pc
jKdxNv72i/015ivelLOx4ob547M8zavmVfOqebUUXvlMYpWrzXE73rv0Wq7L
1b2Hth1bM06gnLOcOceCDPCjPe/stEGvYOv4YX6Pb7NfHD8iM2OcjIXgBWMS
uIHfwT/r6+z/8jeyyaHOHjNl17u95Vi++7U+1tP62y7baxyMj3EzniPHqntL
N/nO/rXfzQfzxPyp8jw0r5pXzavm1bcyr8a8CpvOlvoch+NaHdvjvU7r7/lv
NaYyPryjeWcnfil4Jg9d1tL58Fv8hV4eu8Sno18zfsKfxACjH3wgbzo5iZI7
D11ypwj3knz5kUcm17u95Vi++7U+1tP62y7bO+IQfIxbNdYy/vaL/VXd3Wa/
V2dazZ/mVfOqedW8WiKv0CHvceex8bl+n230WY8qrtixQN4b9frwuJ6QMYMx
dDn58TKWQCbt+T1xv8lpnnxBfOiPMQbjH8Y95Esn/x6fjJt4nrk0d47AH/LM
cvfIdr/TZ+68c9q/78jp6J3PXKt3e8uxfPdrfayn9bddtrfCxLgZz3EdPvjb
L1Xcsv07nin2+Co8MX+yF5C9j+ZV86p51bxaAq+c17TKrTfmvUkeAJ+FRH7O
hjg+1vFC1Z6y15M9v/YYw5gnngldMkcPr5Lrh/MzyY2QXEF8mEODGxjuOvkF
8x3N3K/82KOPTty9/N5du6aHH3povmN52/YJ3hy9c+d07DGHrdW7veVYvvu1
PtbT+tsu2zvi4H324FbtTRt/+8X+sh/HvBmb7i01T8wf9E0ei+ZV86p51bxa
Cq/QcdO9h9EXGWMuuOTGqfIq+Oykz5I4ntbxRd5j9Zqzy56Pj2Oq+CjjGMpg
Qc4A5s4333TTzAHu0uJz9llnTdyxxT0i8IZ7mplns+8Kd1hb+Pxdd813coHx
gboL1urd3nIs3/1aH+tp/W2X7T0UJsHNeI5xy8HffqnyPIz+jd/NB/PE/EGf
xL41r5pXzavm1RJ5hS48k7ltys4TnrMjlJ07zno6n4Dt8hkTlx1/6xgk78ka
Z8/TqzGV/cgdzPj3k9dfP91+222zn2+84YaJ8yd37907PfjAAxN6cybl+OOe
M69d8yx3ciETjN959LPW6t3ecizf/Vqfaqxlu0Z7g4PxMW4VtsbffrG/7Ef7
d/T7Jm6MvMp9ms2r5lXzqnm1FF6lvHXwXGVyqvquKN+d4fzhzqfqsnPNZd83
a7DJP+AzmD6TUsUVO2bJe7hex/a83mMb+5q1gPvvu2/K2gK/3XvPPRNr0Nw7
yZgJvxCLBGfwy/nnvXT+zfVubzmW736tj/W0/rbH9lZxy8bNeBpn42+/VL6z
f8c7ZcIH88T8oS9+S9x186p51bxqXi2BV3l3j7xymTlm7lX03VK+a8P5xpGJ
DsSwOgdd4op4f7vsfAXRzWMqxyqNcUvVnrLXvb0O4LGQuUEb+PDFra35TApr
6OTwoQ/y9Ox4x9NXrnd7y7F892t9qr1p21XZbnyMW4Wt8bdf7C/70f613ytu
jPzJv4nmVfOqedW8WgqvMi7h/AjtMq9lfpl7qHzXsO9brO7Y4jt3czg/uXO0
Omedc/gkZhd5LvuMp8+8OO7X/vJesNfGvT7gssdO5hIxV+w1M0ZyvdtXMt2v
9bGe1n+0y2daN2Fi3IyncTb+9ov9ZT/av/a7+WCemD/oBl/ps3nVvGpeNa+W
wiv2OClztoRn865kLJF3Ov0iLzE9PJN7p3Ifcd65WeuN/r6zo8qv7pyu/A5u
1I15fvIx/j4L47LjhB0r5b1jr597PaEaU7ne7S3H8t2v9al0tl221zgYH+NW
5Yc3/iOv4i/70f61380H88T8aV41r5pXzasl8mrfY2+ecxBwzhJ9efdTh33k
ICBPHfohP3bQT+JjmbeiL23pi3a+v5i+c59j5qV5Lnd8ZH0/+dWd9zXlMbde
1qGdJ8FnRX12xvHDjqdy2dzw2MnrCa53+0qm+7U+1tP62y7bW2Fi3EY8g7Px
t1/sL/vR/rXfzQfzxPz5xhNvW339a2/ZHlO+vXnVvGpeNa8WwyueSR6CJx5/
6/w770eepZ65JzJ4dyZfHLFEB/D+oXkuyl4nuue8B7okzid3gORcDPYxDqDf
4JA63tW+E8R50Z0n1rnynDvIZedV8NlS+9pjIa8PeP18/7598/PIcb3bW47l
u1/rU+k85gC0vcHB+Bg342mcjb/9Yn/Zj/av/W4+mCfmD5xlX4Fy86p51bxq
Xi2FV+86/rmra/bsmbFgP/KoHc/Yfv9+YrIc5JLbmzGC+8U+9ic5y+8y72Bs
ZE6LjYk3yrghc9zg4Hshqzu2fG8Iuo0xWch0bj37sRpreR3Aa+PeO3Zslevd
vjrT6n6tj/W0/rbL9lZ3hxm38d9pcDb+9kvlO/vXfjcfzBPzh/WYSy6+mLHq
1LxqXjWvmldL4RWxNeyFMi9mrsm5k/PPO2+tjC3HHnPY6vTTTpvlv+fdz1sl
npYxBv3yzuV9vudgvoXkkUPP5HAFM7DkPe8y8mnPOMH3Jvu+ENoGb98tAoab
8qt73OJ5vde9vRfsWCnHD1dlt7ccy3e/1sd6Wn/bZXuNg/ExbhW2xt9+sb/s
R/vXfq+4Yf7AcfjGOLN51bxqXjWvlsIr7AIXsEIO71PGCtjAnU48Cx5gxViB
tVzm2uQfYL+UM/2sObvMPijz2cRZMS7IeAlcHP+MjsEYvMA06wqJNeIcZ9aj
wd2Yj2OSzNO9ju293Sq3nuOEfXbGZ0tdX8UVW777tT7W0/qPdsVe42B8jJvx
NM7G336pfGf/2u/mg3li/mATMhh3Na+aV82r5tWSeMW79bprr52wgXHDRRde
uFYGL+bI555zzoSu9EUZHck3gB7sPyKLd2xyrmIj+oAvfTIXxv6sD6fMd/KP
I4MP2I4YZozhObjXpau96Spu2WdhfFbUuRS++eRPbHPqtdM1e45Yy7Hg9pZT
xRVXe8rjurrtym/GwfgYtwpb42+/2F/2o/1rv1fcMH94Fu5dtnt386p51bxq
Xi2GV+iXdyJ9k7uUMmc6eIeyfmr5vJtZZ2aMYX2YTzOv5ffYjL3YjW2835HP
GAGfgBMf1n6Nj8cMLo/za6/DZ0/W/qriljed/cz4JXkSnEcoY6IxD5LbVzKr
fq3nuKecNuN6yyZMjJvxNM7G336xv+xH+9d+Nx/ME/OHfuDb1Vdd1bxqXjWv
mleL4RU48SzzROSw1ooc1oepP/WUU+b55nHHPntFPlbWZ1ljZr7JXJv4JObi
vK/pA9uSOwcd0R+5WWcAF/Yzbfs41vJ8OevJ1d50FaNLP57H+4xnzpU4LxDP
8hlzAPK9KT+821uO5btf61PpXO0pGwfjY9yMp3E2/vaL/WU/2r/2u/lgnpg/
8Coca141r5pXzaul8Ir3OLG0xMym/Ok77pjPpxBvdOYZZ0zMpdlXpS/qTjzh
BPYeJ9Zokc+ZTWyiHXon5hW7bIvf9Z7/en242j+t4pbHszw5s5kxE7jZ15mr
e96ftX0+Y3543y1S5Vf//8nMeC/6WE/rX8UVH2q/PrgZT+Ns/O0X+8t+tH/t
d/PBPDF/+LcQjjWvmlfNq+bVUniFTrS/9ZZb5jLxM+yvck6DMya8WznHSJlY
049cfvl06YdfMd29d+9r2Iv96lfe+P9wzO9uz2293lvtTTteaIynDe4+g+kc
BWO5ygGYvK8ZqyTPK5/k4eG35LTn7/E+Tbe3HMt3v9an0tl22V7jYHyqPWXj
bPztF/tr3Y9P+dd+Nx/ME/PHHGteNa+aV82rJfGKNswxD9wjsne+i8pymHdy
tyP9uV+/i132vNXruuPedHCo4pZ9liSxSIwRnH/A+XmQkZx1m/w45oenj9wJ
Qr8ZWyGX9uF/5Lve7S3H8t2v9bGe1t922V7jUMUVG0/jbPztl8p39q/9bj6Y
J+YPfVL2/6OaV82r5lXz6ludV2nD2imxM8ScfuCC714rV2Mtz0O9TlvtTVex
rz4b4rOTzieAzsm3U+UAdL5W5zD3HR/hBfLhAG1yL2Q4kHzo+L0qu73lWL77
tT7W0/rbLttrHIyPcauwrfaU7S/7sRpTVdwwf2gfvjWvmlfNq+bVUnhFvAxr
qOQTcJtN71DmlV539b6ky1Xcss96+Cyk8wM4f06VA7DKD+87O3ynVXK2jvdK
8zvlPQfP0uYO44ztkpOQsRBr4K53e8ux/LHf6GM9q/zqVW4942PcjKdxruKK
K9/Zv/a7+WCemD/wjfKVVxzevGpeNa+aV4vhVTXW8vxx05oqe46Oyanilqsz
rc4DAIbUE78K3skdZzz53pQfnrFJ7qhyObFQtE0sFLZmHRpfmw9ZN2A8Yv5k
jZtx0lif9pZj+e7X+lQ6V/nVjYPxMW7GszpbWsUV24/276a9GK9HHWpM1bxq
XjWvmldL4VXFpU1xWZSruGWf0fC5xfFcf/LeVDkAmacnf7jLe4Y7U3IXle9n
9P3FOWeSHK3YBgaU8UFioVOGA/AjOX8oZ88597e43u0rme7X+lhP62+7bG+F
iXEznsbZ+Nsv9lcVV1xxoOIYsumT8VXzqnnVvGpeLY1XmZNuiqVhjZf8pOOZ
C59J9Dl957Fxbjdsx17e6WC/KT+8787w3VLVfZqMe/DBZbtftVZmHMTz5FnH
F8zXWYPOHJ02rEszvkE+ZXTIOCp7teDM31lbSL3bW47lu1/rU+lc3S9pHIxP
lV/dOI95F51fKP4az5ambL9XMXvmz6Z1+OZV86p51bz6VudVFV/q+abfudbB
eWmqHIDOa+q8374LA1tyV5TvUnSZD/Nr5LEGzro1a83X7DlinpfjD+bexBid
e85LZh7gQ3wK5rTHT+CMDO4kcTljuIsu/N6ZSzmDg16MsfCV692+kul+rY/1
tP62y/ZWmBg342mcjb/9Yn9V+YU2jbWy/rApXh0OEsfVvGpeNa+aV0vileNt
vOdYncf3/NTvaOtc5Yf33U8ug3/uSRzvEQbr4BicM84AY/sFnzIWwd/8xpgF
v+NXfIjerIdnzEM/jFtoZ56gG88zhzevXO/2lmP57tf6WE/rb7tsr3EwPsat
wvZ3k1/dfqzWH8wH88T8cdxy86p51bxqXi2FVwfuI7x2OmrHjrV4VMfkeI/S
a7aet2LjSSc+f3vs8PE1Lvm+J9976HuBs2bN2REwZB0ZW/Enfsq5T+czwDf4
AX/zDD7KncT4im/uWoYD+Jdc68QpMX7Bt+Rdp8y9XMTpZq+Y+5vxG7/ha9YK
Mh5yvdtbjuW7X+tjPa2/7bK9xsH4GDfjWd0vab/YX/aj/Wu/mw/mifnjszzN
q+ZV86p5tRRe+Uyiz2jwDuXs/oE7i5+K22Eem3eu9zS9rut5rt/1th080Hv/
viNnf/E3spnHszadvALB0DjTF/5gfzaxwFmTxq/wAGyvvOLw2Y+0wYf8jX8o
43PGKpnv89vpp71oPq9CPdwA06o8to8cy3e/1sd6Wn/bZXuNg/ExbsbTOBt/
+8X+sh/tX/vdfDBPzB/neWheNa+aV82rpfDK+Wp8ft9nGH2mw3GtYzzVpj1l
rwN7XuyxgbECP9rRZ/L8JN9scvcw5mGMwid71fgpc3f8R13m+7RnXIJO+BF8
L7/s1XPdxR96+XzXJdxIGb/yDdb4njk4+Lne7S3H8t2v9bGe1t922V7jYHyM
m/E0ziP+m/am7Uf71343H8yTKmdj86p51bxqXi2FV87hVt1tAZ7I5N1analx
HKzjgrw3Oq6lb1pP8FjC2Kac/HTBn2dzRsfl5GrFl6xbZ3xDffxrPvAc6wDE
O23iFbi53u0tx/LHfqNPpfMmXiX3bXAwPtX6g3E2/vaL/VWd5bHfqztrzB/n
xW1eNa+aV82rpfDK+b3HHKdbB3O+Oe+N8wD4XKTPhvCeTZ45x806dsh7qZ5T
u8x3ciQY87QJpuhLOfnrsCf20Sd/0x8coY4xBnxwmXhg7/+yR0wMFbryffZZ
L16rd/tKpvu1PtbT+tsu22scKqyMp3E2/vaL/WU/2r/2u/lgnpg/KdN/86p5
1bxqXi2FV77zosqvzhwVvcYccc6T47wBPjvpsyT8nnm144vSH+289+r1Z8/H
PSaxjxg7oCfP0ob+kQmG9Jf7QZBFv9iBfuicfeTdl75yLoMnYyZsZN0AO13v
9pZj+e7X+lhP62+7bK9xGPEJbsbTOBt/+8X+sh/tX/u9yg9v/vjusOZV86p5
1bxaCq98H6LvhPIdGc4T7rypVW692J7cPckz4LOWPnvi+FvHI1V7yl6v9vzd
Yxj7lL6o53lsyTMu0xafJEcQunJ+Bh+gI+Mo17t9JdP9Wp9x7Bf9bVe1N218
jJvxNM7G336pcgDav/a7+WCeVPdpNq+aV82r5tVSeMX7M3cE+55EPpRzj9Sm
u0WcV9x5Vp1rzrl3nH+AMrFMp57ywvJMjeN1Hb/kPdxxTTvzevSizNjIY57R
75G1iVfI2cSr+DrtLcfy3a/1sZ7W33bZXuNQneUxnsbZ+Nsv9pf9WN2ZYj6Y
J+ZPchuCUfOqedW8al4thVfMF2N/9jQzf8w9wtm/5DffM7Wluzay7ssc1PlX
+Q2dwcG56Zyfx/kKfH7TZ1gox7+O73WMk/d8ve7tdQB0BL+RS8m7wNgJnRmr
IJ82yLvg/Jet1bu95Vi++x3X4avYsNhle42D8TFuxtM4G3/7xf6yH0f/xu/m
g3ky8ic5DZtXzavmVfNqKbxCDm0oIwt9vC6dNeRN9w77HkbfReW7OZyf3Pla
ace4Ie/05LJzPh/nN/AZz/HMy6a4YjDMXNt7xF4n97rBOHYKl7Cd9sh1vdtb
juW7X+tTxS3bLttrHIyPcTOextn42y/2l/1o/9rv5oN5Yv7wHB/6aF41r5pX
zaul8Ir11YybmDvyO/1Sn/xw6Qc56Ji++D13E1f3S/ruKt/lkVhncHB+V+e4
c86fKq+Cz4T6jIzjhB03Ve0pez2hGlO53u2rvWn3a32sp/Wv8jwYB+Nj3Iyn
cTb+1X2a9qP9a7+bDyNPwh/6pG/W35tXzavmVfNqKbzK2nrWUXP+g3LiTOk/
8TbJE4QNvHMTt8U3f9NX9p7R3/c5omfut/IdH7kfOXP/5D93DljnxHOOIOdJ
YGyCTzadncH/tHdcsfngMZLXEKry2D5yLN/9Wh/raf3HXEm2NzgYH+NmPI3z
eL9n/GJ/2Y/2r/1uPpgn5k/W5VmnaF41r5pXzaul8IpnKfPe5ZMYGspbB/MD
0Yb5ZzjG8+hCP3xjK998Et+T/VHK6JszKZlv+/5H34HlO0GQhz+YqztPLM/y
ng/fkkPPeYScV8H+rcZaXh+o9pRdX8Utj2Oq9Gt9rKf1t11jHt3gYHyMm/E0
zsbffrG/7Ef71343H8wT8ye8gmPNq+ZV86p5tRReUeZd7PdkvvlkDTV98Bvt
M5dNDp185zxpzpjwje6MRfiNOnzjO5GRi03Yu/WFp+6L9J1ZvkMkZ1zZh0V+
9l+xFRnM5+27Kq+C18O9R+wYKuoZg4wxzG5vOVWeB+tjPa2/7bK9xsH4GDfj
aZyNv/1if9mP9q/9bj6YJ+YP3+jN2kPzqnnVvGpeLYVXaZf3Ju9s82zrYI6g
fPiNj+ea4V5+5zv70vQL1tiWeXHujsw5E/qmPWMG36GcZ8HN90v6bhH7xWMV
z+W9vu39X5ers6XmVXWmtZLpfq1PlR9+vDss9hoH42PcjOeIs/GPX0Z/xY+b
/Ov1hOwrhyfmD+XkFGxeNa+aV82rpfCKfUns4T3Kd+aIvNN5lnZ5t2YumbGV
9UmfmXvm3R3bE+eT93vq8FnO+ST/Xs5CUs74wTh77OG5uctVfvUqt57Py1Rn
Wl0/nq/ZlAOwyg9f6Wy7bK9xMD7GzXgaZ+Nvv9hf9qP9a7+bD+aJ+UPOePak
KTevmlfNq+bVUniFXujIeRDyfJNrhmeJWUUW5bxHaW8+RYfMScexGPaAE5/s
eWbeyyc4UM/YJfl8zCtjmDGG593V/ZKOZXJ8r8+/jGd5NuXWc36hKgdgJdP9
Wh/raf1tl+2tMDFuI57B2fjbL/aX/TiOpeN388E8MX+4K4V7T778yCNT86p5
1bxqXi2FV+Qn5c6KbX0mxgTcW0F93pPoQN5v8rDx4b3PezbvVz7ondzr2IMN
iV/NWQ/wS5635N9zbPOmsZbn0eM6fPZeHZvkcnW/5Hj2M+Mi5wtCh4xPsqad
NerUu73lWH51n2als+2yveN6QvAxbsbTOBt/+8X+sh/tX/vdfDBPzJ/P3Hnn
tH/fkdPRO5/ZvGpeNa+aV4vh1cMPPTTf/bs9Tpgee/TRiTt+37tr17Tr5BfM
d/hyHzBzZfABk+Sw4cO5i5zlzxw2c1vsyfnWzJ1tr8cA45rDpnV477Eaf8fl
+tyKz3I610GV78i58swf+tmUH97tq/xC7tf6WE/rb7tsb7WubtyMp3E2/vaL
/WU/2r/2u/lgnpg/8OzonTunY485rHnVvGpeNa8Wwyvmhp+/6675zibmwawH
05b7LWjHPb7c88T99tzxdPNNN80yqQM7zmgyd854a+SV3+me87rs9WHvmTqm
yHG2aYNvqjOtzmPgPD/OfefcsM6Xnrx29FmV3d5yLH/sN/pYT+tvu2yvcTA+
xq3C1vjbL/aX/Wj/2u/mg3li/mDrgboLmlfNq+ZV82oxvGJNFZnc2YTdnBk5
/rjnzOdG7t67d3rwgQem22+7be7jxhtumO/0pV/utLc+Lvvd7fms13u9B+oY
oSpu2WdMfAbTeQmct8e57HIGBb9U+eFpk7tC0GHT/ZKud3vLsXz3a32sp/W3
Xba3iis2bsZzxDn42y+V7+xf+918ME/MH8ZprKW88+hnrZpXzavmVfNqKbxC
L85N0oY1X+435N3JXBK5995zz8Tc8v777pu/3ZffxZ6fev3We5qO+RnjfxIf
6zMjPlPpPAPZH+X3Kgeg87g6z/l49wc+oS5jp/gleevoi98Sl5t6t7ccy3e/
1sd6Wn/bZXuNg/ExbhW2xt9+sb/sR/vXfjcfzBPzh38X55/30vm35lXzqnnV
vFoKr7CNtVTOiTCXRM4Xt7bW5Pjd6rlntQ6/aW/asT3j+Z34LuMI53ZI2Tg7
B5394rzlvtfDd11lPTr73SmbJxmHjLxyvdtXMt2v9bGe1t92jbzahIlxq87X
GH/7pVpXt3/td/PBPDF/6JP8TDve8fTmVfOqedW8WiSvqrGW55Ved/VepGN1
HL9qTlVnWhMLG18lfw7YJ6ecc646DznP554Ol32nle95ZE0g9yAznwfXrPln
Xp7xB30k9wRjFde7veVYvvu1PpXOtsv2GgfjY9yMp3Ee8Y9f7C/70f6136sx
lfnz5G/9+PxvKGdym1fNq+ZV82oJvPI70fNEr6N6b9GxN1Xcss9u+Gyjz3o4
H45zxDmHqsvON+47OBhv5I6q8JL6PbrXGN/kLCn+jf9dhhsZO9EW+Zw5QVfK
2OR6t69kul/rYz2tv+2yvRUmxm3MH5WP8bdfqrhi+9d+Nx/ME/MHe+EhZ3Ka
V82r5lXzaim88rvS+4YuW77jTq2Pzyr6LL/Xf/Nuz5p1ysYn69eJMR7PleQs
Jn+DbdYUxnulswaemOH4l/b8TjvGBp6PM+bY99ibZ90Z3+zfd+TqG0+8bfX1
r71le1zx9rV6t7ccy3e/1sd6Wn/bZXtHHJxfPbhV2Bp/+8X+sh/tX/u94kY1
1mpeNa+aV82rpfDK88dqTOVzFj576LP5LjuPjXO7OffpmB8+cbfU+bwqGI73
afKd+4ixK/FL9Is86uiHeTl7teCQsyZwAQ6wpk0bniHP6hOPv3XGmjEIXCHn
Dn/jc9ajwcP1bm85lu9+rY/1tP62y/YaB+Nj3IzniHPwt18q39m/1fka88T8
8Tp886p51bxqXi2FV95b9DkLl/3O9Xl856VxrratLzyVyxQbkgd3vCclZd8V
5fsTGTcYTzBBJjhk35T2fDNXB7+sGSCPtV9yI/AMsbbYjb/JoY4d6AaWrIGT
d++oHc/YHud8YnrX8c9dXbNnz2xzVXZ7y7F892t9rKf1t1221zgYH+NWYWv8
7Rf7q8ovZL9X3Kj2pptXzavmVfNqKbxy3Gm1p1ytJzhnqcvonzzevtuC32K3
703xfcE8B07J7YCfGJMgh+cZjyDXOXSTv44xD+ONPQfvRmHtN/x5z7ufN8cW
IX97vLA6/bTTJmRTvuTii+c7JZk3n3/eeRN7xtjN+Up8CH8YV7je7S3H8t2v
9bGe1t922V7jYHyMm/E0zuPdIpvyq7tcrT9Ue9NV3HLzqnnVvGpeLYVXVVyx
5XiP0v163lqNqRK7dKh7pbGZ5zLWCm6J+8WH/IYetM8ZV76Z54M74xOX7UfW
qJkLY6P9jizu2oIb6HbSic/f9t3HJ2zBfrDC5m8++eR02e7da/VubzmW736t
T6Wz7bK9xsH4GDfjaZxH/DeNtexH+9d+r/JWmT8+09q8al41r5pXS+FVdba0
iiuu9pTHu8By72E1pkoMLWvS2ZOmDTZkPOFy7Mzz+IP+2KNlvZo9XtbDkcOY
iPEKc2HGRTzDOOHcc86ZfcqYZywjn/UBsEAGHLju2msn+mBdmfUE17t9JdP9
Wh/raf1tl+2tMDFuxrMaa9kv1d1t9m8Vt1ydaf3mkz+xzanXTtfsOaJ51bxq
XjWvFsMr5yzNvH3M413FtW6qH/eUffbG8+JxbEA5eeBzdyN1fLKWjq7YlD3s
rDPnDI3L+Iq8O4xv8Bk+xXZwYW0ZXxNLBTdYH0A+OWXhD3LCJXRj7MT4yvVu
bzmW736tT6Wz7bK9xsH4GDfjOa7bBP9qb/p3498qb7/54xyAzavmVfOqebUU
XmUOO+bWy7M+34EOPvOIDTkDkvdw4or5Rk61p1ytJzB24O+st6ec/hhXMA/G
fzzvfOqMW3KWlLnw/n375rkv69qsDbMOwJz6uGOfvWJu7DLyMi4CJ7jBegJY
hUuud/tKpvu1PtbT+tsu21thcqj1h0170/aL/WU/VmeHzQfzxPzh3xfjM+dj
bF41r5pXzatvdV45v3fmrZE1vnv9d9ZrN50treKKvX/q8ohP5tfVmCq+CG7Y
gCz7i3zo+J2zIfYvc2PWjSmz3wpPTj3llHlPgTMln77jjgm/EGsFfyiHS653
e8uxfPdrfayn9bdd1VjL+Iz/HjdhW8Ut21/2Y+XrihtVfvjmVfOqedW8Wgqv
fO9h5Iz51SNjzK3Hexu9eJe77LOTPktSxRVXe8rjunowqcZUYI/8A3cvXz99
9StvJE5qjpdmjfyoHTsmzn9yroT4WuwhjvbMM86Y1xOIs2L9OJzhbEpVdnvL
sXz3a32sZzXWsr3GodqbNp7G2fjbL5Xv7F/73XwwT8wfZOTusOZV86p51bxa
Cq/oBx3pn+cyR3TZMpInB/uTV2jMrVflVUhMUObQKVdxxdWeMvNx9KLe83eP
YfDziSecMPvxI5dfPl364VdMd+/d+xrGO5y15G/Ow8AB1gQO3Auyd44jCmeQ
WZXd3nIs3/2u6/OUntbfdlV701XccoVtleehygFo/9rvFTfMn+re0uZV86p5
1bxaCq98TyK6brpjy/nDI3fMrYo92OLxW85aOv/AprOlVYyucfYebrWuXo2p
WCfAv9u/r5XNk5RZS6dPuHTrLbes1bt9JbMaa1Xr8LbL9laYHOpMa3A2/vaL
/WU/2r/2u/lgnpg/iQ9L7vrmVfOqedW8WgKv8p5EPs/mjkberTyT3HG5V7G6
Y6vKr47um3LrOT+P8xVUZ0uruGLmwAfGKR9cK3vd2+sA1ZiKs5acobnyisPn
Mm3JS4DN9M/frnf7aqzlfkd9NulcxS1XZ1qNm/GscgBW+eGru8Psd/PBPDF/
kkuxedW8al41r5bEq/8LpRYfmg==
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3XnwfXdd3/G0Mk4HizrYsRtdnE73hVa7L/fW7vui3XdstZutrVgZqTrQ
hnaGQIKEiksStIu7giG4LyFoCBqCAmrQLyFoCAEDahIggIT+Xnfych7fT783
TeT7c3Li+4/z+37uueee8zmfz/P+7vu83svn4z7lMz7p037pJZdc8tRfduGf
T3rK0z7xMz/zKZ/zyR+eF5/6lE//hI//9A+70PysC9sXXtjS/okf/5R9tzfd
9k/2b3/bv97f/ZP/dv/m2//Z/s63fOrPtX/8zU/Z3/XWf3n4m2Pfdte/2t/2
xn+8v+Mn/vnhM7f+yN/dv/XOTzscf/Jj/3B/7z2fuX/XfZ+1f8Otf2//jrs/
ff/TP/UZh/0550+9898fzpPjs9nO8Xmdvzln+/XGk390aOfvjd/7Z/evvPHP
7V9+/Z/cf9d3/on9N3/TH9x/40t+72F/X7/65r+yf8UNf2r/Hd/+x061f+A1
f31/0yv//P67v2u3v/n7//LhHN/yzX9o/yM//Hd+7rPp5/Xfvd+/7Lrfv3/d
az9p/00v+wP7r/nq335q/w+9/m/tv+cVf3r/bd/6R/avueWvHT770ms/fv/D
P/S399/7PX9m/+3f9kf3r3/dJx+u+63f8ocP18y5v/7rftfhunk/fX7tD/7N
Qx/yXs7znd/xxw/nz7mv/cbft//ar/kdh/Z1L/2E/dd97e889PvF3/B79l/5
Fb/lcN6v/qrftv/yL/uN++971V883F/ey/jlvPlc+vz93/eXDu/92I/+g8NY
5H4zJ5nX9Ctj/aNv+PuHfuX4jHH6lP7n+Nx/7jfv5zyZl7yX8+azGbtbXv1X
D/uzpS/D1XA1XA1XW+EqXJSrnC9zG2Zuf9M/Pbz3k2//N4f30tfw03b6VR7C
TOY+vISnXCf78lresj+fD5+5p/x9yx3/4vDZ7su85No5Nn0PuzlHxiTHre18
JlvGJZ/Lvoxpxiefz/2Gt8x/5iZcZW4yrz/4A3/jME4Zt4xP2cv8Zs7/9//6
TadYyvlynpe8+MmH69zw8k88zG3bea/z8A1f/7sP4xvWwkbmJPvDVeYsnP7P
L/+4w7Uyzzlnzh+ucly2L3vRb9h/yRf/6kM77HzRC3/l4X5ynfQvY5Q+53Xu
K++F6cx3mMrnZClzmTF61U1/4TAfaefzGfNwk/tMP9Pv3Ff253W+MxnfjFfe
y1il32Eyfc61c868n+9hvvPD1XA1XA1XW+Eqc5LzZ/5yfLnJeIarMJG5zxZO
+jrcxFYKa2Ep7ey7796nnmJMGyztfDbH5ppp9/ptZxxy/bRzrzlX9mUM8/n8
LVdp1w7LvbXfGY98N3KOHGc7Y5zxy/zl/Bnv2DGyITPaUdpgMpn3M89hJudP
O9xkfmPvfNVX/tZD/8J1jsncl6u0ayOlX1/xf37z/pqrf92hHRvqRdf8+sPc
1R7L/ea9XDffn+4PH7lezqe9pB0lS/lsGAgP6VvuJ/vzmdqjOSbtjEXOmePy
OuOb93JsPtfjytlwNVwNV8PV1rjKVq4yN7l2bZ7wkHbZCBNhK9z0/Z/56f9w
iit50wZTo8g58zrnzXVz/TJUrspSjpGr3FdswfzNvhybc3iPZTH3mfvJsWnH
Lsg8X33Vk04xIFfqBrEnMndpq0top9mW2+yPbfWlX/JrDjZeOLr8uU84vBd2
/vt/+/CD3fbFX/Sr9h984IFdbbMcHy4yP+Ey+9Of9Dt9Sx+yvzZPrpsxy1jk
PbUCbSf5kav8zZbr5G+ZyfkzZjlHtYWcw7ZjnrHK/tzrcDVcDVfD1Va4ypz3
eT/zl9/gMJG5yvzndd575zv+3YGNHJ/f7HD1wQc+f//ABz7v8FfGtMHUJdTt
0+fce15n/tvOPZSt/k0fci9lPeOWdljKmOXzub/8zZaxiW30P17wK/aX/tcP
OzWn2jzqAOrktnPe2E9pp8+Z15xP3V4dQ1tOttPOedO3nDu205XPf+LhnJnz
9CHH5XzpWzSD2G85Lp/JNdLXjGvOlfuoX6J2TblM36prqBtoO8lSxjDt3Fvt
1fQ149x5yjW7P/tkLu+lvzlH7dHhargaroarrXCV3+T0L+NQO6pb5jM8pR1e
wkm2+9/ztMMmY9pd2mNqFGr4+rWrm+d17aicK/3NZ7LVBks791t9Ir/t9b86
R9owtn3eVwPXR5zxyVzFpsn+2CA5b/8+lF9bnV/dQzvE70LbmdNcN1zFv5xx
6hxl/HJv4SPny/7YXv1crq1fWJ1crUDbSX5y7r4uM2Wq7W6+TjvjWW2h50t7
uBquhqvhaitc9bk/fc84pB0bprZMttxjNIMw9Z53f/b+kkuecbCrZEwbTK7U
7eXKWK+1XZbKVbX1vM7m+NuWK5/f1bf1+RoTFXulGoJcZe7TXrnq/nymn4tu
r+9bX4BtudJW9PtS/SV8VusOP7F18vmwssZB1Re8+oirk2sTaTvJT15nS5/c
n/N06zzkHmt3hdXa4rnGcDVcDVfD1Ra5qr2TLfvC0j0/8x8P8cRhKXqCjGl3
qUvYVsPXr23cl1uO69jm/ms/OLbaHj6Pq1frw9W3a7yT8cDV0htPleNiJ6QP
uUba1RhyXLhIfzKnxj8bF21smL5y/QXqJ9qTq22Zua1WkfnMNY0BNg5Kv7Da
uFpBbNWcM3/P4qf7umXM6wfpMZmD/r+Te+h7ue5wNVwNV8PVVriKrROtIPyE
g9hK73/f0w92VLV0uZI3bbCzNIrq9vVrG+vVfoYl41cdK20Jn6/Vn23rq13j
lxrfa85L5iC2WdoZizBbP3K19Jwz1wg/6Wc+U877DB9Oc/3EHpsrdCx2Wh+6
vnX9C+ot2px+Bx3D9MN4YDWNbHlPnVytQNtJljL+5bmxd9lqG2Z75Y037l56
7bW7l1133e4DP/u5uwv3vbswvrvhargaroarrXCVvseuChtlK1v29XdaxrTB
1CXU7W2nb3mdv8bneO/aBrZ9jlZb1vdqPJLxuuawmNuy5nsaxxs7LYyVmbCW
62Recu7sr2bd70rzhfJ+n+3zuXBpLq25RcZXG2+mz922/gg1GW1Uv7PdasPV
L6w2rlagvaQdJUsvuPJj9s98xiX7995//y62asYz39nwdPVVV+1edM01u1fd
dNOBsZdff/1wNVwNV8PVZrjKdctANOsveN5H759z2Uec4kq7y7Yahe3qxrk3
Y3K8R7nyuVjdWF+qsUbG38qVuSpytdY3CDtpZ3xzfHMwG7dkW64a25VNrnJ8
5yb33poS1peQK3Nv5cp4bGPS9NGbO6xuI1fatH6v9Qurk6sVaDvJj1w974qP
usDcO3fvuPvu3atvvvlgW73ihht2ee/Nt99++DtcDVfD1XC1Fa4y7ldc/pGH
2KRnXfq4C+3Ldxf6u5MxbTB1idpXeU+t1T77m+5zrjrw6hutnWIckXG25p6Y
m2m9Auv52A7T4SxaQ/nNZ/I3+8NZzpnjsqU/jVGqRp257Hek8VVtVx/oXJ5V
f8l6FObkmqNknLbx2/ru9enr11Dn0db1u5/jMm/Zl7lOLYr4JtQNtJ1kKX6M
+PPfeuedu8R5v+HWW3dvueOO3b333HPg7E233TZcDVfD1XC1Ga7edd99h88+
69JLTzGm3VV9Nvfps6R98Dfa51afZ9V41/yOxgUZN2suibmW1YWrkbcugbV6
rGUXhpp305ip2GzhN9fK52Mz1e6zneuElfY5f+sLLge1o2qTZhw6Z2GiPNSv
3lzdbH0/c239CnN4zWkyrts4N/OI9fvrB1EXkjH/r3CutZ3kJ9/b5Dpd9uzH
H3KH8v9ROAt7sa/eeHIyXA1Xw9VwtVmu3nbXXbvX3HLLqd9Kz+m1/P31+fSs
WB19mvKV/jdGt3mb1RzMo7TOgLV3rE2Xa7Zea2yq2FMv/MKPPdXu8dnXmgLN
Jcm1ayvldeORGiOVe+z8ZX/ndG3n/dYECivNaWqdipy39XutYWhtQ+s7lcPm
BVsnqjlQxoEbF2dsgDED+k3UjrSl/b+l8d8ZP1nKdznxbmEs3+foEfl/abga
roar4WorXMmSv49+Vq583lSP1Ue5xrCu25rzuHLVugHW1bHWXO6xcU+2V65i
T131pb/2cI7wGH9ztIX4tKNdyFK21lGQq/ytDi5XtaMaK5W5CO+Nx8281qZq
Tm7bcpVzt769XOU8rXlo3ae1Dkbzgm3LlXHjcmUsgfEG6ktype0tM7KUuYnd
9dzn/PLhargaroarzXDlfn8r5crnSrnSFylXxq9qWx3LeWwsbOe5XFlTTq6s
Q57Pd50O23IVzaJ1GOQqekOYy33LVfNGm2NartLPjHOuL1dpZ75rz8hVmMi8
ZVyy733v/ZxDP3Ns5liusr/rv6xctRaiXFknyhxh23JlPPkaU1eNR670v2iH
H7PJj/E2XA1Xw9Vw9Wjm6pHqDGoL2lfnpTOoLZyXzqB9pbZwXjqD9tV56Qxq
C9pX56UzHIupezg6g3b4MW1huBquhqvhaqtc9VnS8xhfqt6u31mu9DvLlTUB
1voA9TuvertrS5Ur/c5ypd/ZdR71O6u363eWq/qaV670O3df5lO/s1zpd165
yufy2rZ+Z/V2/c5ypd9ZrvQ71wbMe/qd1dv1O8tVazrknvx/5pjePlwNV8PV
cLVFro7FIfvb6rVyD+lDfr+NX7VtHLLxV8YhG39lHLLxV8YhW5PcOGTjr4xD
Nv7KurLGXxmH3PWokjO7xiE3/so4ZOOvWrcutqJt45CNvzIO2fgr45DPir+S
sbUWovFXxiEbf3Usf8p4cuPrHk78lW3/LxquhqvharjaClfH8lJt65f0t/hY
fof5j+bjWDPHtnmp5uOYl2o+jnmp5uNkrpuX6jrI5qWaj2Neqvk4tbWaN9S2
ean1J7QGQm1I83HMSzUfJ58pR7Zrg9YfcVZeqvk4Ob6cmY9jXqrr1JyQL2z+
1CPNx7Etb9pjw9VwNVwNV1vh6rzqFMnYh1KnKH2q3XNedYqsTWR9hvOqU2Rt
ovOqU2R9hhx7Vq37h1OnyPoY51WfQd5sm8szXA1Xw9VwtRWuHk7dWtv6LuXK
51l/0/2tr2aR63Ytxvp/5ap1a+XqhLq1cuXax7atW2u9PuvWypV1a+WqPK/t
HuN6IpkL69bKVeYz9167slxZtzbnDButDVv7yHp9a93ath1bv7/WhvpQ6vXZ
ljftMTWo4Wq4Gq6Gq61wpV3081nHpD7Ns9rN0/T51/rtjlGOyVabrmPimh1d
x8R1Hl3HJPus3951TKzfnvNlzrPWiG3XMbF+e/rQdUys3+46JtZvdx2T1mfP
5zKHtV+s317/db6Hta0ydmlXm8/W+u2Oo3XvL3b9dnnTBtM2U7cfroar4Wq4
2iJXq73U+FVZcl1L413XdS3rA9U3as1V2/LlGOY+va+8zhyn3WfnjFHmPzaV
7XVdy/qgXdfS9bxc1zJz3fW8XNcyc1ON3nUtXc+rsVnVIrLVZ12NO6zW5sr9
VWuvTm1N22w5rhrL+l2rLapWo//Cuoj6+tf4N3OEy9dZbbfWoapeoc9luBqu
hqvhaitcqY2rFaz2Uvkx5/FYfYA1Prb15fSZ6kv1Odrna22MtrPVf5p2xq+x
Vrn/ru8ceyq2VeLKXN+5MVzJUbWdsc+85Vyu75z9XdfZ9Z2N6XJ95/Qtn8lc
Z1zzOvO42jy1UdoON/Vx5Np+j7QtXeNMHUY/hb57Y9uM9zYf6ljdjDV/qvvU
KNQu9GsPV8PVcDVcbYUrtXH1AXM6tJ3kx/oA5kiaM2LcrHXI5Uof68pVn7u1
PbRJOl9hJPsy9om1CkvRHq58/hMPtkiYuvy5TziMQ94PSxn35unIVeOS8lqu
MqZd47k6RBjL68R65bxyVT29Wny5ss9+L8JzzhmfuDakuop+B33xxqoZv21c
t7lOuUfrBvf1sdzhs+yx2m3lyhiD4Wq4Gq6Gq61wpV9YbVytQHtJfqyZY9t6
AuZUmmNinK3xt/pebatL+5yureLc9fk8Y5l7DzvJn4wtEj2+fupoDLG9GuMc
zTxzlTkJczln/dPV5GNLqclnvnN85tR2+t76R2EneSuJ25V5bUJ1Ev0IrmGt
z71jVx9+78HcJXN7rXdhPSjbK2+1x9QojsWTG/c1XA1Xw9VwtSWu6gvOOcuB
OrlawVonp/xYUy7z31pz1hmw/oA5mLl+Y7WMyz0rTqk6dH24HYeuC9a2tk04
7npZGbvMY3SInL/6QD4XGyR2Uu2atZ3zVVcPb5n3zF3eD5+tBxgurr7qSad4
1sZTA9EvUC5yvD5048qMuzYvyVzdxgKnbV0L6wBbC3HlTduvtpl6hXq+32Vj
wIar4Wq4Gq62wpVxUPqC1cbPqg9Qe6m1d2Qp4599eW0NOmvTrXUJui99rt91
bTeOt1xVp69vV5+vz/vqABmb2DCZC9sZt+rnmbtwklzNnCdzkvnP+XKel7z4
yYfzNsdHPrXZtOXUN9T/9YkbM2YctXlG6Wdzb83JtU5FfcWZd2sbWvvXtuyt
taGqV6jh6+O2bV2J4Wq4Gq6Gq61wtcY+NedRPVydXK1A20l+MhetQ557tD75
WXXq5KpaR/6ay2lui/G9xv3Klb7glavqA9pI2k6xMbIvc29b3mqPZfy1zdQr
1PP1cRsDlnOmn2HVeGlziMyxte6EdZmsVWgNw3wHu86Lde/lbbXB2lfb6vn6
uI0BM558uBquhqvhaitcGfe7xkFVD1cbVx9QN9B2Wlnqmh0n1C2vhpH3rGVn
jTvr/Jw8WCcvbXM/zYUxHtg4YX3E+o7Vz8NAbJWcS5vqmK2l/qA+nznK3OZc
+rLTh1y/cV+1i8wJWnNma79ZZyn3EZsttpc1Ca3Tm/lpHfv0+ax1XmRPe0y9
Qg1fH7dxX8aDmSs0XA1Xw9VwtRWujPU19smaOfqF1cbVClbbqfzkddexKj/r
Oo+ts+N6kcYkZ7MmnvUQ8rp6r7miZSfjY/yw8VT6lGVD20k9QRtMDj2PsVvG
M5vvYw5s+tLaSdaLsJ6SNQaNf7Yu/bqeddcysy1v2mNqFGr4tvV3GwNmjLT5
U8PVcDVcDVdb46q/icb9NvZJX7B1VtUHqr1nO8t2Kktd57G+7sQ351pd++NY
LXS5MpdIrqyfcFYOaddA6bzbPour2E5ypS6hbabNtnLb65rrqtZhfSRrBlpT
1zrz1p9f12TpmmWu47kyVva0x9Qr1PD1ccuVcdG2zaUdroar4Wq42gpX5rkY
62sdOeOg9AWrjasVaC/JT86R/bG3bOdcXRey2kLXxqqu0d/t6u2NnT1WT8/6
Qs7pmnNaHUCdXN+xPuXVZ1021DG05WTb/mQeut5HvxftczVu68m7xoprkLku
p+tW25Y37TE1CjV8/dr6u40BM0bavKHmpba2xnA1XA1Xw9UWuDLH0zwX436N
fdIXrB6uTq5WoO0kPzkm+2OD9fjWasj5ul5k282LzPUyL80XCWvWV+8crTZM
n+vVvW3rIzZuyrhic230Zfvsr86v1rHW+iv/9j/32zVTch9dUyz78jfn6DG5
f9u9RmOFy5s2mLaZfVbP18dtDJhx0cdqQ1lrYrgaroar4WorXJnXaU05c16M
+zUOSl+w2rj6wGovNV5rZan6fM5TG6/ael7nvvJe/jrm2iS2fX5X09bnaxyU
ccLmzjSfNLkz5vUY57zGelWTV/9XD0m7eS/ain5fvN+2a2NmTE4erH+UPtTu
bVvetMfUK9Tw9XEb92U8mDHS5hCZV2vdieFquBquhqutcGVeoXmd5rkY92vs
k2tXqYfXZ33yYB3UagXaS/KTa+T9xMnmmGofZ3GVc8qVz+Pq1fpw1xinxv3K
lTkyZ3GVugrmulqLz/hn46KNDdNXrr9A/UQbMvuaY+Q4OD79P6G+kvImV2oU
ttXz9XEbAyZX5g3JlTm25STXHq6Gq+FquNoKV1sfK22G8xor6wjZfrR9B21f
jO+g7YfzHbQ21HA1XA1Xw9VWuNr6s7Ma8vrsrIbcZ2c1ZJ+d1xpBfXa2ruyj
QZOxLW9+Zx1nNXzb+ibUZPRNqMmYV6smo2/C+oTD1XA1XA1XW+FqK75UY4r0
pRpTZJ/N39SXakyRvtS1TmzrqLu2yKPBRy9va7u2mTat33HnxRgwffTmDdk2
Vk0f/Vr7t7UQh6vhargarrbC1S+22FrjaR9ObK1cbT1me7WBzytmu23r9w5X
w9VwNVxthaut51qaX3leuZYZ/9YccH3JR1sOr7bZxcjhdd7z2f9fDm+O0SYf
roar4Wq42gJXGf+t1d7JveR6Yd7aO9ags/aONehcA8v2CbV3rEGXOWqdunL1
C1HTybbsaY+pV6jh6+M2NsCYAf0m6kja0v7fIg/H1nmxvv1wNVwNV8PVVrg6
2Xgt1sxn65Pbzvy2FmuO7/pW1mK1JnnHvzpJxj3sVytPX8rKxarxa1vetMfU
KNQuVj2//m5jwIyjM5bA77X60lm5vRlb/y+SH2vdD1fD1XA1XG2FK+uT95nx
sbw2R/annXF5OGtzxK7IeGVuLvaaL7ZlT3tMvUKu9HEfW/PFtnHma6zdI1nz
RZtquBquhqvhaotceYx66dbXakzfMhZp5zNdq7F6c74zrU+e98JbfeV5v2s1
2r4Ya4DaljftMTUKNXzbq7+7MWDGSJs3ZO6V8efG49nWp2wtX/8v0tYaroar
4Wq42gpXPj/6G2pc1hpfmvMlb8WcRPP0zfFc81wa92vsk77gznWuq06uVrDa
TuUnXOQ3Pgw05ijXacxR7jXnzxjWN9v6dtUZer7y1/WMc6+tyVofbrlJ36qJ
Z56zVT9POyyFj7AWftLOvvvufeop3tZ2bTP1CvV8fdzGgBkXbd6Qbe/R3GRz
aqxV6P8t2t7qUfprhqvhargarrbIlc+V/raau+p1reFjHQPzOq1ruua8ZK7S
B+Og9AWrjasVaC/VHqpPXJbarh7d/Nhy1XzXcpot1+l76W99z+Wq8Ux9xq8f
OvZPuEm7ekL4CSdhrO/Hl2xb3lZ7rFyp4cvV6u9uDJgx0uYNmVe7ctW6Cv6/
oS19LPZYrvRND1fD1XA1XG2FK/2MttVdfQ71t9i+WbPUmgbmeJrnYtyvsU/N
Ewkn6uHq5GoF2k4rP33dehC5TnM2ramUvz2mNlb+Nielfc6c9Xm/NRLCRFjL
/Od13ku8cGykHB9GwtUHH/j8/QMf+LzDX3nTBtM2U69Qz9fHbQzYGhfdvCFz
aa2vfqwWkzazOpJ+FmMPjM0zbnm4Gq6Gq+FqK1wZd2o8qr5IfZTqtJ23XN/f
bu8l7T6fm9tizotxv2scVH3BauPqA9pLuVZtEVnK62ytZdf9zVnJlnnJ1ryW
xjqX0zCWuWpcVe2obpnP8JR27KZwku3+9zztsNmWPe0x9Qo1fH3cxn0ZD7bG
SPd+zKv1O64NvNYqrN/EWIJj678Yl24uz3A1XA1Xw9VWuLLukG3jVI1f1Xep
T9PnWZ9z/a03r7PM9Rk385lrGvtUWyfs6xdWG1crOMtekp/uO2vrMeE7/c6c
ti5CbYg+94eL8JV2ju299nPRDMLM2i5v2mNqFGoX6vn6u91yXL+z5g35ndWm
VefRD2LbmAHj6Nbafc29MjfZOg/D1XA1XA1XW+FqrbnXXMU1h/GsWFa50tcp
Vz7/agNoG3T8shn3a+yTmobauPpAGKqNpe0kP60hm75kzPXbVoeO/ZG47PjR
P/Czn7u7MIZZr2MnV33uz5Z94Se1FBJDfMklzzjoCXK1sqc9Vr1CrvRxr1x1
rPw+aqPKlXqOXBkDYIyccePmVa1ropUrfTTD1XA1XA1XW+QqfahmnXbnzrx+
cxvN9TDe1ThYfaC21Yd9XnbMHMOcL8fnWsZB6RdWG1cr0F6Sn2rc6t3ZYlMk
Vygx0q+88cbdS6+9dvey667bveqmmw7tl19//S7P/NHPw09YiGbw/vc9ff+e
d3/2z2nptuVttceqT6jh264/IPd+LC5aW1R9Rv+FPn1j3owDNz7cnKk1p1j7
qnWoykz2Vcuv72O4Gq6Gq+FqC1yl3Vgla7tZ8+2ENThsmwtpjVbjY40X0meq
L9XcFtvaGMY+dZ2wrv1RPVydXK1A20l+XnDlx+yf+YxL9u+9//7d8674qAuc
vXP3jrvv3r365psPTL3ihhtOtXPN9DnnLlvZqmlnfOVNG0zbzHb9ETm3Pm6/
O9qW6i36I/TR67s3ns147+xrDpQ5wmvdjNaVstaiNRjTn8bGpb+tDz9cDVfD
1XC1Fa6qUede+/xd2ynt7Ktd1LmsTdLn4vy1boB16mwbT2sdA32s+l597vZ5
XP+v7dZ6zb2oFWgvZbv6qqt2L7rmmlMs5Tk7fte33nnnLnHVb7j11t1b7rhj
d+899xzYetNtt+0yJr1Wzv8Fz/vo/XMu+4hTbdnTHqt91TzTavh+F7QV1U/0
L9he82obn2b8tjlN5vxaB8P6GNaMsqbiWme4dfhdmyb9aezbcDVcDVfD1Ra5
Kh/py1oPvHXC5cracXJlPQFzKs0xMc7W+Fu50icrVz6nH7NbclzmNL5etQLt
JfnJuCa36LJnP/7wHP6sSx934Oxd9923e91rX7sLf7E/rrj8Iw+5t3n/issv
310Ys1O8yZV9kHNtP7lSJ5ErfevGnhmPbb6Sbbmy3oVcWSNxrd3XuvrZ33Vn
bK9c5bzD1XA1XA1XW+KqPuLMxdrOPK3rLWZfuen8t85qNWNrzeWe6qetD3Wt
4WNOinG5xuvqq9WHq47tc722jXPdmK3ck7aTLOWYxCKFsdhgb7799t0bT04O
jMU2e9all55q53xdyyyaRY7PXxnWxlP30C+gr9xYsjW+unHX5iKZq2v9ivrd
8741D4+t/2L9/HVNmfCUfWGja4+Wpca5laHhargaroarrXCVfebyd/6yv+sn
Nh43dkL178xv7avaRa03nvO3Drk16HKe1qazLsFar0CfcPM6jeM1rknfrj5f
9XDb2kLaS2m/7a67dq+55ZZDTkq0+Oy37THyJpPabOoY6vz6u/WJnxUfXaaM
qa6tZQ0K6zXZtrZh+G+939rQ5aZrxLiGmmuJypLt2n7pW/72OzFcDVfD1XC1
Fa7SLg9ylXbmO3OX49IuV11vMePSNady3hybOY4dkL95L/tbk3zlqjXr8l62
d7/rP52qY2AuZ5hJfG/eSx9iP6Wvxv3Klb7gn3z72w/6+mXPfvZOfeCYvWT7
h17/+sPnYiNlblO77r8885fstcHUKGyr4evjlivjoqvR5P7WXNryZDs2VOY3
82+tQuv3Wt8+NlY0ia5HmdfRCuTK9UPzmWrr0RvCXOs4Vf9oPnKukb6F11xz
uBquhqvhaitcjX310PaV+8e+Grt9uBquhqvHHlejtz+03i5Lo7ePH2e4Gq6G
q8ceVxN/9dDxVzIz8VcT1zdcDVfD1WObq8nH+X/zcbTHJh9n8ryGq+FquHrs
cTX1GR66PkPrAPaaU59h6n4MV8PVcPXY4irnn3p9x+v1qRVMvb6pAzlcDVfD
1WOPq6nf/tD129UHtIumfvusCzBcDVfD1WODq1nP66HX81LDl6vVXpKZWc9r
uBquhqvhajtczfrOD72+s3q4Pm61gtVemvWdZ93w4Wq4Gq62w1WfEXOc7dg6
icmJDzL3m7kLD+lr+l0tvs/+bWcu8rexrd6Lv/U+/6oP6zPVl2p8kfG35qSU
88YA9bUsaYOdZY/VbquGr49bPVx9QHtJZsyrte7EmnvbXCTjsY3T1kev717/
hXqONq3f8X73M77hJ3bWlc9/4ql25j0cXf7cJxzGIfMffjJPzdPJ2GR+MseN
I8vr7O//U8PVcDVcDVdb4arPjLGl1E5znsxh5rSxUP09b52anDc5LInbtW/+
due4nC++Tp9zw0PuIX3VN2q8kPG05piYg5l2c0isV2B75a32mBqFGr5+bf2/
xoCpCagVaC/JjzUo1noUrVNhrq65S8ZvG8/WfnZ//fvqPOo/2sD+n1CtJ+OV
+8+8RXPIfESPz9x1HuJ/sR1Gw0nmMeesf3q4Gq6Gq+Fqi1xlf+a98xgeckzO
E07ij/S6/hbnvfgtk7Ppc6tarr5OY4GMj62ekOuaS1K9IG3rD1iTx5p1K2O1
weRKvUIN3zE3BkxfsHq4+oA2kraT/FirMJ9vjYu1Xa7M7ZUr471ra+UYYwAa
w93Ptb1yVZvZ/zcyL5mf1CjMcdHaoztkrGLbxv6Wq3zXM29pD1fD1XA1XG2F
q5yvfuVcr7kWmbfq7Z7T31yfQ9Vp9V0a22O8q3GwuW5zQ8ydtJ5A/cZhwxp0
1mi1LW/aY2oUa15n2TPuy7oS+n/NG1IbVx9Y7aUyEyZat9C2tQ3DQOO8rHeR
67buhW3jwI0PNzbAmAH9JupI2tW2YzdlTjLXOS5c5P+XMpaxzXkyj/l/Zbga
roar4WorXOX3Mccn7tZj/A31uVLdtc/9uZY+SuN2jGs118NcSOsDWDcgc5v3
wpW15jJWrb9qfXJ5W22w9lXdXj1fH7cxYMb9GvukL1g93LoT2ki1ffIZ+clc
tL69bWsenlAL0ToY1Try1xxhc6aOxZAbS2CMgX4WdSdtb/8vynVzfOY6dmze
DwfD1XA1XA1XW+HK38T6hNfnx8xF5jZ2jz5H43CMUzWPY81t7O/yWgegtXGs
HWc91Yxf642nz+Es78mYbe0xNQo1fLla477KlbG+xjsZB6UvWG1cfUB7SWZy
rda6t50+tx5+bbO1RqJctc5w7a5yZU6x8eTGma81+hp7IFfqUXIlPxmvzFX+
7xiuhqvharjaClceo16qD9EYG+NOMwe9ljka5jCa12/dG2vBeV/WD8/xYe2F
X/ixp9baaIxwxkbetMHUKNTt9WvbNgZszfE8eTBvaI31bezT6v+tHm6tQrUC
7SX5yeuuj2a7Wn54Cy89l7UT259smceMT+7LOhtrrnFzkI0/Ny4935HmaMmD
//+s/xfVVh+uhqvharjaClc+P/ob6jmNLzXnwpzE9be4dWys7WbNt7UOauuE
r2tndG0p11uUsWPrcahXqOHr4zbuy7hoc4XMbTGvdo37beyTvmD1cPUB7SWZ
qe0UxpoPm5oP9XUnvjnX6poy4bl19dd6+80zMpcor40bb12O3Gvnxvl13v2/
RdtbPUodfrgaroar4WorXBlnJRs+b/qbax/Mx8+cdL2P9j/9sK6pdb9dC8O1
ovI3c9vaEV1X0ba8aY+pUajh69c27su2MdLmDZ2QV2uei7G+xj6t/t8cm/fV
BNQKtJfkJ+fI/thYtnOurjdabaFrrlXXqD1Yvb2xaDmmsWjNy+kcdR79v0Jb
Wn3pWEyysQrD1XA1XA1XW+HKGBt9jj77+xxqLaO11l/7mXtqHe/0M/1L2zUv
sq+1yXtMaxy13WuES7nSBpMr+6yGr4/buC/jotdcoebSmstpjqd5Lsb9Gvuk
L3jVw2tfaSNpO8lPjsn+avL1X6/tctV821xPrpwX/x/w/xO1I9tyZeyBsXnG
LQ9Xw9VwNVxthStzTo1HXWNyqsmr0/rcuv52917S/+aDZst7tmsLZNwbF5s+
1D5pW960x9Qo1PD1axv3ZSy0MdJr3lDzaq07YV6nuS3G+ra9xkF1ntXqs6kP
rPZSmSl7agtlrzZezpF+x0ZznP1e29YGVhfSb7LW6KvOY/z5GpfeXK3harga
roarrXBlTqI5GsapGrej71Kfprquz7n+1nvvjRnqHPQZvnNXTbu8yZUahbq9
er4+bmPAjIs2b2itWddaE43dzbXN5Wz/M5bmuRjra+yTvmD18PqsTx6sH1gb
qWMTvV5+mkuT+GvbjqffWW1adR79IMYGGDtn2zhzc6/MTbZex3A1XA1Xw9VW
uHq0jZWMXYyxMlfo4YyVNXy2/h20fV7fQety+H0croar4Wq42gpXj4Zn5xzT
WFx5O4ur/JUr/dq2fXZe16Iqb3Lls7NcWbdn65qMtuiqyTRuSk1GrtRk5EpN
JuOSc2cch6vhargarrbC1aPBl7oyVhvMtraH468vVQ35rJzKNZfWtr7UtV5r
axVuxUdvDJs+en0T9nn1TdRHr29CH721iG1bt3+4Gq6Gq+FqK1xtPbbWObL9
ocbWNqbIOnW/2GK2jVV7ODHbrh02XA1Xw9VwtRWuHm25lmoUFyPXMsdXg7B9
LNcyx2g7bTmH13oX55XDa9t1S4er4Wq4Gq62xpWa+cWqvbMy1rb2mBqFGr5c
6cOVK/Vtn/G1edZ5r3/6LK4yp9Zlzfm3VtPJtjWdrAlsTafWtE8/bMvVCTWd
cr+tZZE5yjimPVwNV8PVcLUVrsrKxarFmj7kb+qSy9tZNlj+qtur5+vjNgbM
GCd9vure6gDaQtpIcnJCLdbHUk1y29Y2zHy1xq+1Da3xWw0n99Pvdc5hbcPc
e66bsR2uhqvharjaClcXe22OlTFtsPNYm8O4X+OB15ioR7I2hyz9Yl7zxfbD
WfMl45nxynd+uBquhqvhaitcXYy1GnOd7MtredMGU6OQK/3aa7sxYMZFmzck
V8YJr1zpO25bXV1+tKnUHKzRuvU1QOUqn+kaoNmf1/m+VXPIe+lP1/20PVwN
V8PVcLVFrlqTtT7ccpPxrBaQuc9W/TztcBP7K6yFpbSz7757n3qKMW0wdQn1
CjV8fdzGfRkXba6QubS2zSE1j8a4YnnQRjq2Toc2mLaZMVrWrLNujzk+5nKa
27LWSmrcr7FP+oLVw9UHMnddv2y1nXJ8WAqTYSA8hJ3q+M0Tyr76MTIu1dXV
E3KMec1hN+M9XA1Xw9VwtTWuGs/UZ/z6oWPzhIe0y0aYCFvhpu/Hr2xb3lZ7
rBqFGr5+beO+bBsjbd6QebXeo3UVnN8116a2kPqA+rk+ZfV59QrzdGyb02oN
H+sYmNdpbstaRzdcpj/6f12PTG1cfUB7aeUnW17b7nez+U45b2MQuj9jni3X
sV3bK30droar4Wq42gpXmbM+7zc3NEyEtcx/Xue9xAvHfsrxYSRcffCBz98/
8IHPO/yVN20wNQp1e/V8fdzGgK1x0c0bMpfWurLWB3DutG183lcP10dsDJXx
Wvqs9WWrY6hvaOPJvH02l9O68ea5GOtr7JO+YPVw9QFtJG2nlZ++bj2IXCdb
v//NC87fHlONoTZVzt8+D1fD1XA1XG2FqxzXuKraUd0yn+Ep7dhN4STb/e95
2mGTMdvaY2oUavhytcZ9yVVtPfOGcn/VR5wXbZW1jlz1bf2/tuVqzV0tV8Yz
Gw+sj1uurOknV9qErpNiXqe5Lcb6Gu9kHJS+YLVx9QHtJZmRpWNtOctcZMv9
yFU5TXu4Gq6Gq+FqK1z1uT9zn3FIO/ZPn+mz5R6jGYSp97z7s/eXXPKMg10l
b9pgahTq9vq1ba8xYOUnY3LyYF0Gx1nb41jNnLUee327xj4ZD2y+jDmk5pae
leuazxj/rO9bn7i1ENVJtBW1IetXqF5SO8pYX2Of9P+qh5e9+iA692fZSycP
1hmu3/qstltjAHLOXKv3l/ZwNVwNV8PVFrmqvZMt+8JSaikknjgsRU+QsdUG
W9tdb7Eavj5u476qRWRz3NYxrI3hc7e6tL5aY5mM7zX/xba5omrp1hdaa+41
B9acIOOijZfWV64PXT+Cuoq2pd81x9F4p9hPxkFpy1UPVx/QXpKVHlPby+91
4wH0b/T/nfQx+khi1jLmw9VwNVwNV1vhKs/80QfCT+4n+sH73/f0gx1VLd22
vK32WPUJNXz92jkmf9NfY3UcE20Gn6PVmfW9Gptk2zhec1vW3E/XbWy9oPSh
9smxeoA9xuf9jLM5s+YQGUd9VlxZ7cf62dVb1GH8LvrddGz1/9ZnnPFUE1Ar
0F6Sn+pH+lGyxVbNeGZsX3njjbuXXnvt7mXXXbd71U03Hdovv/763XA1XA1X
w9VWuEpf0t9wULayVfvNdeVKG0yutNPU8OuzXO9XG8BnZHVjudLHKlfG5Zq3
Yi6ntQ6s/yNX1sqTq7U+fH231gx0XTPbcmWOrVwZd21tKH3x5gvblitt1275
vL5g9XD1AW0kbSf5ecGVH7N/5jMu2b/3/vsPDF191VW7F11zzan2cDVcDVfD
1Ra5ynXa94z1Fzzvo/fPuewjTrXlTXtMllqTNvvsv7/px+JX1Yf1mRpTZJyt
eSjmZmbem7NpHQPr/Fj7ztqw1kvv+iC5pu2MeWN2+/y91tStXVSGavtUb8lf
a//aNh7bOG199Pruc3w1mlXPKffauvXXq/1nfNUHtJdk5nlXfNQFG+udu3fc
ffepduKq33Drrbu33HHHLsy9+fbbD3+Hq+FquBqutsJV7I8rLv/IQ5zSsy59
3IX25bsL1zvFmzZYftvDVfzN9se2v90+z6r36gM1Rsi4WeNpzTExB9O6BNbt
sZadsVLWP7cuumuFpA9dSyv9zXnrOz55sG5g+tzc2mM15609aE1C61GsdSqa
q2vu0ln1MVafvr5+/R3qP/4/cFa8QeZYG+nVN998YOsVN9xwip+Mb3KLLnv2
4/e2773nnsNn3nTbbcPVcDVcDVeb4epd9913+A191qWXnmIsY9M1p/zd9Fr+
Fvt8qn6rT9OYnzX+p/Gx5oysNXNaZ6D+0bxvbTpr1lnH1Trn69ofXRurdlTz
U3I/jUeqbzhjkvcaY5V9XX8z87Su49nn/z7Ht6bTyZG6hdavsK6Fub3mOq3x
3o1/M5fKeAB1IfUibWb/D2nMVu5JZuLPyP9BiW3LMcn3DVexu8LJG09Ohqvh
argarjbL1dvuumv3mltu2Xkef1t99lSPlSt9l2fF9qw5j5272lO1h2zLlTXo
5Kq2Trnpuh6udeVakLblqrbfylXusXZM9ndOs7/rcspV9e/GpMlV69hbw9Da
hrmXHm+9i7VOVH3CcmV8uPHkxgwYY2BbrrSx/X9GfvIdjhbfvKe2h6vharga
rrbClW1/K/0N9VlSrVVfpPE5xq/KVJ+9qyeb/9j5s2aONeWss2od8nz+rHU6
XMfKdR5d+zh6Q5ir5l/9o7mitaNqG6afGedcP8fXdkk789B5DPOZ1/ogMo8Z
l65rln52bZec2/r2rXuf87TmobUQrQdlfQzzhW0bN248+RpLUJ+HfhZ1J///
OfZ/0c++/z8fvrutzTtcDVfD1XC1Ba7c7++mXGlfyZX2lVyZ03HWtub+a1/J
lXVW5Spz37U5bK/2VbnSvpIrbSq50r6SK+0rudK+WrmK7bSu46l9JVfaVytX
ta/k6lh9DO0rudK+kivjCuRK+0oNSmb8f8n9w9VwNVwNV1vh6pHqDOrtag7n
pTOsevt56Ay21dvPS2dY2+ehM6i3qzmcl86g3v5IdYZjevtwNVwNV8PVY4Gr
/oZ6zubzhwHjc/Q7m9Oh39n4K3ky/kq/s/FX+p17/WgD+p2Nv9LvbPyVfmfj
r/Q7Z8xcm7Ft46/0Oxt/pd+5dldjsut3Nv6qnGQz/kq/81nxV/k+Wf9Qv7Px
V/qdjb86lj+l39m5fjjxVzI2XA1Xw9VwtUWujsUh+7zpb659MH7V/A7jkM3H
MQ7ZOnLGIZuPYxyy+TjGIZuPYxxy7KfEXsWusm0+jnHI5uOscchl3zjk2mF5
bdt8HOOQ30A+jnHIrmVmHPKaj5O/5bP5OMYh9/x9v3HI5ggfy596pPk4qf8U
jt56552neNMGG66Gq+FquNoKV8fyUvVFHovVOZbfYf6j9QGsmWN9BvNSMz6d
b/NSOyfWJw9P1mfI+81LXeszNC/V+gzmpaYPzfmxbX0G81Ktz2BearnLeJqX
an2GHG9tWjWZ5qVan8G8VOv95vjaXtZnMC/V+hjnVZ9BxrTBjFseroar4Wq4
2gpX51WnyN/xD6VOke3zqlNkvT5rFp1XnSLr9Z1XnSLb1uvL5x5JnSK/yx9K
vT65kjdtMDWK4Wq4Gq6Gq61w9XDq1hq/qu9Sn6a6rs+5/tav9durKVuHPPfX
urWuXXVC3VrXO7Ydu8v67a1ba/1269aG3dpb1q21fnvO2Wdn67eXvcZ+tX67
dWszb7WzbFu/3bq15agxXdnf2gut3b7Wre0YXuz67TKmDaYuYe2O4Wq4Gq6G
q61wpT7w81nHpHE++jptqwP7XKxt4OY6HbENalNVk087n6124Tom1eMTD+Q6
Jq7nlfOFg5e8+Mmn1vNyHZPMfdfzSh+6jknXds5xrmPiel6uY9LvVH3WfY7P
OWv7NLYr380cU35sV7/Ivtq8vxDrebmdFVOXOVCj0P8yXA1Xw9VwtUWu1A20
nWTJdS3Nf1zXtWxckL5RfaY+L6/tdWw7H302jr0T2yeaue3cf9d3Xte17FqW
rmsZGyoMJI/SdS1d39l1LV3f2XUtXd+5uax9fk+7vvW2Xd8549OYtfopOk7Z
9wu9vvOx3GFtMDUKdXt92cPVcDVcDVdb4Upt/CytoLkktaNkyVxIc0PkyrhZ
udKXqp7s8/VqY2R/2o5/7q0xx3IVLSG2VeLKbGeM44MOS62Dm3bGO/OWc8lV
9pcnubIWru30LZ8JDxnXxmetz/7lqu0w4XdEG9J1PNVb9EHoozduzbhuc53K
eWPL+vpY7rC6hG01fOMNhqvhargarrbCletcrDp5tQJtJ1myTs5aN6C5k+aS
GE9rnK2xRvpb1Z99HtcmcY6qX2f8wkdyRhInm2fy2FOXP/cJB1skenzySDJP
zdPJdWOHRXewnfPWP50+V2tQk8/rxD6H14xZY4rT//SndR+ad5tzRxe58vlP
PPVdyHE5X/qmfqJPQZ+7MWnGaVvr3pwm83ytg5ExTDv3Jm/aYGv+lLZa/drG
GAxXw9VwNVxthSv9wmrj5jlqL2lHyZI15ayr0xzMvGeupbknxt8aj6RPVl+t
enX92TmHNoxzWu0+7Yxd5u3qq550OC66eHSHjFlskPCRY2KbZB4zJ2Eq7Wry
0RQyd2Ggfuq2c85wEpsu+8NL9H/Z1t5TD9FfoA/ddauNNzMe2xyl6gVpW9fC
uk/WQpQxbTDZUbe37Zgb9zVcDVfD1XC1Ja4aE6VfWJ1crWCtk1N+5Cp8tNZc
uWiOZP3b5mPalivjdeVKH646ts/12jm2nfecvzq5XLUdm6TP+tmf69WvnPGM
/RMO8n74jF4hq9py6hvq//rE9ZWv8WNnrd1pTq51Kuo3DhvWdLLmoVzJmzaY
GoW6vX5tuWoM+nA1XA1Xw9WWuDIOypxHtXHXUlQ30HaSpYx/9uW1NeisTZd7
rb5hvQJzNs1hORbTa4yTPl91b3UAbSHZyLhVM48Nk7lKzYKcJ/MYOyjny3kS
uyV7MlkbKTHJ6hhq+/q+jQczXtocInOLXLfaehTWaLKGYcaqsdLWvZcxbbB1
DbXq9qsvuz5u476Mix6uhqvharjaClf/F0NbRSc=
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3XnMdddVHnC3QagCBVBAdEoHVHUeaKHz8N7O8wid59BCJ1paQolAAiXF
aaWY2CEOs+1AB2ZIcBzmwXHAcSBxGALY8MZxwHGc4ASwncQJwqmf2zzo923d
7eZPX2n9cb+7v/Oee84+ez3nnLXXetazP+aTPu0TPuVXXnXVVc/8VY//8wnP
eNaf+fRPf8ZnfeIH5z+f/IxP/fiP+9SnPN78jMc/X/T4J+277/qHh5/48b9/
uPO1f+Nw10/8g8Prf/QTDz/4A3/18GOv/7uH1/zgXzt813f+ieO2177mrx++
5eV/6HD5U//k8IbLf3p4xa1/+pDf/uTd/+i439sf/NTDm+79l4c7XvWXDj/1
k//4uP+3fesfOe6Tv/38z33a8bf3v/mTDz/3jv90+Ok3PePwlvs/5fixnf3z
/3ynPz/z0590eOM9//x4zrTzffv3/4XDq27/i8c+fM93/6nDt37LHz5880t/
/3F7/5/zv/K2P3vsv+0fet3fOvbxe7/n4tjvHCP9zBj0t+nnrd97OLz8lj94
+NEf+YTjdX/d1/7OK7ZnfL7vlX/u8B3f/scOr7vzbx5/+7KbP+7w4z/29w7f
/31//vCd3/HHj+OW8377t/3R4zlz7G/8ht9zPG/+nj7/yA//nWMf8rcc57u/
608ej59j3/zNf+Dw9V/3u47tW1728Ydv+Prffez3S77p9x2++qt+2/G4X/s1
v+PwlV/xmw8/8Oq/cry+/C3jl+Pmd+lz7Jm/pf3wQ59+eOcjn3Ec24z3gz/7
Hw73vOGfHe77mX91eNtb/93xtxnntz7wb4/2zP8feMu/ObZju+wfe2TftLOv
n+xf+w2uBleDq8HVOeAq156xfvUdf/loy1xbxiB4+eEf+tvH/masMhYZu3xn
W64p2zO+Geuc4943/ovjOMZGwVHwY/+zPeduP/P95vv+9bGf3ZZj5jjZN33L
NecYwWr2W9v5TT7pb36XbRnTjGF+n/sleIv9Y5tca2wTu+b6Mt7BTa692MsY
xOb/+3/9liuwlOPlOC99yccez3PbK/7McRzazt96/33TN/7e4zgFa8FGxi3b
g6vgKDj9n1/5McdzBdc5Zo4fXGW/fL7ixb/p8GVf+muP7WDnS774Vx+vJ+dJ
/zJG6XP+n+vK34Lp4CiYyu+8x3/2bf/+OEaxdcYv9gnOel/HZsVGngVtB0P5
XbCXY+Tezv7BXrYVU2kXl4OrwdXganB1LrjK2MYOOXdsmnbGIOOcvmZ7/56x
y9/qr+Tv+X3a2Se+yNpn391pB0d5T6efaQcTtjMO6VvawWyOlW0Zw/w+38VV
2vXD0pf8LjjIddQ/yH620/fgJPbL8TPe8WPEhpjRj9IHE5P5e+wczOT4aQc3
sW/8na/56t9+7F9wnX1i++Iq7fpI6ddX/Z/ferjpxt9wbMeHevFNv/GIt/pj
ud78LefNmHd7bJDz5Xg7v9d7PzYIjh55+JnHduwTewUvsUX+lu98YsuMa+xY
H7iYq/1im4xvvoO7wdXganA1uDpHXDXOkDGwnT6mHXsFO8Ve2vnkt7t++u52
Dps+5P/pa/rZfomrYin7iKv0I33Pd7Zl3xzDaykW0+9cd/ZNO/5M7HzjDU+/
AgPiyrhBfKTYLm3jEvpptsVttse3+vIv+3VHHy84uvb5Tz3+Ldj5H//9g49+
25d+ya85vO+xxy7qm2X/jHliKcFltqc/6Xf6lj5ke33gnDdjlrHI34wF6QPv
ngPxbWOvX/j5/3y0XewVLMUefSbUB067saCMa/3bnLufwdXganA1uDonXOW8
sUHmqOlnMZRtGev8Pf3M9uxff6b9Td9yrfbNd7TzVuO3PV7+H/u33f6k3e/4
BTlnry39STt9SR/y+4xXvvNJn+IbfeGLPupw9ec95Qqb6vMYBzBObjvHjf+U
dvqca83xjNsbx9CXE9tp977MseM7Xf/Cpx2PGZunD9kvx0vfYo/4b9kvv8k5
0teMa46V62heIv0wJ5K+Na5hXEjf2GfC+x773MNjv/Q5x+/YLrYKrnKud7z9
Px7tmGvKtcUWwVq+Y+/s33hRbDi4GlwNrgZX54ar9CF9yrs89iqGbPfj/9O2
D7v3snNVY7bmMRs3z//rR+VYGb/8Jp/6YGnn3J3fxk9o/lUb6cPYdr5vDNwc
ccY7topPk+3xQXLcfj9RXts4v3EPfT/vhbaD15w3uEp+OePUGEfGL9cWfOR4
2R579Xc5tzwB8yPGiPSNfT7k2P1/MPTou591/KQPeU5kW7EUnNW++cQmuc5s
q12ybXA1uBpcDa7OBVf1o3KutPPJuXOefsRS3p355Dj2wXexuDJOK67k8Kzt
Yqm4amy9/XP8bYsr5+/Gt835yomKv9IYgriK7dNecdXt+U1/l7i9uW9zAbbF
lb6i90vjL8Fncx/BT8Y+vzculL7vOAPmTYwX6TNr33e/6zMPV1317KO/lT4k
VlSbxo/KJziKr5V240axf/qdZ0O2Da4GV4OrwdW54Cp/y+97bZ27l0tTblM/
nsv3r/NQ28ZmzVfK2/HTGG5j5PUfHFt9D+fjxqvN4Zrble8kH7ix9PKpsl98
mPQh50i7MYbsF1ykP7Gp/Gd50XLDzJWbLzB+oj+5+paxeWMVwWzOKYdcHp38
AfMmxo7iA+WY+RZXPkvCVw7GEn+IPWP3h37hv/yyX1wecnFVvOXvg6vB1eBq
cHUuuHrV7bdfvOzmmy9efsstF33n55O4QGtkdsf3nevc03iseUm5OitnNT5N
bOdY6Us4vzb+bNtc7cpfKr/XmpfYIL5Z2rFBMNs8cmPpOWbOEfykn/lNcd45
fHCa84d7bK3QjjttDt3cuvkF4y36nN6DjmH6UVytMY18yh+oj2Uc6ZQvXd+r
eI7f1Zh8+hef+hff+9lHXzmxpuAh9k47z5rB1eBqcDW4OhdcBU833nDDxYtv
uukiPkhqQGKLF13/kYfnPPuqw3seffTCY/pudb5p3NW2ucjMe3NNGXuvXd/A
tvNoY8vmXuUjyde1hsXalrXeUx5v/LRgrJhp7CV2ybGzvTFrOUftZ+f2+V1w
aS2ttUXyq+WbmXO3bT7CmIw+qvfsjgdlbuVUTGn1q3225Nz124KhYiDnqZ9e
vOa8g6vB1eBqcHUuuHrta15z9K1eedttFy+47sMfP9Y7Lt7+4IMXHsf3qW3n
mLbNP8YOjQl4jU9UB9S4sblUuUbyb8WVtSriatU3CHbSzvhm/9bYlrdkW1yV
25WPuMr+tU2uvZoS6kuIK2tvxZV8bDlp5uitCd3VxejTel/33MVV8yzGmvSx
d8+ZjN0XvOAjDp9/zYcej9dnSGMZ6dfganA1uBpcnQuuwtO9+667Lt58330X
iU8nT/uW+++/4re+Q51XGl/tuNQW7bPvdOe5xoHX3OgpXQh5ttaeWJupXoF6
PraD6eAssYbiN7/Jd7YHZzlm9is3uxylxqhjy94j5Ve13fhAbXlKf0k9Cmty
rVGSpy1/29z9WivavIZxHn3dXY44to4WRXITxp30vX3mPPfqDzpcd+21F4+f
8yL37XXXftiR21ZOQPzewdXganA1uDoXXKX2I/sFT+7je9P546vvuON43lfc
euuFfdjlr53PGuM1ByovaNWCaC1Jz7/qBKpLoFaPWnbBUOtuypmKzxb85lz5
fcajfp/tnCdYaZ/z3VxwcVA/qj5pxqE2CyaKh+bVW6ubT/8eWwcD1a+whtea
Jnndu7pR8/7mQXa8KZ8Vu1iBz5/ct6l1uuZ5H3J45yOPHLH33KuvPuLnrQ88
cPG6O++8GFwNrgZXg6tzwdVu+8MPPXSR477xnnuuOKbn8v3r/NSY7Y7PLA+2
HN1V/8E6SnUG1N5Rmy7nrF5rfKr4U1/8RR99Rbv7Z1uOHdzG98v5c+76Svl/
+UjlSOUaa79sr03Xdv5eTaBgJfzs+kGrfq8ahmobNhddLdn+1ppfa6DkgcuL
kxuw41AZO9KX9tmy851yL4fvFowNrgZXg6vB1Tniynbmkm+6996LN1xeXuF3
iSvnm8ZjzVHK4Tn1WetbV1xVN0BdHbXmco3lPdlecRV/6oYv//XHYwSPyTcn
tpCcdmIXYimf6iiIq3w3Di6u6keVKxVbBO/5ezAfu9anak1u2+Iqx66+vbjK
cap5qO7TqoPRumDbaz1peePiSi6BeeRdLF3fW8zEl00sft0+uBpcDa4GV+eI
K30t28ZXPa+5afspb9nrso7Vtjo5q3ZcNQAd59il63Fol2zPd/VXc4z3vuez
fjm2XO507Z6+53z5jTgJ3jOemX+Lq9aTqv8XDCZuEezmPhC3iZVU/0Gcp5+u
LdK2+ureR2rred+VQ5w+ep9aO6xvK6/Y54A5ZZ8bxhN2PtXganA1uBpcnTuu
3K5/5bzS96zz0B0va1ez43vfebHz5XUefUr/Vj/Eebp+i/N65/vGAfSLjBWs
8YTGGVa/q76Z8Qrb+nXGOvQDjZMYPzGuYrzFtn6pcZtTdaa9vsZ/djwrY0f6
1cadPpA41eBqcDW4GlydC67c7jvU48gv3XGxdnU69VliU/OhO12jneat8Wfz
sxm7tPM72+LK/K+4Ml9c7LTWx/xy/9Yc9Ior89fG8813u+7kbu0t8+krrpp/
Nx9hvl69BdviSj6AuJI/YD4l/laeM/n2OWPM4QPJ4wyuBleDq8HVkxlX7uO8
cpdrln8lD3lXm7PTbZAvJJ+2WMp22/KR5OvKX1r5veU7yQeOTTJG2WZbPpV8
Y/lX8pODo/hBqbFd+czld6lnKx9MvrT8MfnVarDLx5afJn975bMVc/Lf5IfL
PbatxsIuB23cSczssDe4GlwNrgZXT2Zcub+xdOOuzj19F9sf63GsS3WdC+sl
777rtI7fTuPd+pT6edV/KKZs9/j1j1ofar3MWk9ajFl/Wj+qNURtW79jfav1
PtbDui5zzndqbUrrba0/sj53rVeqr6UekW3roaxLtR5nx0ne5aPFhs8f/fDB
1eBqcDW4Ohdc+Q71OOaUjcc6P7UGx3e3/VefwXrNVbuv15djndJ1//+t+ZXj
qf+jHoJ6QeoI2VZvIePS+fyqU1Q7qmuk3pH6D2oiqRehnpL6EuovqcukXlP6
UH9OTSf1LtSDUp9hV6NqXMh4kVwCc9M+Z2xbyzO4GlwNrgZX54Ir36fmjj2m
XJ1TtTZr/anvdLWJvN7msNMHceVHnTp1XHPOYDJtdV/FVWPQ2Sau1JVVZ6+Y
iV1q0+DHtrhS51ZcqYurTqA6uq7XbFtcXaLTu+Kqur5q1RZn2d+x1afV193V
q+64ymLA54z+tjGKwdXganA1uDoXXPme9d3q8eUVW1djLtNaU+O9znn1AVa9
8eq3u45Jrv3U2l71qZo7bpxdXfTs07hCPzmP64you+66JOq0B59dx0Rdd9c9
yTWlnePaVjfedVUyNtWZdx0W169sLL196Nolthubae6h96O+q/Ec8x3yAdZ2
eePylnfcLX3sXf5lcDW4GlwNrs4FV75nV/5wz1UcrXWmcn7MgarLZ3zYObI+
wzqGnWsXK8ZzM1Y5Z+Pr2b+a5fl7fcD6GOVUpU89R3HmOpXpV2PormuZ33Wd
L9fBdF0w1810HTHX2cy1B5vxqWzXR4y/lnb63nUta1/vNX1R9Wxtm9M317/T
c3BdS22943EZX9rF8AdXg6vB1eDqyYwrY7CnuFJ95/a81pOKq7UepPxYOULm
TI0bO4/O77uGlz6G49xcQDXeGwtY+bX15XJ96V/rVnKuHMd1meVKuY5z9u3/
Xfc527N//KvypFJ/att1peNnxbcKzy3j0HWo08dys5qv159cfUvjLcZhzNGb
u9/p++20HXYaGtp4F1OSbzC4GlwNrgZX54IrY7DOQ3e1M2sfym/q96q5J29W
Pq2cInOsxpmdd+t75PjxSZLb1S7FUo4rrjIGOUfzosVV/KtwosKRavwgWMo5
u5azuCq/LP0UV+lf624yzjlecJXfB1PXPv+pR4wllnD9C592tG9+m/3ss76i
PqRxFXG1W+tEvXe53DutP/Uxds8K/WfjSOLKHPfganA1uBpcnQuudtxg56S+
l+2PmkLq56x6Aq2ptMZkXZck545tzb26drNxaefm+iraLudLnUh4suoKpS/B
dY5l+1QsPb5X7N68crCW/dOf9j2x+rQTY4gvlX4njp6+5ZjpV+o2mwvPNa3r
L9cnNE5iHsE8+9ouH1uetrVL1vbudP+0nc8H/WRjRzvO88qvG1wNrgZXg6tz
wZU5yvbDOK1z1Z2OkNp66s2qM1COamxmDaZ1KPJy5SaZq61NYy/j2M7l9W20
b46f4914w9OPeAke4gvl/MFXjhs7Nw5fny5+mO2McXzGbjdekWtNX2LXrtOl
j1fbdS2zttdceXPou/WgY7dTa4Hld+URlJvW50M1D9UA9Dmw842NF5k38R5Z
eV+Dq8HV4GpwdQ64krdjvtKY7SnNhLyv810tIPus5qoadM1hrutwWZuZfVqz
ad2KPF65TOZ2jW8739fn0RcSD/HfWjuT8wYvL33Jxx7vhZwv+A0m89vU4qaf
jc/nXPHL0lfbxjGMb5j7NideXNWPKY867fwmGLOtHoU6FWoYrtqGsVXspI12
mkjGhcyVyBmwXY5Wzj24GlwNrgZX54IrP9aB7uK3zmF9d9v/jGH11TNWXWdE
bTo169TtUcfAWk5rW+T3xtY5djAg98n8r/Fw4wP6SG1nPMVP/I3sn+Pa1gfT
NzNeIa7McYsredHypa0hssa2saB8i6vLjW5h9qu+vfrwO41cY0G2zY/IGZA7
Jy96cDW4GlwNrs4FV/Ja1zrQxm+N5e7ms77TvZZcY9fpyO+qW66Oq1p2sUe2
xZdS50etA2s/rX+RD5xrzrbgyhxxxjBYXuPnxhD0qcSS29P/HCO/NT5vztpc
tjxn+c/WBFkze/l+vcD6W22rPagmoTq9+W117NPu2i7aYqeXa/zHnMhOL0K+
3K6WanA1uBpcDa6ezLjacVzVAjK/aYzXue36fu915f9dV8s1rVzXQ51z+cBq
3636P8VPfIX+zVpR62XkD8uhMqcsTvSdjDmsPlgx6XHka8lnLtbSJ2tg05/G
q9WLUEuwdskn24Oh1r3UBsXYuoamY+59rX9rzMfch+2ddoRcceuGBleDq8HV
4OrccLXyXeX5mOtUG9Z5bmPv6xoiXqPrPLrWlWt/qH+uLrrasGrlqRfkHN8a
UmtLtbu+0Mq5atzAuLpxCXElVlfc9rxrrWv1H8SVNVLi6ok057smS7kD4Yu3
PjTaGrt7Wf/WOI+5j52WoPxw29YOD64GV4OrwdW54Mq6j1OaP6d08Jr3NPbr
nHd97/d6c4xsj7/lOsjrWpBdG8u1QtRLTx8aC+64p53rcx0N9YVqU30e4wBi
0tyxHC1z1sbtjWPoy4lt+7PTA0y7nOD6KesaK405NLbTdTl3Y+v9qx9rbGen
LW/eXy6cnHDrpC6pqx1cDa4GV4Orc8GVtZDWg8iDlQtkDnQXB3YurA/gOGSf
bO96zV0j0na+cw3lunYtre6TvmTs2y9tpA/jHN+4tzENc8TW6cgrlsdlLtvY
vm3jHuLWe8H+575oHUzrQKvfmzGOL2O745yx7bWVK9z7dOe7eu3mNcz1y3mT
B77TWVIrY3A1uBpcDa7OBVfWRapxZ22I/Fh5QeZGjQk7F9YfyHHL13JMWjPa
OWp+c/l+bYAc13a1ATr++iQ5futJnL8b3zbnKydKnrB1NNa0rjU+5TmvvK9d
LqDxEP1D2947Xm9rdjrO9YGzrXkNx9B7U3/VuM267pjrrZziucn9tgbKumC1
JgZXg6vB1eDqXHBlXaE1ktaJyI+VI+R6WMaHm7OOrdY5cn0DxyfnyN/Dky3X
tnWy/U2Ol/0atyimnY8brzaHK8dJ3q98YDX9rCFVV2HVHSqWxJW8aLlh5srN
Fxg/OYWrjmHHwfHpM6G5kt6P4spYjW3zF+b05baJq50Gr7XAxcmqQTG4GlwN
rgZXT2ZcOYaO7a5mRBtpO22qrcWA2NiNlRhbfYliUqyKYbEt5r0XvEe8d7yn
vNccK3WQHFvHfK0Vqo20nTbV59HuYkPMiCXHyvEUk2JVDO/W5fResL3q0rft
veY9OLgaXA2uBlfngivn1M61nYM7N99xaJ3jO/c3JrDGCnrtjpvzZWMRxiiM
XRjTMNZhDMTYiDETYynGWE7pwDev3Tm1WknOwY1RO2c3pu0c3xi4MQFxtRsT
7zvvWcfZ3IRtY/7GQMwRGDOxznenfWFMZnA1uBpcDa7OBVfmWM29mpc0V7vm
cJvbNedrLtVr8V1vTnmXdzaXas7aXLY5bnPf5sTNlZtDX3PrzbmbizeXqm68
HKQ1J1tbmMO13taxlRNljlgOlTl676+1XZ/T+8p7fM1xl6tmTtw6JttyzFa9
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
qz58fKzEJLoeZf6fWIG4cv3Q/Kax9cQbgrlcd3WqmmfOMyjnSN+C15xzcDW4
GlwNrs4FV+v78dQ71Pes71/74/va97jv950PoJ+g/7DzMdbaz1McY/0Z/Rz9
H/0i/aWdT/VEflf9NP23nY+34yrv6lj1M/U/d7p/3r/6t/q9+sP6yfrP+tX6
26sfXv9c/2pwNbgaXA2uzgVXxkvFkvFV467GY3cxW+O6xnuNAxsfNm5sPNk4
s/Fn49LGq41jG9827m083Di5PpW+k/hxHzFp3N54/o6LZV5grdM5Vbu60zUy
T2H+wryG+Q7zIOZHzJuYTzHPYv5ll6Mx3j64GlwNrgZX54Ir+TM7js3Kwyk/
R96OfB55PvJ/dhwheUTyi+QdrXyk8pR2NTjyneRBaWt9IeMPYkbs6UcZT9Bn
E8PyvuzDjjMmr2zlm9WXkp+207mV5yb/beXFyRsvj05+nbw7+Xjy9OTvyb8a
XA2uBleDq3PElXUW1l9Yl7HWa5xal9m6D3FlnYj1I9aVPFHtSXG1ajIUV9a5
WP+y42JZR2NsXJzoL4lDf2scw3offTxxbt3QrrZop18krqxjsr7JuqddbZS4
sq5KXFmHZX2WdVsrrvoMGFwNrgZXg6tzwZX19dbdW49vnb71+9b13029vzoA
6gPs1ii5G50B9QdWXYLqFahjcIm+wc5vcV6/6if0fGJDH0l9BjFp/NycsnF+
4x67Ghz1JdSdUI9CnYon0rI4tdZJ4x09b3MT6mmos1GMZH/b6nWo46G+h/oM
g6vB1eBqcHUuuMp+1nRUh019NnXb1HNT5039N3Xh1Iu7REdOfbn0obpzO226
VR/ilMad83Tj2Duu8i5PrV9kfEA/TXzujmlO3LyAcRJ9Re8d9Qnre+Xa1TP0
k/EsttRFzDlPaSeqr5jzZv9sU49RncbaqzVEvd/Tbr5k1YEcXA2uBleDq3PA
lfrb6nKr162Ot/re6n5nblk9cHXC1Q9vLH1dw6s+Tq6jcePGiDtu+hjOu52P
72pX5TWt+uq1u76QMQHjFTufTdzKi5YnZo68c3X/nnFVl17fctWxr769Y5Xr
rR5+rq2aGfWpmjvuuKi3n31aS7rT6l/1/Kvzr/5/7Fj99sHV4GpwNbg6F1zl
XF2PSVy5fpPrOrne025NKHEV2zUmIK7Kb07bdTv0GcRVfttxFFfmZHMM12s+
Vcd6qvZTu6evxgSMjYurJ+JN9Vw95lpnKpfM3Lr5BeMtrmumL+r9WLzWdyvG
GmdIW1zlt+oyFleNb6SvruPm+m67NeAGV4OrwdXg6hxx5fq8uzV8XefX9X9d
Fzj96HrBriPcmHbj7b1ufQB9A+fL2d51jXfatvJy5eta07rWeNa++jw7Tpfx
fPPCp7hSXZ+reLYPnld+tbxruWfm4s1HGJ/ZreGVPuT/sXH735x1+r3ytssf
zu9zfdmv8fhsr3/d9b5dB/zU+uD5/+BqcDW4GlydC67KV0p/0t98x7/K9bTu
JudLrjkYy7s0mLr2+U89Yiw+1PUvfNoV7fY5Y+G1+K53/mt8eLfWyU7n1poU
azbVedj5NrZ3/C5zwcb2jW/o14lt60nrw7V2U62h+lHyseWn7dYoMX9hPEef
1ns8xy93vHGMNb8fuzQXnePnO/iM3cOtCw4alwqWbGff4mxwNbgaXA2uzgVX
6WP6Hgw1VpCYqu28yxNHTx45Yx6sJZ7QnGX6vq6/3He381nnueZAO9dd+ULy
aa0xsQZzp/v3RJoP9Wec4xvrNv9rvltO1C7Wob+301Kwb7Fra5ys1bVeaV2X
pHw2c/o5XmwfOxrnyW9j99hOH9jnQM6X2qLwr3M91SEqryvXlH4FJznuqRxN
fK/Yu3yFwdXganA1uDpHXGWM827PezTXkThrYgrZJ/2KVp3n9V0srsqdLUba
NtfZdmwgP1ZcWVMprtKunoBtNQC13U7/wXm9sW6vRe7Tmvsuvne1oqvvV/yr
radek/oV5T7HZtY0Nf5Q25XvLedNDoB5EONC4Q4kr54aW31mnxv5bfqSfbM9
OMp5c/7gK8cVV8Fe/h4sDa4GV4OrwdW54KpYyjs27+XEU3PcvCeDq8QWfLfa
dh5qnNbcpTlN+a7yYDN+5RHbVk8gvyvvSQ267FdtOvVatZd+i3N5Y9rmeeU7
iWnz4NbCmAswHqIfKP53fVbbsPnqxoCqd2HNb/ZpDZQ8cPnhcuTkDJg3MY6k
L+2zJfZqvD3nbe1W7Np8dOyf8wW/g6vB1eBqcHUuuEp/4k+FW+U+vkOdVxp3
NRdpjnLHZbXWw1rIztnzrW7A5U+dXiMs26sJrz65dtFXcc6+i2Ob25XjJNdX
bpg5cfMC6iToE9aXzG+8L7yW3GPV+1XzMP1PX9b1KNXHsEbYmil54/Lo5BJ0
bPoMaZ7FWJO+t8+iHDPnD287PmP2z3EHV4OrwdXg6lxw5TtRXDl/FFfmGdXu
k6e68ldb2yiuqoPanHRxpXZcfZJ80s9T64VpC9v6J87ZjV2Lq12drBzpHU/M
XLk5AuMk+ofeI15L+pnzpz/5XfXw1QRWI1HNKHUz0q6fbE2xdVXyzOXayT3I
PRgsr/Hz5rSDMfEzuBpcDa4GV+eIK/exbQ4xY9W6i1O80/TVWkVrGK3rz/jk
espJXjUX8mkNamtbOjfPd9cOK0c4/XH89Ul22rnmbW3LZVr5vWudS+Mm5Yzt
8ubq4xkz0W/0fvEaXSMm7WDni7/oo6/Qz/e+XjUV1ZUqfqw1tvYq49RniLx0
uXniwbi6zyJ99cHV4GpwNbg6F1w5f/QduvKTiydrLoKj6vpZp5/fNq5tLYua
b+qBZ3t1wvO3rp3RHG/Xku56mo75bi0V5+PGqM3Vyl/a6UicqiFaedRyycyh
mzswfqLf6L1T3zIYc31J11BzTRl19dUZVmtRDUZ1qPSZrU3WvtrdZ8vKuWo8
yjj84GpwNbgaXJ0LrnbcY+ebvnPtg/X4rROpBqAabuVC1U9Z18JozKFz8K6f
2NxzfI7d2pr6G87BjUWbn5WnZHunKXFJXaf1RKc0f/q75tPVht3FUvQnvY92
154+B/vFQP4frOXbdWeqw68uce/n8tC6PsuqW1Vc6ksbXxKT8rLkKgyuBleD
q8HVOeGqHBtzjuLKeahtj28/M6bV8RZXrQOt7lBxlXZzsrZzvRnv+B6O7W6d
TefdxqLNycpT2mkMWsu5q7G1zkh+tRwzc+vmF4yr7HxL76+MdzDUtV1OrcGd
71xDOdRdm6b7lDeuXfoc0DdWd8g40ppbKfdAPp685cHV4GpwNbg6F1ytNafl
o8rJMUe5avp13uq722uxHTvmespPznf9D3Xkqn1g3Y9jqF/hXNuY87reyinN
eTm61q1Yv6mOgfW21hnJtW47/TXP3vvJWH0+xlv0M9f769SYdFwu3697lOPa
ruZE63G9x/WBjQuZN5FLINdO/rm1q9ZqDa4GV4OrwdW54GrVHSo3VZ6qvB3b
5jSN6zrP9V3vtedaOlfP9vhZ4RTXdo1pd9zElXPqXZzZ3KscJHm51qdYs6l2
QXnUqwZF+x8bWH8k71rumTl38w7NWXdMjL2knXi9951jVQ5362T7G+9ZfVrj
POZB5AbIGZBHJ8/c2itrk9XrGFwNrgZXg6tzwZV1+uvYdszXmo7aSNtpU+1u
W2yIGbG0GysxKVbFsNgW894Lu5oU7ynvNcfKMXRsHXNtseOhaVNtLQbEhuPg
+IgxsScmxaoYFtti3nvBe8R7x3vKe817cHA1uBpcDa7OBVfOqcWVc3Bx5Zzd
ug/n+Po8xgTE1RpDKBfX8TmFq3yLK/Oqto2BrPzb4k1c7bR5d/p1zrWdgzs3
d87uXH6XlzcmsMYKek95PzqGxiKMURi7MKZhrMMYiLERYybGUoyxGHsxJjO4
GlwNrgZX54IrdU1XjdPmZI1Rm8M1pm1e0hi4OWK5Q+ZSHRN9A9tev+NvLtWY
/ylt1fh+u7VazLmvWj3NpZpjNffqtZurXXO4ze2a87X/5ia8d8wp7/LO5ujN
WZvLNsdt7tucuLlyc+hrbr05d3Px5ugHV4OrwdXg6lxwJedWDpIcXTlLcnrl
+soBlhMlZ1gOlTxbx2HNvXaO7Hxcn0Qb2ZZbm2OWOy2nWo7ZyscuJ01urZzb
nWaF3F05vfZHrpr3gv6h8RNjNSv3uPfpbmzlNq+c53Kh5Ug3bpKxlFNdXAUv
vd/rA5ebLWd7cDW4GlwNrs4FV9Zjru3WbFrLaY1nztXaT2tC1ROwhtTaUq9X
H8C58Fq72viw8Wrn7/owa81say2zf2MQtnc69tlH36k1mNZmWrO5q+EV26vv
13iI+QLzF8Ztdr6r9681rda6WgNrbaw1s9bSWmPbOiJrb2Mva3XLP8tncDW4
GlwNrs4FV9m/WgTNAXedxOKqOufVLGpbLSC1VdUOWnHVa7Tte9+5sDFhcWUO
d8ehdY6vz7Pa/YnWn4pNd7q+avV4HLGqL2cdk3EPcwHmys3pm8swpqEfu7uX
1T66RBPpEq0kNZTUVqrvFIw1Zx3b1i7FWLWbsn/94MHV4GpwNbg6F1ypTVd7
ZQw6Z69OUefhat/lONWGVSvvEv3VtPM+j0a513VKnyffuziwuVE5QnKczPka
9zYOsNPbESeXH4DGr9qGYjLjX61X4xjG9s19r9ywctvM6ZvXsN7W2I7+rfe1
toi9qpEb+1Y7N/aspm7jOrGPGrzZv+3YpZq9rcPpp3GGwdXganA1uDoXXOVc
+U3e4Wl3Tqu2ueuArGuCdK0Q1xBxbRGvxXe6bee5xn7NgcoLkh+7qxlZOVHN
ETvHN26g7ySWbLtmhz6YcQnj9uayrfOV9yUvesdzM9dvjsM4j/6t93h8nWra
Z8y7Zkr63LVUGkcPX8u1V1yTxbVaYq+u4eLaLq75MrgaXA2uBlfngqtcS9dw
tN14Qtd8zLhk3PPdNSLFlesz5nqDo/hR9t93unNbcWXec22XCyQ/1joRcSVP
eMWVueO2jauLH30qYw6uAeqaj+asd9oX1v5Y9yT3W87bLu9v7sOYj36v97s2
yvh1bc3G3mOzYiO/azsYKkchzwzX9HStT9cAHVwNrgZXg6tzwZV1hbFduUCN
w2d7/x4fonUkrXlp/Dfb8rdg0j777t7NZ43xmus8xf9pbrO1IdZI2raG1Doa
ecXiQR9pt7aLPpi+mRytYDI4uvGGpx/7EdxF+8gan10t8KqVVB64XDg5AOY+
jP/kXuj6Zd77rSONvWKD4OiRh595bMc+sVfwElvkb/nOp/H5xoYyzsVc4wqN
y+c75x5cDa4GV4Orc8FVzplPzmm79Y+te4l9mvvt9nKBc93xj9K35Djtp+9r
57DGcs1vyvOxLffVepBTdZHpj7oK2nettakvZHzA+Lk5ZePzxius07FtTWv8
0S980Ucdrv68pxzUQbIu2HqoVUc3uEx/5AO4Hpk5EWNB+sM+B57IdhnvYCnj
3WdCx77awjl34+vy4QZXg6vB1eDq3HCVPqRPrRMphloH2u/ioPtk2/se+9zD
Y7/0Ocdv++M72rnqLn5rTnPl9rhmlnUfxaCaANmWMct8Xtvp2zjf3+nVy6GS
r2XO2ly2cQzjG/p4Yt4+57v5Y3XjrZOSHy5HTm6A+RHjQjvf2OeD2kMZ9zwD
YsecNzzx2DH2yvMgtmgNcWya/RsvqtbS4GpwNbgaXJ0rrlpL0Xh18SSWbNsH
276XnasasxVX8nl2HFfrPi6pf9Qu+irO5Y1vm/+1La7W2tXiSj6zfOCdtrma
fuJKn1BNg1x/9s25M06xdfkA5Yrv+HJyBsyVGC/ST949K4KhR9/9rOMnfYjP
lW3FUtcay//zia1yneXI1dcaXA2uBleDq3PBVeMJfefmk3637Sfnfve7PvNw
1VXPPvpVntd3sXNS47TmK23L35HXan2H46zvsdNZ2mnwyn2SD2y9jDWk1pae
qnXNb+Q/m/s2J67G3U7nRx/SGs/sVz+qOZGcU+6cnAHzJsXeGjvSfxZX2jrj
nFiRNs0nOIrd0m7cqLU8uTequzu4GlwNrgZX54Cr/C2/bx63cetyaVqzr317
Lt+5p9qnYrPNUcrbkb/quK1jWB/Debdx6VVj8JTurvUvtq0VNZauvtCqudca
2N3aH/KlzZWbQzePcEr3IH/b1bzkuPEF07f4T8XV6ss1h2IcSf95fXb0E75y
niGJIwU7sXu0NeoXl4dcXBVv+fvganA1uBpcnQuuXnX77Rcvu/nmi5ffcstF
fJDUgIT72thBPvGpGlf3+L5nnXsagzUvKT+nudJ1TPQZnEcbZzb3KjfJ9qq1
29qWtfbT9TpPrdG50wPsPs73Y09rZq0hkke908Ezz268xTiM96L3pmOb+y39
6b2Z82Q8dzEl/WqfJzsMBE+JQ/ziez/7GDNKfCl4yHMk7fjcg6vB1eBqcHUu
uAqebrzhhosX33TThe0XXf+Rh+c8+6rDex599MJj+m7dzTeNwZqL9Hr1AZwj
Gzfe6UXstAStW1l15ls7o/7Pbl1OcZXzqA/f3K2cI9fDsi2urLEVV/KuVy2g
5uKtA7UtrvRd5UGlv43JNMZQXDW+tPOxfc40F5BrD4aKgZynfnr9tpx3cDW4
GlwNrs4FV+HF3n3XXRdvvu++ixdc9+GPv1PfcfH2Bx+8yLh/wQs+4vD513zo
FcfxfbqLtdp/3+k7zrPxYXOmcork2VqHYm1m7H5KW16dH7Xv1IZVL73rg+Sc
tjPm5e827rJq6tYvKobq+zTekm+1YW3Lx5anbY7e3H32b4xmxw3W1zUv3Nh/
xjfjkhrcxGT0t33O7LCRay/2G9PPcQdXg6vB1eDqXHCVsU+dyDXP+5DDc6/+
oMN111578fj2C/f3Hepc0v7Y9t3tfNZ4rzlQOULyZuXTWmNiDaa6BOr2qGUn
V0r9c3XRXSskfehaWulvjtvc8eX7dQPT59bW7jTn1R5Uk1A9ilWnorW61i7J
5bZtTt9cv/kO4z8+B3Zx8lffcccRV6+49daL177mNUdsvfK22y58/oiZ+K/X
XfthR55brrvrswyuBleDq8HVueAq9kq95hPtk1jDm+699yLfnst3sfPTHY9L
zs/K/yk/dtV/OKWJ1PzoqperZp06ruqcr2t/dG2s+lGtT8n1lI/U3HDGJH8r
xyrbuv5m7NQ1yLomS+f/ncdXC+hyo1uYsah+RWPwYin3s7VOK9/7iWpn8jfj
QsaL9Jl9hugvPfzQQ0fbv/Geey6Sz8gzKNy2dz7yyNEHe+7VV18EP2994IGL
191558XganA1uBpcnQuudts9ju9W557GY3fcrVPcHrk/8UFqu/pT9Ydsiys1
6MRVfZ3iput6uNaVa0HaFlf1/VZc5Rrrx2R7bZrtp9ZTbvy7nDRxVR17NQzV
Nsy1dP+djpC1wOJKfrj8YTkD5o5tiyt9bJ8ziTnkOfOGy8sjxzu5mTyLBleD
q8HV4OocceV2fS3foc4rjbuam5arI29ZTHXu3Xiyta61n/o5agCquao+fH7v
miltu6aV6zy6DnLiDcFcY/6Nf7RWtH5UfcP0M+Oc82f/+i5pxw61YzDftZW7
jmfGxXW1urZLjq2+ffXVc5xqHqqtp6aQ+hjWk661peWNyyteuQTNeRhLN+7k
82f3LBpcDa4GV4Orc8fVuk9jDr5nd/noHVd5rd/pe3+n7bDT/XOc9UNWu9Rv
aXx7bWt3/SJxoh8lrvS7xKG+mbjVrxPn+oH5fdcZse19pN6s951+6U5Dw/oa
Pz4H9JN9buhX+5zRvxpcDa4GV4Orc8fVzqdyXrnLQTs/NX4rrpzn7vQcdlp/
zrWNP4sr5+niynm9833jAMYK1riB8QTj7cWVWDJeYTx/XXO5bXFlnMT4iXGV
VW/2lOaecZtTegu9vsZ/jAsZO9rlmo07fSBxqsHV4GpwNbg6F1y53XiCx/Rc
1lzsOMm7elXzofKF1vxp9f122u/mZ+UvFYcr38n8b/2o/HbNF5f/ZH5Z/lVs
mrx2dRHaNn8tv8t8t3ww8+O7dbg6xjmW+Xf5aebr5bOZz9jVn1qDI39A/pW2
9tmi7+2zaHA1uBpcDa7OEVfuY3zV+abvX/sg99h6nF2N6k6/SD7tqm2bfTIG
1qfI183+1YGQ39vj3/3++pfizXqZ2qNxg7blG+e8ncfLT7Z+Rz6z9T7xqcL/
il9lW7609UTyq60/ko9tvZL8bXX55Huvmgzlh1uPIw95x8UyvhT9p+DoLfff
f4UPpk8+uBpcDa4GV+eCq10s3ZzyjmflO9o+W5eqPoP1kuoJ5PrqS6lnu1vr
pPHvnld9g2q+qodgfWjxkrb1pOotWH+qPkP2b12QbetbV/2H1sOqF5HztX72
idapzH7Bq/W52VYcW8+7rk9abSL1GaxL3dXm7HhZ5qZ95uh7y1seXA2uBleD
q3PBle9Q88gexxzlKY5x+u181ne616h+zk7DNvauDo86dT1Ozm1bXKn/I67U
C1JHSJ09cZVralx71SmqHdU1Uu9ITSR1AsWVekriSv0ldZnUa1LTyba4Ug/K
+1pf1/auTkcuwe45o+9tXGJwNbgaXA2uzgVXzit9n3pMecVyeMxpGuN1nqse
kdeuVq16BH5yzdUsX9f5yv71u4pNddGzT34fm9hWV1bd9WKm605Wp71x9moO
VNddndvsW79KXVx149XRzTGrM+/azbYv0enN+HcNr/Szur7qtzuG3rP6tDvd
hl3Njrxlny362Mad1O4YXA2uBleDq3PBlXPMHYfK41tfI89HvQVzoMaBnRev
WrUdq+7TtUuK53yKMdvlRjWn3BxpsZTjdmzTV9cZcR0u1yXpGs7BXo7VdUxy
rq7z5bonrguWvwevL33Jxx5cR8x1VRpHD+/NdVhi48YEGktvTW59Ldcx8R7U
RzVuY17DvP+q4eD6leWNa+OdX22sybj94GpwNbgaXJ0jrlbelPzhnst1LcXV
yoNtfNrc6JozPaXTvvoSHdv0If+PHRo3bs46fe119t1fjm5+b7tY7FpeXZfZ
dSpdx9l1LV332XUwsy37pu7VdTNdV9p1NjMOXYc6x4xvlpi87fqI3lO5Tn1O
YzK2zd2b0195buWBW8e6qx3WlzamZJ5lxz0YXA2uBleDqyczroy7OvfsnLQa
O33/2ofGGlq7WZ/KmpGdDq25VGPLzq9dv1Lfw/EvlvJ7cWVMI9dXjlW+g+Hg
Uz1b2+Iq+/b/4irbs3/9q+o/BLvJNaedGEP8qXDbbIur9LEcZe+X5m5Xf3K3
ztdO411et7haa6BaF3yqprXPjW6zbW7FvPbganA1uBpcnQuuXOfCeKzzUN/F
9kGdHHUDVs291pKowS7PVq6RuVfjz87H89vgKrUg2ij+TP5+/QufdjxGMZ52
OVnldWWMc+xwgYMDY+k5ZmMNwWfzyjlezrG2c33q4iaOnr7l9/Gtrn3+U4/X
n1qn8HbTl3K8vBf0FY2fmF8w5y4nTZ62/O2d5q06GOlD+pJr9vmgz2zsyHyK
vAJz3IOrwdXganB1LrgyL2lsdlc36nvZvqmtp66OOgPl5mQubu2J/Fv5SK7X
bK7WeLXzd30YbZr+xObZP79NX7JvtgdHOa/txtITQwhmsi24Sd/Sn7QzxvEZ
g8scM7H2xBSyT/p74w1PP45jrr96RsW2vl9zw+WEN19gDt3cunwz+djWKFnD
21rdVf9WDUCfCfrGYse8ie31WgZXg6vB1eDqHHF1qi7GOK1z1VU//FQ/1ZpT
e6f56nKXqkuwW5tSvq78JXO45naNbzvf1+cRA/Gb0s4+GZ/4bzlv7Nh8dGMb
wU+xFF9JXGWfxu3Frb6cbeMe5gLMlYur3XrQ1uTazu9OrYeSY1TzcPcc0Dc2
RmTeZFcHVH7z4GpwNbgaXJ0TruTtWBNqzNa1FFftoL677bP66hmHarHu1t5S
r8B1ma1hsbZFfq98J3O+xsCNA9Q3C/dYbIiZHD/bcszYPzgpxzj9iiZFxrnx
eTGpn2Ycwzi/uW+5YTvutLVF1t6qR5FP40VqGK7ahrFV7OS9rw+8rqG204Uo
Z0Aenb7d4GpwNbgaXJ0Lrv4v8AKdyw==
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3Xmsrld1HnC3QVGFgpCgSjrQIao6paW0SefhfEnndC7pPNM2ILWISmml
qgp/QAutBDEgTCGDh6RDZobYJgkJSYydGJPYGYAkJlyMaT2gxhjJpJJRIO19
PrGq39151/VFPqecl7v++Hz2ec/+1l77Wc/1u/faa639hf/0Xz33+b/ymmuu
+de/6uJ/nvu8f/tlX/VVz/t3X/G5+eUrn/fCL/niF37Oxea/ufh5/cVP2u+7
9+8cfvZn/tbhx+/5y4d7f/ZvH977nq84/NiP/oXDT7/3bxzu/rG/eHj79/+x
47N77v5Lh+9+6x84XHj/3z984MI/OLzjti895Ls/976/e+z3kUdeePjQ/f/k
cNc7/9zh/T/39479v/d7/tCxf+RFzv/40PMO7/6pv3744Tv+1OFH3/Xlx2dv
ftPvObzte//w4du+9Xccvukbf/Phh37w5PjsW775tx373XrLlxy+8zt+17F9
83f9vsN3fPsXHX7ix//K4Qfe/scPb7319x/lRZfv+e4/eNTj+7/vjx6+6y2/
96hHnr3xO3/3Uf87bv+Tx3F+5qf/5uFHfvhPH/tFzg/+wJ843HLzFx/nmzG+
721/5KjzbT90OMoPLtHnG2/6TZc8t79ylO+46qOe6u+8nK84iI+4iac4i792
0V7aUftqd/kgT1b+5BNdhlfDq+HV8GovvMrff/In/urhXXf9+WOfzC1jZZyf
+sm/duwTrCIz2OVnnpWNMl6wfuTn/+Xh/g/+4yOOP/+//sWxHZnOJXpkrtEz
Y0aX2CB65XuxUZ7lZzBPv2D2tW/4gmM7tv36r/u1R52Df55F38h+y5ufc8Ti
27/tdx7+yzd94VHP/D12jL6xeWxUOL3pjc8+YnD7O77sOF61M6/IzPj/7b/+
lku45HP7K0f5jqs+6qn+zsv5ioP4iJt4irP4axftpR1X+5bd5YM8kT/5+3ve
/dzDO+/8s8Or4dXwani1G16lnXdxxo6ctCMr303/PK+/B7v8Le3ok7/n+2mn
T2SuOnfv8fwt8w8O+W6tN9In8wsm0bme51nWFDfd+BuP7W/+77/1cOMNv+H4
/VpjpF32im5Zk8SOGSfrjm/9lt9+1D3y0i9YBu+sYzqOuY7quKQc5Tuu+qin
+jsv5ysO4iNu4tmte7WL9tKO2le7ywd5In+KZ8Or4dXwani1V17V/jHftx0d
04686FIy086nuLelp+9u97DZC9/3gX94bNe7u/b+eRZ7RG7e7bFL+kTfeh5c
v+Hrf91x3fN1X/trDv/nl37pJGuT2OQ//cfPPdz5I3/maLdXXfu0oz5Z46R/
5EfeDdc/6xIOyBP9BllPRK+0fb6uqUqO8h1XfdRT/Z3XOt/CQXzETTzFWfy7
/w9oR+2r3TtuyJ/yL2Suw6vh1fBqeLUXXuU72Ytmjxo5JSvP8v38PXrmeXTN
e7aeR9/okbmqm+9o963Ro/bb+nKDSeTm/fzgA//8OHbWCpEXHWPH6Bdfb9Yc
+W78zsW3YBb7ZW2Rv1/32mccx/vPr/vVh5f9h8+5xKauefQD6Ce3Hdyyvlqf
21aO8h1XfdRT/Z2X8xUH8RE38RRn8dcu2ks7al/tLh/kifyJjFqPDq+GV8Or
4dVeeBUdam8YOSXLdn38vdqlh/r4jnavqv/Wc8z4jTOnzDdy87foEwwzRnB5
4H/+s/+nc+QH/5zDRn6dv2oj1zC23e/rA/eMOPJjq+iZ51mDRO76vPorR/md
Duqp/s7L+YqD+IibeIqz+GsX7aUdO1t33JA/JS/t4dXwang1vNoLr+q9mbHS
zidjZ5z6KD/v2nw+eN8/+mXj1rvYd69+2u7s0niefD8YpX99N7gF5/xe7/HC
37b2cv+uf9szX2OiMnb+Fr+5/Im+aa+8sr9ylO+46qOe3VycrziIzxoHtRUz
sOJfdlnt9UT2lQ/yRP7En59/A67Ph1fDq+HV8Oq88+rDD7/gOIfIqe9F7zzL
PjZnlq6xVq7VuPH11k/3pPpmPa9c474qlrX6lM+21g8rx2rt4X5cf3V3Nm28
k/HAaYcTdaacflknRIeMUeuHem5/5Si/O1NWT/V3Xs5XHMRH3MRTnMVfu2iv
Lf5o33zkgzyRP/W3jDu8Gl4Nr4ZXe+HVO++88+SWm28+eeutt55Ex7yX8/no
oy86PPzQ84+fvG8zZvTa4lg+W36JzCdj57OeUeazFb8qVq4l3F/rf7adMeus
do1fMm65cl4ydtYzaVdMWPgRvbJOyd8iM2NkDeNz+ytH+Y6rPurZzcX5rmvO
wkfcVjwLZ/HXLtpray1da6+yu3yQJ/Lnk5948cnFf2s5/z8ZXg2vhlfDq73w
Kr/fcP31JzfdeONJ1gLJAcncX3fdMw8vfck1h48//viJMrv3rHtPfbCeS3Zx
X64NbLuP1rfs2avxSMbrdrk8a76ncbxZ54QPmVOtTzJO5hfZPre/cpTf5dSo
p/o7L+crDh1WVxIHpV22fErrulq7ywd5In/eddddR46947bbhlfDq+HV8Go3
vLrn7ruP3Lrj9ttPXvPqp1+U9ejJRx555KST47vVPaZ+V88fu1ivy+UBld/Y
s1RjjcqfvMYt5++Vq6Id1/oG4ULa0S/9Kwez4pZsy6uuj3KU77jqo56Xiyuu
+YqD+HR5MV1MVHcurB21b/f/GXkif/K3D91///Hn8Gp4NbwaXu2FV4mLfd+9
9548+MADJ/EH51z04YceuuS7vkPdVwav1CqID1lfqzr7Tnefqx+4O5s2jmiN
W67cE3MzrVdgPR/bwToYZ/9f9sl38jPPY+/ITL+Kza4YJZ/bXznK73RQT/V3
Xs5XHLoz5TV/qnBe11RlF+2lHbWvdpcP8kT+fOyxx448++B99w2vhlfDq+HV
bniV3I+Xv+wpx36ZZ3JGXvmKpx7s7zvUvaQ6dOfX7mf18a75HbV+WWtBVC5J
xQatdQKtSxAMq1aPtexi48qXif0jI2uV2CdjVe6PPuxqZ5zwoPzuW32Uo3zH
VR/17OoqOF9xEB9xW/OnxHnLn6C9tGPnK5AP8kT+hHtZX33gwoXh1fBqeDW8
2g2vMsfEAa19ujWYY/n+dX+65ZP3THONW87ftnJ5zKOsPNisZ6y9Y20667Vm
PZO1zBte//mXtKt/npVvumKrMrY2qniktPWl5Ln9laP8Tgf1VH/n5XzXfNKt
nJourlj8tYv20o4dl7q1k/zJv434IyrvaXg1vBpeDa/2wCvb3bpL+e439cd6
RrnGsK6fNedx5VXVDaiYreBprTlrsdpeeZV1zfXf8OuPMmKfnAfHJ5Bz2uzZ
5UY+lZ+08if6GV+d5/ZXjvIdV33Us5uL8xUH8RG3DtvOBtpLO2pf7d6to+RP
9Mu669qv+bzh1fBqeDW82iWvurWW+8rubLqLW3Zt1eU85mdhJG7WlOvqw+f7
dU+Hbe2YPXnVT9Du2cPHXpUrVDzJuibrj4whr3xuf+Uo33HVp9O5q6/e1dYT
N/EU5xX/rbji7ky58yd0a6pP/OJXH/8NVW3e4dXwang1vNobr3xvdn6GLm75
tPwM7qlPy8/gOkefwFn4GWyv66vT8DPYPi0/QxdX3PkZuvXVlfgZhlfDq+HV
8Oq88epK/O1d3HKX0+r5pvOyJsBaH6DOT1d/+9bdYZ7PdneEec+j57/6wz0v
lid11rzyyuf2V47yHVd91FP9ndfKq8JBfMStw1b8tUuXW9rFFV+Jv/3TPXce
Xg2vhlfDq/PAK/eSn278lfGrto13Nf6n3vv6qYNJ5lrxtF2d28p9WeOQjV8y
vtd4p1qPxK7GRxk/nD5pJ5dzjUOu+Cuf23+NZy75jqs+6qn+zsv5ioP4iNsa
zybOhb926Wz36cZf2ZZ7w6vh1fBqeLUXXnVnyk8mH8f8R/NBrJlj2/zK4FH5
JuZjmp9SfZLHYj5Lxq98T+9BNj/UfBnzSc2vqbVT5Q1tte2vHOWv45Y+6qn+
zsv5ioP4iFuHrfhrlyeTj9OdTXd5qcOr4dXwanh1nnnld22fRX2GK6lTlLlu
1XV/MnWKrB201k847TpFq3xrFp1GnSLxuZI6RWdRn6HjTFf/ang1vBpeDa/O
M698n3ZxxWdRr69wWWuuRl7VZRXPC++/9J6vwj/frbuPbVsn1rp51pWVD8WV
/C5/yr6V/+JZQPVXjvIdV306nZ2X8115VfiIm3ieRb2+Lm65y2kdXg2vhlfD
q73wqnu3Kv//Z/322jsXJtUu33KtryI/+HkPSJ5Zv73uDYkeVUc98rKeyf1b
tsOTupck41Sd9uhQ95j43P6dTMdVH/VUf+flfDtMxG3Fs3A+rfrtXeyW/NFf
MbwaXg2vhld74ZX7zS5uyjG3xq9Yn/rpGWitDVa/+upbeKL7vLzn0XuvIid2
zvrE9nqvZZ35eu9k9Kh1kfdURue6tyvY1b2WPre/ctZ7LWtc9el0dl7OVxzW
f2tneZ/XVnuN45I/Xc3G4dXwang1vDrPvOr2nlvrJX9f22s+SMXH1jqh8ijr
zLTzq1/J/c4PPfiVR9n5bnSt2KbIr3uTs67Je77yRORS5YrazvgZp2J96x7n
PI+t1vud7d/JdFz1UU/1d16fqfudL2ffetb5lLp4g+HV8Gp4NbzaC6/ch/r+
vZwO0btqGJRcc0a6uGJjijxjXf3qte927RH5WZNkX6tdsteNjMQ8xabZu1/3
2mcc1yKx7auufdpxvvl77B65lS8jT2qNkN/l1fq8+itH+Y6rPuqp/s7L+YqD
+IibeHZxy12tP+3Y/b9iaz1W67bij2fcw6vh1fBqeLUXXnXxq2t+h+sl+VM1
c2xHb+sJVE6lOSaRV3G23l3l2Wvk1X3H+qXdm7tW0XYZL3kiiZPNuPl78icj
N37uOvONbyBroNLlTW989tFWsUnGzTqlzpV9bn/lKN9x1Uc91d95OV9xEB9x
E09xFn/t0tlu5VvZXT50nPG8e3g1vBpeDa/2wivPKPXTuj/t3tHqmWdVU67O
mNf6Qnk/190c5mDWvni9p9LYpPSps9rCL/bSj+1efl1TlX0jP/JuuP5ZR73i
L0+scDDL/JIzU2uEy7XX/iVH+Y6rPuqp/s5rnW/hcLl7MAtPcRZ/7aK9Vr5t
rY3lgzyRP8aADa+GV8Or4dVeeOV5pW19tu5bfV+rs3VWbVuDrs4wa69edQnM
zUyfytmMPvXcOF5jmTzb1b/tfr9bU8mHrGcqdya2S5/EEsVGGS/297n9lXO5
tVbpo57q77ycrziIj7iJpziLf2cj7bjat+wuHzrOGA82vBpeDa+GV3vhlTE8
nl3qv3Xfalt91N865N7N0dXWs26PdQzM5TS3xfje6BvZb3nzc35ZbFWd/+oP
1z/gGqnawVP+BKf0j1yf2185yndc9VFP9XdezlccxEfcxFOcxV+7dDVyO1vL
B3kif4ZXw6vh1fBqj7zq4nk801x947Wf9T3uXLIm2bqnw7rl1nG1ll38zXmW
tYV1fqx1YO7nmlNT643MOc/W2KpgGOxX/7k+hG5N5XP7K0f5jqs+6qn+a85s
zVccxEfcxFOcO1t09XK1r3bv6kXIH2Okh1fDq+HV8GovvDLGdY19qvNN/bq2
3dv6fu/ul1zbda+Hdc7L75u5W/uuqy+UtUL9LbhUrqj5MsYPG0PVnSm7dtKf
sK7Bts6mle+4a/5O6an+Xb0jcRAfcVvvkt7CXLtoL+3Y2bqrHSF/zBsaXg2v
hlfDq73wyhjXtb1VE08fr/tc3+/dHL3nMfrWXVfe/dHVV7c2bOFaXMrv0Snz
q/oJXW6pdre9xavye6y8WtdUncwup1U91d95OV9xEJ/1TpbCs7tPU7toL+2o
fbtagh1nzCEaXg2vhlfDq73wyrwPY1+N+enOPfX9uuf1ve98o2fdfWw7Y3kX
ZH6vWnx1V4j10vMeL19w9KlYoMwva5p81/pC2rTLLe3iirszZft3Oa2Oqz7q
qf7Oy/mKw4pP4dZhK/7aRXt1teW1u3yQJ/JnzasdXg2vhlfDqz3wyhyQNc/F
2nfWgLUuevmB3f92awBxyN8z5+AY/OuOSNv5WeeZwb7u0qo+0berr76uYWpf
r9/btmfExk0ZV+xz+3cyHVd91FP9nZfzFYcOK/EU527tqr20o/bV7vKh44w5
tsOr4dXwani1F16ZF2luSFf31bggz0b1Cbsvdj0gDvkUL2xX/mPVBqj7lKud
n2LumsS2+/fVJ79VW6+rq1D5pFs5PtW/qwG4jlv6dDo7L+crDuLTYSjO4q9d
tNd638pWnJt8kCfyx7oTw6vh1fBqeLUXXnU5kuaJrHG/FSPk2aj+YffFtp2v
+GR9EdwSI1s1jxIDVLUCoq/Yir/7cf3VnuGuMU5bccvmyGzxKnUV1rpD1b+L
K3Zc9VFP9d/i1YVP1ZItHMRH3MRTnDtbaC/tqH21e1eDd62LWHUnhlfDq+HV
8GovvLoSrMTnvGHVnU0/GazEp2uf1r9B9T9v/wZtn8W/weHV8Gp4Nbw6D7zq
agiYR+neWR+ye2d9yPqNbZ/F3lkf8rp31oe8db+ke+e1RlDtnTsfsv27ugqr
T6b0UU/1PwufTGcL7aUdV/tq9+JDV/uiq4s4vBpeDa+GV+eZV8YUdfXMzSWx
7VmqMUVncZZqTJFnqV0uj/mbnqUaU+RZqjFFGb/qqBtT5HP7r2eyJd9x1afL
qXFezvcszui1l3bsbC0f1noXxR/P6IdXw6vh1fBqT7wy/vazPbbWeNqziNm2
fbXEbFd7jdkeXg2vhlfDqz3wKnKeKNcyMutOq/OWa2l+5WnlWlpzoLtf8rRy
eNd83vOUw6vdzyKHd3g1vBpeDa/OA6+6ezrOc+2dzCXjZS1h7R1r0EVe1d6x
Bp13YNmuM9215qq1d3xu/06m46qPeqq/8zrPNZ06zgSnqm04vBpeDa+GV3vh
1YWd12K1Prlta7Fe4H6r6F97Y2uSx6b5W/lJqiZ5nudT6y6fV3/lKN9x1afT
2XntscZvcIk+OWsfXg2vhlfDq73wyndi7Rnf9ll8N0eepx2MzuLOF+XPnS/D
q+HV8Gp4df55ZZ/VX7rnuxqjW91lnO/UXY2Rn/lkzlWfvO7urDPZ/L3uauza
9leO8h1XfT6b7gCVP661hlfDq+HV8GovvOrOELv4UnMuzEns6jyseS4Vr2uc
kme13p2hv9o9+7p2KnsF87zjY/f8zCfj5KcciA0io86R06f8BiWv+FH3GVec
WD23v3KU77jqo57q77ycrziIj7iJ54pz4d/VVVjrL5V9u3j1LlYhWEWvtIdX
w6vh1fBqj7zq4ku73EPz8a1dYP5mMK66pmvOS+aTcY1f8txW37V7dtcttR6q
M3G5VO2qXRC7affK6yx75pNx6m/Rt86eo6vP7a+clbf1vNNN/df1WM1XHMRH
3MRTnMVfu2gv7djlLHfckD/d/WjDq+HV8Gp4dZ55tcYbb+UedjVduxo+1jQw
l9N8FuN4jWXyHuHOj+1e3jXMyp/6vepBZJysU+qn7epTa6b8rJyU0tnn9n8i
mVUzofRZ+Vb6O6/uXEB8xG29V6t0Fn/t0tmuq83b5Sx38erDq+HV8Gp4tRde
GXdqHI7trlZbV8e7q2/Q5bYY37vGQdXZrj7tbl9f9os8bZrf86ladvU8cupT
dX+Cfa2XglfZP7bzuf2VcyXjrnpu+T3W+RYO4iNuXQ5RV19Ce621B7dqNnbc
kD/m8gyvhlfDq+HVXnhlTqI5GsapGrfj2aW+XNtdrQPnbp5LneHm3W6MU611
1nNefd3u8bu1zWrzrU/1ia4ffvgFR73Dh5wD1xrC5/Z/Ipk+W9d46u+8nK84
iI+4iefKsa6mxJbttK92lw/ypKvXMbwaXg2vhld74dVaV2Ert9Q8DuNaje0J
Zlu177q6B2vuZ+Fj3K/xTp756ut2v+/aZWvNU2uaC5+qlRvM478Od2KrjJFP
1h+Jq828PvmJF59cnHvOaU98bn/lKH+LY/mop/o7L+e74lD4iFu31hL/rsag
dtS+2r3LaZU/w6vh1fBqeLVHXkWHrTre5vWb22iuRxdXbCyQZ6P6h7s80C7u
1zgoz3/1gW/t/TOedv/ooy86PPzQ848f21lTZF6ZyzvvvPPklptvPnnrrbee
vOuuu47td9x224nP7d/JdFz1UU/1d17Ot8NE3MRz9cMX/tqli1vWvmtOseur
4on8qbOAOvsYXg2vhlfDqz3wKnOpWJ+utt5a98b7QSoXMvIrN8T4WOOFujNl
/cnur11jiLlnwZ0/XJ+AayH58Lrrnnl46UuuOXz88cdPXvPqp1/kxKMnH3nk
kZN77r77yJ07br+9bdtfOcp3XPXp/PnOy/muOHjOvpUbK87ir120l3Zc62Zs
3UEmT+SP9eGHV8Or4dXwai+8io5154V1v62DutaCq9o4XV0FcyfNJTGe1vgi
z1j1Odt2P76uqcpG+sb1CbguyueG668/uenGGy/hRvbZOXd9+KGHThKP+757
7z158IEHTj722GNHPn3wvvsueW5/5SjfcdVHPdW/i++6HCbm1Raea9xy4a9d
ujoPq33L7mud4eKJ/Ik+Ffs2vBpeDa+GV3vkVXTJd2pvW23rhFfuSNrWjlPP
rmasOSa2jb81BmnNcymcu1gp1zDaUV+BayR5Er2Tk/LKVzz1uA9/+cuecuTN
//6FXzh5z7vffRLe+Nz+ylG+46pPt9ZyXut8CwfxEbcO2652rvbSjtp3tfsW
N1Ze1X2aw6vh1fBqeLUXXlU7PtroXvckeldUd49kdx+Htebq3Ld8sFV/IL9X
DmZXP8F4XWOWPMPVj+2+3rWNto4v4EP333/86dpJzsQuiUUKZ7J2Sv8PXLhw
yXP7K0f5jqs+6qn+zsf5dnHL4iae4iz+2qWzXXfPpnyQJ/InY+VvFXc9vBpe
Da+GV3vgVb27V17Zzh5z605J79qw3rj1V61BV3FFaz29y9VSqNjdrXY+3Zmy
fm/9AK6F5Ib8yfojPvTU8Ona9leO8h23O6dW/zWOeWvu4iNuHbbir120l3bU
vtq948bKn/o3MbwaXg2vhld74VWtS1I7Nf1qX5v9ZcaoWJ/ysXb3S9ZeOXvP
/Ey/vKetT26NVmvWRYe0M4+K2a26CtU2xzM45RNZxv1qL8+C9Y3rH7Dt2inj
pkbdv3/pr7io23tPXvmKVxzXSD63fyfTcdVHPdV/nZc5rVuYiJt4irP4axft
1d2nqd3lgzyRP9EtfM2Yw6vh1fBqeLUXXs36atZXs24fXg2vhldXM6/G3z7+
9jnHGV4Nr4ZXVzOvJv5q4q8mrm94NbwaXg2vJh9n8nEmz2t4NbwaXl2dvJr6
DFOfYep+DK+GV8Orq5lXkT/1+qZe39SBHF4Nr4ZXVyuvouPUb5/67XMvwPBq
eDW8ulp5lffy3Oc193nNPXHDq+HV8Opq5dXc7zz3O8+94cOr4dXw6mrmVa0d
ok/0zc+8NzOfysuIvjmLjJy8yzPOq6592pFjeVdf99pnXNIO1hXb6lx817v/
1T/cnU0bX2T8rTkpmYtxy/V7t7bZWo+t8V2eBXfxUU8kU99H5W6aW1r6Oy/n
250pr371wlOcxV+7dLbTvtpdPsiTlT9ZAw6vhlfDq+HVnngVHaN7vlP7zTe9
8dmXtPMuj18255UZK7KzJ43c5KQkPlfdfHdnrMwr33Wfm/lmDhnXs1HjhYyn
NcckPysHM+3KIbFeweVqPtR6xj2+vm7Pf+s8YD3vtv+aN+R6aauWgm31d17O
d40rLnzETTzFWfy1i/bSjtpXu3fckD9ZX9X59PBqeDW8Gl7tkVfBIO/25Gbk
u/GtZp+ZPpGdWnWO67s4Z5U5t0wNH/et+nIzrzrrNBbI+NjaX0c3c0lq3552
8SAY1RntWgNwteNW/Qf39fq6PfM1Dsrn9u/8Ho6rPuqp/s7L+YqD+IibeK44
F/7aRXuta6qyr3aXD/JE/gSr6JX28Gp4NbwaXu2FV9Un79i8l1OnLXIzv5w5
5ndlrmut2ofqp/Xs0tieLm45dqncEHMnrSdQvuzYyBp01mi1rb1ct7iX16ft
OW8X92vb/spR/rpeKn06nZ2X8xUH8RG3Lq5Y/LWL9tKO65qq7C4f5In8yb+F
jBf+Dq+GV8Or4dVeeJX3Y76b+Fr7rGut2lfqd6198Ho2bdyOca3mepgL2dV5
yHzzt2BgrTnrr1qfXLusa7DStfNje7ZrjJNxvz63f3cusI5b+qin+jsv5ysO
XV0F8RRn8dcu2ks7al/tLh/kifwJTulfa/Lh1fBqeDW82gOvfCfWWeW6fwwm
mVPe3545GodjnKp5HGtuY72X1zoAVRvH2nHWU7XeeHQO7vmbtrDt+sQ9u75r
+dDlyeZ5PhUHtZUHqhzlO676dDo7L+crDuIjbuIpzuKvXbSXdtS+2l0+yBP5
E1yiTzg9vBpeDa+GV3vhlX1se4ZojI1xp8EgegYTczTMYTSv37o31oKrc9dg
Z/3w9A9mb3j957d3h4m/a5Kudq7ntraNZVpzZiveyef272R2NWPVU/2dl/MV
B/ERt7WmonWlCv8ut1Q7al/tLh86zrjWGl4Nr4ZXw6u98Ko7Q+ziS825MCdx
rfNQdWy6GoBrHdSqE77enVF3S3X3aXb3cXR1dD2rNX6pqyPR5RDZXznKd1z1
6XTu7pcUB/ERN/HsautpF+2lHbVvF6/exSps+eGHV8Or4dXw6rzzqosvdb/p
O7fLxw/G6Vf79DqTTZ/yO1v3O2Pl94pryu9VUy5YR2bGqXsVbYuz6w334Pqi
PZ81Tsl2V1Nizavtah1syXRc9VFP9Xde3dzFZ8Wt8BRn8dcu2qur16Hd5UPH
mTVWYXg1vBpeDa/2wquKselyD92H2vYdrZ7W8Y6eeZ525lR3XuRZnetWn6rV
U+2Mk79nHLHt7tl0360v2jNZ45SM111zhbbqS/i8q32nfMdVn86v4rycrzh0
WImnOIu/dtFe2rGzdZez3MWrD6+GV8Or4dVeeNXFFRuT4xmlflr3rb67nYvt
zKXuPaz2hU/VeE2/tINRYWBbDF1XuNfW57zet7JVc94YXfNWzN+0poHP7d/F
Wjuu+qin+jsv59thIm7iKc6dLbSXdlztq92LD13ccpfTOrwaXg2vhlfnmVdr
3aGtWm3G7dj2TFO/rvtc3/XOvWoXpJZd1e7JGW3e/+mT2FxxE2f31J2f2bNX
Y5CMyzU/Za1Zt1XDx/bav+Sscb81bnc3lvo7L+crDuIjbuIpzuKvXbSXduxs
3dVslD/WeRheDa+GV8OrvfCqq6vwZLASn/OGVZeTclr/BpV/3v4N2j6tf4Py
x393w6vh1fBqeLUXXrl3tr975y631LwP986uGc5i7yz+nqvadu+8xt+WfeVD
V5u3eLVVz6f6rzmeXdxv6dPpvMWr0/TJaJfVJ1N27HJa5UNXtz+8j+zgMrwa
Xg2vhld74VW+W3VNbXuWuvqQ6yxVH7JnqV1csbFDZ3GWqg95jYsuH7I5mLY9
S9WH3J2l2r+T6bjqo55ncUYvzl3csvZazybKvtp9PVvf4oxnE8Or4dXwani1
F15dSWytMUVXS2ztVp06n18NMdva/SxitodXw6vh1fDqPPBqza88jVzLrq7C
eci1NL/yLHJ415oGNa76fKZyeLXLaeXwrveIVQ7v8Gp4NbwaXu2FV9YcqDPg
uiex5Hh3hu18p2rvWFvV2jvrvM5r7Z0tXq017X1u//Nc08m2dtFe2rGztXyQ
J/LHmk7Dq+HV8Gp4tRdeWYMuuGVvme96j3Ce1b7aGnTWYrUG3QXqr9reYy3W
9KkadD7fY41f29pLO2pf7S4f5Mla2zDjxh8yvBpeDa+GV3vhlTXJ0649rTXJ
vY/jar6bw+f2V47y937ni+2zuPNleDW8Gl4Nr84DrzKXuqvRdu0x687HyMwa
Ij/rrkb1+Wy6q7FbU/nc/nu/A1Q7rvYtu8uHjjPDq+HV8Gp4tUdeVYyv+8SK
a6qY1vp71hD5nvVtyv+bZ/lb5Od7dZexOl/gfiv3s/p1Pes05sc4WGsEdTmS
a+5M1c8xrlg+uEbq7umwvfYvOcrv6vZ0ucBrrSTnWziIj7iJpziva6eyi/bS
jtpXu8sHeSJ/wt3wbHg1vBpeDa/2xKuMmU++Y7vyGyMj+qd/2lUroPJl8olM
2+rp+9p96+rDj9yKX63zzciLPbJXN/Z1zRuqvEjrA1hXoatP2MUVd2fKPu/i
lrv6derT1TFwXs5XHMRH3MRTnMV/5c+W7bSvdpcPHWdq7RVdh1fDq+HV8Gov
vMrv9U6sWgD5Pe/qvKfrZ57nnV196lnpsfJt6x3tvlX/rWeaawyYMa61von8
qqNuLqT1AbRdV1ehq1dvDFWeb91pZX/ldHUe1Ec91d95OV9xEB9xE09x7tbG
K3/qd+2r3eWDPJE/kV86D6+GV8Or4dUeeVV1gjK2clcubbVX7rkeq/2pPlvP
Lrt4HmNczfUw/1G7uFZZ68htnUfb7nJL5VWX09rJdFz1UU/1X/OFt3Jbung5
8VxxFv+yy+X+X9HZt57JE/lTPK2co+HV8Gp4NbzaA69q/1jv3Hyid7X91Hu4
2o7r+9c9ac094+un9bzSGB5jWc3vEGfXHu7NbXc1eLvaeubLdDmtPl/za7Zq
AHa1XjudnZfzFYcu1lc8xVn8tcvWeunCp2rkbtl6iw/RVf7kfLvWoMOr4dXw
ani1F159+OEXHOeQvW90DI755Fn8uembd/CFT9VMlU+OsbUey3z0x3pGmc9W
3M7KKzGsNYb7bv3SeWaNwa26u+a/rLk8W7X1rC/kc/t3Mh1XfdRT/Z2X8+0w
EbcVz8JZ/LWL9lr/31Ef7S4f5In8iX8ksWmZ4/BqeDW8Gl7thVfvvPPOk1tu
vvnkrbfeepK1QHJAEvv60UdfdHj4oecfP7aVv75nt/aedWYZ/DyXNFZHTFwz
uI9e/fB19mpsku211m7ltqy5n97bGBuud3SWT7vWn8aeVX/lKN9x1afTuauB
sPoTCh9xE09xFv/Op6QdtW/HAXkif951113H9jtuu+1keDW8Gl4Nr/bCq/x+
w/XXn9x0442XtF933TMPL33JNYePP/74JXzr3q3uN/W7ehbpfF0DrD6HLT+8
Z6xdLcH0Lfuay2mtg67eUdX+yd/kT1cf3v5dfaH1fpDSRz27mnhdPQTxETfx
FGfx7/zh3Rpbu8uHjjPDq+HV8Gp4tUdeJS72fffee/LgAw+cvObVT7/4Hn30
5COPPHJJ2+/6PnVfqa+1O9fu4lf1D3tmakxRZFScbfWJbczNzPhbteWt82Pt
O2vDWi89+td9Il3b/spR/jruVo109XdezlccxEfcOmy7c2Ht1fkHtHvHDfkT
zn3o/vuPP4dXw6vh1fBqL7zKXJMn8spXPPVg2/733H33cYw7br/9kneo+tj2
3e1+Vn+vZ6DlW15zYI2nNcfEHEzrEli3x1p2lYPy9uWuMeuiV15l1iTRoe7S
ir5b92nav6uv7rjqo57q77ycbxdXLG5r/pQ4F/7apbOd9tXu8qHjzMcee+z4
nQ/ed9/wang1vBpe7YZX0St5k3ken+/LX/aUY4yQfXxvOpbvYvenXRyXMT9r
/E/Fx671H7ZqItX5aP7e1QC0jqt1zte7P2KTPKu1U9ml7lPOWPlb9uA+t79y
lO+46qOeXf1Y5ysO4iNuHbZd3JT20o7aV7vLB3kif7LuSv8PXLgwvBpeDa+G
V7vhVeYWX2ryRHyuHN+t7j07P/zW2bSxPWv+Ttmu1hHWdqi2OFuDTrus96fU
vR7Rqe66Kn90nXdXW57UOmTllc/t38l0XPVRT/Xvasl2mIhbl18j/l0MlXbU
vtpdPnT86drDq+HV8Gp4tRdedWst95L6Wj2LND7H+FU5lef51Fql5l6xsGWr
qpkT7KumnHVWrUOe72/d09HdpxmfQN19nP18cC2ff+3La/2RMar2RNYqPre/
cpTf3S/Z6ey8nK84iI+4iac4r/iXXbSXdtS+2r1bU8mfT/ziVx//DVVO7vBq
eDW8Gl7tjVe+N5XTnU13ccvmdGx9zNtxDVN+hsKtcnjWeuPezWG7u0/TdY52
d40kT9Z1VPHK5/ZXjvLX9dXW/ZLdXJyvOFyutt4Wtp0Nurji7kxZPnTrq+gX
Hl77NZ83vBpeDa+GV7vh1ZX427szaPekp+VnWP3tp+FnsK0//Cz8DMrvdHgy
foau5t6T8TNox+6s+Ur87VeyVh9eDa+GV8Or88arzp9wJfFXnlea0+H5pvE/
8mmNF6rzU+OLPG+t/fN6r7TxS57nGu/k+a/xUZ4Xx17ezVjtOmvOz66PcpTv
uOqjnurvvJyvOIiPuInnivNW/qn26nJLryT+qlt3Da+GV8Or4dVeeGX/1NHJ
3x9+6KEnlY9jvKv5IPXer9yWyqvM9yqeNn8336Tib81PMV7XfBbje7OeSaxT
1jS2zZdZ44crv2aNQy7u+9z+ylF+p4N6qr/zcr7iID7iJp7ivNZkKLs8mXwc
edKtwYZXw6vh1fBqL7zyHdqdKZ9WfYZaB9S6pNYK5ldmrmUn8zG9u6qwXe/B
zN8r33Otz1D5odZPMJ80OlQOjG3rM3R9lLPWZ6hx1Uc9L3dPZc1XHMRH3FY8
C+ezqM8gT7q45eHV8Gp4NbzaC6+6uOIutuq06vWJg/V2bNea4cnWKbJunrWD
zqJO0VqbqMY9rTpFHVbieRb1+rr/z1xJ/avh1fBqeDW8Os+86nJLu7hiY3g8
09TH6z73063fHllVl9W7qy5QxzV9675j2xnT+u1VJzZ6VB1168pm7FoPFVdi
7+hVddrLzx6b+tz+ylG+46qPenZzcb7rHWeFj7iteBbOp1W/XT50Oa2f/MSL
L3LqS08uznl4NbwaXg2vdsOr7rzY9+wWl3x24f1nf59X+Zbrbq/aO3sPSPmn
Ew/kvSHeqxV5ifN9y5ufc9TD+u11L0l0rnu7okPdY+Jz+ytH+Y6rPuqp/s7L
+YqD+IibeIqz+GuXK7nPy0+3rpY/3X1ew6vh1fBqeHWeeaXfdWvv6RhrzqPP
1zjY8k93Z8r6jd1HX8n9zllTZD0TP7btyK97k9d7LeuuSe+dzNi5dyt5lN5T
GZl1j3P0rXstfW5/5az3WlZbfdSzm8tn6n7nzr7yQZ7In+QQxVdintLwang1
vBpenXde6YOVH1t+g62cx4xTuZtbOTVdHVrPUvUtu7/2nkfXHuIf+RXjq72y
v89aJrkhtjPfnAWHAxm/6icEg4xfNfGKP3meNcvKK/srR/mdDuqp/iuvar7i
ID7iJp7iLP5dLo927GzdcUP+eK49vBpeDa+GV3vhleeSJcd11/ouVp/MJbpm
btYNMI/SXJKKV4oN1rjiyI3NPHvV/+x+PN8N/skF0UZZz+Tv1732GcfxkjOS
ONnIyBrnVdc+7Sg3fu58N3pVvkzmk+/HX2A765Q6V+76KEf5jqs+6qn+zsv5
ioP4iJt4irP4axftpR21r3Zf86dcq23Feg2vhlfDq+HVXnjlGaW+2TW/o2T4
jlY3a8rVGfNaV6H2sdmLm3tS++I1rjhy6+7j9KmzWv3V7t9dw2jT6BO7pX/k
R94N1z/rKCc+8vgCMt+sQZIjkz4ZN3aMTaJX2j63v3KU77jqo57q77zW+RYO
l4tbLjzFWfy1S1cDUPtq944bXdzX8Gp4NbwaXu2RV2teTPlp15oJ9Y7u9LTW
nLV3yndfsUtVl8DczPSpXBXjdY1f6s6U9W+733fNIweCd/zliRuWJ9XOmqTW
C+tz+ytH+Y6rPurZnU2v8WNb+IhbV+dB/LtauNpR+2p3+dDlAdU6r2rXD6+G
V8Or4dUeeLXGQW2dXeq/dd/qu7urr24t1u7uLesVeA9yl1OzxhVXvJNnvvrA
9QPUGuZNb3x2y6XIzPipWZC1SuZXMcb1vOOY8h1XfdRT/Z1Xl8sjPuImnuIs
/l19eO242rfs3sUMrDlBFRc9vBpeDa+GV3vh1f8FT5z9vg==
      "], {{0, 116.}, {150., 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{150., 116.},
    PlotRange->{{0, 150.}, {0, 116.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.9474918839356623`*^9, 3.9475097621697683`*^9, 
  3.947613362722207*^9, 3.947666611977487*^9, 3.948071367018593*^9, 
  3.9489855787456512`*^9, 3.949437488257622*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"5aa0043c-4dfb-494a-aeea-d1ae5385e487"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogSpiral", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"75", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "25", ",", "0.1", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "/", "7"}], ")"}], "*", "Pi"}]}], "}"}], ",", "1", ",", 
   "lena"}], "]"}]], "Input",
 CellLabel->
  "In[388]:=",ExpressionUUID->"42d5b74b-88e4-4c27-a764-0858351c03a4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQm8retd13fFCaeqdbbaVmtb2zpL1Spnb61TW6tFtJMzTq1KHRBFxfZz
EyAkIYGbkNwkyJBAuGEIc4AAlySEkISAGCCERA4QMChDAiFMIQnY9V3nfG++
+8n7X+fdd+9rToL389n3/Pbaa73rfZ/p9zz/4ff/dX/577z/X3+ve+655++/
9+F/7/8BH/IHPuiDPuAf/6mfxS9/7QM+8Hf+jg/86Qf4wYef+w8/4Nf/q79y
/m/+9V8/f9MP/J3z7/yODzhifopf9+1/8fxffedfPv5b/K03/9xD7yn+5lf/
b+ff9q1//vhT/Opv+l/PX/ua/+P4U/yKr/4fz7/2a/7Y+ctf9kfPX/PN//v5
q77xT51//Svf7wLmfd/w9X/y/J9/7f98AfO3r375/3D+lS/+70fMd33dP//j
5y976R+5gHkP3/miF55fwN/4De9/xC/48hsj5r649pc8//dcwDzLF3z+7zj/
zM/4ry/gr3nF/3T+OZ/9W84/7Tn/5fG+P+9zf9v5Z3z6f3UB/4uv+xPHv3/C
x/+aC/irXvKHzj/pE//j86fd/8svYK79MR/9H5w/7rHvfQFzf8/8pP/k/OP/
2X90AT/pvl906LvvPPvWmzfPfuSHf/jsq17ykrMvef7zL+Av/ZL/7vw5D/wX
55/4Cb/2vJgfPv+oe+8Z8Sv/xf9y/pKv/IPnn/s5v/UC/vZv+wvHtvvyB993
E3/Zl/7eEX/Tq/70sR2f9wW/8wKmH8HP/+LffQHT5y/9qj987Isv+sL/9vwj
PvxnHMbgq8+4T579cz77s8/4/H0f8wvPf/BNb7qAv+N1f+l4z5/9Wb/5/Lv/
zf91fAauw1hnfH7xF/2uC5jv5f20fTHvoV+5f8Ywfca9FDMeuDZjgzny4q/4
A8dxwHvAX/i897mAeQ9jj3FWfPNb/uxxPPN7MfONMc33FPMe2op75T6dJ8X/
8rX/5/E6tGMx45zPOv7FrCFcl88X0488A5+fMNenX7cwY4C2Lv6Wf/lnjm3N
78Xf893/9zn9x7WLuRfulWsWf8WLfv9xvHz+5/32Y1/Rlg9+2e+7gF0TeG8x
44L1g7WieFpnvH/an/dznRe+4Oz4PHwX46TY76ff6SdeY2wU83n+/tzP/G8u
YL6T9zG/+Jfx7XtYf5jPxYzBT/+033j+rGf+p8dxxXcz77lPrsV4nTDPw3cw
nlmTeU6e441v+MBj+/OcxW/4vr91HGd8B9ehTcGs5bQPY6+Yf/mdcVZMv/N9
joEJ8zx8hn73d/5GX33Wc3/TcXzQP7Qd7/mu1//Vd+K+q/Ag1+Q9jsMtXO67
Cg8Wwx3MV8Zq8TRuJx7cw4nlPsY844Ixyn0wLlhLV7zFfVfhQdZI/v6Mp//K
EZf7rsKDxa7fcGvxEz7q553/xNvffgbvFF8XDzKn5CbGJ2MG3ilm/tB23G+5
b+JB5i7f8ymf/OvPi8uDEycyr+TNct/Eg4wrxg5zsNy3hweZO1xH/nVsF5cH
/V7GcLlvDw9y766txRMPcv+siWDakOvw3cUTD/JZ+os5WTzxIPfJM/P9E544
kXZiXND/xRMP0ha0H21evIcHeT6fpbg8WMz1befiPTzI6/A587DcN/Eg98iz
c53i8uDEibxGX4PLfRMP0ibMYdtK7pvwyoP80CdcA0w7Fpf72O/BQ/xe7ivm
vvjhtT08yHuY/3yG6/I3z29i+ldem/BleZA9GusZa8uEeR7ajv4ovgoPMn8c
68U8p3u14nLfXh68EydyX3Dc/U/9ZRcwz8baDLdN+Co8+Omf9mk37rn932M/
8meff9/3fu/xPRO+Lh7kuTnD8r4ffNPffWhOFpf79vDgxIn0D1zI+bB4Dw/K
U/RRuW/iQcYV6w7tsmJ5cOLEdW7KfRMPcs+8H1zu28ODjHM+xzPS3twP31tc
HuSz/M5nyn17eJB1CMy9Fk886J6T7+Y6vO5ZVTzxoPwMlxVPPOj30LYTnjhx
2j9PPMjYtM2L9/Ag12De8HrxyoNi1hvOeU9/2q+4gPfwIHzk95b7Jh5kbMBB
7sfE5cGJE/m8+49y38SDfKf8U+6bcHmQz/qjnZK/w3PMebiw3LeHB/dwIvcC
5t9ixqHzt/i6eLB2jGkMF18XD3IPzDvu1f0846qYPtUmU3wVHmSf9+hH/bTz
f/uTP3lW/BNv/6dnh/X+7HGPfe8LuNw34T08yLn08Y/7Oecf/mE//fgMH/eM
X3XktgmX+67Cg2DbesLMG97PmjLxoPtW7qX4x9/yj47jgPVTmwNji35kzXV+
8Rle47sYc7xH+5u2d3mwNpnJPnOKB3kWry8uD57iRG1l5b6JB2kD1k3OEeW+
PTwIZu4wF3hG7od+LC4PMv75Pu6t3LeHB7kXno/PTrg86Fjg3qZz2cSD0/ow
8SDt4Xo24YkTGWtgvrd44kH6Ct8Hc2zFd+JBxjH3q21TXB4sZr2HO7in4j08
yDPSHz6v3DfxoLyiD01cHpw4Ub5hPpX7rsKDxdwH6wDjvZixwTW1ZYovy4MT
JzKWGQv0Be/x9+LJnr+HE0+Nc/dkEy73XRcPMl+e/Sn/2fk/+7hffQEzhuG5
T37Wr7uAL8uDEyd+xYtedOPrX/nKG9/z3d/90L+Puvees+Jy34Qvy4O0AefX
x3zEzzwvhhM9OxUzdp/ysb/kMHdefMa4f/KTfvE5Z1vmD5/7lE/+5AuYMYzv
9BlPf/rx/XzvFz7veWf0IXz4xV/0RWf0hffKHKcvXfP54buLGeP4w7i29hfG
jn5rxiZrvq/VZzH5LzpPmZPcB9f/vu/9mw/NUWx9XpfPMlZdf8TlvokHWXew
lX3qs3/DBVweLOY6jFH6p7jcN/EgbSunl/v28CCY+4fL+F79UsXlPn5nbLHH
WLnvTjwoz7rH2MLTPnnyoZziQfmleOJBvpfnoz8mPHEi7/H6xRMPepbnfcV7
eJD25Hm4TvHKg2J9f7xWvJcH+fH75b4JaxeFt4r5YX7xO+91rk34KjzI3PW8
WDytM+W+PTw4cWJt/tN+bxrz182D7r21XUz4ungQfsAPduCwow30Cz7/88++
/MEHL+By33XxIHsX7vdjn/wfXsA8G7457q2YecxZ81nPfObZrbXyVWdwFmPh
bW996/FeGVdwJj4+2vnDHv1e5wcOP6O9f/wtbzn71Gc/+8invP5lX/qlZ/Qv
3PeZn/EZ74S5F76DfmGN5z6YA6xv2l3lQe0NrOPMN/7Gv8XMBc855UFeN0Zl
8mVMe9fOU/4uX/7A9//th/wXxDiw1rF/4hl+4Pu//+yNb3jDGX3w2te85uy7
Xv/6C5g2dK2beNCYH84axXt4kDWM67uei1ceFNMuzA++u7jcN/EgayV9pe9M
7pt4kH7gGvpqxZ7FekYDT+vAZCOaeJB/eVbuZ8LlQb4fGzzzmu/nXog3K554
kPZm/jMeiicedIzT5hOeONH9nfcgnnjQOA7WweI9PMjY57udB+LyYLH2SjlT
vIcH93BiuY/xzGvGbTG3eW3C18WDjfWa8OT7viwPFrN/of/huGKejTnivldc
7pvwHh6krVjrOCcyRh741P/8+Htx+W7Cl+XBA37f73jd6w4/f2nEnCn5DD/F
5T7mM9z142/5R2e89pwHHiA28+iv/ISP//izwxp69tFP/AWH93/c2WF9vMCD
XOdrXvGKs496/OMvYM6CcNphbB59kTwHr5cHGftcC/st3EFf0ufYNjzDFZcH
//V3/bVjPxn36lrKPDU+FQ7kh/eUBxkvrAuMmca5TT6O8uA0f/vDGZTv5X6d
K/xwvqU9P+kTP/FwFv7aM37nvMwe4dBfx3+LP/IxP+s4Nj7q8T/3ofWf9gLT
jnDsxIn6RhmvxRMPck3mBOt78R4eZF2Dc1nri8uDxbSZ8714Dw92Xk/73j3+
kSmefOU+vh9c7pt4kGsb20m7Mvex75/C8qA2c9qW9ZD11Nh18cSD+r649+KJ
B2kHno3rTnjiRO6Ta3nuEz8SPNi9ZblP/6Lc5lwrLvddFw96b71PMPfG32mn
CV+FByfbyLQ/vC4eZIwxX+E5rsOYZ60uLvft4cE9nPjt3/Zth3PU1x19fMUH
vrnxuMc+9sZXv/zlNyY88SDxNofxc1h/f80ZZzW4Dsx3/uCb/u47YeJmDm3E
OnwDeyXceWiLG+VBzjRc8/A5OPmwnr/PgTPvu8E5h/cc7umsuDzI+knfcq7B
x/ejP/IPjjZFxhTchm2C/qG/5Sj6gz1Isec6+l//n3tb+pF+57qMRbjTecC1
T8WBb/k+7jSXpx/GWnnwZS996XFvA/8d+uyID3119O3+2I/+KDbwc/mR8+HE
g7SBY9g9oHYPxihr48SDnhU4Y0944kTaj7WeuVY88eDkw9rDg9yze+viaY5P
Np89PNj8qXLfxINcY8Ly4MSJchH7zXLfxIOMR/qX+4MHaHf2IxMuDxrXxHMy
Fnke2re43OdZkvbgGswn54J44kH9ePXprXiaR5N/sDxY7rsKD5onyF5V7NlO
LPeteOLBPZw45QdNsWHFV+HBzh2+l7FobMMWLvddhQeLGZfmUBRzj8wJrlM8
8eAeTsTO+hEf/uGHdfX3H88Sj7r33iM/lQexu8Fj2E7xt+F7fNYzn3kDfuKM
CW/y+oc9+tHHc1x58I1v+MDje/FRcqY5vHb8HT8hazjr9/d+z994KDbrrT/+
jw+v/8Pzf/uT/9+xz1gT4L4f/qG/f/5Db/6gI//xXs6BvGb8In1ifzuHWR9o
P+Yt/clPMWONcWCMiu8tD065UVM8wGTz6bzW9srf6Hd+GPOcYfVLFsMxjCn6
G/8vfXXgiyPvfcxHf/TZU5/ylLPy4Gc997nHH/r/sjzonoBxLNYfwdrPOWTi
QdYN5g7n++KJB7Xj8b0TnjiR9/Ac2hLFEw9Oe9o9PDjFh085xbQb65D2W/Ee
HmRNYW7gUyj3TTzImsiYNW9CXB6cOJExSFs0ptc81i0eZGzzOutpuW/C5UH9
avzO9ztHiqc5Mu0XJx6sf2HiQTDz2vds4S3uezg8WOz6QDsU1w9TfJ08eCc/
wjR39nDixIPcL+OOsT1h2of3yoPiq/Ag3MKZARsZMWRPfMITjhyGrZI18zaf
HdfTwz2ckW/xIz/8wQee/JUXeJBrHfqJzx25Dz78kuc//wacyXnu8L4b2Cmx
c77wBS84M9eU58Nmyg/nlGLmBn3LvCD+85577j1/+9s+9IgP93P8vTzIeICH
Dvd3nKv8DmcWGzuy8iAcxhhgveOc5/7cGE/ajWuwtpp3IA/SF9wja/WUM7Un
HqD73s535yt/Kw/6Hj6rHWfF9C37DPqyPEj/44P9vM/93OO5m/MinHhdPMjc
09elDZh1Ug7iDFJcHmQecc6j3RkjfI55WjzxIO1Bn5iDKZ54cM/e9U52nhVP
PFgNjeI9PEh7MH85uxeXB4t5Rsau7Szew4NwH+ONPi73TVjO4pmKy4MTJzK+
Hf/lvokHOxfKfROe7Cf1KRQ79/h9wlfhQa7DOJbHa3/dwtfFg82fnfKJpliy
iQf3cCLjir8zjou5J8Y/Z7ni6+JB1jD4jDhInoW1hL33hHnvk+6773hm4Hqs
k5wdsKNyXjucrc6YV9g54T78TPj0OOvhlzus60e+Y42FKw/z96yYdmROc39w
F5z1/W/8f87Lg/CZP/x9CzOe+P0tP/YhF3iQsY6dkxhSMGOC85m2wuaT0Wbl
QWOIy4X0H6+xBmLfYyywTtC25cFqaEx6Go2dKw/WDzLtgYt5Fn7A/JiL4doA
hv9Zv/RHsvaTS1MM59GP9B/nQWzJH/mYx5zxee6LsfhI86D3bLyQ+gjlvj08
SBvTV3DZhMuDfAfjEP6Y5ubEg3fy72/x4J20MiZOpI3hPfwDxRMP8rzcJ21V
vIcHmVPyenF5sJj25z08R/EeHnQsM8fKfRPumC8uD06c2L1iuW/iwfoUwDzb
KR70X+ZcMc+ubaa43DfhPTzI/bl2aHt1XdvCk47EZXmw8WaTr2HaZ16WB4t5
Vq4BdxRzfcYvsSHF5b4Jc13iKIlFgTvhPniKWGrOdPBdMZ9hjeSsx1lRX155
kOvh74MfWUtZB3iGn/yJ//ehs1pxeZDzGz9ve+s/OWr5Yb+E4xg3cBq/Mx78
Hcz7uE4xYwQeNP5FHuR1x1R5UB8frxUzthgT2kaNiWHNqS2LPnf939LWKG48
eePlJl9J14GO+a4Dzke+m3t37eJZ9c+xT2B+8Vn2NOTDYIsm3ohzOjbo4ruB
B2kr3gfm3K4vlWfge7Dv1edbXO7j/Zy94Ily3x4enGw1xVNs25QDNfGge1Ge
q3jiQcYT8x1byYQnTuQZGcvse4snHnRvpt1evIcHHYe0TXF5sLjjfBrzEw92
T7jaSbbw5EcoDxqnwpriOa5nPfBleXDixJu3tWxWH//q799qnz2cOPHglGM7
xVpfFw9O85H3s99kLhdflgeLWTNuaaR98BlzCL8PPrjyIPMNWxk2T2IjsIUe
2uPsG7/hG47/wnHF5UHOiE98ws+H/25wTXiW3Lw3/+DfO3Ie/EQ/Y5tkPYaT
4De4bMXEr8CD9hOvc35jDHK98iDjBsz1wYxhxl4x/e94cx+l39ozYLnPGBjm
r7k1xlCJy4OTBmP9UFOOVePoJh/KtD4wZjznFfM3NWXkyJUHsefi00X7gFgj
zoCHtmavc7SfoSV0N/Mgn2P8w0HlPl6XH8t9e3iwc23ai06++ymue+LBSSOx
uDxIPzz1Kb/0eNYTk+9SPPEg48UxWnyKBxl/PMeEJ050z2ZOkHjiQfrFsV28
hwe79ysuD66cqL+g+JHmQeNN1dfg/Ssu910nD25p7U46S3t0J/bwYNe9yR8x
2WSuwoP0PeMa310x8wm+I06Fsx72Sta68iBnPXLs8OHhe3va/fdr0zy+F98f
PiJiWXg/Pj5jXcgFxIeEb68YLmO80Masvfrq6EP4ijMa6zHxKnAZ/c7r/M54
4jU+U6xuLZ8135W/cU2+i++hLxjDrJdyHfab4vIg3GR+O+OjcaDwD/NXLqKP
pxjjSZtxyjueYuqKu5cuD3atkCOZ4/yAWf/MZ1OfSh68eVvfmvcw/3gfY5vv
ZP3j/mlz3stn3114kD0X8c74NonLIo4K/3M5ke/lGVc8zbXJNzHFre3J7Z30
oCat4C3uW3mQtuU+mdOMae3DEy4PqpnAfTOHaH/GVPHEg/zdvlvxFg8y7tRN
mPDEidN+b+LB+gWK9/BgY8mK+ZtcJq+5l15x37Piy/KgvFZb0IqNs6Ediy/L
g8WTHsWUizTFoV2WB7tfneYs38t8Ye4Ucy14izNZMb4fuA/fDzkL+Pg4y7Hf
x/4J3xXzOf16+ImwdfJ57oF2wO7D8zGHuE/OeZzv4CP+5Qe7ZTFzCo4jJrM8
SF/De7yP/obH+Buva89srZPyIJjxgx2VzzKOtT/wHj7P64wl7fbGFMt92lHE
9B3PqQ61XFAenLT6i6tPVR5svtUUazfZl7p/7rrBPct97hG9Z37U8eY91agH
+/08F+3CugLm/G0sz7s7D8Jn7PGw0e/hwVP2lskvP8Vp34kHq3k46eQXq60E
9xWXBydOVPuW7yr3TTyoxi/9yjxTH2fC5UH3bK6f/NB3xdMY7r6ueOLB2v8n
PHHiFD92HTx4ihNv3tZoW7FnPXXCt/BVeJA1bkuX3vz3VZPwuniwsWqTv36y
20xztphxDUcxxyfMfCOHDr9deZAYTuxgYLgUPwN/pz84y8E/xeVB41M4o+HH
gwv5Fy5inYITmVNgeK48yPiAx3idtoXjtFvCX1zjZnTdy4P8XY2/Yu2ffI92
f3VY5EHjp/kc7W98mbZQ9z/i8qCa6/T3pOFffapJo+NUTpbxBnvsS11PtBFZ
R4zP8h3lQT7n69yPfFzsvrv8rq77ewoP0ldoJ2DXmPaTEw9OcWh7eHDSd5p0
gKdaaXt4kGfhOXmect+E9VHRtsXlwYkTGau0EfxV7pt4sGO13DfhydZRm3/x
5BNvnFjxxIPNJyouD6o1Ux1hcwzF5jmseOLBPZxY7uMZtGW6p5fviifue7g8
OOXqFk8x25flwWLWVeYi/rrO5T24PIgf6GOf/OQz8vC4V+Yd6wecBpdht+Rs
xu/wmjGZ/k0MJ+HL4weO4hwHt8FD/C6WB61RwueMF+ZvK2Z88rny4FTba09d
S+0kxovJj+6V3C8xzugr57Xxaa7dU6236hjz+S3dqilPeYrNW3lwa49tPoU1
v8TlQTVrzNc2xkvfgvlc3IccZO2nnwo82L1ieXCPn33ixEmzYuLBqf7LHh7k
+ow7bEnF5cFi1nB1zov38CBzR74r9014Gp/lwYkTa9Mo9008WJt/uW/CU+x0
c4iKy4PlvuviQbWi3JNX/4b3ymXict9eHtziRHl1rdsyafZO+LI8OMWz1X9R
3Pl7WfzEJ/z881t56e93AcOD6GnxuzYQxiAc55muPMj6DI/BX2DOeStmTGGb
BDN35DU4ib95jmMtgy/5l9+xvXlW0y4vnnTdzY/Xv7dVq0u9XX6K+bz8yO/O
T8eDWoXyoPxH/031biZ940m7Y4pXX2Pz9L9Me2/7jc9z73yHfCQ2hkZNJPMy
jD9Vs5r1kPvletrQfqrxYP0I9a1PPDjl5E48OOn6Fk+cONXLnniQz2KrwGZb
vIcHWYPdIxWXB4s7Dov38OC6Z5P7Jlx/9+T7njixsWFT3lC5rzlEzavdw4Pm
Q5mf55ie8HXxoHt5+pX3b9WtLvft5cE7ceKkazHlNE08WNz5exVMbQT6jrgX
5gFzGl0x4izZD/FTzA9nO+Iz4Se4j7/LQfqQeR+cR//zPn73PaxP5UE4jB/O
hvIgr/NZMJ9RH4Xf92jYMm62NNvLg5et11wedL+0VRO8tW+2NP8njcfmL0/x
6lN8wrQnZ7zxLKxzxvRwb/wLP1gTUMw98zl5nM85JuVBuQjO5j38HXsE98G1
eS7e6/nX+DH1lLgmmHnF580FMLaSuci9mk/n+VQ7DPOK53VeMyb4DH8z9oHr
iulnxiLjTX1+n8d8IOJJOhe6J6ydpD70xpU1vnrKOZq0KSbdwokHpxqgEw+C
4dlTeOJE5qH6DsUTD3a8Fe/hwWmftvLglj2/eA8PNgas3Dfh5g0VlweL1S5b
f8p9E97Dg+or8sxyIc8z4XLfdfHgVOdl0vi9LA9OnDjtaS+Ly4NdB9QUYI2B
N1hn4SD8fowJ+VAe5O9yI5+D79SZZs3xh7/LffIg/a0/rxjuAlfDk8+XBye9
vkmjrzw41eqa6lGWBxlPrK/aIbdqhbcOTjWQJ93jSetjimNvrMJkp5rWJW2n
xipzr9wnz+a5TlsF46w86JlXfUs4gHvjGjwf/E17wHusn7SfMVJ8v7URwdai
MJ9f/THGujkg3B9rHfev7hjjRA5mnPAe7pHnBXNfPq85Yq4h5j8bQ69dqmO+
+8DaQ+ojqN98iqmmbdCBh0+rNTHpMk08uKfG2VQLm/ZxbBdPPKhPgvYpnnjQ
vZZ1mbfwxIndjxWf4kE5rngPD05xX+XB4uYHFe/hwWpKTDw4caLnRvViuFd9
feJy33XxoJrczN1i+uuWxvAfGfFVeHDSQpx0MCbbzmXxxIndG3d9oJ3sp/Kg
dkrOXROmL11byoPaKrUPePbTZ8fni8uDkz7DnfSI1CDa0mafapG03pZ2POND
jIMp5vPWS3W/tNbHqQbypH815TtPsXy1WU179a5LPCt/1w+o/VNuWXlQmyiv
F7MX5KxB7gv3yTglLp/5w/XM0eNeGdv6V8yJo12sMaHGLn0k5nW15tbzoDZh
Oc6YCj/Dj7oExtb7r2f8ju3u92r3qC+g/vHGjDV2uvlEzbGd9JcmPd6phstU
37Pct4cHtX+r57CFy4N81r2LMRkrnniw+67iiQdrn5/wxImN7yqeeLB5QMUT
DxZPOhIrD8prEy73XYUHi93zMQ+KPRPQLive4sE9nLjyoLXPJt37ifsmHpx8
HJfFEyfWRlTcPXPXCq4JD+Ln89xnvp81F/Tnth6z+aL679wHreOB7+ca609z
Uae81EmH4bJ67NVan+pO7qmzXB50/VhrBKyakGvu85rvfCrGb8t+tbVGeZ4S
8y9jWZ1neZBn57u1c5rb6DmX98NJ8ALnJt5jrWH34DyP9lqu6Tna+nF8rzpj
XIvv497NMWHMGZPjnoy/Oef5jHkprIHuUbRLG8tHHzO2HCO0EWO343myddQP
3vivxks3b6i5tNWXqOZSNXj38GBrlpX7JkxfsXfinFlszTLOjsXlPuaK/bdy
3xYPdix1fzXhU7aILfv8xION4yqeeLD5PhOeOLF6EcUTD7IvwsaGTcDaZ41z
2cuDtVVM2PMyc6n44fDgFid6jjSWyfrXxeW+PTy4hxMnX/9l8R5+rN+ktqPi
7p+7htBXxrbQbsa4eB40JtO6sMXGnlgbT6xG38qDl81FnXSHJp296spOtbea
/z7Vl3TdXeuoct2pdsCWLlZzn6e498Y5THatrl1yHHsgx5daNGL6WLuofj3e
r02U+2R9hAPZRzF2OPNoS+eZuG/aks+qG2YsrBoAcLm5j1zftUjfkNo7tAnt
yverS8H84Xlpf+vSqnm3xgzLbcZb8dNx271c7Ri189f33Xiw5gc1Z7Y6EtVW
qsZgdXf31GSZ6nhS94pzCZ8t3sODjB/7utw34Y6f4ml/Ndkcyn0TD9Y33Xit
CU+xzVO+z5QDW12I4okHqRfAWf92HfGHcOPEyoPaxrRnidUnU+djC1+FB9Wb
4hkZr9p/J1zuuwoPag9g3VILZK0RQ7+ojd+Ytyn+7bJ4D1eusQSOp9qRupde
99WuLeqYmaMnD5pzUB5cubBxwSsPWo92irNqXPGkvTBpDVVH6LJ1RrbiYZjL
8oh+CmvoTPrJk15W86AbA78n/mHa2/Oc5uN7xmJdNI6G7yk2D4PntSa8cS9w
3dve+tZj7gD3S1wJ38P9U7veHHOegbEmJ3J9np1708fnnHKfwO/cF/5E8y+5
B+Oc+B5tC/wLp2HL4Eznfky7ujk5HZ/ds9WOUR5cfdyN+zIWujlBzZOthlK1
BKuvW8351mGZeFDe4zrFe3iQH76Ddbq4PFjccVK8hwdrWyj3Tbj+6OLy4MSJ
jWEu90082FzXct+EJ62kST9wwu7TV+67Cg8a46Av3Ri/4nLfhC/Lg7Sta8GE
y32X5cEpDvyy+OFwZePr5MH6VmpfWvfY4nWdcY2Sp4yDWnmwcZ/GhIo9Jzoe
tnzKjaHak1s6aSnIqVzvsjrq5UH9WmsN5T1aypNmSOPhGwtRX89k7+r6xnpv
LmJ5UL7T5skzWneP193XifnX+BHGB1zNusA8wF7L33wungGs3da5wtrCv3w/
z8b9mTNCH7EW0b5wnPkxntvcJ7lnch3hNXNdwIwJ7Qgdk92n1W5fX/ZWfJd+
A3N/mg9bjYjqJlVLsJq6rbfSGmStxTnVp544kbFlPa/iiQc7Hor38OBkTygP
Tvb24j082Bitct+Em99aXB6cOLGaSOW+KSdows0VmniQceg5oNh/9ecUy317
eHDiRH16+mtc14r1sd8JX4UHrSU65UNdFl+FN8uDjbVrvEF9LrU7db9d3PWH
65jHwvf27CaXue44Pnx9sqvXfj7FEu/JnZl0hCb92GrD0o8P3qFm1s2hRuQe
PcnmTU9x8o2F2LP/71rHGsNn+D7tkd4P2Np2ciLvd23lWbGDsq7TJvA2PjLa
izWStbexzeZ5qGXEPZGLoH8VzuDerJkFXxn3pD6RMcLq2Wm7VA+I9cvcUtYU
/t6x1/3Ylo3CmCz9143par5P816rBVF9pGoGVju3evKtsTLV36RN4Ur8ieVB
9h1cF9t48cSD6ijQNxOeOLH7peI9dvXiiQenuKwpVnnK3ynew4PVfyj3le/2
cF/5bsLaF8zrEl8XD9Zm5dnNPAhxue+6eJDv5zrsd4vNv2SNKy73TXnBl8VX
4c3mXjXmvLgxeI1DqC+mNqjuw7sWFZuf7trUfBl/9tgQpniqKX54zZHZoyO0
pRE0aaR7rj9VH6Q8WI3lamo1h3pP/HzjImoT6xrI2Yz19Jtf/eqzrnvm3DGe
uR9rA7tOWPuAZ2Q/Xx5kfhMfwvfRNsTmsBazZ7D+JNyGHZDvBvMa7+Ga1iR2
/8Rzwz/meMJBxvR6FjQ2Sv+wdkxt4PZlx1j3XVu2iP54pvRs2HjmKde1OkjV
BqxGbnXjW0ul9cVac7O1p9nnkI9o7AV+QX6Ky4PGKNHu7fdpDBR3X1Q88eBk
Sy+eOLHxV8UTDzZPp3jiwUnnYdJ8uMpZb8LVi7gsD1oDSr0X8eSvuS4e5DvU
+ijm+toFii/Lg1v6GKtWxmXxVTi0PNg8rDUWXdzYvPJg/TK1TXV/Pq1RtL9+
XNcp/jaNk8v6i1cf8Vau6F6dBDUQJm3YSf+8eKpBUH2tKbd6ip9vvETtY10b
uwaaX8/6IuZ7it3bsy6UB+FHY0QZf5wHWbO5FvfOWZVnxTfImQae8yxKH7rm
1ubgeZ52dU9TXy3vM7a4tVC1ARj7Tl/b3+u4qm1Bvis3NkarNofm8jSntToP
1T6adHFbM6V1xFpbszWmsaPCe3Did73+9Q/ZVD0b8jft3uTRlPv28GD3PxOe
bAW1nxdPPNg4q+KJB6fcnOKJE6vnUDzx3SPNfcXaMYzXEzu2GMfFEw/u4UTn
FN9fzGeNcZjwVXjQszTvZ265blQn6k6aUZfFV+XN5mE1N7mvTzHqjdNrrEL9
NbVZrTzoGrWF+Y6Ok1O2gsv4iKd44Cn/pfmekyZete8m3VdjRU7VwKruVvVG
yoM74wk37WZdG401ZU1k72KdJ9Zq2oY5Xx40j49xzppCLAxrKVx+K5/4waO2
Cecb7pH1z/Og2uW0P/zg3ks/vHsP9QfUK7CelHYJz/lrzfHaADp+uqeqnaG2
9/qgG5fVnJ3mrlbPoRpHq+6fWrjVhF/rhVlDs7Wk6Wv2EIwHfIOHs/9hP3Pv
DTiRc/+znvnMG9gDOD+uPFjc/i3e2v+It2wCW3bylQdrM2881YSn2OPm4xRP
PKgPsTE2YK7Puss1q2v0SHDfxHeTZuBlebBYjnPuFGv7Kp54cA8nlvt4jf4F
0y/Mf+Z2cblvwm2HiRP34EeCN6tVVb2O5iyXBxuv3pi94sYw1I9T+1X38F3H
fI17LJ72SJMdoOf9KSZqigFurO9l9X/qC5tqf1STearzWB0S+A8NE+IlGmPf
2MLGVNSG1rMD10TPhN9ZyzivcXbjGYi7gcPgRPUDaHPulTWlmOfBj8W1eGau
w9oMlzBGeGbGDGsFazrzzn0X1/GcQLu5XoCNTfa8zuv0hZqO9i1rpxxo7QzH
SdeW2hNqY6+vufFXjUle83TgOnyC1XCovl81b6v93noofJ81wlo3s/WjD2fB
43kR28qHPfq9zvElvvAFLzi7peX2yqNWCfsPY2wYT8954IGjf7F9ehkepF/K
fRNe/cVbvuOJExtjXO6beLB5qWLno7i6DZOWUXmw+JE4603cN/HgtNa5P6dv
iq+TB5k/rD3MC/N4i8t9e3hw4sQ9bbIXP1zenDi0mo2rfqMaVtXxaP7ymsNl
HHtj+YrLg/Xp1K7VvX3Xt73jYavfJ7v3nninKfdzj87PpPW6R6t5qu3YXOzG
3jfmsLEWq23Nc0TXT3x6aGPCobf2Q6865v7SVtzHbf2vo28S+yt9x2du54Ef
uZAzIX1LmxELCh94lqSf3Ws5L8wZcb2TH1lfzKlk7Ml15lk7Hty3GOfsmb9j
o/ul2hDWuPTmL/vTfJzmqK5aDfqoq+lXjffWPWktsLU+pjWj4cHD3uSYp09s
DT9gfab0Cf1IbA37IvoAv+Bhzt5gL8QYI1eNdqQf6ddyYs/7xZM9vH7h4j08
2Fjict+Em39aPOkzlPsm/aJJ0686t8WPNPd1HZ6477I8qP+c9tZvoF10C5f7
rsKD6jfSduogsrYVP5x2u0rbPlwOrY5xtRwnPatqejSvubldjW9vXN+K7df6
emrvKg92rWu/T2NgOu9P9u3Vn7sV6zvltky5mXtqGUx1ParTVX2S5mU3Dr/x
h427qJ2t54uuq9yrugisF2ia8D20E9fnHmkXziRwNusGfMw9MBbgQNZm1m+u
x3igDdV30yfO+KC/zKFubB7rlfE22trNMeH7uJa5//SlWkLG8XYMtN+1FdR+
Xp9yY6uad9Nc1GoyVKdo1e7zLFld99Y6aUw12NrQ/A4n0UfmgZiDQUxN8y/4
4ZzDD32Anin7GmKiup+5pblzk7+90xl/iwdr9y6eeHDlxK0z4JRfo+0E23lx
uY/r84zsH6vJMOkUlftWHT+5b8LVey/eu4Y/3LV3sn1N696eNXAPJ048yHu4
N+NDxOW7CU88yJrFWsfaVrxnv3GdHHqnPqq2v/oiPEN5sNpWq85VY7HMdy4P
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
LP2S8qJ7Jfcx+m25b+3hjWUiHkr9Nl7n3lhLGuvLdcHsu5v/MuWElvsmzYTy
YHG19YrLg103Jj32ct9Ur6Q8WNw4hzXmYavuc+dv88hO5Zq5792jW3JdPDj5
jCa72R4e3MOJ5cGeNVq3hz6jfxhTxdPaW4y9gvlhvPdW/cfWyZr00qsl65q0
6gs153TNxzE+efVHb9ntVzuGY7s8WE2t6oo0t7q4PFh+b5whY1N7fm1r7ruL
tWV57ujaq63Qc6jtPO0xyomTj7VzrbG1zTFpLklzKqstMGnpNOa/MR71bdWm
1zW89RP5m7ZOMfdp3pb+EfmONtAW6plPDXDWCffk5k7LfeatOEbBzre2f+fC
dDafzuON723OS/NAqxFUrbzqx1ZTvXVGGoPaNmxd5u4r1KPwLMn38btnTTVs
ayfmb8VypnFK3hevNX7JWjjukfQva0vlOflhrhNLyv0wN9lbTHmg5cHict/E
g9XTK141ZsWTBnt5sLjcN/HgFNc3xcBP+WLlwRXLfRMPTjqWEw9OMRJTvMR1
8eBqT9uyrTEXzPWu/6K4PNhzh2OY5y8PqlPPNbsOlAe1GXo+4r3ab8XGx2kL
2qq3VY1Z4wVWLb5Vn0EebNxy47gmH3d5sHu/zoVqbVVvpHnWxc07a+y9feKe
wbiL+p7cb/NvbXE9j3RNntq2+4rqNfVMXb9q5+MUT9tckuZR9tzU/Nk1J86Y
/1O6qZ5zura3ZmJrB7dGsDYixwl8x3Oy1nHvjAeu3dg81y/9v85r7QDcGz/u
zfhxz2Obdx9Sn/h6BtdXO9mjmu9ZDYRJH497cJ1pPZHW1Wq7tf5y9xLem/sK
2sD5yN88bzZXw/on9cnyGv9yjcYpFfsd2jeN4+UZjNu15pk5IrQH87C5n4w7
7p82LA8WVyOouHO5eNKVnXiwPpTyYHHjEIo7v4rLfd2LnsoF025THiyu1lZx
fR/FU+zcGie/hS/Lg42jKJ58Saf8Sls8iH3BeIPa3HoGqf3N84f5SltnkGJj
1By/ckCxMXDqpfM3a1yKXXN4/qkOV2uUVKNv0vRbtR3M92n8c33fk1+ge8Xu
IcuD1R5p/vWK3Ze7v+Y53F/Xj+M+W95rvmr9Pmp40fddn6f27P6h5+jak1e7
sfvYxg6t8UJbvvI1N7a1M3zfGgei/6t2v67z/GzVinIMrnWBaSPez73zzIwB
4iT4Lm3vxq7w/Ob00Z5yOu3EdWhD+rdt2/1G/d17zoDlwa451Tqo/k918G5G
G5bPqZfe9vEe5Vz3Dd0/0GfGRmsH4Pfamd2P9Jyofdhn4Jra4RubRB/xO5+1
Da0zbuwu//p5+oS/8/7meLI28T7zBB2r1UCoFtCEO2eLJy3Z8uDKiXJf8RRr
VzzFqJcHm9dcHlyx3FdcPckJV4d50mRu/YLL8mDjBqcYwime8LKcWO6rj8lY
89Z7NUZBvGWLq5Zv9fDlK8abz+J5pDzYs0nX5/Jg12pe21q3+dc4PebYVv3K
1jGpxvuk+1cdpObGNi66cWL1oRfXv9C9Zefaqkni+ZZ21cbneds9g+ffxig2
TqMxV7aVsf22s/tra464brcN227dM/TsXFvx6jN1vq8xQo7z7vGmWK/mCDQm
ZNVH1QbYNb8xLVMdKK7deojW/2UusYfHt8R1aA/WQGI0rFtpjUnnu2f5tmH3
FT1r15d92TNg15nmb1bvrhqw+jfNA7JNWj+r+wTvBw51feOePPsyN2tbZp1x
H1IOdR/F9/k9jivjkfSp8vfG6LqXcW/G++knY9Doi+Z1yqF8Z7UO6Cv3HthP
eZ82NOfdpI838WD9GpOmeuMEihtHVzzVppx4sPaW8mD9EdXCKq5uZHG5rxw3
8eAaHy4PNn9qipmf4uf38ODEiVN8xZ5Yi/q07+R76t8b19DXeebJLue6zJwq
Lg9qc3WuFcuDXbenNXyq9VwerA68fp5VI7daSdWRWHNpja+e4s3qd6gdpnvU
zlnXAN7XPDXsydp3jCnh/Y1dbPxG/Va13XnGtG35LM/DazynOUS2SfcJ1Ynq
Gbn24a4PjQtqfGz3abXhN4Z50gGoj6xnonJBa2F4brX+RWs/WQNxqvlrrAb3
Jke7T+P+HCe8h+ueqqejn7rxzJc9A1bHYNLz6Z6k7cBnH7xdJ8t243XaTd+f
trHW0dNWJrfpc+Qzq4/VXI/GHXkNvtfXjMX1bFIbLL/z/fQj76dv8Ek0l1M/
jHZ+Y0M7d6r5033mKU08ebA+i8m/P8XCFTduvLg82LzjqUZzua+43Dfhxq0V
lwdbX2A963l+KfcVl/uuyoPOhymufoqxvwoPavus31o9XXO5tnKgVp+U/kF9
OPyYuySujU67MPdRPJ1ZitXK0JbFfJP7xNN6Xuwc36qTsqWhtOopbelONBep
MWn10Rev/gvtOZ3Xzd12n8zc0Ydn7IC+Is742kQay1F/Vm16YuZfzzVd29s+
q46iY69n4Z5/u7Y0DqfjsDb5xmU1/7F8UY7o+ai8UI3Tan3z3eQoEJfSek+t
8dQ6v613P9Urty1pq+4ZaEd8PuyTGqu85jvL91sx6qfOgJOWHZjr8d2tA9K6
kD0jMwbof2MLy8uMeX3ZnjvqV2X+co/mZct3tEnPucZZuX+hLZqfwprLPdPW
zdnknhn7/M09lWuy88IYZu6zOj+1q5hbwxhzLeG7Jm3YyY/ffV3xVGPrVN1J
8VSXuTxYXF3H4nJf6wKU+1pDp3iqN1ceLJ7qmE96Gm2TKY/suniwcYYTVs/C
GKzWtjMGY4rHkAuN2+uZTx6sf6qxEOXBxtTxunau8mDjDXp+KQ/2LKMOiOdl
edBcY887ru1du4pd862HsqU5Xw3eSaOpebvNY2pcd2Pb6uuvzad74K4JvI/7
dAyr+UN70NecPdTDYiwxj8y55bvMc2f+0n98znwcrtt13mdfdfi7B+hZuGfe
de+t39P8B2NjHGONuWr+6epHW+2H8qxnpXIEr2n/r743PHG7psSFuk5TTcPW
8Zlq9PS83Jir5uM0z6sxDI1VqA2qa8t0Bpy0zVsDq+diXrc+cm3FntPdj9V/
yv16zvW81vgi1ib6GVs516QdPI/z7LyvOSlguI57b55mx3a1C7oPdMzyHbWZ
mG/q+mMOyepzlz/KfRNe47rF07rddb5nn4kHy32nsBoRxVPtm/KgOTHaMrZ4
sNw34epjFE9n3j08OHHilF82xdhPeOLBah6uuOuScRjFU2xGc4eLy4P1VRWX
B42lp92Ky4ONSVixPNhzzXTGcU+trd41f4sH19pk5cHq9FbDsDxYjYvm/DYH
qrFwjQeof2S1F7l/7nrieUW9CN4HJ/Ls7rPlJdZoY1vce8MnXL9nn7V+tzVr
Vv1G1+3Gq9df0/Wqvs6OmdrMG0vc2JLpbFhbDX3n+ql+Kfdi3jY/6jqjWdIa
Fq2N3pp3U/2CanDVd9y44sYRNc6h8Qy1U3X9MTdEn6lzEL1O1r1bdW7fUfeq
51/axvqPXK91kLUP8xyMB+6zPlNz3Pi9cUTcB+OL69L+tIExJPJgc094Nu14
5oJ7D/VXuperH7N2j2r41EdAXDrjqrWnPdc4ltTQcVxpg2ps9ql1dat+VvFU
X3KyB1Z/uLjx1cWrnv9WjZvyYOuilgeLW1u82H2wvl1xua9jsnjiwcvmVl8n
D1b3fisOf9UElgerkTjFKMpNjAPPeac04pprbA4F7Vs8+bOKjUPjOX0Wvre4
tj6xvl1x/TvlQa5LG7M3Li4PTrXMygvV++W71D+sHlT1MZon1bjxxtE1rqC+
ldqauuaw9yfXwbwP1h/On9wj6xjrVeNA6gsz3o08Uu4ZHyBnvdY5bb2bPmP5
vZxeuxaYueFzGzO92sb1CzcvphpBq1669h/6RU226rZVv7R11Wl368a2Ll7r
HXBf6jl3n9OzcGOGGzdYf9Bk4+oaVR0evsd/eQ9rneNdPzH8yvfQV3w/Opxw
N/3F/ot6fryfMUB+MJ9nXPPe+klpY16H/xkL8BWv0w/wHnsn2pmxxnu4d8YR
3N98k4695mB2n1bbRTUKaufvOKlPXB8M46F7KsZP/aSuw+ta5xo4nRe6ltbm
dooHt+I9mgswxUxOtWlWTjROeuLBcl9xtSyYE+oZFne8FZcHq5E48aBty/um
eKGr8OCevLMpB637n+KOjTU+fytWnz7Xn11cHmzsotq/D96u8+463nWPMaOm
QHnQff/q2yoP1s/FdZwL5cHG9dXupzaV81F86hy0nomY91O9M8aFtWCqjV+t
4GonVkOjOcXNsWrMeWPw6oupbar7865X5gWwXjU2kjMFeWysm2jGcqbBX1bb
IM/CegaftjZc9ZD7LOX0xkL0LFD7bfu39u3GrFb3oPnF3TNbX10/gD/VatNu
ps3Uehetj1Ddy+5batOuHbixhZ3j01lgrVPJd/FaNeiqy1qt8tbsYBxZo4o+
Y3xRwxgOwwaPdlD9obQrHEff0obsneBC7hGuZKw0hpb+8P0dP80x6V6reZe1
S1SLgHHBuGQM1q9tHxo7II969jeutbHijq2uV93Pd59fO1h1KsqDja8oDzZG
cYpjnHLiVh7cyjEvDzbftuOkehSt/V1c7pt4kHHEGGfdKi4Pci/WlCwPdm9W
20vxxIONo9ujN1J8FR6sPbz2geLaELqnKp7i9js+i8uDjWMsLg82rmOK8ZCD
rOEuLg/W5zX5vxr75xkF+0550H7jzNgzUXmw56PWxW6d0NZNax0Zvkc94Woq
Vm+q+hvNR25+VuP0GrdQP07tWt3bd61DHw/NV2q6f8WLXnTj61/5yhvUBKm/
rDbDnptaQ6caks2bbtxg/UddM/mcMUk9szdWp3GqzdHoOmPbMDaM5fK8pU2j
mmzVjq42ZjVPmtPdWP3GInYOTueFrnurDpvnHO7RfCTe7/3cvK2lohar9ao4
x2LjpT+4B8YRax/7m6fdf/+hv37PUcMQTUQ0ELk/zm68hs2eWGb8i42bhQcY
F4zZ7pcc83BfbQvNtawdvvoD3fNY80P/kTnhXR+6hnSP3b13bVOr78bfG/PQ
uIjGa01xho1tnnLWprzv8mA1xFadMXG5r9ixwPXKg8XdRxWXB2kD91flvtpP
yn3Frk/YT8qDxa0vM+VUTjy4hxNX7rtTLnZjosqD9RfXj1werI29tvfyYO0S
Uwx/cfd4HfPFnRfuiVk/i6d4j+Kupc35Kq4vrDxYe+BkGzQ3l7WguL4k4i/g
lMM8utFzU2uMttYMr1V7Xx6pNmO1qqrd0RyuxrQ3xq8xD/UB1SbWtbHxk6yJ
xKsc1sMz6qdy7uC+uS/+pV1bd9W4K36qtdX7LEf3fDHZZmuXrh2y56/VfrWV
h9haDNXYrIZYc8N77u55tjEbnS89a3T9rAZU/QWNK6sudc+wroFyoDzYWo2t
X8y9uxaTz8O58NCGZ9g71fpt/3L+x26Bvb57oeaPMJ4YJ4yN2tIZf7QZ+6r6
nas50Dnbudy9bvfDtRfVjrT6WfQpN1ZhjeUz/morBp6fKZZ+ysUu900aX5NO
ZnmwOhJTXYZy38SDtXsUV8u3uDxYm0N5sLjcN/FgbfXFEw9OnDhpcE06JHs1
ScSNGS4uDzbOqrg8WN/0lMtWe/5q55cHawNZbSPlQfeN3U92TnWudQ6WBxsH
wu/Yf5jL2vfoi+LGybum8v7iyU7InpoYPc5L2EA5T3GGMi6a+20N7p6hjJOm
XZl31qnp2aQ6xtWzqr7Hmu/sGWyNhzc+sH6i2s1Y86hjQ51I8gx4Hmq9cb/s
I62jag2d1j9qjZ7qM1efpPdTn1TX5LZzz9fVVW6OWPf8zb9o7mF1OKuv0vzx
5gWscY9b9SbW80j1w/VZglv/xXNydeSqrVq98dpyW4uK9uYHm612UzD7FM6H
9BF5J4dnJvfkRmNin/H0p9943GMfe+OrX/7yGz37N2ekdvLuTzqPOr8679Z9
qfO8tp36PuoTacxAY+p6dl73D54BtzQG3VvYL9UJMQ+dvr456G5N2pXlvtY+
mHiwPF4eLF7tA31en7m43Nf4/okH6Qvez7gpD052+GJ96XKiuNynJjrfNemv
TvqTV+HBSZ+EdrJtJq2S4ubdNK6vuLHKjd1qTNeU11Y/eHF5sL6D1Y8gD9be
MsVAdo9a3Pnbed35Xh6sj8x1gn1112f2zqwj/FDzjzWG9xC3hx30Uffee4Oa
ovhvrMfNGGGNcg/H2tX63a1n2rNVa9xoA6Stq/1Yruna3lzp5o41hrAxFfUx
1ebG/OE5OHdw/4x/xoj3aQ3W2he1R1bLa7qH5jL07Okel9fqP22uWc8O1bBt
fGlzK5pn1zyCxofU/9Vx2HW7OUHN+2jNMvdsXK/nU+s/cM/6sDzXyIOtOdU6
jGDmr35Rz+M8u75n9jLszTjLc7Y79OUR19bdsd0x37nQvWJtKbWx1Aex5a83
5lPc+LfGhzeGfM2xsp2bm1ztjuZ3Vf9qzY/2nN3c1e5bqu1QXB6szWGqBzTF
DdZuP2G1dbUtFMuDtaX3OYvLfcV8zrE1Ydcr87rE5cH6rMuDk/byHh6ctF4n
ba6JB1cdIXmw++dqL5QHm5fafNXyYO1CzfFpzHPxlONWPMX8F6++JP0RxVM8
ZHHtPOXB7oeLu1Z0DcFWis3wcM3j2nF4TuxJD9Wj4nXWcuPza0sEG4PRWurG
m5jbqt50+7HnrLUugDrJ+rTVA9Gm13zq5pc13r7xh43H0M8Orh++NZK419ql
1BRb9Z/VPGnMv2s8P61Bz9g0l6pn4cYC9dxRbT01pWmj5uJ59sUe27NwbYPd
OzX+qnms1QNsfbHWUWoNQXNa1/q5tpf71dq/rMO3xvbwL9cwNsJ9FOOLvRZ9
T1/D6/Xtdv/WfV3tHrVL13dQ33p97o1Ja1s1lru5Ts2Har5wY4ars9GcmmpV
VcuxGo/VQK42cmsHtL6A68+pGj091696gHLYVD+d73HfU7xyn/uDiQflvmI1
zcXms/FMxfxNf2Pxyn3G0kw8qO2UdWDlQc+g5cGpXtVU1+OR4MFqdk36XdUw
mfRM1rh3cXmwObDNjS0P1r7UfKI1ptpY68Zglwcbn9Z9e3mwPv36+suD9YOc
iBV5CNemREwB6zexB91vdx9+K7/rg98pPr9rl2dBxlVtjIxVbY3aG/mc/n/t
Qp65WnOhNQVqA6zWVvOvi5ubVrvHVh15bXfa9HrGqS6oa96qA1Nu6nysbZC/
+56eK2tT7bpd/Z/qN9ZGVE6HBzi7Ef9ZjmisVDWIyrOeV2jnKd+/WnBg9fvW
mrn8mLtUHTBjTDseGuPaPRVnHHJXiF9qLFNt9cwN8j/Yw9XHXT94n73xY42v
bixT85Kat9vc3mpfrJoY1Y+SZ6u7WF3i6hVXz7/n8dbEsS35qc28NebKg9X3
W23a5UE5bMLVkC/uPGm9lfJg65FtcZ/7hS0eLG7MVXF5sLFYnePugeVEua94
zdMQTzUI9vBg8VQbq3Haxa0tUu3K6q43r7m48W+rdp940japbaq4PNhc7+Ly
4Jpvu5UH1xyl4vLgVlw3uLHfjYVrjFxxfVWNKygm1g474uFccyGehNcO6y5c
eKN2KsYPaxVcWP9a9/Zq+vAamPmz2hvXddIYGtdR+syYGfqtZ7HqcFaTpFol
2rrcM3m2bIxZfROdv/V/1R64ako3F54f7fyehWtH4pquv9UWa75A1//q8zT2
T07l3riO9sbG+TS+t/ny1V1v3Q21ahmnk9ZNeZ/XrJHUPmrcTvc5rS/cuNba
z5vrURuyWgH8NF7rVp2tVx1zeBrz3Fjo5go1l7b5ttWjqE7FquNk/suqhaiN
tbmi1djvWVuNGPNr3Fu0vlvrvrUuauuGt554bde0tzm55cHiSRO+3Nfxv9ZS
4R7VXhOXB/VT1abivBc3nqq43Nc9arlP32n9qO6x/Hv90+XBYsdY43K039yJ
B/fUJpj0mffwYHG1K8uD1bGkb6xXUh6srlc13suD1b+tzklj6qp5Ui3B5n2v
tb/VX2p8QrUpagerlkXz45rn2xyB8mDzBZoz1Rjy4sZSkvdwOAsetS+570fd
e++RBxub11gF/uWH2BjGB1wCDzaPu74ec4H4vTYx+VH7kzGjPSvVDmkMFGtT
117eqzZ1/WVdq1dtZ3mwek3N813jwI0fqM+la5RrAOtx6zrVlrLmNbvn53rc
F2Oi9qKei2tPqK+wZ9LWn20sbuu9dk7Vr9HacNVGa63Stm33GK0H0XN66wCW
r2sDd7/Bd6xronsqXmcc6SuEA9/+tg+9wO88F7wHNzTvtboQW9px4Gou6eur
Lveq5Vute55XPXyuI1e6h+L7uKZnQ5/Xs5j6Qu3T1jVmXuJfJh4I2w52GmzV
vM6zEvOlvforX/ziM/bN2K3x7a88KOZ7uU8108RyH21XXB409mLlvuJy34Q9
dzH3ixtXvMYYy4P8awzZxIPlvgk3Vq+4fpPiaitdtkbPHh6cdJuLq21FO1qb
srh75tbzKp40vopbJ6U8WM2TSf+kGrwrlgebG15cHqzWU3F5sPEPxeXB5hQ3
17g8KM/qVzOug/Mj+coHvj6rZhf7J+Yt50Da2/WKseQ5pDEnagXCfZ5Z7Kfa
N+qD8+zUvABf02/r+s9rrD08c88s1Shbsee11v2sNr5rlPp4anE0f7lnxvqG
eo7o+atac/URd31urKY564yvxu5W06z23uqJda/VGDDXq1X/cN0DyE3Vnpr0
P6t97Z6E9mxcU+OdPGPyt+ahNKeGdua71RYxxr1aDdgAyakn7rfaONVBWvXi
tBusWrvanJvX2RourbvRGl61J3vWtxaecTXdIxlXblyK9YvpM+w2t9bKd/hk
q0nL2gcfPvUpTznG/7B/xSdS/fYfevObj7yIjae2i+JyH+2rf7p45cTyXXlQ
3DjhKWa4uNznesB4LC4P8po/5cEt7O8rXt+/xqzroy6+LA8+ONTrKW7NggmX
+7gP+vkZT3/6WXmw2hesxbS7+Xeur/r5jInb0rr099ats2aE9a2KqwPWeivF
za2uLkpxdeyr61s85YwXVy+xfqXm0K0aU/Jg4yhYi2l7YmI4D6IlBoYHyVcm
DoG1Bx7kXNjcruZ8VeOrOiaNP+nfGkNIn3kW0s9CX5h33Jpi7qv5uzU4rO9T
O95aA6h2S89f7n+qP7meleqzbvxV46bKa/XV1jdnPK3rzYO3a+SZZwnPlFMa
w1m/sGcqxpy2Rdq3sU+Nb2xcYmMLawcrpzcOobEEvJ/zP7gxSHxOvWuuvVXr
oXWOmndZ/YTqKjTfX/+wexC1cKptW83basRVK7466uU+872sz2udstbaqP5P
60/5TI4N+bX1Getvpe/pTzVXWTPYvx367hjPzL6T9Y79DmMHTuN16omw5yDP
Bm5szBJrMPukj3r8z71Q26u4PNjxc4oH5b5i96I8Z8/4xdV5KC4PyjMr9xWX
+/rTNab20S1b6cqH5cH60ycerLZD69FUg/cUdv+0YvV4J9xaBuXBta6BuDxo
DLbxfuLyYDU0isuD1cC0rpIaNfJg6282N7k82Jpl1UgpD1YvpXleKw+qjd/8
8fJgc8l7Llh1F8XVZrzlE33+MSamulWs6ex52Gc316Dazp4HPQd2XDneOm5r
k+hcWOeOnNh5RzvYno1X5P44mxA3gq0MWxHrA/P/lhbpS856ptPGpdai47a1
Fdbx7PjsuOp4aJ+2L9qezjH1p12LvAfr5dnvnQs8B/FLnH3aXx2Hvc8+F/2i
fl3bqvkO2lPXdaZ92jHQ5+q46tjrWF1rOthWnS99ls7BztO2f+d+22pdW7r+
tK9d0+on7RjgXngvz9b2bH9pIzVOxnElt8KVHXvVV2+/dKwS50KeK3ua9nvH
9mc997nHH8597VPalvtnj1ce7Hzp2Ouc6nhYcTUctniwc3bFzut1jDn3u2fu
+rCuFY7JiQc7v4q7FlW3YY0Vdy/aNa34XcWD3C/rMHY6+ot4G3Dzjourh1yf
SPGk/zzh8mD1MCdtTPeH1vIulgdb67O4PFjtlElHRdyaMnKoaxHXVIe/eW3l
wdaw4yzE+oYtpjV9Gr+x5gJoN6idoXb41RbhT20j9R2sfof66N2vdn9b/0h9
KKsfTR9N/Tj1+9Q3VFtl/U3VHeVf53TzHxv/WVti6y9UW6njp2dbnl0bXGMw
apNpnGE1Ide6pdqKzX9lPWxsZ/Ma1Hykn5vb7hmasyqc96T77jvm0dTvXJv8
qmWtzX+qYVSfe3309enXx1GfSO1I9bnUL1P7VduwunZcB3sJ/NM6U40jau1F
7oP7Ij6NPua7tZ0aZ7sHN+ZqD55sHdVYKPcVN0arPFisT8B4V3F5sHHU5b7m
jZb7irWHqiO0heUyPyMuD9bWVO5br1nNInHtV+XBLYz/YU/N1uLaIoprr5jw
Wu9GW0d5sPaQ5m2VB2s/oQ/N2yoP1t7SXObyYHWhqy3J31xfimvnURvS86h4
0g0rrh3J9qB9iidNleZQF5cHubb1a+BMuA//U+1drBHEoIGJ1ZP71CLitbUG
kLHHjddqfNeaE6Ttb9XTcI6tcWvGeDcmvHHjjS0vRzR2vfHtjYdf9T+NsW8c
fjUE5PI19rWxPeW12sQal1iNlNaaaa53Y2aqiVFe61rU9q8vrzkmzUNpDGdz
G5sLQ3vDSTzLpN/SnJ3acpsT1Hjpxlc3F6m5S811ag5Uc6aaY1U7duPVG+PX
+CXa1HpScBkcTr4FbcscgVO5h9Zb1JbeWiGMS76zvtGr8topXPu/uDxYXO6b
eLB5oMX1TRSXB+vLKA8Wl/tO8eDWTzWIilftbWO+J24t9008WF9P8d3Ag/yO
r4Y8tuLyYPXzi8uDrR0w1USob6K60OXB+jKMe1/1oo35p/2q8VgeVDtl1RAr
D1ZPzLqmKw/WL1Ntk/puiqd889Y8bV62/GQ8s3aL6i1Uk2HNY632kXEwq46E
7VZdpmpZVPvCcz59X12pak+VW9d6WHJe9bKqqVUtgq7zzR+R8/GTdm7WFlTu
rl5Wc0vbp83Lq8Zy63o0xqmxKOpwMS6qS8a6jg0N21r3S8bhqP2lD9FYVf01
5iw0X6+56tVsKXe3PasZWB2b6i9Vr2mqzVeNxGoqVnex+lTVsKq+B3sncyu6
htRH7HyBo+kHOVsdRM5+fJbn5Ht5v7UersJlp3D94FuYfnMdrg+9uH724kkP
YeJB97NqGcmDxfX7Fzc2oLjc11iCiQflvZUHi63X0totrcmiLVRc7qve1FS7
fMKN0Zrquk64de5oF+x22Lto262ad8XMLcY349nYfHwaxY09o0+M3S+e6iO4
V15xebB60cXlwepnTlqaXaOK1zXTGPRJZ6xaK43BKA+W+6qFMuWhy2HG0Ltv
b15etW2rhVvd+FVb3vNI9XurdV9N4DWHTt6pJn81/Kv5X93XatlVr6D5mLX7
NY6IZ2OvBUes+Uqefde6DJ5Zaouoxk73yeZBmaNm/Ea5uzHJ1TYnvwjtBPLr
yuPNtWlcVm2z6z7QGiK34mtfdYzjaI5ez87VZpl0yarJWT3q1mJYa7742dZQ
a+xr62JUw7/259aN4nXvuzU+GovL91gDSy1hxoe2eTU0GKfwu34N7Zx81jiu
h8trxafin8WrvsGW1sGK5cHGY5cHi8t9xdbx4X4nrJaoY19cHmz9jPLgyolb
P9WqnXBj2otXTjQG/m7gwcZClwcbL919cnmw8dWdy+XBYmuW0BblwcZvN657
rZUgbhx49bKKGzcu7xmrJp50NYsbc9h4de6d183PEpcHq0U5cR/v4XqcHern
Uv/Jdcx1qTUuWw+6cfi1+631Nxu3rx25POKaVn0Mnr3rofON9u05Yo3tFDe/
oD6sxiDV31p7svbbtXantroHb2s+uK42pro1f6s7uvpb5e76kqrHVb3cxo81
b64aYtWtbU5ic2MbR11fQ201ndfNxau9tzbnapE1x6Tam7UJtP5Cz8XNW2mt
vY4HsPGdrX/aXJiO29YUrlYP9818oa2aX+N4bN0N8wfNx+HvtKF1wS7DZVu4
eUCncLmvuUUTD9r2tFV5sL7j5i6teUx+prjc13yoiQebP1UebI5VfYorNier
uNzXHK6JB+sHLw/WrnI38GBrv051YBvDUFwepO3VayouD8qB2vH0zZYHm9vZ
HJTyYG1NjaMoD1ZTurmK5cHVz6h2XHmweptd8+sPKq4taA/3NW+6+ifVEPMs
pz6GWtTmnRvfY/wGY6J6O+bueV7QJ+ja1TWte/7axIwt096iX6m6QI3HaD5L
Y3frh63NuXuJts+qr+JZoDEVzcsuN/W8WZ5tm6/xM8aldf2v3a+5AM1nrC40
13F9rx2yPrjqVzS/qXFx/a7m3K255+quVHNs0tus1nRt3c0vZext1dprvar1
PN7awY4x6xDwHKwH1lLp+FSPQE53TdTvYw0U3sd4Uw/9qrxW/YcJN3+2/uLy
YOuSlPuKV+7bwtq93PuJV050j1gebCxWua+43DfhxnEVlwer314erMZvuW+q
dbLFg8bkG0c34e5Fi6da58XdJ9M+1kCvTYZcm8PYP3vSfffdKG5NWLiVmIbb
+ksPYcb/Vo284mpZlAerdzHVD6o+RnF5kHmuDbO4PFh96UlrunGJxVtnH9bP
6n6UBy/LfbWJNteb98gfno0evK1nruZA1xDPO+rCuA+vnaq1vaY6Jo2LqNZQ
YwubF9MY4Ppza7te9yG2eWM4+S6e1fqYrnWNf2gOdbUoey6rXlDt3rSz8ae1
TTV/ubo3bUOexRr3zXHjM/y4frpP65mr9azra2vMSTWmuDb+CXyEzTVonl1z
zNfYXfc0jWuqrmY1pdd6Cq7txkuvNfWmGrK1OTN+XJurg2cbcK3u33rebwxw
x7zjyme8DK91T7UHV0+pPFjNpfJgcTWailedWOO+yn3VfVo1oOTB6kSVB4ur
B7iF9f+a61Duq1ZV8VTHpDxYXF9/8d3Ag63RVh6snhL2vMPac/SDrDyo/hLz
CBvpW37sQ96JB9Vrog2tl1cepM2tndf4AXONjYUSt5YQz8JcZP4UT7UVipub
U32q4kl3urjrdnmwmpwT303cN+mVVYOre2O+y/W9NqX6XGo/LEdPGu+Nh+85
pTmntek1Jqp2757ru28xf2DVN3NOG+vrXrqxec137treWJ3WJemZtP7ixnB2
3WiucTVRe+6ur6o21eqWlGsam9CzVW2M9a81zqTxJKtOqTkFzadr3Gw1Vaon
Vi3NxgNPNRQaQ9XYKt6jnnD9zt0/1DddW31t+NXfc86pD6Ddo3p93RN2r7iH
1zrX9uDyYLlvwtpy3cuJO7aLy4PVTp94sNw34WoqFld3sbg82Bolp3hQ7ptw
dSCLqxVZXE3aatWewtW2Fde3PmHWZeKU1aCWB8n1wf6J3ldxebC10YtXHrRW
bPHKg7zec+LKg/ZLbaU8a3mQ+eacNQZ9rTHU9VZ7nr5j53J1I6f6Cz070N78
61nM3ODi9SzD2mVc3J347k72HHOiPaN0TW5cQePuupY2dr25Xc35qq+t+af1
YTWGqrbxnv3bp+1HXnMfWg3w7od7Rmtucu2WtePRNp75mxfQ82nHU/MUO8eb
F1y9l2qgtV8am9GzavW4yi/llNU/qy2xZ8/Gk7RPq9sz5c01f7zaKdUNO6WZ
uaUX3dpA1TZvHLIarmud9J5RtOc5d90j1fdtLAi/1y9Q3259B3t4bdqLTrhz
ubha9MXlvuqiF688aI5EebBY24Lx3s11Ul+/uNznnrQ+KfCqRVx9fv9WXG2l
YuNKjWkXl/v4V1364ruBB6shj10MzkNnoTrzxeQm8cPcUQeMn+LWTze3k9+L
q3VfHqwefnHXz1U/X1we7D6/uDzYM0hxedB9JnO5uDzY8b/uCZ0v3U9ehvvo
tzW2bSsurvXyJk2z1Y5n/nJtbqsGiPHhkw+6NoTuizoGWpfB+ad+tvOutprG
fjdfr/n+5ZGerYzBpL1bG6W5rrVX8N3cJ5j38zrvqa5dtc7WWCbbpf3YuPrm
Vk880jOU43P1o9XW3biRNWZyK3dgyqerRsqkD3bzW7Y1otsXzUU9VRNWW0DP
141tbsxza5ToA9O/6j6kcTitdTJx2Vob5U649pziad+71sp0fZh4cOU+Mdc0
r9o1bcXrvlFcHmy+7cSDnYPrfPTMt9ayad69+YXF5UHzbujPUzzovHtX8SD+
kuc88MBRY7Y8SC492nuHz93Af3+r3vifOysPtj4Lz8Gax3mwa2Bzo4zHZT0q
D7auevUhtZdqRxc3Bt4zxYQZH61HU1zfTcdeccfnNJ5XG4h+gfoRiq/KfVvr
W/f/1dxoDAn3ij0MzquPqfkCzWNt7NZke+9Y6jhpDTvaHO6UU1z7ev5qfFpz
cquX2PW2PqnGuNbX1roPzZO96At4R+5Da2Axvp92//1H7dfq/zT/pbbl7n9q
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
a9yePFj7T/0j5cG1dphxBY27K25cOtg6OM01w6bI2QrOaL6zZ2PjV82l4h7N
ea6OFs8iJxq7bn5Dc6+4Fp/13phrqx6L+thrrR81peEc7pNxTPvCgdYj3qrP
2DXnkeDB2oqr8dI2ce3k2Vl//Uz1UasR1zq2rY1SnmtubNeH7oc7/pkrcJ5x
uMbCcr52rjE32RdhW+ae+Buxa23D6fxSe93kt5riNLZi9dcc7UmfpDHA4C1d
yrVOgefG1qTT/sZPbemt19k6nqyFH/vkJx9zvxh/5ISxhyz3VVuv2BzbtXZM
eZC2aK0ZeZC2kZPKfSsPbtWJK67mVXF5sBpZ5cHaJcp9xeW+CU/5a+XBxvlv
xTqu3Fdc7rvbeJD191H33nvUUCtuzAP2LcbRilnzGINo1DQ+cI0VNE9kyiXp
PnnVKKiGj3jVvtvSiS0P1m5TXB5sXF9xebCxcyuWBxtz3jys8mBzlolz5FyI
nivnQXiBfW3r/VWfhLkj3zVOrnFl/N0Ymq75aiwzx7g2vxvz45modSL0l8F9
1ShjTbQObHWzG1tiXD8c2bWl63bPL1fhweaMV9el+4Q17o7Pu3fwHFjuaL3a
1nC3Lxw/rtfVUGreUP3m3Su2zhS2AbiOeUr7kr+Ef4LnhPuYh9yn9Z3Xus+2
bdfqyUY3xWlMMYqNr179nluaJJ2bkxZlY4Ztv7UGwXRG5l/akLWFtQ/fAW3X
PUNzXmqLKPdNbTjVGG3bNm6qPFg8afiX++prLvdVG7m4PMh3qSc56WtVe6S4
3FfdknJf87uL13w38+DW/DjxlEfQGMu7gQdZM9iPU2sc2yv2z8Me/gIPEuPA
3orrdP6WBxnf+vcYt/yQU1EebPz8Vo25VZuuc6d7y+LGHtQmU7zW3rL/iuv3
X+PimtOt3b55Vc01XvOO5cFqdBRXI6U6V9V+1F4vt9+8rYusfV/7aGsKuM77
HuPe1X9ujST+znxkjWgt1/rLWjOCa7E+8H71JxmnYnOxXSu6f17tS9rumrfV
GI89PFi/KmdqeIQ1sfuHVV/a3Azt3twr72c9Yi1Ry9AasrQl39d60629Ur3B
5ts21rq+hs415hAxRXBffay0s+du7o09xXrW7n5jWp97Nqn9bYrHmGIRp3y0
+utrw5n0JyftZf6lHcGsC+wf+FGvA/5rzFX9zrTL7TisM8YNPnf8Pd0/nNpL
2J4TD7ZtJ1wN22JzBtdab+XB1sSZeLDcV9y6A5MO86RXWR5c9S23eHDlPvGq
l9L8cXHz7Iobe9D6pBMmVuKe2/8VN2Zvwq1zXaxmJGOmc7P5xcXlwcbGF5cH
3evRPsXlwc6L7hXLg7WrtBbk+qM/ov768mD9FI33XnnQ/XHzpFZfdnOKy4Oe
E4t5z1bN9+JqHXtm5T5aF0BfFP92Pfes5xmItZ91UNsT31sbYHU4vQfmPHPR
WgCtndS4EfXc4Du+y3oBU13jrsM9c9Vv1ViOxjc2zr+aLeXB+lhrW+5eYq2t
4FqvPdzYS/PXPQNyL4xbuaDaqtWXqy599Qmbl8S5mvMLeoXdi3Y+Nu6o/tba
nFuvqnsP7eW0Sdu/55HpDFLf0xR/2JjDKe9syrOu76Nzv2tC82vU6mCvsdqN
4TrWqOoetH5lz9H1U5cHp33FtMcobjtPbd65UFwe1EfN+C4PNharNXSKy30T
D9Z/Xbxyojaz8mD1n2vzLy73TTxYfZXiu40HizmXso9m/qLDAed96rN/w9F/
ZX59Mftb40vr7yju2J7qbjRmoDy4+hHEa31k51hxebCx3MXlweYCF2/x4Kqn
sfKg57KJB6tjzOvGsYPVEClne8/ca9fz1jLg+8yVMFcR3lE3U85tXXJ9lPWL
geElOauxIr6n8ZPGWlT3mPtfbUHGCZzSbq1Wj23SHLfmoUwxSD1fs+bqE257
1m/cGhCeb1y/rX/QGkmtRch1rGfdumbV22nuUuPWFlvNQ/O0sbiNQZpyG3se
b02rrr3TejvZ3Gpbm+IMG2M/5ZdNGiOrloj2oq4bagTesp+/w27cfJzakBuf
XO4rLveteGuPMe03pr3H1P7Nu2lfFNsXaw3x4qnu6sqJxsatcVw968l9xfV3
lweLzeM1HlJcHuT75LxyX3U4+9MYvObzTrhzZIpdn7Bx+VxnwowLeJA4/fLg
rbycxxz3ux2T5cGO2+7lyoO1e9QXUB9BcX3oa7yZuPHYfe8as10f/lbOb3Uw
tBHR/8XuixlnrgGMt+pGFpcHeW+1McXlQa5vzYiO367b1ptgzvEvP4x/zzBc
s7Y+NTzUgZTL1EhbY0LM+2eNdR7zHuaccbA8n9opnb9dY6daV5OO66Tb07y2
xuiu+ttb9udpvyFfcbblfsynMA6X9b81p6rV1hocjA3alXWv+qvGILUuDLzf
GO/6NbrX7XxvXC5jiO/n9/pnuXf6h/V6ynmc1tieL2pn65li8itNcfXNI5vy
qRtH11iC+lZqX+r6w56CGAbWJXgLuygxfvqvGcOTbXm1M8t9Ew92vzHtPaZ9
SO0k7YupX6Y+4jrWLCtu3HJxedBYJ37Kg8VrrNcWD/J66+WJ6xMvLg+2FsOk
TX0382DHW3F5ENsTNiG014rLg7XzF5cHqzFizNgWD3Z/07xj8Vauru/xR15p
DA3fUx40NlytWn1w5UFjyfU9uWbw+eb+iM3bYs44d+QUMeNW7WiubU1wOVDN
RrnV8W7dXt7HOt568Z63WB95H7x0y270jvq55Sy5znMWr5nzaO6A8fVcu/vS
rqtTravGYzRGsXH7U87mFKO7+me39h5r7Tw5ifa3/pE5KNbVtQ4j/M35Dhsn
7cjZEP0K3k+bmpenhttaK01tumpiNB+qdqGuCdwHHMD5szG6jVmqr5bvNban
tuue37uWrmeKrXPE5EuaYiemWNk1v9gcq8YONd6gMQn1y3R/Xt2GrmPlweLa
mYsb81xc7ms82MSD3YeUB4trPynu3rK4/dV5N/GgMWZqHMmDxc3zKXavz1pY
vHJfa8tOPKimfXmwuPr8dxsPMgbZXxEz071WbRHFtdXXhl9cH3djwFZsvHR5
sLlFxVt5uFs5uuXHdR+08uCWPrCa+fJgdfWLy4PaKHm9utDlwWlNLg/2zAJ2
Xa0dT5sGv9e3ZT0Ca76rz9zYj8ZDahszZttaRcaGGNtjblnnWm0yPVNMNbC2
NM+3dO1s0+ZvTrG7tUv3PN59SPvCdYnnpc3Mo2S8aP9tbeLWZ6x+aWtzVMOt
Gq3Vc6t+VHV7qldAu7E+00fNVWnsLn2DfRQ/ZOOX6sOtHVsbtTbztfaB6+rW
2WHyH9VPNMUNTjHzzTtuHlZj0Run17iF+m6mdQyuZM+C1sCEVzuzuDzIvbH3
oO/Lg8XlvuLuQybc/UlxeXDqr+LOx2L38s6nLazvx/wXcXlwjYveqrFe7itu
/NiEu9+rDWTC9RcU7+n3aY9UXNtCebB2+Pqmy4ON46IdGffyf3mQPWFtoe4h
mzdkLu0ay7KlQVFdJuNHGkuiP6P5g66txY0dbE5hcWMy15pr1tApntbe4vVs
wuvMpeLyoBr0qz9Lfyf/wl3644yXtG6B66T2SHUArCnfugHNlevc6ZrZs8NU
I7Ixh9q1jX3d0rtrvnZzWBq7O/ltp3O6MbO0jZpc3J9nTbnJMxvt5JmtNeJb
q7H1qqyHa5yDuuVypeuk2q1y9KrhUx0DnoG1lrNedW/4XuY/Malg7His4Vxb
XN9ubdo917uH4bXuc9rXq93Mc8HkG5riAxsnX23G6lM1f7k5XI1pn2Ibpv1/
18BT/tbyoPbn8uApW7S45/HpbM7cuKUj9ZtGHpz2LVPfTf049alz+BQPul91
3rpeW8eO9Z2/my9fzJigj1n3Vyz3tbb73cyD9TsXrzxozm9xebC5P8XlwWpH
rLpS8uDNDc0lc+flwWr2Vru4PFjd++r8rzzoOXDlT8db641qswR3vZ3WXrDx
jp5BjMffstFNPqxqR3gOY11sDT7ui+9yPeb7eZ95vPKO3Nf8OOdL41adI66N
tZutObnGVzTOsLH31YOdtA6m3JbGMtVe3XP61Ed+P21q/gufwU7M+Q++W+vC
q+NN+2KbvJWveCu+lbnYOlbyIJzlWdOzuVog1bKDV8zZ4Fk8T1ffoHmd9IPn
zea5NNaXfuUcy9/r562tu+f9dc+ztU5O54IpLqKxEK1T01ySahdX17E6V1PO
1xQTWB6c4o4m3+vkh51w7dKTjbrn9PLgdGZfsdw3YfpCO1BxeXDq387xcl9x
ue8Uth53cXmwvq7y4KrLsdUXxdMeZrJ7rzbwLX9xcWOr6EtiAdifNSa5uPk7
vJ99MutGcfNeqwtRXN2k8mC1dovLg87LFZcHXTfNSRC3DlpzELfyEbmO8eBc
t7h1VLUNMt7B9WuLy4O1yxWvPGgNnWLtqOxFsTkx3lnjeHbjFBvzrxYbc4Pv
MO60OXFylfqr3fvVd6APvbay5uFWo6kx9qe0Ybe0gJrvUttA/bmrHVv+K6+2
v8wB5jldn3l/a1j0bKYdjHnYWsbMHWyVb3vrW8+s6WENLGtaVevbOB/Wt0nv
tBp35m4xlqp10HzPasHBZ6wJzGdeY94zBhr7VG2c2sC5vnoM09o4nQUmO1jz
KFvHrbVsmldSzf9qP5b7pjjbKZa+PDjFIBV3TS4u903+2dqoJ3t1z+wrD27F
pE1n+e5nyn3d20z7nKmvi9UbrfaouVp34sHm1RaXB9ENIbeIPKK7mQeL+Q7y
UhnDzVctD1bboXpHxdVEqk5g8VqDwLqkrFv6DJmT5iCpUcD60Zo1jA3jQ2l7
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
pvViGg88xQZPccJTrFQxn2Ms81MenPzIxc1ZXrHc13yu91QevK4z4MR9e/b2
5cGeAfkc49wcMXlwipE4FUPIeNa2IA86J1gnmmvW/OspF7v6JJNmV/F6HlzP
huu+euLBxh6UBxuj3vzlSdOjPFjd49YFqG5t9fqq1dBc1CkOec9ea89YmsbP
Xh6809mQ+yDmCA78wuc97/hcT33KU456X+hlsjdgDjH2OWN5PuNnq46wvGee
pLmU5pGoH6dNuPqr1phwHVw1+rZqThVPPNi45TV2a8t/Pdkxist9E7YPmXfF
5cFJy87X+b5yX3G5b8L0EX3B861YHmy+Z3mwdbHLfcXlvgnTJsYKFpcH1arS
zum8bqxUua+43Dfh+pFXn3J1PNi7Mg/Kg63H0dpVE57qINOn9Ke12LYw7c8Y
Yb83YdqNvQDzsZi5xNg8hblP2htOvMoZ8LJr1569fXF5sHERxeVB95La8Ivl
wSm/rDzIeNDOyDhkfw3nlAd5L/3MZ6vTNWlXbuF1rZhsSvWtTDF4U87yxINT
fZNJw3aPVsMUn7yHB++GsyHPwQ/tQU4ma8BrX/Oa476AtiIv92UvfekR8zds
WowH7OfWbDAnddWaM8dSW2lrda31SrbqLa54S7uvug3FzWMtD07xzJNfew/u
eK5ea7mP1xnLvF5cHqyWXXlwC/MdxeW+VedH7qvWwaR7YL4r91ceLG4eaHG5
r3kx5b7myBSXB6eY4WJzK6wpIC73TfFU9SkXlwdrY39P5cHif5dnwMusY+ua
xrjk+2mHYuPrOJs1j2zKKSsP0rfMe854xeVBdUjo32pzTXqVxV0TiifbUX0o
U6zdlJO1R8Nq0vyfdN2rZTTl7EwxWntjkt/VZ0POttwDZ1n4gfMTtmFixjkf
8y9cATcSf8Qz0/a8ToyQ5zrmsnHMxqyvtZunul1THZNq2E61F4snbYcpr6ex
zcwVXuc5pzodWzU71v1ex3m1WyceLPdNuLp2k8bdpHc3af4Ul/smXD2EFZsT
OuWHttb2xIPlvgk3fniKJZ7iiqfYqmLaCoxvozy41iZWN2fC2ufo32L61Hpv
E6bfmJdqF2xhno/2YB4V08Zch/dMeMqXvBvOgNM6tmdNKw82j0w+0ldYHuQ1
/NTVG6kG16THNWlUFnfuF082oimWoHF0U+5VeXDSqppqYk51TyZNvymPtXHL
k01+2o91HPIeX3+kzoaTjZTxwtjQlqDfQb8P32tcFuuS9kT3KSsuD+ofWXmQ
Z+j5a6vucPGkbVvuK550HqZ8nynWq9w32f/Lg5OG+aRnXlxN10nftRp3xeXB
SfuuuPo/kxbQpAtUbYRJJ6G5ouXB4uaNFjd3Zsqjae224vLgFGNczDOy98cu
Wl9z8U8FHuz6c5V4mEfiDLhy35329sXlweqK8DzySXmQa3OWwVZeDS41t4wh
F0886LOuc7974D0xA1OO1aS/Ue6b9IqnumCT5u2k8zDl8kw+6/LgNCZZM2w3
5kXzSng/ny/WFsV3FOtHY54Xe55S/1/M2GAN47MrD1pbpzzoec3ax2LzC/lM
cXmwuNzX2l7FU62T6twWV/evPDjpP0y5P40B2+sH37KHTPOiuNrmk875pPU6
6b4WTzp4xdUCKi4PThpBxeW+4uaNVj+huDmkUz5pc2omHiz3FU/xxn6/PPLv
efBXv9ucAffEP+zRFeFe6R+w98t4rv5kcfWZi1uzoHO8e93JJ7LGCciDzZ+a
NDcmPcbiqX7NqTqnWzpIU67rFMc12fCn8VkeLOYeXIvpC/pZe7hY35H+KTFj
kvaxhriYNvfsXR7kWbgf46zkQd7v2rNiPsM1io3J80whds3WNihu3efy4FT/
a62BsqWFO+kgVQuiPLjWbRQ3Nmzyjxfv2R92vkz1PibNc66j7qu5J9ZrEJf7
Jh6sJt6kj8frfB/9Vx6c9IKKy30TD1ZLYdJVmHJLm1/TPNPicl9xuW8PD2pj
5v4dd7ThhB2/1XcC8/20n7XLtzBtrs7AhKd4JPNZmu+54mmd6d67+N3xDDhx
38SD7qP53bh+55SY/neeF691CrbmcnlwKwZgjZErnnKKJ93F4qlOzamaKVt6
gJMWxBTnPPm1p/3bNFbLfcXcG/3Me8qDtIt2SNrZs8qKje0oD/KvmsjlQfrC
OONyn+d0rrUHG8PMuCnmb/xrHpA8ONWDvnmiFpg8WFwenPSRmhtbPOUK8R7s
Jdgeyon1F0y+g2nfONX7WLF7wfJgcbXQJ130SRvW8yPfV+4rnnTziqsdNOkI
8T3Gu5b7Jl2FYjUc+Hx5cMo5nfJPm4Mz5eMU/1TmweLLxsPczWfAxiFUb7m4
NQiKO2en+TvZdvbEwk05U5PG1MSD1eEvD7aO2KSRO+kjTXlAU6zXZNOYxjDX
ca0sNh/4wdsajPKgnMJ7yoOuc+ZtbfFgcXmQucwzM87Kg/CL9Um2MGOh2HM9
7yku9xV7/lA3SR5sbejyYDWaiiet+MkWVO5rzmxx46WLuW/2SoyxxpJNfoTy
4LSfXOeU3DfxoLpi9GMx7aEebHF5sNqw5cHict/Eg+rq8TzF/F0NteLyIO/X
5lYeLC73TTxovRhrv7SWp/VdL8t9/39753YcW1JFQYewAY+IwIrBqfka3Lgu
wMfgACTcjMgparWOLiPmEfro0JJ0uvs8qirrsWvtahlojAT15ZXmff5+audv
l+aaaQ9ox5bmfnJe5kdWrzakevWx1/pL9e9pDFgOWt7NZWD5rOYY+3XVZz1d
eetua/1P90bdvKS43pvPMOem3/7Ky7bydy8Orr2xKxZ6zfmvft0qz2Xfqa1T
5aBtA9dRDtp26TesdpxuXg91OVhd9vnsTk1/2ziGattM16TUxmWgy0Hum21H
ObhyZfL/W+6w+sZXL//A5ae09tLeYqp51ouDXV9Ycyyrrp25P6rLwcaV3Ti4
PNKrnTvlfKvrGVtd9tVDb3Gw3nrlYDXX576vanPR83t12Xd6L9z2n35y8Ns4
aH+euvFbHAMS386z4LzrsVwOco2uKa9cPNWv+qi3Nf0bB889UPXHqF5+wvXV
LwdvudjOPN3lYH10q5dfxNof1DXxNe+xyjafLwuqnW/hOZWDxjDoUyoH7QdT
BqtpJxxTVfs+21K13HHuUe0+QLUcNM8zv69xhHOlzpHKQd/HNZaD5nHkuHKw
OTSrmz+l+pWf/M1X8Eu8lcrBtcd2xVevdfY131K96l05yM8yUQ5Wl33V9Uhf
ut7py0f9lZfszVf21PZnlq7XUHU5WA8i+wWs97/ioHrtS63+5OB/c7D61zwG
XF7KK9dAOUgZtDytOnjWx9uaxYrrrl4+GMsv8Ul+mZWPuxzkurlPPMfqeihV
rz2zKzZsrQu0zLvPxXw0ap6RuUXLQTT3h88uB/VpP9nn/BLfWW3MQ+MA9TiS
VdW2N44By0HLTTmojxyfuzhYXQ4618Xv5SD9Ir+juvk0q5tXpbrsq15+g8tr
Yu29XXHXa/297HvS/2zdLAfdW85nNk9WNd/j2Kq67Kt3+uLg8lT/Mnxll8fs
8ptdnnvVlj3nQD6Sg3y2OaIc11Kfl+Y8aP+Mq1c778IxS682oXr1mV/NI93W
Vla8wdIrRh1NGdef9pceA9Y/ueyrbk6BlXNn1bWz/3lbm1gxbE/2/C6PRI59
K4/Myjd6cpDySJ+q7OM56HVfXR+J6hUvvdbKV59wlf9y0Hzb3JdyUA8z/y4H
+ek8Y7Vt0Kn9PM6v+mSf2navfmhcs/zlM8pBxwTmEOy8qOyrLgery77mla7m
nppns5r3m2OlevnPL+/B5UHR/UenvsVjl4Ndlz85eOuXVpd9S/Oc3MdSXQ6u
HCKWMcuhLKsu+5aux2x1Obi8Z5f/XjXH6sX2yo/oLW+i6vozfHLwOQd/qTEg
3h74X+Ib1twB1cTGsVeO/VDloHNj1OlysPXoydzLilVbe5q6n3d5QJWDPEfX
eBYHm1e0HOTaeIbm7JaDxnef2n0bxompu4eoesWMrXmSVS+Yu2Zdw5y96nLw
ZGI5qC77/DvPqdoxu7lN1TwL26dT6w1aDsopjisH1zhirT3h2aVHaTXlge/m
HKrNZ8xzKAdX7ukvyTu28rAYE3R68HI9N0/C+lFUd39uNeWQNoDza5x2ObjW
KapbT1ed9V5T18o+y4dtproc5L3ypRysbm6RlWdkea1znOPF6nJw+dBWl33v
5eDyKaquV8MnB59z8MbE/8cYsBxs7oDm0CkH2b9D2bN/JQdbd57Msay1+Cd7
l5bX0/IBLgf5nlvetHKwuhzk/t00Zfw/Xpt/+Il2Pc5xrrpx1NVrHWHVkTXm
sh2wH642DpxzqeZ/tg/VtD+OzcpBYxLaD7ctVMthY/A8D2Jg/L0ctO3jvScH
He9V837bterG+p2atozvKAedD+Nel4Nc3y0PdTlYXQ46Tjq9ebkefZmq61NR
3TX6tV+p7Fu68zbVrb+rLq88ktVl39LuT5Bt6ld5RtSUDV6WpcXBsu+mub6b
J+1Hc5CyYMybczyUjaVXvV593erOBS19rpXc4geWPuPMbzHnS699ysu7o/oj
xoC07/hTkvsAb2TGfX/57rs/Lg5Wl4PVqw9Z/WrN3TjF6uVfUR+n5fe78sKc
+dFuebR5buY4q14ctLy7/0sOGvPgGh//cyysNsb/5ODqQ676IlO4T9VvxTNw
7tXcM9cOy8GyqhzkWPm0OFhdDvK8OFfqaDnoi++ptl/ENVfrya1Ht7rsq2ZP
jYwsB6kz8Mqcs3Kw+amrfXZnnrJysLrsq19T9ZOY7RW/3bX7tY7f+Zw1t9N6
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
3srttfQ/AaMpiDQ=
    "], {{0, 116.}, {150., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 116.},
  PlotRange->{{0, 150.}, {0, 116.}}]], "Output",
 CellChangeTimes->{3.947491884747081*^9, 3.9475097630861673`*^9, 
  3.947613363572256*^9, 3.947666612819434*^9, 3.948071367809245*^9, 
  3.948985579599304*^9, 3.949437489091405*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"75de77e2-eeae-41ad-bbd6-313c008c731e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Rotation", " ", "from", " ", "combination", " ", "of", " ", 
   RowBox[{"skews", " ", "--"}], " ", "fast", " ", "alternative"}], " ", 
  "*)"}]], "Input",
 CellLabel->
  "In[389]:=",ExpressionUUID->"c8988d38-00d0-4033-8d74-17e99fadf791"],

Cell[BoxData[
 RowBox[{
  RowBox[{"skewx", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "t"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[390]:=",ExpressionUUID->"328ac4b7-6676-4bbd-9de8-8dec0425f43f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"skewy", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[391]:=",ExpressionUUID->"056f20ab-1944-48a9-a656-d3d6d20cad81"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"tan", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"rotation", " ", "angle"}], ")"}]}], ")"}]}]}], " ", 
  "*)"}]], "Input",
 CellLabel->
  "In[392]:=",ExpressionUUID->"b97315da-991b-411f-9899-aca40d462eb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"skewx", "[", 
         RowBox[{"-", "t"}], "]"}], ".", 
        RowBox[{"skewy", "[", 
         RowBox[{"2", 
          RowBox[{"t", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"t", "^", "2"}]}], ")"}]}]}], "]"}], ".", 
        RowBox[{"skewx", "[", 
         RowBox[{"-", "t"}], "]"}]}], " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cs", ",", 
           RowBox[{"-", "sn"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"sn", ",", "cs"}], "}"}]}], "}"}]}], ")"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cs", "^", "2"}], "+", 
        RowBox[{"sn", "^", "2"}]}], ")"}], "-", "1"}]}], "}"}], " ", "/.", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cs", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"t", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"t", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"sn", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "t"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"t", "^", "2"}]}], ")"}]}]}]}], "}"}]}], "//", " ", 
  "Factor"}]], "Input",
 CellLabel->
  "In[393]:=",ExpressionUUID->"dcedc437-440c-41c3-b10a-a67b91b9cfe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9474918847731857`*^9, 3.947509763118355*^9, 
  3.947613363601872*^9, 3.947666612869083*^9, 3.94807136783363*^9, 
  3.948985579666254*^9, 3.9494374892481537`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"c8b5663f-5b59-4026-a837-d847add74100"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plane tilings for all curvatures", "Chapter",
 CellChangeTimes->{{3.947013107947707*^9, 3.947013113340013*^9}, {
  3.948206539463513*^9, 
  3.948206557999896*^9}},ExpressionUUID->"31e4d30a-5816-49d9-b075-\
88d14f997609"],

Cell[TextData[{
 "Here, all curvatures are constant, giving full symmetry of the space.\n- \
Positive: sphere -- tilings are polyhedra\n- Zero: plane\n- Negative: \
hyperbolic plane\n\nThese tilings are tilings of\nSchwarz triangle - \
Wikipedia\nhttps://en.wikipedia.org/wiki/Schwarz_triangle\n\nTriangles with \
angles pi/n1, pi/n2, pi/n3\nThe sum 1/n1 + 1/n2 + 1/n3 is related to the \
space curvature:\nPositive: >1\nZero: =1\nNegative: <1\n\nThere are a finite \
number of solutions for positive and zero curvature.\nPositive: 2,2,n . 2,3,3 \
. 2.3.4 . 2.3.5\nZero: 2,3,6 . 2,4,4 . 3.3.3\nNegative: all the rest\n\n\
Algorithm:\nGenerate initial triangle\nGenerate next triangles by flipping \
each triangle over each edge\n\nI have not been able to discover any broader \
algorithm, like there is for positive and zero curvature.\n\n\
MakeTriangles[ns_,ntri_]\nns -- parameters: {n1,n2,n3}\nntri -- number of \
triangles to make, stops if closed\nReturns {curvature, vertices, triangles}\n\
Triangle: {vertices, parity (1,-1)}\n\nThe surface is embedded in a space: x, \
y, z\nSurface constraints:\nSphere: x^2 + y^2 + z^2 = 1\nPlane: z = const.\n\
Hyperbolic plane: - x^2 - y^2 + z^2 = 1\n\n\
DisplayTriangles[trix_,proj_,tclr_]\ntrix - output of MakeTriangles\nproj: \
for non-flat output,\n\[OpenCurlyDoubleQuote]3D\[CloseCurlyDoubleQuote] - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s 3D viewer (movable orthographic)\n\
\[OpenCurlyDoubleQuote]Gnomonic\[CloseCurlyDoubleQuote] - Straight-Line \
Geodesic: {x,y}/z\n\[OpenCurlyDoubleQuote]Conformal\[CloseCurlyDoubleQuote] - \
Stereographic, Equal-Angle: {x,y}/(1+z)\n\[OpenCurlyDoubleQuote]Equal-Area\
\[CloseCurlyDoubleQuote]: {x,y}/sqrt(2*(1+z))\ntclr - color function:\n- Arg \
- the \[OpenCurlyDoubleQuote]Triangle\[CloseCurlyDoubleQuote] object above\n- \
Returns - color, Line, Polygon objects for Graphics, Graphics3D\n\nGeodesics:\
\nSphere: X = P*cos(t) + Q*sin(t), X.X = P.P = Q.Q = 1, P.Q = 0\nPlane: \
straight line: X = X0 + X1*t\nHyp Pln: X = P*cosh(t) + Q*sinh(t), X.X = P.P = \
1, Q.Q = -1, P.Q = 0\nTangent: T = dX/dt\nAngle: cos(a) = \
(T1.T2)/sqrt((T1.T1)*(T2.T2))\n\nLinks:\nUniform tilings in hyperbolic plane \
- Wikipedia - \
https://en.wikipedia.org/wiki/Uniform_tilings_in_hyperbolic_plane\nHyperbolic \
Planar Tesselations - http://www.plunk.org/~hatch/HyperbolicTesselations/\n\
Don Hatch\[CloseCurlyQuote]s Home Page - http://www.plunk.org/~hatch/ -- has \
some source code\nHyperbolic Tessellations - \
http://aleph0.clarku.edu/~djoyce/poincare/poincare.html\nHyperbolic Tilings - \
Math Images - http://mathforum.org/mathimages/index.php/Hyperbolic_Tilings\n\
Wolfram Demonstrations Project - \
http://demonstrations.wolfram.com/TilingTheHyperbolicPlaneWithRegularPolygons/\
 -- this and related ones may have useful Mma source code\nThe Geometry Page \
- http://superliminal.com/geometry/geometry.htm\nVirtual Reality Polyhedra - \
http://www.georgehart.com/virtual-polyhedra/vp.html\nSymmetry, Crystals and \
Polyhedra - http://www.uwgb.edu/dutchs/symmetry/symmetry.htm\nThe Geometry \
Junkyard: Hyperbolic Tiling - \
https://www.ics.uci.edu/~eppstein/junkyard/hypertile.html"
}], "Text",
 CellChangeTimes->{{3.948210588607841*^9, 3.948210625929267*^9}, {
   3.948215812892824*^9, 3.9482158364326897`*^9}, {3.948215877593012*^9, 
   3.948216032858774*^9}, {3.9482160889777613`*^9, 3.948216150982638*^9}, {
   3.948216192732484*^9, 3.9482163362089767`*^9}, {3.94821637424152*^9, 
   3.948216411693368*^9}, {3.948216465924893*^9, 3.9482164728043137`*^9}, {
   3.948216571223357*^9, 3.948216650088134*^9}, {3.948216680538247*^9, 
   3.948216734942691*^9}, {3.948216802891231*^9, 3.948216807865162*^9}, 
   3.9482169809173603`*^9, {3.9482324977026453`*^9, 3.9482324979463463`*^9}, {
   3.948288358277524*^9, 
   3.94828837356464*^9}},ExpressionUUID->"4c92b4fa-df7d-47e9-b2db-\
04395a4bfdb0"],

Cell[CellGroupData[{

Cell["Display of Tilings", "Section",
 CellChangeTimes->{{3.9482917591490307`*^9, 
  3.94829175980956*^9}},ExpressionUUID->"297711f3-13b4-402e-9cd3-\
ea743a057c22"],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.949437179568812*^9, 
  3.949437182343068*^9}},ExpressionUUID->"0d241acf-0b73-48d4-9070-\
4addf1bce48e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdVertex", "[", 
   RowBox[{
   "dgmet_", ",", "vt1_", ",", "vt2_", ",", "ca1_", ",", "ca2_", ",", "s_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mv1", ",", "mv2", ",", "mdet", ",", "pv11", ",", "pv12", ",", "pv22", 
      ",", "pvdet"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mv1", " ", "=", " ", 
      RowBox[{"dgmet", "*", "vt1"}]}], ";", " ", 
     RowBox[{"mv2", " ", "=", " ", 
      RowBox[{"dgmet", "*", "vt2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mdet", " ", "=", " ", 
      RowBox[{"Times", " ", "@@", " ", "dgmet"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pv11", " ", "=", " ", 
      RowBox[{"mv1", ".", "vt1"}]}], ";", " ", 
     RowBox[{"pv12", " ", "=", " ", 
      RowBox[{"mv1", ".", "vt2"}]}], ";", " ", 
     RowBox[{"pv22", " ", "=", " ", 
      RowBox[{"mv2", ".", "vt2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pvdet", " ", "=", " ", 
      RowBox[{
       RowBox[{"pv11", "*", "pv22"}], " ", "-", " ", 
       RowBox[{"pv12", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"vt1", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pv22", "*", "ca1"}], "-", 
           RowBox[{"pv12", "*", "ca2"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{"vt2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pv11", "*", "ca2"}], " ", "-", " ", 
           RowBox[{"pv12", "*", "ca1"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{"mv1", ",", "mv2"}], "]"}], "*", "s", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pvdet", " ", "-", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pv22", "*", 
                RowBox[{"ca1", "^", "2"}]}], "-", 
               RowBox[{"2", "pv12", "*", "ca1", "*", "ca2"}], "+", 
               RowBox[{"pv11", "*", 
                RowBox[{"ca2", "^", "2"}]}]}], ")"}]}], ")"}], "/", "mdet"}], 
          "]"}]}]}], ")"}], "/", "pvdet"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[548]:=",ExpressionUUID->"721cb7cb-2855-4ffe-8db4-7e0c5854c60c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdVertexVerify", "[", 
   RowBox[{
   "dgmet_", ",", "vt1_", ",", "vt2_", ",", "ca1_", ",", "ca2_", ",", "s_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "vt3", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vt3", " ", "=", " ", 
      RowBox[{"ThirdVertex", "[", 
       RowBox[{
       "dgmet", ",", "vt1", ",", "vt2", ",", "ca1", ",", "ca2", ",", "s"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dgmet", "*", "vt1"}], ")"}], ".", "vt3"}], " ", "-", " ", 
         "ca1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dgmet", "*", "vt2"}], ")"}], ".", "vt3"}], " ", "-", " ", 
         "ca2"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dgmet", "*", "vt3"}], ")"}], ".", "vt3"}], " ", "-", " ", 
         "1"}]}], "}"}], " ", "//", " ", "Factor"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[549]:=",ExpressionUUID->"94773896-900b-4b6e-b713-e7d6df35167e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ThirdVertexVerify", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"g", ",", "3"}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"n1", ",", "3"}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"n2", ",", "3"}], "]"}], ",", "c1", ",", "c2", ",", "s"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[550]:=",ExpressionUUID->"ba966d07-2abd-4009-b617-34ca3036da86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.755645370654674*^9, 3.9468779142394342`*^9, 
  3.947491885187459*^9, 3.947509763363267*^9, 3.9476133639702473`*^9, 
  3.9476666132759743`*^9, 3.948071368244904*^9, 3.948985580050043*^9, 
  3.9494370224363194`*^9, 3.9494580332583427`*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"34f46c0f-61d9-4561-9c60-6b38b4ef3587"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexReflection", "[", 
   RowBox[{"dgmet_", ",", "vt1_", ",", "vt2_", ",", "vt3_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mv1", ",", "mv2", ",", "pv11", ",", "pv12", ",", "pv22", ",", "ca1", 
      ",", "ca2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mv1", " ", "=", " ", 
      RowBox[{"dgmet", "*", "vt1"}]}], ";", " ", 
     RowBox[{"mv2", " ", "=", " ", 
      RowBox[{"dgmet", "*", "vt2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pv11", " ", "=", " ", 
      RowBox[{"mv1", ".", "vt1"}]}], ";", " ", 
     RowBox[{"pv12", " ", "=", " ", 
      RowBox[{"mv1", ".", "vt2"}]}], ";", " ", 
     RowBox[{"pv22", " ", "=", " ", 
      RowBox[{"mv2", ".", "vt2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ca1", " ", "=", " ", 
      RowBox[{"mv1", ".", "vt3"}]}], ";", " ", 
     RowBox[{"ca2", " ", "=", " ", 
      RowBox[{"mv2", ".", "vt3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"vt1", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"pv22", "*", "ca1"}], "-", 
             RowBox[{"pv12", "*", "ca2"}]}], ")"}]}], " ", "+", " ", 
          RowBox[{"vt2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"pv11", "*", "ca2"}], " ", "-", " ", 
             RowBox[{"pv12", "*", "ca1"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pv11", "*", "pv22"}], " ", "-", " ", 
          RowBox[{"pv12", "^", "2"}]}], ")"}]}]}], " ", "-", " ", "vt3"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[551]:=",ExpressionUUID->"12e0cc10-caf8-403c-b7db-9b8c3b3901c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexReflection", "[", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"g", ",", "3"}], "]"}], ",", 
       RowBox[{"Array", "[", 
        RowBox[{"n1", ",", "3"}], "]"}], ",", 
       RowBox[{"Array", "[", 
        RowBox[{"n2", ",", "3"}], "]"}], ",", 
       RowBox[{"ThirdVertex", "[", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{"g", ",", "3"}], "]"}], ",", 
         RowBox[{"Array", "[", 
          RowBox[{"n1", ",", "3"}], "]"}], ",", 
         RowBox[{"Array", "[", 
          RowBox[{"n2", ",", "3"}], "]"}], ",", "c1", ",", "c2", ",", "s"}], 
        "]"}]}], "]"}], " ", "-", " ", 
     RowBox[{"ThirdVertex", "[", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"g", ",", "3"}], "]"}], ",", 
       RowBox[{"Array", "[", 
        RowBox[{"n1", ",", "3"}], "]"}], ",", 
       RowBox[{"Array", "[", 
        RowBox[{"n2", ",", "3"}], "]"}], ",", "c1", ",", "c2", ",", 
       RowBox[{"-", "s"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], " ", "//", 
  " ", "Factor"}]], "Input",
 CellLabel->
  "In[552]:=",ExpressionUUID->"12bbc5ab-b0ce-442a-b1f3-c86aa1b30b84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.755645371486519*^9, 3.946877915497909*^9, 
  3.9474918860719233`*^9, 3.947509764375215*^9, 3.94761336490593*^9, 
  3.947666614210822*^9, 3.948071369097109*^9, 3.9489855809816513`*^9, 
  3.949437023480563*^9, 3.949458034086269*^9},
 CellLabel->
  "Out[552]=",ExpressionUUID->"ebd0af56-7130-4396-946c-844b74e77baa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlaneVertexReflection", "[", 
   RowBox[{"vt1_", ",", "vt2_", ",", "vt3_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vt12", ",", "vt13"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vt12", " ", "=", " ", 
      RowBox[{"vt2", " ", "-", " ", "vt1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vt13", " ", "=", " ", 
      RowBox[{"vt3", " ", "-", " ", "vt1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vt1", " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vt12", ".", "vt13"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"vt12", ".", "vt12"}], ")"}]}], ")"}], "*", "vt12"}], " ",
         "-", " ", "vt13"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[553]:=",ExpressionUUID->"61016545-9d5e-4d46-9302-4fbb4f280a8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GeneralVertexReflection", "[", 
   RowBox[{"curv_", ",", "vt1_", ",", "vt2_", ",", "vt3_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"curv", ">", "0"}], ",", 
    RowBox[{"VertexReflection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "vt1", ",", "vt2", ",", 
      "vt3"}], "]"}], ",", 
    RowBox[{"curv", "\[Equal]", "0"}], ",", 
    RowBox[{"PlaneVertexReflection", "[", 
     RowBox[{"vt1", ",", "vt2", ",", "vt3"}], "]"}], ",", 
    RowBox[{"curv", "<", "0"}], ",", 
    RowBox[{"VertexReflection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "vt1", ",", "vt2", ",", 
      "vt3"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[554]:=",ExpressionUUID->"394273ba-ee6a-4eec-869f-a68fdb0c1367"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeInitialTriangle", "[", "ns_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "curv", ",", "angs", ",", "c12", ",", "c13", ",", "s12", ",", "s13", ",",
       "v1", ",", "v2", ",", "v3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Curvature", " ", "value"}], " ", "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"curv", " ", "=", " ", 
      RowBox[{"Sign", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"1", "/", 
          RowBox[{"ns", "[", 
           RowBox[{"[", 
            RowBox[{";;", "3"}], "]"}], "]"}]}], "]"}], "-", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initial", " ", "triangle"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"angs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Pi", "/", 
        RowBox[{"ns", "[", 
         RowBox[{"[", 
          RowBox[{";;", "3"}], "]"}], "]"}]}], " ", "//", " ", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c12", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"angs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"angs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c13", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"angs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"angs", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"curv", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Sphere", " ", "-", " ", 
         RowBox[{"use", " ", "spherical", " ", "trigonometry"}]}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s12", " ", "=", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"c12", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s13", " ", "=", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"c13", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v1", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"s12", ",", "0", ",", "c12"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v3", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s13", "*", 
            RowBox[{"Cos", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"s13", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "c13"}], 
          "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"curv", " ", "\[Equal]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Plane", " ", "-", " ", 
         RowBox[{"use", " ", "law", " ", "of", " ", "sines"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s12", " ", "=", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"s13", " ", "=", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"angs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v1", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"s12", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v3", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s13", "*", 
            RowBox[{"Cos", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"s13", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"curv", " ", "<", " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Hyperbolic", " ", "plane"}], " ", "-", " ", 
         RowBox[{
         "analytically", " ", "continue", " ", "the", " ", "spherical", " ", 
          "trig"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s12", " ", "=", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"c12", "^", "2"}], "-", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"s13", " ", "=", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"c13", "^", "2"}], "-", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v1", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"s12", ",", "0", ",", "c12"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v3", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s13", "*", 
            RowBox[{"Cos", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"s13", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"angs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "c13"}], 
          "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Emit", " ", "the", " ", "curvature", " ", "also"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"curv", ",", 
       RowBox[{"{", 
        RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[555]:=",ExpressionUUID->"83a3a577-b100-41a0-9b60-72baed150593"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VtxDistance", "[", 
   RowBox[{"curv_", ",", "vtx_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"curv", ">", "0"}], ",", 
    RowBox[{"-", 
     RowBox[{"vtx", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ",", 
    RowBox[{"curv", "\[Equal]", "0"}], ",", 
    RowBox[{"vtx", ".", "vtx"}], ",", 
    RowBox[{"curv", "<", "0"}], ",", 
    RowBox[{"vtx", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[556]:=",ExpressionUUID->"6b4aaa8f-b4b9-48fb-9df8-2203a47ffc59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeTriTolerance", " ", "=", " ", 
   RowBox[{"10.", "^", 
    RowBox[{"(", 
     RowBox[{"-", "8"}], ")"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[557]:=",ExpressionUUID->"3ae83ec5-cdf1-4ffd-85c8-f518d14a6b1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeTriangles", "[", 
   RowBox[{"ns_", ",", "ntri_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "curv", ",", "vts", ",", "vtdists", ",", "tris", ",", "vttrixs", ",", 
      "eds", ",", "kx", ",", "edvts", ",", "vtix1", ",", "edsvt1", ",", 
      "evoth", ",", "vtix2", ",", "triix", ",", "tri", ",", "vtix3", ",", 
      "vtrfl", ",", "ixrfl", ",", "ix", ",", "ntvts", ",", "ntrvts", ",", 
      "ntreds"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"The", " ", "first", " ", 
       RowBox[{"triangle", ".", " ", "Setup"}], " ", "includes", " ", "a", 
       " ", "function", " ", "for", " ", "getting", " ", "triangle", " ", 
       "memberships", " ", "for", " ", "each", " ", 
       RowBox[{"vertex", ".", " ", "That"}], " ", "successfully", " ", 
       "optimizes", " ", "the", " ", "code"}], ";", " ", 
      RowBox[{
      "allocating", " ", "arrays", " ", "in", " ", "advance", " ", "for", " ",
        "the", " ", "vertices", " ", "and", " ", "triangles", " ", 
       RowBox[{"doesn", "'"}], 
       RowBox[{"t", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"curv", ",", "vts"}], "}"}], " ", "=", " ", 
      RowBox[{"MakeInitialTriangle", "[", "ns", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vtdists", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"VtxDistance", "[", 
         RowBox[{"curv", ",", "#"}], "]"}], "&"}], " ", "/@", " ", "vts"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vttrixs", "[", "k", "]"}], " ", "=", " ", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "3"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tris", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "1"}], "}"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Boundary", " ", 
       RowBox[{"edges", ".", " ", "Use"}], " ", "this", " ", "to", " ", 
       "reduce", " ", "calculation", " ", "load"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"eds", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{"(*", " ", 
       RowBox[{"Is", " ", "the", " ", "surface", " ", 
        RowBox[{"closed", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "eds", "]"}], " ", "<=", " ", "0"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Find", " ", "the", " ", "closest", " ", "vertex"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"edvts", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", "eds", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vtix1", " ", "=", " ", 
         RowBox[{"edvts", "[", 
          RowBox[{"[", 
           RowBox[{"First", "[", 
            RowBox[{"Ordering", "[", 
             RowBox[{
              RowBox[{"vtdists", "[", 
               RowBox[{"[", "edvts", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Find", " ", "the", " ", "second"}], "-", 
          RowBox[{"closest", " ", "vertex", " ", 
           RowBox[{"that", "'"}], "s", " ", "in", " ", "an", " ", "edge"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"edsvt1", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"eds", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#", ",", "vtix1"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"evoth", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "vtix1", "}"}]}], "]"}], "]"}], "&"}], " ", "/@", 
          " ", "edsvt1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vtix2", " ", "=", " ", 
         RowBox[{"evoth", "[", 
          RowBox[{"[", 
           RowBox[{"First", "[", 
            RowBox[{"Ordering", "[", 
             RowBox[{
              RowBox[{"vtdists", "[", 
               RowBox[{"[", "evoth", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Find", " ", "the", " ", "triangle", " ", "that", " ", "contains", 
          " ", "both", " ", "of", " ", "them"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"triix", " ", "=", " ", 
         RowBox[{"First", "[", 
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{"vttrixs", "[", "vtix1", "]"}], ",", 
            RowBox[{"vttrixs", "[", "vtix2", "]"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tri", " ", "=", " ", 
         RowBox[{"tris", "[", 
          RowBox[{"[", "triix", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vtix3", " ", "=", " ", 
         RowBox[{"First", "[", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"tri", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"vtix1", ",", "vtix2"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Construct", " ", "the", " ", "reflected", " ", 
          RowBox[{"triangle", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vtrfl", " ", "=", " ", 
         RowBox[{"GeneralVertexReflection", "[", 
          RowBox[{"curv", ",", 
           RowBox[{"vts", "[", 
            RowBox[{"[", "vtix1", "]"}], "]"}], ",", 
           RowBox[{"vts", "[", 
            RowBox[{"[", "vtix2", "]"}], "]"}], ",", 
           RowBox[{"vts", "[", 
            RowBox[{"[", "vtix3", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ixrfl", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", "vts", "]"}], " ", "+", " ", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Is", " ", "the", " ", "new", " ", "vertex", " ", "an", " ", 
          "existing", " ", 
          RowBox[{"one", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", ".", "#"}], ")"}], "&"}], " ", "@", " ", 
               RowBox[{"(", 
                RowBox[{"vtrfl", "-", 
                 RowBox[{"vts", "[", 
                  RowBox[{"[", "ix", "]"}], "]"}]}], ")"}]}], ")"}], " ", "<",
              " ", 
             RowBox[{"MakeTriTolerance", "^", "2"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ixrfl", " ", "=", " ", "ix"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ix", ",", "edvts"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Compose", " ", "the", " ", "new", " ", "triangle"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"vttrixs", "[", "vtix1", "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", "tris", "]"}], "+", "1"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"vttrixs", "[", "vtix2", "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", "tris", "]"}], "+", "1"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ixrfl", " ", ">", " ", 
           RowBox[{"Length", "[", "vts", "]"}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vts", ",", "vtrfl"}], "]"}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"AppendTo", "[", 
            RowBox[{"vtdists", ",", " ", 
             RowBox[{"VtxDistance", "[", 
              RowBox[{"curv", ",", "vtrfl"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vttrixs", "[", 
             RowBox[{"Length", "[", "vts", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "tris", "]"}], "+", "1"}], "}"}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"vttrixs", "[", "ixrfl", "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", "tris", "]"}], "+", "1"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ntrvts", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tri", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "k"}], "]"}], "]"}], " ", "\[Equal]", " ", 
              "vtix3"}], ",", "ixrfl", ",", 
             RowBox[{"tri", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "k"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "3"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tris", ",", 
          RowBox[{"{", 
           RowBox[{"ntrvts", ",", 
            RowBox[{"-", 
             RowBox[{"tri", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ntreds", " ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"ntrvts", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"eds", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{"Complement", "[", 
            RowBox[{"eds", ",", "ntreds"}], "]"}], ",", 
           RowBox[{"Complement", "[", 
            RowBox[{"ntreds", ",", "eds"}], "]"}]}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"kx", ",", 
         RowBox[{"ntri", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"curv", ",", "vts", ",", "tris"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[558]:=",ExpressionUUID->"e9a0103e-f10d-4494-b730-104c5aa10648"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimVertices", "[", 
   RowBox[{"vts_", ",", "tris_", ",", "cond_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vtconds", ",", "vtixs", ",", "selixs", ",", "ngslixs", ",", "trimvts", 
      ",", "trimtris", ",", "k", ",", "tmixs"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vtconds", " ", "=", " ", 
      RowBox[{"cond", " ", "/@", " ", "vts"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vtixs", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "vts", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"selixs", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"vtconds", ",", "vtixs"}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ngslixs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{"vtixs", ",", "selixs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"trimvts", " ", "=", " ", 
      RowBox[{"vts", "[", 
       RowBox[{"[", "selixs", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trimtris", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"tris", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "ngslixs"}], "]"}], "]"}], 
          " ", "\[Equal]", " ", "3"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tmixs", "[", 
         RowBox[{"selixs", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], " ", "=", " ", "k"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "selixs", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trimtris", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tmixs", " ", "/@", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], " ", "/@", " ", 
       "trimtris"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"trimvts", ",", "trimtris"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[559]:=",ExpressionUUID->"abe887f3-d677-4340-945d-8d78c9e6f7d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayTriangles", "[", 
   RowBox[{"trix_", ",", "proj_", ",", "tclr_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"curv", ",", "vts", ",", "tris", ",", "vtsx", ",", "trisx"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"curv", ",", "vts", ",", "tris"}], "}"}], " ", "=", " ", 
      "trix"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"curv", " ", "\[NotEqual]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "proj", ",", "\[IndentingNewLine]", "\"\<3D\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"vts", ",", 
             RowBox[{"tclr", " ", "/@", " ", "tris"}]}], "]"}], ",", 
           RowBox[{"SphericalRegion", "\[Rule]", "True"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\"\<Gnomonic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vtsx", ",", "trisx"}], "}"}], " ", "=", " ", 
           RowBox[{"TrimVertices", "[", 
            RowBox[{"vts", ",", "tris", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ">", "MakeTriTolerance"}], 
              "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vtsx", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "&"}], " ", "/@", " ", 
            "vtsx"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"vtsx", ",", 
             RowBox[{"tclr", " ", "/@", " ", "trisx"}]}], "]"}], "]"}]}], ",",
          "\[IndentingNewLine]", "\"\<Conformal\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vtsx", ",", "trisx"}], "}"}], " ", "=", " ", 
           RowBox[{"TrimVertices", "[", 
            RowBox[{"vts", ",", "tris", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ">", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "MakeTriTolerance"}]}], "&"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vtsx", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "&"}], " ", "/@", 
            " ", "vtsx"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"vtsx", ",", 
             RowBox[{"tclr", " ", "/@", " ", "trisx"}]}], "]"}], "]"}]}], ",",
          "\[IndentingNewLine]", "\"\<Equal-Area\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vtsx", ",", "trisx"}], "}"}], " ", "=", " ", 
           RowBox[{"TrimVertices", "[", 
            RowBox[{"vts", ",", "tris", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ">", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "MakeTriTolerance"}]}], "&"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vtsx", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
            " ", "/@", " ", "vtsx"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"vtsx", ",", 
             RowBox[{"tclr", " ", "/@", " ", "trisx"}]}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"GraphicsComplex", "[", 
         RowBox[{"vts", ",", 
          RowBox[{"tclr", " ", "/@", " ", "tris"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[560]:=",ExpressionUUID->"e543d9b9-cae8-48fa-a090-040ec1031637"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriColorBoth", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Red", ",", " ", "Green", ",", " ", "Blue"}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[561]:=",ExpressionUUID->"7cd30440-672f-47fb-b769-6d003842d753"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriColorPos", " ", "=", " ", 
   RowBox[{"Lighter", " ", "/@", " ", "TriColorBoth"}]}], ";"}]], "Input",
 CellLabel->
  "In[562]:=",ExpressionUUID->"bb68ed3a-b9eb-493b-928a-5c7155b61c70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriColorNeg", " ", "=", " ", 
   RowBox[{"Darker", " ", "/@", " ", "TriColorBoth"}]}], ";"}]], "Input",
 CellLabel->
  "In[563]:=",ExpressionUUID->"4e8041d1-e5e1-41fb-9baa-57f7251409d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriColored", "[", "tri_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"EdgeForm", "[", "]"}], ",", 
    RowBox[{"Polygon", "[", 
     RowBox[{
      RowBox[{"tri", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"VertexColors", "\[Rule]", "TriColorBoth"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellLabel->
  "In[564]:=",ExpressionUUID->"06c31d50-668e-46ed-8e80-94589b364ef0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParTriColored", "[", "tri_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"EdgeForm", "[", "]"}], ",", 
    RowBox[{"Polygon", "[", 
     RowBox[{
      RowBox[{"tri", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"VertexColors", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tri", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", "0"}], ",", 
         "TriColorPos", ",", "TriColorNeg"}], "]"}]}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellLabel->
  "In[565]:=",ExpressionUUID->"4dba864f-1893-493c-9af9-f0410194e4f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bdries", "[", 
   RowBox[{"tri_", ",", "i1_", ",", "i2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"Black", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tri", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "i1"}], "]"}], "]"}], ",", 
       RowBox[{"tri", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "i2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"EdgeForm", "[", 
     RowBox[{"{", "}"}], "]"}], ",", "LightGray", ",", 
    RowBox[{"Polygon", "[", 
     RowBox[{"tri", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[566]:=",ExpressionUUID->"15996351-8eff-4c7c-b686-d033b678e89f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bdries12", "[", "tri_", "]"}], " ", ":=", " ", 
  RowBox[{"Bdries", "[", 
   RowBox[{"tri", ",", "1", ",", "2"}], "]"}]}]], "Input",
 CellLabel->
  "In[567]:=",ExpressionUUID->"44e27ea2-55b2-4b2f-9378-7148925ecfa5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bdries13", "[", "tri_", "]"}], " ", ":=", " ", 
  RowBox[{"Bdries", "[", 
   RowBox[{"tri", ",", "1", ",", "3"}], "]"}]}]], "Input",
 CellLabel->
  "In[568]:=",ExpressionUUID->"27159e7b-c6dd-4728-9f65-40d045fea442"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bdries23", "[", "tri_", "]"}], " ", ":=", " ", 
  RowBox[{"Bdries", "[", 
   RowBox[{"tri", ",", "2", ",", "3"}], "]"}]}]], "Input",
 CellLabel->
  "In[569]:=",ExpressionUUID->"c56facf1-3bb8-417f-b9dc-9e5386c8524f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Displays", "Subsection",ExpressionUUID->"bfbed77b-5902-4908-9603-ec6d23453e43"],

Cell["\<\
To use, enter the angle numbers in the first three input fields and the \
number of triangles to make in the fourth.

The triangles have angles pi/(angle-number).\
\>", "Text",
 CellChangeTimes->{{3.949458651871128*^9, 
  3.9494586956237583`*^9}},ExpressionUUID->"6ec812f7-4db7-49aa-917d-\
4d599226c4af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumCheck", "[", 
   RowBox[{"x_", ",", "minval_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "#", "]"}], ",", "#", ",", "minval"}], "]"}], 
    "&"}], " ", "@", " ", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Round", "[", "x", "]"}], ",", "minval"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755646564187634*^9, 3.755646614566655*^9}, {
  3.755646818084296*^9, 3.755646834515913*^9}, {3.949458102656725*^9, 
  3.9494581040989227`*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"5381881d-d39f-4d3a-87dd-8add3e345994"],

Cell["\<\
Initial values: the three angle numbers and the number of triangles\
\>", "Text",
 CellChangeTimes->{{3.755647591456732*^9, 
  3.755647605719998*^9}},ExpressionUUID->"1cfb9752-4c31-4d56-b56a-\
f692eb8f7bcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumAng1", " ", "=", " ", "2"}], ";", " ", 
  RowBox[{"NumAng2", " ", "=", " ", "3"}], ";", " ", 
  RowBox[{"NumAng3", " ", "=", " ", "7"}], ";", " ", 
  RowBox[{"NumTris", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.75564755502031*^9, 3.7556475636083508`*^9}, {
  3.755647610440662*^9, 3.755647611306326*^9}, {3.949458114963826*^9, 
  3.949458136683371*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6ada665c-640f-4e13-81b7-09d4a5d126c2"],

Cell["Input the three angle numbers", "Text",
 CellChangeTimes->{{3.755646174744754*^9, 
  3.7556462010546007`*^9}},ExpressionUUID->"c7d5c38b-b31b-4652-9429-\
6131a4c90c31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"InputField", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "NumAng1", "]"}], ",", "Number"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"NumCheck", "[", 
     RowBox[{"NumAng1", ",", "2"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.755646041374236*^9, 3.755646061198635*^9}, {
   3.755646343564169*^9, 3.75564635117868*^9}, {3.755646471674329*^9, 
   3.755646506312421*^9}, {3.755646629824812*^9, 3.755646657805524*^9}, {
   3.7556467087966623`*^9, 3.7556467126853647`*^9}, 3.755646888860388*^9, {
   3.949458145518832*^9, 3.949458181807357*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"6bda4364-a956-4b6b-9159-0a80e526c3be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InputFieldBox[Dynamic[$CellContext`NumAng1], Number], ",", 
   DynamicBox[ToBoxes[
     $CellContext`NumCheck[$CellContext`NumAng1, 2], StandardForm],
    ImageSizeCache->{7.8, {0., 8.45}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.755646694217987*^9, 3.755646736905672*^9}, 
   3.7556468427072897`*^9, 3.755646889412716*^9, 3.755647631919764*^9, 
   3.946877916351328*^9, 3.947491886231976*^9, 3.947509764610149*^9, 
   3.9476133650969276`*^9, 3.947666614367024*^9, 3.94807136922394*^9, 
   3.948287191922566*^9, 3.948985581212717*^9, 3.949437024066092*^9, 
   3.949458034275073*^9, 3.94945816550338*^9, 3.949458554282596*^9},
 CellLabel->
  "Out[601]=",ExpressionUUID->"8b12fcf6-44e0-4397-acb1-9e914c97eb30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"InputField", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "NumAng2", "]"}], ",", "Number"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"NumCheck", "[", 
     RowBox[{"NumAng2", ",", "2"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.755646041374236*^9, 3.755646061198635*^9}, {
  3.755646343564169*^9, 3.755646370273828*^9}, {3.755646670479352*^9, 
  3.755646670653631*^9}, {3.755646954363778*^9, 3.755646959113422*^9}, {
  3.949458146838397*^9, 3.949458183007299*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"133dbb26-4b8c-4253-898b-86b4cc64a364"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InputFieldBox[Dynamic[$CellContext`NumAng2], Number], ",", 
   DynamicBox[ToBoxes[
     $CellContext`NumCheck[$CellContext`NumAng2, 2], StandardForm],
    ImageSizeCache->{7.8, {0.156, 8.45}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7556469392448387`*^9, 3.755646960051754*^9}, 
   3.755647631999276*^9, 3.946877916388879*^9, 3.947491886241166*^9, 
   3.947509764619794*^9, 3.947613365103899*^9, 3.947666614377823*^9, 
   3.948071369232151*^9, 3.948985581220654*^9, 3.949437024129396*^9, 
   3.949458034293499*^9, 3.949458165547078*^9, 3.94945855430474*^9},
 CellLabel->
  "Out[602]=",ExpressionUUID->"fe7e38eb-59d2-461b-8f6e-8fa0fb5047f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"InputField", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "NumAng3", "]"}], ",", "Number"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"NumCheck", "[", 
     RowBox[{"NumAng3", ",", "2"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.755646041374236*^9, 3.755646061198635*^9}, {
  3.755646343564169*^9, 3.755646372665856*^9}, {3.755646674743112*^9, 
  3.755646674909252*^9}, {3.755646956988338*^9, 3.755646962368926*^9}, {
  3.949458150230432*^9, 3.949458185519041*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"9bbbf2ad-b57d-4599-949d-ff221cc0d4f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InputFieldBox[Dynamic[$CellContext`NumAng3], Number], ",", 
   DynamicBox[ToBoxes[
     $CellContext`NumCheck[$CellContext`NumAng3, 2], StandardForm],
    ImageSizeCache->{7.8, {0., 8.294}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.755646061937703*^9, 3.7556460754560003`*^9}, {
   3.7556463519776573`*^9, 3.755646376432942*^9}, 3.75564667539653*^9, 
   3.755646962838485*^9, 3.755647632084656*^9, 3.946877916449917*^9, 
   3.947491886246881*^9, 3.947509764637434*^9, 3.9476133651181107`*^9, 
   3.947666614386112*^9, 3.9480713692385*^9, 3.948985581235386*^9, 
   3.949437024139515*^9, 3.949458034302423*^9, 3.949458165553699*^9, 
   3.949458554311594*^9},
 CellLabel->
  "Out[603]=",ExpressionUUID->"98ead8f7-41bf-40af-90fb-47e790107467"]
}, Open  ]],

Cell["Input the number of triangles to make", "Text",
 CellChangeTimes->{{3.755646278179666*^9, 3.755646286554845*^9}, {
  3.755647041655995*^9, 
  3.755647044738302*^9}},ExpressionUUID->"4103b2b0-c39b-4528-88fd-\
4b7597ff136f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"InputField", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "NumTris", "]"}], ",", "Number"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"NumCheck", "[", 
     RowBox[{"NumTris", ",", "1"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.755646041374236*^9, 3.755646061198635*^9}, {
   3.755646343564169*^9, 3.755646372665856*^9}, {3.755646410717909*^9, 
   3.7556464150419273`*^9}, {3.755646967774632*^9, 3.7556469735368633`*^9}, {
   3.755647617699709*^9, 3.75564762122576*^9}, {3.9494581899020653`*^9, 
   3.94945819978277*^9}, 3.949458310753725*^9},
 CellLabel->
  "In[604]:=",ExpressionUUID->"c012803d-9c1b-46d3-a90d-cd329038f7d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InputFieldBox[Dynamic[$CellContext`NumTris], Number], ",", 
   DynamicBox[ToBoxes[
     $CellContext`NumCheck[$CellContext`NumTris, 1], StandardForm],
    ImageSizeCache->{31.2, {0.156, 8.45}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.755646440370348*^9, 3.75564697402409*^9, 3.755647632161148*^9, 
   3.946877916478457*^9, 3.9474918862564783`*^9, 3.947509764645344*^9, 
   3.9476133651250563`*^9, 3.9476666143961887`*^9, 3.948071369247217*^9, 
   3.9489855812430763`*^9, 3.94943702416125*^9, 3.9494580343220167`*^9, 
   3.949458200345323*^9, {3.949458299833384*^9, 3.949458311306321*^9}, 
   3.949458554333955*^9},
 CellLabel->
  "Out[604]=",ExpressionUUID->"be978b4f-9e37-4321-882d-bd8a8bfd0b3e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Need", " ", "to", " ", "get", " ", "initial", " ", "values", " ", "in", 
   " ", "place"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9494585667996693`*^9, 3.9494585743092327`*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"4c01057a-1ec6-4051-82aa-b7d1430292e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TriTime", ",", "Tris"}], "}"}], " ", "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"MakeTriangles", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NumAng1", ",", "NumAng2", ",", "NumAng3"}], "}"}], ",", 
      "NumTris"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.949458260527685*^9, 3.949458264446848*^9}, {
  3.949458331610667*^9, 3.9494583402879953`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"004ca096-da12-4f74-b732-b1eae358f4b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Make the triangles\>\"", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TriTime", ",", "Tris"}], "}"}], " ", "=", " ", 
    RowBox[{"Timing", "[", 
     RowBox[{"MakeTriangles", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"NumAng1", ",", "NumAng2", ",", "NumAng3"}], "}"}], ",", 
       "NumTris"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.755645449745068*^9, 3.7556454597432117`*^9}, {
   3.755647008067729*^9, 3.755647096345973*^9}, {3.75564714368855*^9, 
   3.7556471920382853`*^9}, {3.755647283518444*^9, 3.755647285965417*^9}, {
   3.755647320213934*^9, 3.7556473214599533`*^9}, 3.755647626442116*^9, {
   3.9494582116712914`*^9, 3.9494582449745083`*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"99d2be7e-8db9-43e1-933e-2e4536084027"],

Cell[BoxData[
 ButtonBox["\<\"Make the triangles\"\>",
  Appearance->Automatic,
  ButtonFunction:>({$CellContext`TriTime, $CellContext`Tris} = Timing[
     $CellContext`MakeTriangles[{$CellContext`NumAng1, $CellContext`NumAng2, \
$CellContext`NumAng3}, $CellContext`NumTris]]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.75564709678491*^9, {3.755647168594576*^9, 3.755647192626327*^9}, 
   3.755647250801997*^9, 3.755647286573295*^9, 3.75564732203203*^9, 
   3.755647632265287*^9, 3.946877916546239*^9, 3.947491886262163*^9, 
   3.947509764664442*^9, 3.9476133651311274`*^9, 3.9476666144043217`*^9, 
   3.94807136925314*^9, 3.9489855812593117`*^9, 3.949437024299512*^9, 
   3.9494580343289022`*^9, {3.949458222273898*^9, 3.94945824564119*^9}, 
   3.949458554999461*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"66c2cb90-9666-42e3-bb38-57b2fa35cbda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"{", 
   RowBox[{"TriTime", ",", 
    RowBox[{"Length", " ", "/@", " ", "Tris"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.755647369043427*^9, 3.755647372836081*^9}, {
  3.755647496979608*^9, 3.755647501203977*^9}, {3.949458249969256*^9, 
  3.949458252535963*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"12441331-76f0-44d5-ad52-61975d3e1852"],

Cell[BoxData[
 DynamicBox[ToBoxes[{$CellContext`TriTime, 
    Map[Length, $CellContext`Tris]}, StandardForm],
  ImageSizeCache->{
   193.44507812499998`, {2.7689999999999997`, 8.45}}]], "Output",
 CellChangeTimes->{3.7556473734229393`*^9, 3.755647421971134*^9, 
  3.755647501878497*^9, 3.755647632364457*^9, 3.946877916875944*^9, 
  3.947491886272455*^9, 3.9475097646726427`*^9, 3.947613365137804*^9, 
  3.94766661441747*^9, 3.948071369280283*^9, 3.948985581270278*^9, 
  3.949437024308139*^9, 3.9494580343438463`*^9, 3.949458253832735*^9, 
  3.9494585550181417`*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"399f6516-0db2-4631-96ee-d2821440c0be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DisplayTriangles", "[", 
    RowBox[{"Tris", ",", "proj", ",", "tclr"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"proj", ",", "\"\<Conformal\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<3D\>\"", ",", "\"\<Gnomonic\>\"", ",", "\"\<Conformal\>\"", ",", 
       "\"\<Equal-Area\>\""}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tclr", ",", "ParTriColored"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "TriColored", ",", "ParTriColored", ",", "Bdries12", ",", "Bdries13", 
       ",", "Bdries23"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.949458273167576*^9, 3.94945827403865*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"f332c061-844b-4e56-9cbf-501018bd84ea"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`proj$$ = 
    "Conformal", $CellContext`tclr$$ = $CellContext`ParTriColored, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`proj$$], "Conformal"}, {
      "3D", "Gnomonic", "Conformal", "Equal-Area"}, ControlType -> 
      SetterBar}, {{
       Hold[$CellContext`tclr$$], $CellContext`ParTriColored}, \
{$CellContext`TriColored, $CellContext`ParTriColored, $CellContext`Bdries12, \
$CellContext`Bdries13, $CellContext`Bdries23}, ControlType -> SetterBar}}, 
    Typeset`size$$ = {360., {175.04380592991362`, 180.77573952366362`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`proj$$ = 
        "Conformal", $CellContext`tclr$$ = $CellContext`ParTriColored}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> $CellContext`DisplayTriangles[$CellContext`Tris, \
$CellContext`proj$$, $CellContext`tclr$$], 
      "Specifications" :> {{{$CellContext`proj$$, "Conformal"}, {
         "3D", "Gnomonic", "Conformal", 
          "Equal-Area"}}, {{$CellContext`tclr$$, $CellContext`ParTriColored}, \
{$CellContext`TriColored, $CellContext`ParTriColored, $CellContext`Bdries12, \
$CellContext`Bdries13, $CellContext`Bdries23}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403.1, {229.1138407199527, 234.8457743137027}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.755645377869269*^9, 3.755645464902541*^9, 
  3.7556476324482727`*^9, 3.946877917984006*^9, 3.947491886334077*^9, 
  3.947509764716558*^9, 3.94761336525878*^9, 3.947666614482942*^9, 
  3.948071369334694*^9, 3.948287215078514*^9, 3.948985581575039*^9, 
  3.949437025941434*^9, 3.949458034398303*^9, 3.949458276997963*^9, 
  3.949458555041103*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"fd89cf13-ffb3-4daf-924b-962bb5c3a1df"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Projections of Shapes", "Section",
 CellChangeTimes->{{3.9482173456313667`*^9, 
  3.9482173503367777`*^9}},ExpressionUUID->"deff3091-b3f7-43df-94ac-\
6ef5c4ed37fc"],

Cell[CellGroupData[{

Cell["Projections", "Subsection",
 CellChangeTimes->{{3.948222939822835*^9, 
  3.948222941450692*^9}},ExpressionUUID->"4ec770c5-42c9-49fe-a86a-\
de3a452fd5cd"],

Cell["\<\
EA: Equal area
Ortho: orthographic, like viewing from a distance
Stereo: stereographic: conformal (equal angles, shapes)
Gnom: gnomonic: geodesic -> geodesic
A geodesic generalizes the straight line in flat space; it\[CloseCurlyQuote]s \
the shortest distance between two points.

These projections work for all the spaces here, and for flat space, add 1 to \
the two components.\
\>", "Text",
 CellChangeTimes->{{3.948223118193818*^9, 3.948223203249158*^9}, {
  3.9482245021540737`*^9, 
  3.94822452943608*^9}},ExpressionUUID->"893e9983-eaa5-4dab-b6d2-\
81cd2d7d4863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProjDenom", "[", 
   RowBox[{"\"\<EA\>\"", ",", "z_"}], "]"}], "  ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9482229954435472`*^9, 3.948223004722086*^9}, {
  3.948223039122958*^9, 3.948223042711173*^9}},
 CellLabel->
  "In[1221]:=",ExpressionUUID->"a2316d12-f5cd-4dce-a454-6bdf4843d909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProjDenom", "[", 
   RowBox[{"\"\<Ortho\>\"", ",", "z_"}], "]"}], " ", ":=", " ", 
  "1"}]], "Input",
 CellChangeTimes->{{3.9482230609451313`*^9, 3.9482230925114107`*^9}},
 CellLabel->
  "In[1222]:=",ExpressionUUID->"1ab615dd-ff48-4de8-a9d5-e81a821a960a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProjDenom", "[", 
   RowBox[{"\"\<Stereo\>\"", ",", "z_"}], "]"}], " ", ":=", " ", 
  RowBox[{"1", "+", "z"}]}]], "Input",
 CellChangeTimes->{{3.9482230820253763`*^9, 3.948223107449551*^9}, {
  3.9482232161606607`*^9, 3.948223217918272*^9}},
 CellLabel->
  "In[1223]:=",ExpressionUUID->"98fbcc23-2502-4b54-9956-fab22e4c0abb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProjDenom", "[", 
   RowBox[{"\"\<Gnom\>\"", ",", "z_"}], "]"}], " ", ":=", " ", "z"}]], "Input",\

 CellChangeTimes->{{3.948223220401918*^9, 3.948223227512313*^9}},
 CellLabel->
  "In[1224]:=",ExpressionUUID->"52ceacfa-7234-4f3a-afc1-d358816b6f65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Proj", "[", 
   RowBox[{"type_", ",", "vec_List"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Most", "[", "vec", "]"}], "/", 
   RowBox[{"ProjDenom", "[", 
    RowBox[{"type", ",", 
     RowBox[{"Last", "[", "vec", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.94821767870395*^9, 3.9482176814400682`*^9}, {
  3.948222929946487*^9, 3.948223033418125*^9}},
 CellLabel->
  "In[1225]:=",ExpressionUUID->"1ec5ef97-4e2a-4474-adf1-e4dac07b9aff"]
}, Closed]],

Cell[CellGroupData[{

Cell["Inner Product and Magnitude", "Subsection",
 CellChangeTimes->{{3.9482235101510563`*^9, 3.948223512518899*^9}, {
  3.9482244874220753`*^9, 
  3.9482244903854303`*^9}},ExpressionUUID->"07650d1a-4700-427b-9583-\
ffb2bdea8975"],

Cell["\<\
The inner product is good for finding angles between two geodesics, and the \
magnitude is for spherical and hyperbolic spaces; it ought to be 1.\
\>", "Text",
 CellChangeTimes->{{3.948223519213684*^9, 3.948223551358563*^9}, {
  3.948224494906991*^9, 3.948224497794929*^9}, {3.948224565867969*^9, 
  3.948224584205153*^9}},ExpressionUUID->"fe1b7cf3-9acf-43e1-8dc2-\
5a9f22d0ef3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InnProdSph", "[", 
   RowBox[{"x_List", ",", "y_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"x", ".", "y"}]}]], "Input",
 CellChangeTimes->{{3.948224585991729*^9, 3.948224626799012*^9}},
 CellLabel->
  "In[1226]:=",ExpressionUUID->"e7a15083-507c-4608-9fbb-351c8e885aa6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagSph", "[", "x_List", "]"}], " ", ":=", " ", 
  RowBox[{"InnProdSph", "[", 
   RowBox[{"x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948224596124104*^9, 3.948224628162406*^9}},
 CellLabel->
  "In[1227]:=",ExpressionUUID->"f5b0a1d7-ea0a-4aac-9dde-0bde6c43bb64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InnProdFlat", "[", 
   RowBox[{"x_List", ",", "y_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"x", ".", "y"}]}]], "Input",
 CellChangeTimes->{{3.948225261388996*^9, 3.948225289595544*^9}},
 CellLabel->
  "In[1228]:=",ExpressionUUID->"75f2e895-f55a-4aee-801c-db4fd3de26b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagFlat", "[", "x_List", "]"}], " ", ":=", " ", 
  RowBox[{"InnProdFlat", "[", 
   RowBox[{"x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9482252749801207`*^9, 3.948225283283201*^9}},
 CellLabel->
  "In[1229]:=",ExpressionUUID->"bc1e2d58-79fc-4392-9f7b-765c26f9327f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InnProdHyp", "[", 
   RowBox[{"x_List", ",", "y_List"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Last", "[", "x", "]"}], "*", 
    RowBox[{"Last", "[", "y", "]"}]}], " ", "-", " ", 
   RowBox[{"InnProdSph", "[", 
    RowBox[{
     RowBox[{"Most", "[", "x", "]"}], ",", 
     RowBox[{"Most", "[", "y", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.948224606201333*^9, 3.948224663069644*^9}},
 CellLabel->
  "In[1230]:=",ExpressionUUID->"27b55407-5883-4c02-9153-95dcf6eac9fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagHyp", "[", "x_List", "]"}], " ", ":=", " ", 
  RowBox[{"InnProdHyp", "[", 
   RowBox[{"x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.948224596124104*^9, 3.948224654119145*^9}},
 CellLabel->
  "In[1231]:=",ExpressionUUID->"649ad060-8688-45b0-88ef-bdb4a863ebe4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line", "Subsection",
 CellChangeTimes->{{3.94822335864815*^9, 
  3.948223359056072*^9}},ExpressionUUID->"cef08d15-1e01-4d0b-a96f-\
524c2dcee349"],

Cell["\<\
Or more generally, geodesic.
Offset from center (impact parameter): b
Distance along line: s\
\>", "Text",
 CellChangeTimes->{{3.948223368126521*^9, 3.948223373551919*^9}, {
  3.948224721006925*^9, 
  3.948224749296091*^9}},ExpressionUUID->"8322701c-c866-4c0a-bf96-\
bb5c445159fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GeodSph", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "b", "]"}], "*", 
      RowBox[{"Cos", "[", "s", "]"}]}], ",", 
     RowBox[{"Sin", "[", "s", "]"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "b", "]"}], "*", 
      RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"MagSph", "[", "GeodSph", "]"}], " ", "//", " ", 
   "TrigReduce"}]}]], "Input",
 CellChangeTimes->{{3.94822338938622*^9, 3.948223453109392*^9}, {
  3.9482247522481327`*^9, 3.948224759311399*^9}, {3.948229766501245*^9, 
  3.948229766740398*^9}},
 CellLabel->
  "In[1232]:=",ExpressionUUID->"3a8d9789-123d-4502-b90f-d0b9660556e9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.948229767202301*^9, 3.948229772572653*^9}, 
   3.948985581654418*^9},
 CellLabel->
  "Out[1232]=",ExpressionUUID->"071e5f5f-0afe-49a7-8cc7-491026cece76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MagSph", "[", 
   RowBox[{"D", "[", 
    RowBox[{"GeodSph", ",", "s"}], "]"}], "]"}], " ", "//", " ", 
  "TrigReduce"}]], "Input",
 CellChangeTimes->{{3.9482247715754423`*^9, 3.948224798264122*^9}},
 CellLabel->
  "In[1233]:=",ExpressionUUID->"92c23448-e23e-475e-9993-72ad2b29a8b7"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9482247819307117`*^9, 3.948224798871731*^9}, 
   3.948985581701366*^9},
 CellLabel->
  "Out[1233]=",ExpressionUUID->"c12b68f8-7a77-4c0e-9e05-96aaa5f15af9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Proj", "[", 
  RowBox[{"\"\<Gnom\>\"", ",", "GeodSph"}], "]"}]], "Input",
 CellChangeTimes->{{3.9482234588700943`*^9, 3.9482234702624683`*^9}, 
   3.948224701384128*^9},
 CellLabel->
  "In[1234]:=",ExpressionUUID->"28b70597-03eb-4557-b434-6d78693d1939"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Tan", "[", "b", "]"}], ",", 
   RowBox[{
    RowBox[{"Sec", "[", "b", "]"}], " ", 
    RowBox[{"Tan", "[", "s", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.948224707395315*^9, 3.948224808321594*^9, 
  3.948985581708005*^9},
 CellLabel->
  "Out[1234]=",ExpressionUUID->"af5cc8f9-a8f0-4df8-b05d-c2e0ef1ccaba"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Obviously", " ", "a", " ", "line"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.948224815898355*^9, 3.948224821104354*^9}},
 CellLabel->
  "In[1235]:=",ExpressionUUID->"d0e48392-c7b9-4329-a0df-e36fe5d37446"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GeodHyp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", "b", "]"}], "*", 
      RowBox[{"Cosh", "[", "s", "]"}]}], ",", 
     RowBox[{"Sinh", "[", "s", "]"}], ",", 
     RowBox[{
      RowBox[{"Cosh", "[", "b", "]"}], "*", 
      RowBox[{"Cosh", "[", "s", "]"}]}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MagFlat", "[", 
      RowBox[{
       RowBox[{"Proj", "[", 
        RowBox[{"\"\<Stereo\>\"", ",", "GeodSph"}], "]"}], " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cot", "[", "b", "]"}]}], ",", "0"}], "}"}]}], "]"}], " ", 
     "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Csc", "[", "b", "]"}], ")"}], "^", "2"}]}], " ", "//", " ", 
    "TrigToExp"}], " ", "//", " ", "Factor"}]}]], "Input",
 CellChangeTimes->{{3.948224822529845*^9, 3.948224850194729*^9}, {
  3.9482297926572104`*^9, 3.948229793004775*^9}},
 CellLabel->
  "In[1236]:=",ExpressionUUID->"4e1c5ac5-3687-470d-92be-0281922be0d6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.948229793394424*^9, 3.9489855817275467`*^9},
 CellLabel->
  "Out[1236]=",ExpressionUUID->"f03ef855-8496-4d09-ae09-24daefa3da55"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"An", " ", "offset", " ", "circle"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.94822532998247*^9, 3.948225338700572*^9}},
 CellLabel->
  "In[1237]:=",ExpressionUUID->"30612ca4-59fb-43a7-ad3f-8c968847e4a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MagHyp", "[", "GeodHyp", "]"}], " ", "//", " ", 
  "TrigReduce"}]], "Input",
 CellChangeTimes->{{3.948224679557993*^9, 3.948224685725718*^9}, {
  3.948224859017043*^9, 3.9482248671710253`*^9}},
 CellLabel->
  "In[1238]:=",ExpressionUUID->"fb0a6e9d-33f1-4b84-a4af-22174a665f58"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9482246864016447`*^9, 3.948224791766567*^9, 
  3.948224875360227*^9, 3.94898558174682*^9},
 CellLabel->
  "Out[1238]=",ExpressionUUID->"6d8facd3-993c-48f2-b29d-42e30a6e02c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MagHyp", "[", 
   RowBox[{"D", "[", 
    RowBox[{"GeodHyp", ",", "s"}], "]"}], "]"}], " ", "//", " ", 
  "TrigReduce"}]], "Input",
 CellChangeTimes->{{3.9482247715754423`*^9, 3.948224798264122*^9}, {
  3.94822486883543*^9, 3.948224871266192*^9}},
 CellLabel->
  "In[1239]:=",ExpressionUUID->"fb43d69e-4e5d-4392-9175-0df52d507131"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.9482247819307117`*^9, 3.948224798871731*^9}, 
   3.948224875463007*^9, 3.948985581760619*^9},
 CellLabel->
  "Out[1239]=",ExpressionUUID->"b9accd57-d9c4-4017-aeaa-9ece389c3a0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Proj", "[", 
  RowBox[{"\"\<Gnom\>\"", ",", "GeodHyp"}], "]"}]], "Input",
 CellChangeTimes->{{3.948224890225524*^9, 3.948224891649618*^9}},
 CellLabel->
  "In[1240]:=",ExpressionUUID->"535a76cd-4957-4f7e-a005-6a0f0ba1853f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Tanh", "[", "b", "]"}], ",", 
   RowBox[{
    RowBox[{"Sech", "[", "b", "]"}], " ", 
    RowBox[{"Tanh", "[", "s", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.948224892713416*^9, 3.948985581768927*^9},
 CellLabel->
  "Out[1240]=",ExpressionUUID->"1e1efb1b-02ae-457e-8710-5d4568b1d22a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Also", " ", "obviously", " ", "a", " ", "line"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.948224895731853*^9, 3.948224900553648*^9}},
 CellLabel->
  "In[1241]:=",ExpressionUUID->"efe2d682-2f0e-4ff4-8c49-59b80db5af6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MagFlat", "[", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"\"\<Stereo\>\"", ",", "GeodHyp"}], "]"}], " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Coth", "[", "b", "]"}], ",", "0"}], "}"}]}], "]"}], " ", "-",
     " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Csch", "[", "b", "]"}], ")"}], "^", "2"}]}], " ", "//", 
   "TrigToExp"}], " ", "//", " ", "Factor"}]], "Input",
 CellChangeTimes->{{3.9482253689515038`*^9, 3.948225420407791*^9}, {
  3.9482254991704063`*^9, 3.9482255209701853`*^9}},
 CellLabel->
  "In[1242]:=",ExpressionUUID->"e9e214e2-2e04-40e4-b5ad-c453465cf9a5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.948225380707754*^9, 3.9482254214380407`*^9}, 
   3.9482254745822287`*^9, 3.9482255216746607`*^9, 3.9489855817897577`*^9},
 CellLabel->
  "Out[1242]=",ExpressionUUID->"b255811b-26f8-4864-bb84-e0fb7fddde84"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Also", " ", "an", " ", "offset", " ", "circle"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.948225535189177*^9, 3.9482255395628853`*^9}},
 CellLabel->
  "In[1243]:=",ExpressionUUID->"4b935688-a135-4429-8c6e-071885bdd5d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Circle", "Subsection",
 CellChangeTimes->{{3.9482264553708467`*^9, 
  3.948226456362266*^9}},ExpressionUUID->"4fd11c1b-48a6-44ca-afba-\
eb8d2fdcf9bd"],

Cell["\<\
Radius of circle: r
Angle from positive first coordinate: a
Tilt angle: t\
\>", "Text",
 CellChangeTimes->{{3.948229635671857*^9, 
  3.948229663010091*^9}},ExpressionUUID->"c07c1427-d47e-4231-8078-\
740fdd9b868e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CircSph", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "r", "]"}], "*", 
      RowBox[{"Cos", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "r", "]"}], "*", 
      RowBox[{"Sin", "[", "a", "]"}]}], ",", 
     RowBox[{"Cos", "[", "r", "]"}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"MagSph", "[", "CircSph", "]"}], " ", "//", " ", 
   "TrigReduce"}]}]], "Input",
 CellChangeTimes->{{3.948226468836293*^9, 3.948226498938993*^9}, {
  3.9482297556171227`*^9, 3.9482297559240828`*^9}},
 CellLabel->
  "In[1244]:=",ExpressionUUID->"b2e068af-e3b3-4e58-a889-65093aab07c1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.948229756669119*^9, 3.94898558180897*^9},
 CellLabel->
  "Out[1244]=",ExpressionUUID->"7c80e349-eba9-45f5-bb22-25870bea5ef3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CircTiltSph", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
        RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], "}"}], ".", "CircSph"}]}], 
  ";", " ", 
  RowBox[{
   RowBox[{"MagSph", "[", "CircTiltSph", "]"}], " ", "//", " ", 
   "TrigReduce"}]}]], "Input",
 CellChangeTimes->{{3.948226503783149*^9, 3.948226548031108*^9}, {
  3.9482297358538647`*^9, 3.9482297369221783`*^9}, {3.948229821068104*^9, 
  3.94822982166943*^9}},
 CellLabel->
  "In[1245]:=",ExpressionUUID->"63d55d32-bc50-4929-a5d1-7f26d7576b15"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.948229822311922*^9, 3.9482298932651777`*^9, 
  3.948985581815267*^9},
 CellLabel->
  "Out[1245]=",ExpressionUUID->"75f86730-af3c-410e-833e-498b6487c857"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9482265430553617`*^9, 3.9482265562115173`*^9}, 
   3.948229741119301*^9, 3.9482298200895844`*^9},
 CellLabel->
  "In[1246]:=",ExpressionUUID->"1ad0b352-16fa-4193-bf28-2499f083f759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MagFlat", "[", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"\"\<Stereo\>\"", ",", "CircTiltSph"}], "]"}], " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "t", "]"}]}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "r", "]"}], "+", 
           RowBox[{"Cos", "[", "t", "]"}]}], ")"}]}], ",", "0"}], "}"}]}], 
     "]"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "r", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], "+", 
         RowBox[{"Cos", "[", "t", "]"}]}], ")"}]}], ")"}], "^", "2"}]}], " ", 
   "//", " ", "TrigToExp"}], " ", "//", " ", "Factor"}]], "Input",
 CellChangeTimes->{{3.9482265723255796`*^9, 3.948226593846352*^9}, {
   3.948228684303528*^9, 3.948228689900811*^9}, {3.948229081905306*^9, 
   3.94822909888481*^9}, 3.9482297469175663`*^9},
 CellLabel->
  "In[1247]:=",ExpressionUUID->"8b1d51c3-0f19-4ac8-a000-32202146d70e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.948226595156839*^9, {3.94822870668958*^9, 3.948228735388636*^9}, {
   3.948229091720202*^9, 3.948229099352056*^9}, 3.948229747513371*^9, 
   3.9482298933350077`*^9, 3.9489855818398657`*^9},
 CellLabel->
  "Out[1247]=",ExpressionUUID->"b3e75d2f-24ef-40df-8767-7255decc7a4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CircHyp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", "r", "]"}], "*", 
      RowBox[{"Cos", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sinh", "[", "r", "]"}], "*", 
      RowBox[{"Sin", "[", "a", "]"}]}], ",", 
     RowBox[{"Cosh", "[", "r", "]"}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"MagHyp", "[", "CircHyp", "]"}], " ", "//", " ", 
   "TrigReduce"}]}]], "Input",
 CellChangeTimes->{{3.948226468836293*^9, 3.948226498938993*^9}, {
  3.948229611761736*^9, 3.948229621305561*^9}, {3.9482298306202497`*^9, 
  3.9482298309012327`*^9}},
 CellLabel->
  "In[1248]:=",ExpressionUUID->"70b30287-63ea-4779-9ca0-3fbc776a6881"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.948229831346477*^9, 3.948229893344974*^9, 
  3.948985581846336*^9},
 CellLabel->
  "Out[1248]=",ExpressionUUID->"876c698f-3f3d-4c92-ab42-1212def6c64f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CircTiltHyp", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cosh", "[", "t", "]"}], ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Sinh", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sinh", "[", "t", "]"}]}], ",", "0", ",", 
        RowBox[{"Cosh", "[", "t", "]"}]}], "}"}]}], "}"}], ".", "CircHyp"}]}],
   ";", " ", 
  RowBox[{
   RowBox[{"MagHyp", "[", "CircTiltHyp", "]"}], " ", "//", " ", 
   "TrigReduce"}]}]], "Input",
 CellChangeTimes->{{3.948226503783149*^9, 3.948226548031108*^9}, {
  3.9482297358538647`*^9, 3.9482297369221783`*^9}, {3.948229821068104*^9, 
  3.94822982166943*^9}, {3.948229853884354*^9, 3.9482298858922873`*^9}},
 CellLabel->
  "In[1249]:=",ExpressionUUID->"6d6cb86f-64de-4a1b-9989-d4a84a2ed3f6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.948229822311922*^9, {3.948229879331657*^9, 3.94822989336535*^9}, 
   3.948985581861309*^9},
 CellLabel->
  "Out[1249]=",ExpressionUUID->"a7cd3235-e4ae-4c43-8b5a-e822d3ca5db7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MagFlat", "[", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"\"\<Stereo\>\"", ",", "CircTiltHyp"}], "]"}], " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sinh", "[", "t", "]"}]}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cosh", "[", "r", "]"}], "+", 
           RowBox[{"Cosh", "[", "t", "]"}]}], ")"}]}], ",", "0"}], "}"}]}], 
     "]"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sinh", "[", "r", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cosh", "[", "r", "]"}], "+", 
         RowBox[{"Cosh", "[", "t", "]"}]}], ")"}]}], ")"}], "^", "2"}]}], " ",
    "//", " ", "TrigToExp"}], " ", "//", " ", "Factor"}]], "Input",
 CellChangeTimes->{{3.9482265723255796`*^9, 3.948226593846352*^9}, {
  3.948228684303528*^9, 3.948228689900811*^9}, {3.948229081905306*^9, 
  3.94822909888481*^9}, {3.948229842566094*^9, 3.948229849748057*^9}, {
  3.9482299054385767`*^9, 3.9482299202846203`*^9}},
 CellLabel->
  "In[1250]:=",ExpressionUUID->"5d7f9326-ef2b-4f27-bf8a-07246437c994"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9482299072964582`*^9, 3.948229921007921*^9}, 
   3.9489855818761168`*^9},
 CellLabel->
  "Out[1250]=",ExpressionUUID->"bb154981-bf97-4d49-b2b4-101579e88a4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"CircTiltHyp", " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t", "->", 
           RowBox[{"r", "+", 
            RowBox[{"e", "*", "b"}]}]}], ",", 
          RowBox[{"a", "->", 
           RowBox[{"e", "*", "a"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "e"}], "]"}], 
   " ", "/.", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "r", "]"}], "^", "2"}], "->", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"Sinh", "[", "r", "]"}], "^", "2"}]}]}]}], " ", "//", " ", 
  "Factor"}]], "Input",
 CellChangeTimes->{{3.948230294450758*^9, 3.948230361144844*^9}},
 CellLabel->
  "In[1251]:=",ExpressionUUID->"ae0fea2f-cef7-4d8c-a3ff-59d984c61841"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"Cosh", "[", "r", "]"}], " ", 
      RowBox[{"Sinh", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"a", " ", 
      RowBox[{"Sinh", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["b", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sinh", "[", "r", "]"}], "2"]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.948230314236779*^9, 3.948230361555324*^9}, 
   3.948985582270194*^9},
 CellLabel->
  "Out[1251]=",ExpressionUUID->"4b29dc81-a390-451d-b064-81850c42f206"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"TrigExpand", "[", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"Series", "[", 
          RowBox[{"CircTiltHyp", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}], " ", "/.",
         " ", 
        RowBox[{"t", "->", 
         RowBox[{"r", "+", "b"}]}]}], "]"}], " ", "/.", " ", 
      RowBox[{"a", "->", 
       RowBox[{"ax", "*", 
        RowBox[{"Sech", "[", "r", "]"}]}]}]}], "]"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sech", "[", "r", "]"}], "^", "2"}], "->", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Tanh", "[", "r", "]"}], "^", "2"}]}]}]}], "]"}], " ", "/.", 
  " ", 
  RowBox[{
   RowBox[{"Tanh", "[", "r", "]"}], "->", "1"}]}]], "Input",
 CellChangeTimes->{{3.9482309131870537`*^9, 3.948231016710054*^9}, {
  3.9482311075315027`*^9, 3.948231138280582*^9}, {3.948231482009701*^9, 
  3.9482315059035378`*^9}, {3.948231665876636*^9, 3.948231690998382*^9}, {
  3.948231721514192*^9, 3.9482317596109753`*^9}},
 CellLabel->
  "In[1252]:=",ExpressionUUID->"08a13e20-4bf5-4bcb-b1da-cf480627c556"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["ax", "2"], " ", 
     RowBox[{"Cosh", "[", "b", "]"}]}], "-", 
    RowBox[{"Sinh", "[", "b", "]"}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["ax", "2"], " ", 
     RowBox[{"Sinh", "[", "b", "]"}]}]}], ",", "ax", ",", 
   RowBox[{
    RowBox[{"Cosh", "[", "b", "]"}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["ax", "2"], " ", 
     RowBox[{"Cosh", "[", "b", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["ax", "2"], " ", 
     RowBox[{"Sinh", "[", "b", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.948230925094655*^9, 3.948231021154252*^9}, {
   3.9482311124968863`*^9, 3.948231141475128*^9}, {3.948231477094049*^9, 
   3.948231506570312*^9}, {3.9482316105227823`*^9, 3.9482316297455883`*^9}, {
   3.948231669304989*^9, 3.94823169245785*^9}, {3.948231732592382*^9, 
   3.948231760123827*^9}, 3.948985582403455*^9},
 CellLabel->
  "Out[1252]=",ExpressionUUID->"80e1d635-bb57-43fa-928c-3e1838513dcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InfCirc", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sinh", "[", "b", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"ax", "^", "2"}], "*", 
       RowBox[{
        RowBox[{"Exp", "[", "b", "]"}], "/", "2"}]}]}], ",", "ax", ",", 
     RowBox[{
      RowBox[{"Cosh", "[", "b", "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"ax", "^", "2"}], "*", 
       RowBox[{
        RowBox[{"Exp", "[", "b", "]"}], "/", "2"}]}]}]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"MagHyp", "[", "InfCirc", "]"}], " ", "//", " ", "TrigToExp"}], 
   " ", "//", " ", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.948231278212965*^9, 3.948231396165399*^9}, 
   3.948231459608005*^9, {3.948231773852806*^9, 3.948231789073083*^9}, {
   3.948232198794901*^9, 3.948232207825102*^9}},
 CellLabel->
  "In[1253]:=",ExpressionUUID->"d0a7ceea-b1ea-4984-b2a8-62af592945dc"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.948231396634615*^9, 3.9482314263993053`*^9}, 
   3.94823146038017*^9, 3.948231814422233*^9, 3.9482322087536087`*^9, 
   3.948985582410226*^9},
 CellLabel->
  "Out[1253]=",ExpressionUUID->"792d22cb-6b18-40e6-bc26-bf809ca5b3c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MagFlat", "[", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"\"\<Stereo\>\"", ",", "InfCirc"}], "]"}], " ", "-", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", "b", "]"}]}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", "b", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
       "}"}]}], "]"}], "-", " ", 
    RowBox[{"1", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "b", "]"}], "+", "1"}], ")"}], "^", "2"}]}]}], 
   " ", "//", "TrigToExp"}], " ", "//", " ", "Factor"}]], "Input",
 CellChangeTimes->{{3.948231975257082*^9, 3.948231986865149*^9}, {
  3.948232034635993*^9, 3.948232107629846*^9}, {3.948232277337901*^9, 
  3.948232281850936*^9}, {3.9482323224371223`*^9, 3.948232333675066*^9}},
 CellLabel->
  "In[1254]:=",ExpressionUUID->"b89e831d-67a3-4b2f-807a-92a368de6e29"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.948231987795315*^9, {3.948232061588978*^9, 3.948232108271578*^9}, 
   3.9482322825910273`*^9, {3.948232327670145*^9, 3.948232334126326*^9}, 
   3.9489855824596987`*^9},
 CellLabel->
  "Out[1254]=",ExpressionUUID->"062d5bc7-7a27-4dba-bc31-fee779d437bf"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
},
WindowSize->{828, 812},
WindowMargins->{{Automatic, 21}, {Automatic, 2}},
ShowSelection->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"82bd79f0-ad05-4174-9f5d-18e422e14e00"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 169, 3, 67, "Chapter",ExpressionUUID->"aa79dcd9-682e-4381-aea5-f7752404ddad"],
Cell[CellGroupData[{
Cell[761, 29, 159, 3, 66, "Section",ExpressionUUID->"c22cc96f-e5c4-44cb-ae25-02bd82464cc5"],
Cell[923, 34, 4880, 72, 929, "Text",ExpressionUUID->"cd457a11-2513-4ff0-b757-0dac4865b542"],
Cell[5806, 108, 290, 7, 49, "Input",ExpressionUUID->"582970e1-a070-4ad2-9d63-0ee00e1be91d"],
Cell[CellGroupData[{
Cell[6121, 119, 165, 3, 53, "Subsection",ExpressionUUID->"c797c96f-75d6-4276-aa45-27228eee7267"],
Cell[6289, 124, 7382, 106, 2809, "Text",ExpressionUUID->"1439e98f-50a4-4348-a03e-2cfa82ad1263"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[13720, 236, 210, 4, 52, "Section",ExpressionUUID->"7eb9ed6d-fb68-4698-b505-4e2ec6bb4d23"],
Cell[13933, 242, 733, 18, 29, "Input",ExpressionUUID->"8952aafe-b52e-488f-b57c-2eb866d2be9b"],
Cell[14669, 262, 652, 18, 29, "Input",ExpressionUUID->"37e5cef7-f9ba-4e09-b125-e3cb38c0f4f8"],
Cell[15324, 282, 907, 21, 29, "Input",ExpressionUUID->"1e7b6e7c-0643-46e3-93e1-5bfa18e67163"],
Cell[16234, 305, 873, 27, 49, "Input",ExpressionUUID->"b2b6bade-280b-4fdd-82ba-2777d1026211"],
Cell[17110, 334, 1117, 31, 49, "Input",ExpressionUUID->"bb2ad0ed-2143-4289-8780-66ddf006be43"],
Cell[18230, 367, 490, 10, 49, "Input",ExpressionUUID->"bc2a2eaa-167e-4145-9895-402edaffe9a6"],
Cell[18723, 379, 565, 17, 29, "Input",ExpressionUUID->"d45cb963-35b1-4f49-9f43-cf9814da33b0"],
Cell[19291, 398, 617, 15, 70, "Input",ExpressionUUID->"3f513acf-aa92-4cb7-89ba-992eb08c016d"],
Cell[19911, 415, 2404, 63, 172, "Input",ExpressionUUID->"21a1a36c-3aeb-4b22-8be1-66b2e3f10b99"],
Cell[22318, 480, 439, 11, 29, "Input",ExpressionUUID->"1230e7a1-a812-424c-a7dd-9c562cfd4600"],
Cell[22760, 493, 320, 7, 29, "Input",ExpressionUUID->"8479a775-296d-422e-a3a9-c47909d17702"],
Cell[23083, 502, 580, 15, 29, "Input",ExpressionUUID->"6ea0005a-0a36-4c96-b45b-f42dcb0f8b92"],
Cell[23666, 519, 412, 10, 29, "Input",ExpressionUUID->"00fdadf1-4ddf-4819-95fb-871957a169f5"],
Cell[24081, 531, 2375, 53, 254, "Input",ExpressionUUID->"7c260cb9-e43f-4c59-b4cc-b7b69668b02b"],
Cell[26459, 586, 928, 27, 49, "Input",ExpressionUUID->"474c3bb9-975e-49c9-903f-0d7ab3861d32"],
Cell[27390, 615, 654, 17, 29, "Input",ExpressionUUID->"8820b2bc-f169-46f5-9a2c-cad31db31259"],
Cell[28047, 634, 2682, 61, 294, "Input",ExpressionUUID->"ae56a541-90f8-4586-935e-76a6559e4fa2"],
Cell[30732, 697, 2712, 61, 294, "Input",ExpressionUUID->"51c1484a-ea64-478a-be5c-c56e69685de9"],
Cell[33447, 760, 2894, 66, 315, "Input",ExpressionUUID->"ccb74919-2412-41dc-a761-8153416c6ce7"],
Cell[36344, 828, 452, 9, 29, "Input",ExpressionUUID->"901200ea-2d63-4fe1-af66-d1a520e91300"],
Cell[36799, 839, 358, 8, 29, "Input",ExpressionUUID->"dde8bb83-0cd9-4512-a857-e73a5997669b"]
}, Closed]],
Cell[CellGroupData[{
Cell[37194, 852, 161, 3, 52, "Section",ExpressionUUID->"995fb416-d3af-4dba-873b-057a5d84c045"],
Cell[37358, 857, 305, 7, 29, "Input",ExpressionUUID->"0bffc234-ac39-484b-a2b6-791ccdb9d29e"],
Cell[37666, 866, 439, 12, 29, "Input",ExpressionUUID->"d91f3b6e-0ff4-4f0e-bb20-48820b30da86"],
Cell[38108, 880, 344, 7, 29, "Input",ExpressionUUID->"6f4f18cd-5bde-47f4-af23-1b5a1876f135"],
Cell[38455, 889, 4612, 100, 254, "Input",ExpressionUUID->"a533921e-b448-4e96-a3a3-8e00a8165087"],
Cell[43070, 991, 3665, 76, 233, "Input",ExpressionUUID->"5630b1d7-62e9-4939-af95-e389cb38b332"],
Cell[46738, 1069, 1562, 40, 90, "Input",ExpressionUUID->"608ab740-16b8-4da5-bdaa-f7001c4207ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[48337, 1114, 166, 3, 52, "Section",ExpressionUUID->"2686f036-a6bd-49c7-9bf7-e6693ab4509f"],
Cell[48506, 1119, 6771, 135, 294, "Input",ExpressionUUID->"f63ea44d-7fd5-4c65-973f-9c6b6a0337dc"],
Cell[55280, 1256, 3926, 96, 356, "Input",ExpressionUUID->"ece97b47-0ee4-4bb2-88f9-b7f1baefff52"],
Cell[59209, 1354, 2938, 60, 192, "Input",ExpressionUUID->"e7234988-785d-432d-a91c-3e2ac3aa0329"],
Cell[62150, 1416, 1284, 35, 70, "Input",ExpressionUUID->"aa950238-3c20-47a5-800c-5b21ab7d2b4e"]
}, Closed]],
Cell[CellGroupData[{
Cell[63471, 1456, 163, 3, 52, "Section",ExpressionUUID->"5a5e7db0-e992-4e1f-bfbd-625cea613e0b"],
Cell[63637, 1461, 3708, 102, 254, "Input",ExpressionUUID->"8a202b20-69ba-4371-b01d-9c4ed062a085"],
Cell[67348, 1565, 4255, 118, 274, "Input",ExpressionUUID->"ea76cb04-954d-4e36-bbe3-23bafd818df2"],
Cell[71606, 1685, 1419, 37, 90, "Input",ExpressionUUID->"1fa42332-dd83-4ddc-aa67-01a042c6f520"]
}, Closed]],
Cell[CellGroupData[{
Cell[73062, 1727, 166, 3, 52, "Section",ExpressionUUID->"9ffdcfe6-b72d-4c6d-9612-b2baa25ef468"],
Cell[73231, 1732, 1333, 34, 151, "Input",ExpressionUUID->"03cb64ae-b456-4742-861c-fa496d899a4b"],
Cell[74567, 1768, 23205, 503, 682, "Input",ExpressionUUID->"71fd7340-684e-4dbb-881b-b1f51fb9f261"],
Cell[97775, 2273, 31335, 682, 907, "Input",ExpressionUUID->"258c42cb-1ce1-4350-92cb-2ede26655ee5"],
Cell[129113, 2957, 2699, 54, 131, "Input",ExpressionUUID->"9873dd99-be9c-4a15-afe0-be8e61a86c5b"]
}, Closed]],
Cell[CellGroupData[{
Cell[131849, 3016, 161, 3, 52, "Section",ExpressionUUID->"817743ed-5c10-4b9d-8e8a-d1e54e0164b5"],
Cell[132013, 3021, 4782, 121, 335, "Input",ExpressionUUID->"08b874bf-a2d6-4567-a573-8ca1cae7240f"],
Cell[136798, 3144, 431, 9, 29, "Input",ExpressionUUID->"98a766c7-7e1a-4951-ae53-daaacf6e63eb"],
Cell[137232, 3155, 9239, 223, 682, "Input",ExpressionUUID->"eeb508d8-c7f7-4bea-b4ab-34d24c0c9ffe"],
Cell[146474, 3380, 1806, 45, 131, "Input",ExpressionUUID->"98db37da-0ad4-42b8-b164-b9236062a5f8"],
Cell[148283, 3427, 686, 17, 49, "Input",ExpressionUUID->"e46590c7-399d-4dd0-bd62-43fe14dd0690"],
Cell[148972, 3446, 5500, 110, 315, "Input",ExpressionUUID->"990a991c-90fd-4a3f-8eef-576905d76e45"],
Cell[154475, 3558, 2239, 51, 90, "Input",ExpressionUUID->"0fa9a483-f228-4ad2-a571-5ff550715759"]
}, Closed]],
Cell[CellGroupData[{
Cell[156751, 3614, 176, 3, 52, "Section",ExpressionUUID->"403dd397-fb12-4757-a39e-272f790d6692"],
Cell[156930, 3619, 3445, 92, 172, "Input",ExpressionUUID->"7fd9fcfb-f5c1-42d3-9e04-db0469508351"],
Cell[160378, 3713, 363, 9, 29, "Input",ExpressionUUID->"ebca96a7-70c7-4e71-9e8d-873a474804ba"],
Cell[160744, 3724, 516, 11, 29, "Input",ExpressionUUID->"31a816d6-8ce8-4fd2-a397-cbd07ba107e6"],
Cell[161263, 3737, 602, 14, 49, "Input",ExpressionUUID->"9d412c60-efe1-409f-ae34-3b2bb0fba251"],
Cell[161868, 3753, 1234, 34, 70, "Input",ExpressionUUID->"22a8a1a3-03e0-4f2e-a628-5aef6a95c6b0"],
Cell[163105, 3789, 1109, 27, 111, "Input",ExpressionUUID->"edb01310-35ef-4a7f-994b-cd58c1d2daf4"],
Cell[164217, 3818, 497, 12, 49, "Input",ExpressionUUID->"7f38376d-2406-4556-beca-62ba1fb7d82f"],
Cell[164717, 3832, 3070, 82, 172, "Input",ExpressionUUID->"fdb17db0-8692-45b5-9c6b-fa317a5c3f46"],
Cell[167790, 3916, 1372, 35, 131, "Input",ExpressionUUID->"434cfec2-8868-4cf2-8035-2898de1b054a"],
Cell[169165, 3953, 420, 9, 29, "Input",ExpressionUUID->"7c263ded-8913-4491-8409-cd0c23649e86"],
Cell[169588, 3964, 6426, 158, 376, "Input",ExpressionUUID->"3e3ac490-4417-4e5f-8cfe-a31f27e1a03c"],
Cell[176017, 4124, 623, 12, 121, "Text",ExpressionUUID->"94877578-1020-42ca-b1a7-2634f9649649"],
Cell[176643, 4138, 3932, 90, 274, "Input",ExpressionUUID->"3957c010-713a-4540-9766-73d96a0d5d6f"],
Cell[180578, 4230, 1979, 49, 90, "Input",ExpressionUUID->"cc7fd42d-736a-48f3-96a4-b39bb06ad68f"],
Cell[182560, 4281, 732, 18, 49, "Input",ExpressionUUID->"164dbfba-6d36-4a25-be95-8a33440cb549"]
}, Closed]],
Cell[CellGroupData[{
Cell[183329, 4304, 257, 4, 52, "Section",ExpressionUUID->"2ad60d5e-8cfa-46fc-9b4a-7b153c57941d"],
Cell[183589, 4310, 545, 15, 29, "Input",ExpressionUUID->"69c7a79f-7fac-4609-8db1-1a2dec932d17"],
Cell[184137, 4327, 6815, 177, 417, "Input",ExpressionUUID->"64bf96ab-1fd9-494b-a64d-690d0a788ed8"],
Cell[190955, 4506, 6326, 162, 478, "Input",ExpressionUUID->"6d8bd5aa-cd40-409d-a2cf-08485e5fbce7"],
Cell[197284, 4670, 7055, 139, 397, "Input",ExpressionUUID->"aaf6cdb0-e296-49cb-ae4b-76e481e476c8"],
Cell[204342, 4811, 2101, 50, 131, "Input",ExpressionUUID->"2765b634-d9be-4e80-88b8-9e5e4db4578e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[206492, 4867, 157, 3, 56, "Chapter",ExpressionUUID->"501121c5-81c1-4c63-abd2-cda9396b2b95"],
Cell[206652, 4872, 297, 4, 33, "Text",ExpressionUUID->"bb04bc3f-68b6-4d32-ace1-a8b6ca2be538"],
Cell[CellGroupData[{
Cell[206974, 4880, 172, 3, 53, "Subsection",ExpressionUUID->"4de3d877-0630-4542-bd80-3d61f144366c"],
Cell[207149, 4885, 685, 19, 339, "Text",ExpressionUUID->"f30df850-b919-4895-98db-2c4c08c4233b"]
}, Closed]],
Cell[CellGroupData[{
Cell[207871, 4909, 161, 3, 52, "Section",ExpressionUUID->"52ec6778-4a48-4a4a-9406-9d1539700fe4"],
Cell[208035, 4914, 760, 16, 164, "Text",ExpressionUUID->"518591ed-fd5b-462d-a459-3675dcfdea3a"],
Cell[CellGroupData[{
Cell[208820, 4934, 154, 3, 53, "Subsection",ExpressionUUID->"99913f35-23cb-47e3-b772-ea6d68d79a0f"],
Cell[208977, 4939, 354, 8, 29, "Input",ExpressionUUID->"bdc39281-038a-432e-b695-fda3705746a7"],
Cell[209334, 4949, 366, 8, 29, "Input",ExpressionUUID->"5e62990c-a694-438b-a892-437ee6886a97"],
Cell[209703, 4959, 316, 7, 29, "Input",ExpressionUUID->"2cef992a-80ac-44da-9180-59cedfaa11b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[210056, 4971, 161, 3, 37, "Subsection",ExpressionUUID->"2d9dc25c-fa26-4f36-af0b-37225852e297"],
Cell[210220, 4976, 4647, 108, 437, "Input",ExpressionUUID->"4f484d5b-dc7e-49cd-b68a-d62dd8778c21"],
Cell[214870, 5086, 1146, 28, 70, "Input",ExpressionUUID->"46dfdcc4-a1d5-4173-830a-2240245b0861"]
}, Closed]],
Cell[CellGroupData[{
Cell[216053, 5119, 166, 3, 37, "Subsection",ExpressionUUID->"2c5f3f46-de6e-47e7-8ffd-699df96dfc00"],
Cell[216222, 5124, 8215, 193, 703, "Input",ExpressionUUID->"84889317-1692-4468-8e9a-a43823c145b0"],
Cell[224440, 5319, 1565, 34, 90, "Input",ExpressionUUID->"72fa3743-8bba-4051-9021-6e49a2c24bb0"],
Cell[CellGroupData[{
Cell[226030, 5357, 465, 11, 29, "Input",ExpressionUUID->"13379fd6-6949-4d6a-808a-9fdc151c182d"],
Cell[226498, 5370, 1023863, 18139, 4403, "Output",ExpressionUUID->"b9251ad2-4015-4250-9a43-3acb6273ea27"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1250422, 23516, 260, 4, 52, "Section",ExpressionUUID->"6614310a-1f75-4006-9b02-9d92630381bf"],
Cell[1250685, 23522, 1723, 76, 1519, "Text",ExpressionUUID->"1ea8f8bf-8020-4bf2-8eb8-94128a533edc"],
Cell[1252411, 23600, 272, 6, 29, "Input",ExpressionUUID->"c25b2253-d238-48fb-97da-ef3fe3f2bdc7"],
Cell[1252686, 23608, 5404, 139, 499, "Input",ExpressionUUID->"7aad3653-0373-487d-80a4-73a8a72b25b6"],
Cell[1258093, 23749, 265, 6, 29, "Input",ExpressionUUID->"55fffe85-8740-4048-90ae-8e4a822c67c2"],
Cell[1258361, 23757, 5005, 122, 478, "Input",ExpressionUUID->"3c0e70f6-c5d9-495c-9783-67bf0b4c2fc0"],
Cell[1263369, 23881, 190, 4, 29, "Input",ExpressionUUID->"14d0f404-ed1f-4e80-aacc-91673cc7ce40"],
Cell[1263562, 23887, 2357, 68, 213, "Input",ExpressionUUID->"a54b0a9c-0bd8-4666-82b3-d9fa99ddacb2"],
Cell[1265922, 23957, 392, 10, 49, "Input",ExpressionUUID->"54ed6d16-6220-4b67-922f-c6d4362e8e92"],
Cell[1266317, 23969, 190, 4, 29, "Input",ExpressionUUID->"97c70b11-d23a-4caa-80e4-29c200364bc6"],
Cell[1266510, 23975, 878, 22, 111, "Input",ExpressionUUID->"41ec2e59-28f3-4b60-925c-d1b24957b0c0"],
Cell[1267391, 23999, 1722, 45, 172, "Input",ExpressionUUID->"9d0ab4db-b016-498c-860d-a7abc66c00c6"],
Cell[1269116, 24046, 189, 4, 29, "Input",ExpressionUUID->"bc6fdcab-3a44-47d5-a585-e30590bc65f6"],
Cell[1269308, 24052, 3485, 89, 458, "Input",ExpressionUUID->"f41a1521-7e66-4df6-85d5-afab34d15607"],
Cell[1272796, 24143, 1805, 46, 172, "Input",ExpressionUUID->"d2c494a0-0133-4eb6-8c9f-10461367edaf"],
Cell[1274604, 24191, 192, 4, 29, "Input",ExpressionUUID->"635fc4a4-b766-4f4f-a2e7-10ff93d24e90"],
Cell[1274799, 24197, 24853, 620, 1336, "Input",ExpressionUUID->"f7552269-f3ad-4d77-8171-aef521b07c0f"],
Cell[1299655, 24819, 3223, 83, 254, "Input",ExpressionUUID->"cd677f3b-56e0-48d5-a653-54573ed2ea50"],
Cell[1302881, 24904, 434, 9, 49, "Input",ExpressionUUID->"804640ba-6210-45e6-8831-2577e1d90f65"],
Cell[1303318, 24915, 3171, 88, 294, "Input",ExpressionUUID->"faa02330-834e-4a4e-8d86-773a7e12f50f"],
Cell[1306492, 25005, 396, 10, 49, "Input",ExpressionUUID->"ee919db3-2014-426d-8fef-93b3c86d3d0a"],
Cell[1306891, 25017, 175, 4, 29, "Input",ExpressionUUID->"f0367dd4-e43e-4994-9733-711506b9dbe4"],
Cell[1307069, 25023, 227, 6, 29, "Input",ExpressionUUID->"8d649079-d18c-4d80-8c9c-8f7c5393a5cd"],
Cell[CellGroupData[{
Cell[1307321, 25033, 185, 4, 29, "Input",ExpressionUUID->"3fdb4462-05f8-4f39-a129-60bb85c4d36f"],
Cell[1307509, 25039, 350, 7, 33, "Output",ExpressionUUID->"5683d43e-e5f5-4543-9b22-e7b3d7cfb421"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307896, 25051, 205, 4, 29, "Input",ExpressionUUID->"45f09f40-2c10-4e48-841e-fe283fd4ea17"],
Cell[1308104, 25057, 70715, 1167, 133, "Output",ExpressionUUID->"e05dc230-bf5e-47c8-8e99-be3509cbd942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378856, 26229, 185, 4, 29, "Input",ExpressionUUID->"b367e808-50f7-438e-a386-702dad496b4d"],
Cell[1379044, 26235, 356, 7, 33, "Output",ExpressionUUID->"12b05a3b-c7cd-4ab0-87f3-a2dcea4c138a"]
}, Open  ]],
Cell[1379415, 26245, 148, 3, 29, "Input",ExpressionUUID->"e522f26b-21b5-4fb5-b990-a4a721dcfe61"],
Cell[CellGroupData[{
Cell[1379588, 26252, 562, 17, 29, "Input",ExpressionUUID->"7624ce1a-0bc0-42a8-a73d-c818f1f3e463"],
Cell[1380153, 26271, 615718, 10144, 423, "Output",ExpressionUUID->"f6683fff-c1ed-4f95-8d58-f3c6d3c49574"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1995908, 36420, 506, 15, 29, "Input",ExpressionUUID->"ff51bca9-6ee1-4135-8e0a-2f62d95b1339"],
Cell[1996417, 36437, 60733, 1005, 133, "Output",ExpressionUUID->"2b84b155-7fd5-45cf-8aef-15a964c3bd9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2057187, 37447, 505, 16, 29, "Input",ExpressionUUID->"ed46532b-430f-4f2f-9656-dfa34d2c5aeb"],
Cell[2057695, 37465, 123785, 2051, 278, "Output",ExpressionUUID->"ad8a116f-9d01-480f-98d3-8b89f0568732"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2181517, 39521, 551, 17, 29, "Input",ExpressionUUID->"82fcfc86-ee4c-498f-ade3-d7ae26fa5459"],
Cell[2182071, 39540, 97088, 1601, 133, "Output",ExpressionUUID->"9b6d7719-a494-4dad-b19c-9c7daf3b7e2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2279196, 41146, 459, 13, 29, "Input",ExpressionUUID->"8573ca17-2aa0-46e0-9894-fbfd9509ff64"],
Cell[2279658, 41161, 166766, 2755, 278, "Output",ExpressionUUID->"6388c258-96b2-4e5e-8ce7-404886193315"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2446461, 43921, 480, 15, 29, "Input",ExpressionUUID->"1c17cab5-031c-418b-8878-63c04d9e1dd3"],
Cell[2446944, 43938, 59031, 977, 133, "Output",ExpressionUUID->"0e2304a2-ddee-4ad7-880c-a8857c32bb6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2506012, 44920, 430, 13, 29, "Input",ExpressionUUID->"6a04ba09-faab-450f-9196-a4c208ef2dbf"],
Cell[2506445, 44935, 62844, 1042, 133, "Output",ExpressionUUID->"63815512-9437-4170-9394-6ce663ca9289"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2569326, 45982, 456, 14, 29, "Input",ExpressionUUID->"eacd8251-7f00-4500-ba34-1cc01a7fe761"],
Cell[2569785, 45998, 110023, 1823, 278, "Output",ExpressionUUID->"5aa0043c-4dfb-494a-aeea-d1ae5385e487"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2679845, 47826, 400, 12, 29, "Input",ExpressionUUID->"42d5b74b-88e4-4c27-a764-0858351c03a4"],
Cell[2680248, 47840, 50290, 829, 133, "Output",ExpressionUUID->"75de77e2-eeae-41ad-bbd6-313c008c731e"]
}, Open  ]],
Cell[2730553, 48672, 283, 6, 29, "Input",ExpressionUUID->"c8988d38-00d0-4033-8d74-17e99fadf791"],
Cell[2730839, 48680, 325, 10, 29, "Input",ExpressionUUID->"328ac4b7-6676-4bbd-9de8-8dec0425f43f"],
Cell[2731167, 48692, 325, 10, 29, "Input",ExpressionUUID->"056f20ab-1944-48a9-a656-d3d6d20cad81"],
Cell[2731495, 48704, 373, 12, 29, "Input",ExpressionUUID->"b97315da-991b-411f-9899-aca40d462eb8"],
Cell[CellGroupData[{
Cell[2731893, 48720, 1486, 50, 49, "Input",ExpressionUUID->"dcedc437-440c-41c3-b10a-a67b91b9cfe9"],
Cell[2733382, 48772, 494, 13, 33, "Output",ExpressionUUID->"c8b5663f-5b59-4026-a837-d847add74100"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2733937, 48792, 226, 4, 56, "Chapter",ExpressionUUID->"31e4d30a-5816-49d9-b075-88d14f997609"],
Cell[2734166, 48798, 3908, 58, 1541, "Text",ExpressionUUID->"4c92b4fa-df7d-47e9-b2db-04395a4bfdb0"],
Cell[CellGroupData[{
Cell[2738099, 48860, 164, 3, 66, "Section",ExpressionUUID->"297711f3-13b4-402e-9cd3-ea743a057c22"],
Cell[CellGroupData[{
Cell[2738288, 48867, 157, 3, 53, "Subsection",ExpressionUUID->"0d241acf-0b73-48d4-9070-4addf1bce48e"],
Cell[2738448, 48872, 2314, 60, 213, "Input",ExpressionUUID->"721cb7cb-2855-4ffe-8db4-7e0c5854c60c"],
Cell[2740765, 48934, 1201, 35, 90, "Input",ExpressionUUID->"94773896-900b-4b6e-b713-e7d6df35167e"],
Cell[CellGroupData[{
Cell[2741991, 48973, 559, 16, 29, "Input",ExpressionUUID->"ba966d07-2abd-4009-b617-34ca3036da86"],
Cell[2742553, 48991, 533, 12, 33, "Output",ExpressionUUID->"34f46c0f-61d9-4561-9c60-6b38b4ef3587"]
}, Open  ]],
Cell[2743101, 49006, 1808, 47, 151, "Input",ExpressionUUID->"12e0cc10-caf8-403c-b7db-9b8c3b3901c1"],
Cell[CellGroupData[{
Cell[2744934, 49057, 1296, 36, 90, "Input",ExpressionUUID->"12bbc5ab-b0ce-442a-b1f3-c86aa1b30b84"],
Cell[2746233, 49095, 526, 12, 33, "Output",ExpressionUUID->"ebd0af56-7130-4396-946c-844b74e77baa"]
}, Open  ]],
Cell[2746774, 49110, 994, 26, 111, "Input",ExpressionUUID->"61016545-9d5e-4d46-9302-4fbb4f280a8f"],
Cell[2747771, 49138, 918, 25, 90, "Input",ExpressionUUID->"394273ba-ee6a-4eec-869f-a68fdb0c1367"],
Cell[2748692, 49165, 7442, 197, 662, "Input",ExpressionUUID->"83a3a577-b100-41a0-9b60-72baed150593"],
Cell[2756137, 49364, 566, 16, 29, "Input",ExpressionUUID->"6b4aaa8f-b4b9-48fb-9df8-2203a47ffc59"],
Cell[2756706, 49382, 247, 7, 29, "Input",ExpressionUUID->"3ae83ec5-cdf1-4ffd-85c8-f518d14a6b1e"],
Cell[2756956, 49391, 11701, 290, 968, "Input",ExpressionUUID->"e9a0103e-f10d-4494-b730-104c5aa10648"],
Cell[2768660, 49683, 2811, 76, 254, "Input",ExpressionUUID->"abe887f3-d677-4340-945d-8d78c9e6f7d4"],
Cell[2771474, 49761, 5466, 136, 458, "Input",ExpressionUUID->"e543d9b9-cae8-48fa-a090-040ec1031637"],
Cell[2776943, 49899, 252, 7, 29, "Input",ExpressionUUID->"7cd30440-672f-47fb-b769-6d003842d753"],
Cell[2777198, 49908, 222, 5, 29, "Input",ExpressionUUID->"bb68ed3a-b9eb-493b-928a-5c7155b61c70"],
Cell[2777423, 49915, 221, 5, 29, "Input",ExpressionUUID->"4e8041d1-e5e1-41fb-9baa-57f7251409d9"],
Cell[2777647, 49922, 445, 13, 29, "Input",ExpressionUUID->"06c31d50-668e-46ed-8e80-94589b364ef0"],
Cell[2778095, 49937, 654, 19, 49, "Input",ExpressionUUID->"4dba864f-1893-493c-9af9-f0410194e4f6"],
Cell[2778752, 49958, 736, 21, 49, "Input",ExpressionUUID->"15996351-8eff-4c7c-b686-d033b678e89f"],
Cell[2779491, 49981, 250, 6, 29, "Input",ExpressionUUID->"44e27ea2-55b2-4b2f-9378-7148925ecfa5"],
Cell[2779744, 49989, 250, 6, 29, "Input",ExpressionUUID->"27159e7b-c6dd-4728-9f65-40d045fea442"],
Cell[2779997, 49997, 250, 6, 29, "Input",ExpressionUUID->"c56facf1-3bb8-417f-b9dc-9e5386c8524f"]
}, Closed]],
Cell[CellGroupData[{
Cell[2780284, 50008, 85, 0, 37, "Subsection",ExpressionUUID->"bfbed77b-5902-4908-9603-ec6d23453e43"],
Cell[2780372, 50010, 314, 8, 77, "Text",ExpressionUUID->"6ec812f7-4db7-49aa-917d-4d599226c4af"],
Cell[2780689, 50020, 639, 17, 29, "Input",ExpressionUUID->"5381881d-d39f-4d3a-87dd-8add3e345994"],
Cell[2781331, 50039, 217, 5, 33, "Text",ExpressionUUID->"1cfb9752-4c31-4d56-b56a-f692eb8f7bcf"],
Cell[2781551, 50046, 496, 10, 29, "Input",ExpressionUUID->"6ada665c-640f-4e13-81b7-09d4a5d126c2"],
Cell[2782050, 50058, 173, 3, 33, "Text",ExpressionUUID->"c7d5c38b-b31b-4652-9429-6131a4c90c31"],
Cell[CellGroupData[{
Cell[2782248, 50065, 707, 15, 29, "Input",ExpressionUUID->"6bda4364-a956-4b6b-9159-0a80e526c3be"],
Cell[2782958, 50082, 754, 14, 41, "Output",ExpressionUUID->"8b12fcf6-44e0-4397-acb1-9e914c97eb30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2783749, 50101, 629, 14, 29, "Input",ExpressionUUID->"133dbb26-4b8c-4253-898b-86b4cc64a364"],
Cell[2784381, 50117, 686, 13, 41, "Output",ExpressionUUID->"fe7e38eb-59d2-461b-8f6e-8fa0fb5047f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2785104, 50135, 629, 14, 29, "Input",ExpressionUUID->"9bbbf2ad-b57d-4599-949d-ff221cc0d4f9"],
Cell[2785736, 50151, 784, 15, 41, "Output",ExpressionUUID->"98ead8f7-41bf-40af-90fb-47e790107467"]
}, Open  ]],
Cell[2786535, 50169, 228, 4, 33, "Text",ExpressionUUID->"4103b2b0-c39b-4528-88fd-4b7597ff136f"],
Cell[CellGroupData[{
Cell[2786788, 50177, 708, 15, 29, "Input",ExpressionUUID->"c012803d-9c1b-46d3-a90d-cd329038f7d7"],
Cell[2787499, 50194, 745, 15, 41, "Output",ExpressionUUID->"be978b4f-9e37-4321-882d-bd8a8bfd0b3e"]
}, Open  ]],
Cell[2788259, 50212, 316, 7, 29, "Input",ExpressionUUID->"4c01057a-1ec6-4051-82aa-b7d1430292e5"],
Cell[2788578, 50221, 533, 14, 29, "Input",ExpressionUUID->"004ca096-da12-4f74-b732-b1eae358f4b4"],
Cell[CellGroupData[{
Cell[2789136, 50239, 831, 18, 49, "Input",ExpressionUUID->"99d2be7e-8db9-43e1-933e-2e4536084027"],
Cell[2789970, 50259, 893, 17, 43, "Output",ExpressionUUID->"66c2cb90-9666-42e3-bb38-57b2fa35cbda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2790900, 50281, 404, 9, 29, "Input",ExpressionUUID->"12441331-76f0-44d5-ad52-61975d3e1852"],
Cell[2791307, 50292, 650, 12, 33, "Output",ExpressionUUID->"399f6516-0db2-4631-96ee-d2821440c0be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2791994, 50309, 855, 23, 70, "Input",ExpressionUUID->"f332c061-844b-4e56-9cbf-501018bd84ea"],
Cell[2792852, 50334, 2864, 54, 480, "Output",ExpressionUUID->"fd89cf13-ffb3-4daf-924b-962bb5c3a1df"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2795777, 50395, 170, 3, 52, "Section",ExpressionUUID->"deff3091-b3f7-43df-94ac-6ef5c4ed37fc"],
Cell[CellGroupData[{
Cell[2795972, 50402, 159, 3, 53, "Subsection",ExpressionUUID->"4ec770c5-42c9-49fe-a86a-de3a452fd5cd"],
Cell[2796134, 50407, 579, 14, 164, "Text",ExpressionUUID->"893e9983-eaa5-4dab-b6d2-81cd2d7d4863"],
Cell[2796716, 50423, 433, 11, 29, "Input",ExpressionUUID->"a2316d12-f5cd-4dce-a454-6bdf4843d909"],
Cell[2797152, 50436, 290, 7, 29, "Input",ExpressionUUID->"1ab615dd-ff48-4de8-a9d5-e81a821a960a"],
Cell[2797445, 50445, 360, 8, 29, "Input",ExpressionUUID->"98fbcc23-2502-4b54-9956-fab22e4c0abb"],
Cell[2797808, 50455, 284, 7, 29, "Input",ExpressionUUID->"52ceacfa-7234-4f3a-afc1-d358816b6f65"],
Cell[2798095, 50464, 484, 12, 29, "Input",ExpressionUUID->"1ec5ef97-4e2a-4474-adf1-e4dac07b9aff"]
}, Closed]],
Cell[CellGroupData[{
Cell[2798616, 50481, 230, 4, 37, "Subsection",ExpressionUUID->"07650d1a-4700-427b-9583-ffb2bdea8975"],
Cell[2798849, 50487, 390, 7, 55, "Text",ExpressionUUID->"fe1b7cf3-9acf-43e1-8dc2-5a9f22d0ef3f"],
Cell[2799242, 50496, 304, 7, 29, "Input",ExpressionUUID->"e7a15083-507c-4608-9fbb-351c8e885aa6"],
Cell[2799549, 50505, 309, 7, 29, "Input",ExpressionUUID->"f5b0a1d7-ea0a-4aac-9dde-0bde6c43bb64"],
Cell[2799861, 50514, 305, 7, 29, "Input",ExpressionUUID->"75f2e895-f55a-4aee-801c-db4fd3de26b1"],
Cell[2800169, 50523, 313, 7, 29, "Input",ExpressionUUID->"bc1e2d58-79fc-4392-9f7b-765c26f9327f"],
Cell[2800485, 50532, 535, 14, 29, "Input",ExpressionUUID->"27b55407-5883-4c02-9153-95dcf6eac9fa"],
Cell[2801023, 50548, 309, 7, 29, "Input",ExpressionUUID->"649ad060-8688-45b0-88ef-bdb4a863ebe4"]
}, Closed]],
Cell[CellGroupData[{
Cell[2801369, 50560, 151, 3, 37, "Subsection",ExpressionUUID->"cef08d15-1e01-4d0b-a96f-524c2dcee349"],
Cell[2801523, 50565, 291, 8, 77, "Text",ExpressionUUID->"8322701c-c866-4c0a-bf96-bb5c445159fe"],
Cell[CellGroupData[{
Cell[2801839, 50577, 709, 19, 29, "Input",ExpressionUUID->"3a8d9789-123d-4502-b90f-d0b9660556e9"],
Cell[2802551, 50598, 204, 4, 70, "Output",ExpressionUUID->"071e5f5f-0afe-49a7-8cc7-491026cece76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2802792, 50607, 317, 8, 29, "Input",ExpressionUUID->"92c23448-e23e-475e-9993-72ad2b29a8b7"],
Cell[2803112, 50617, 206, 4, 70, "Output",ExpressionUUID->"c12b68f8-7a77-4c0e-9e05-96aaa5f15af9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2803355, 50626, 277, 6, 29, "Input",ExpressionUUID->"28b70597-03eb-4557-b434-6d78693d1939"],
Cell[2803635, 50634, 365, 10, 70, "Output",ExpressionUUID->"af5cc8f9-a8f0-4df8-b05d-c2e0ef1ccaba"]
}, Open  ]],
Cell[2804015, 50647, 255, 5, 29, "Input",ExpressionUUID->"d0e48392-c7b9-4329-a0df-e36fe5d37446"],
Cell[CellGroupData[{
Cell[2804295, 50656, 1073, 31, 70, "Input",ExpressionUUID->"4e1c5ac5-3687-470d-92be-0281922be0d6"],
Cell[2805371, 50689, 178, 3, 70, "Output",ExpressionUUID->"f03ef855-8496-4d09-ae09-24daefa3da55"]
}, Open  ]],
Cell[2805564, 50695, 254, 5, 29, "Input",ExpressionUUID->"30612ca4-59fb-43a7-ad3f-8c968847e4a5"],
Cell[CellGroupData[{
Cell[2805843, 50704, 312, 7, 29, "Input",ExpressionUUID->"fb0a6e9d-33f1-4b84-a4af-22174a665f58"],
Cell[2806158, 50713, 224, 4, 70, "Output",ExpressionUUID->"6d8facd3-993c-48f2-b29d-42e30a6e02c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2806419, 50722, 365, 9, 29, "Input",ExpressionUUID->"fb43d69e-4e5d-4392-9175-0df52d507131"],
Cell[2806787, 50733, 245, 5, 70, "Output",ExpressionUUID->"b9accd57-d9c4-4017-aeaa-9ece389c3a0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2807069, 50743, 247, 5, 29, "Input",ExpressionUUID->"535a76cd-4957-4f7e-a005-6a0f0ba1853f"],
Cell[2807319, 50750, 343, 9, 70, "Output",ExpressionUUID->"1e1efb1b-02ae-457e-8710-5d4568b1d22a"]
}, Open  ]],
Cell[2807677, 50762, 271, 6, 29, "Input",ExpressionUUID->"efe2d682-2f0e-4ff4-8c49-59b80db5af6d"],
Cell[CellGroupData[{
Cell[2807973, 50772, 682, 19, 29, "Input",ExpressionUUID->"e9e214e2-2e04-40e4-b5ad-c453465cf9a5"],
Cell[2808658, 50793, 256, 4, 70, "Output",ExpressionUUID->"b255811b-26f8-4864-bb84-e0fb7fddde84"]
}, Open  ]],
Cell[2808929, 50800, 273, 6, 29, "Input",ExpressionUUID->"4b935688-a135-4429-8c6e-071885bdd5d2"]
}, Closed]],
Cell[CellGroupData[{
Cell[2809239, 50811, 156, 3, 37, "Subsection",ExpressionUUID->"4fd11c1b-48a6-44ca-afba-eb8d2fdcf9bd"],
Cell[2809398, 50816, 223, 7, 77, "Text",ExpressionUUID->"c07c1427-d47e-4231-8078-740fdd9b868e"],
Cell[CellGroupData[{
Cell[2809646, 50827, 663, 18, 29, "Input",ExpressionUUID->"b2e068af-e3b3-4e58-a889-65093aab07c1"],
Cell[2810312, 50847, 175, 3, 70, "Output",ExpressionUUID->"7c80e349-eba9-45f5-bb22-25870bea5ef3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2810524, 50855, 897, 25, 49, "Input",ExpressionUUID->"63d55d32-bc50-4929-a5d1-7f26d7576b15"],
Cell[2811424, 50882, 203, 4, 70, "Output",ExpressionUUID->"75f86730-af3c-410e-833e-498b6487c857"]
}, Open  ]],
Cell[2811642, 50889, 230, 4, 29, "Input",ExpressionUUID->"1ad0b352-16fa-4193-bf28-2499f083f759"],
Cell[CellGroupData[{
Cell[2811897, 50897, 1114, 31, 49, "Input",ExpressionUUID->"8b1d51c3-0f19-4ac8-a000-32202146d70e"],
Cell[2813014, 50930, 326, 6, 70, "Output",ExpressionUUID->"b3e75d2f-24ef-40df-8767-7255decc7a4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2813377, 50941, 715, 19, 29, "Input",ExpressionUUID->"70b30287-63ea-4779-9ca0-3fbc776a6881"],
Cell[2814095, 50962, 201, 4, 70, "Output",ExpressionUUID->"876c698f-3f3d-4c92-ab42-1212def6c64f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2814333, 50971, 969, 26, 49, "Input",ExpressionUUID->"6d6cb86f-64de-4a1b-9989-d4a84a2ed3f6"],
Cell[2815305, 50999, 228, 5, 70, "Output",ExpressionUUID->"a7cd3235-e4ae-4c43-8b5a-e822d3ca5db7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2815570, 51009, 1193, 32, 49, "Input",ExpressionUUID->"5d7f9326-ef2b-4f27-bf8a-07246437c994"],
Cell[2816766, 51043, 208, 4, 70, "Output",ExpressionUUID->"bb154981-bf97-4d49-b2b4-101579e88a4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2817011, 51052, 893, 27, 49, "Input",ExpressionUUID->"ae0fea2f-cef7-4d8c-a3ff-59d984c61841"],
Cell[2817907, 51081, 969, 31, 70, "Output",ExpressionUUID->"4b29dc81-a390-451d-b064-81850c42f206"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2818913, 51117, 1224, 33, 70, "Input",ExpressionUUID->"08a13e20-4bf5-4bcb-b1da-cf480627c556"],
Cell[2820140, 51152, 1147, 30, 70, "Output",ExpressionUUID->"80e1d635-bb57-43fa-928c-3e1838513dcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2821324, 51187, 957, 26, 49, "Input",ExpressionUUID->"d0a7ceea-b1ea-4984-b2a8-62af592945dc"],
Cell[2822284, 51215, 277, 5, 70, "Output",ExpressionUUID->"792d22cb-6b18-40e6-bc26-bf809ca5b3c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2822598, 51225, 977, 27, 49, "Input",ExpressionUUID->"b89e831d-67a3-4b2f-807a-92a368de6e29"],
Cell[2823578, 51254, 305, 6, 70, "Output",ExpressionUUID->"062d5bc7-7a27-4dba-bc31-fee779d437bf"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

